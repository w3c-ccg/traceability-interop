{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5481a945-86bc-473f-88f6-c17d5a5f145e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "55a8e3f9-39bf-4ae6-bdc7-0aec3812a58c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3e20b114-d114-4e42-88aa-f4bbbcb29e46",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a0659e77-bd30-4464-84e0-18d2f2f2127e"
                }
              }
            ]
          },
          {
            "id": "fef8c056-d08e-45f0-a05c-3cab22804a49",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c1207aa-27d7-4f5d-8474-d4b9ff015281",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eb57a776-44e6-4fbb-bd07-6ae7449b7f7d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "806fdfd0-d00c-470f-a3b6-7a4b362ca9c8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "26605da0-39f8-4495-b992-93416ff7f230",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d7379ebd-a6d6-414c-a22c-af9fb00c1e33",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1153d136-068d-4b57-97b5-db0651e998a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec895554-f44f-4280-8556-c68570072af2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c313308c-12b1-49ee-b7a0-797c8ae245ee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49570c80-b8ab-4dd4-b81b-c927928a21e4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2a8acdd9-bfa2-487b-9d95-c744c3e48e51",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a876e07-896a-4daf-af85-16939277c330"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3ba20cd-811e-47ab-b4ae-8aae7a3345c2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "67bc1a96-fb17-4fb7-aaaf-ccb6fab022d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56b117b3-00b7-4468-8156-5a2f4faf3bc6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e053ccb6-e536-4431-ab9d-4b88b1d3a798"
            }
          }
        ]
      },
      {
        "id": "576a87b1-49d5-4cea-a492-3eb1397289d4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bc236e9e-0dfc-4a44-b83b-5b2cb07961d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ad65a56-0ed4-43c7-a941-60d77852d524",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f84012fe-442f-443d-bec3-ed993f53de57",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcbd443-d40d-457d-b775-b90256d37768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b61d1e91-5bd8-4da4-ba1e-af0df0b04cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d887a45b-ed63-40c4-93ce-b037738730dc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e92d2d2-074a-469b-b0f7-42a4d93db26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a9c25ed-0b77-4890-92db-8559c62a224c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f837d135-62a0-49a0-985a-a6937aca1845",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9df4f0f-cd26-4d44-a1ec-8342952fd8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6457eae2-d7b8-4b08-8eef-5339e87a4d04"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "33d97fc3-251b-4ced-9414-4cd6e2de4921",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81200810-cefe-4f71-985e-c6409759c94a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb4e5b0-6d54-4819-b5a3-505d93ae16c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43108e46-c5f4-4b0b-9ceb-944ca3ce4eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1b986c-5c06-4998-a2ce-46a6fe11cca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d20a11b-0382-4aa0-8f43-aaabeac0e1b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ef174beb-1667-4b56-ad6c-483c14abbc3c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "434e611b-d02a-493d-b231-a16e4293d548",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89b37d35-a8d1-458d-8fb9-6c2ad9f1cd90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6b3cb383-2075-4369-a2a4-046c10d645c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eba73e06-7827-4b14-8281-ab608668533d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2891a917-d27d-4294-bf2a-f109c264fddb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8de7acd9-ee2b-4643-b092-6ae5175baf59",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60c1c499-dda3-4ced-9392-09f7961fd4df"
            }
          }
        ]
      },
      {
        "id": "aca21b17-9257-4df7-b074-73b8a8d967cc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "16ef98e2-9fb8-48e1-9191-3f70212b5a0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6d8e5d4-7f11-464c-825a-e84aee242e97",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "463c0fc4-8699-41a5-b754-2207237ee4d9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d1e6fa-fcf1-4b18-b2b5-dd084534e344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c913da2-1723-4cf1-9c5d-fc9b274879b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ea48eb-3cbd-494e-ae66-2d92b5f6a37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84f15867-4798-454c-9e27-75443990a0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c15446d-942a-456f-a838-a613332ca2ae",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da91d827-7953-4607-8f4d-2f81b06f3e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4b91ac-68cd-4eb2-bff5-ec7054c063ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bcc5a5-1a1e-4789-bfb6-8fbc67ef342a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b33ea019-8547-45c1-8009-b484b6bbfc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172d6e82-e75a-4686-97ad-8eb2b5328766",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833ee161-8cfd-405c-96ea-d9f41e27e8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a454d08e-0df0-404a-861b-2de90282b12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4268aa-f93a-4080-b90e-a9dccb238e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fd10249-42af-4f62-b0e8-1000183d26b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc687630-43fa-4642-93fe-8cd3a7789baa",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b7240e-5ac6-42b6-9a94-d6a53ea51dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a49971-711b-4612-933d-503b912b3ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aedbb19-e5b5-4780-9203-89af02847ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d080557-318f-46e9-b662-839211a3e09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccccd8b-7ce6-443e-b6ef-293fba4adfaa",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cd2bb7-8ba7-439b-aa4d-61aa51f0d6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f224a44b-02d4-4877-8bfe-bc7914b04a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9d39c5-0c1f-4d22-8118-abe7bb389874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef5161e6-1e27-4029-9c72-378e94d633a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcc76bc-1a9f-4e27-af2d-cabbbe2b6fa0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f16f024-b9fa-4602-97e2-da2f2866bfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11903ea-bfaa-46f3-acfc-fce5f2e2e05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36607cfd-0f2e-4d85-b841-9151d1651074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2de1f791-844e-464a-8b7f-734452f3ee54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c61f98-4190-4457-87fc-3c0cf7b39196",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c9ea02-a62c-469a-8e2d-59daafd26b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4cc2279-9440-43c6-91d4-ad209a5ea07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1645f9ad-caa2-457b-a3fd-6658856c2eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c498c044-677c-47b2-86fd-800a123dfdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c341218-d1e7-4191-92a9-f4a63625331a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cf7638-b03e-42af-bd0f-41f85cd6ebe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b921beef-72a4-4d7f-a37a-a1aee363f66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cf6f9a-b9ff-49d1-9fd3-6f41f50e4527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62123269-54b9-47ce-bc5b-e683e13acafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52d68ec-c3eb-4133-a394-e8dcdd119fb4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f2c625-13ae-431b-bcbf-9f283d5975c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c453a32-bcaa-4968-9b79-8cc574815943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbeb2605-d3e6-45aa-ba53-c236ea387aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "835519fe-b134-4d7b-8109-ed54ddd7d499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9b0324-f646-4593-a460-5e67783043a7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636ea58e-00da-42d5-9685-206ccfc86972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293078e0-9b79-4933-87bd-d8d9eb9807c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbf7dbc-f185-43d3-9a78-9f909d1c8841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4592efc-2a8b-4e5e-a728-2882f5c5e5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9b92cf-553c-475f-ad84-e9afdfd87b52",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cc3299-5c03-4883-ab7b-8469dd584a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921ba061-35a0-4b66-a490-035ed837629f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec09ce1-1b66-4dbb-a2d7-3b913f48c7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84e1c595-042a-4886-8a90-83e80055c12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618f5e30-7823-4c6b-8d13-fb12de1de0a2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df2e3a6-09cb-4900-b1bd-95d0dda37a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d406e2-8555-4ddf-916c-f06c391a48ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1458b1-b39d-4d55-b026-9cd382e1201b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "161888c7-f1a5-4de5-b8f6-0637820ca4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5f9f8a-f1a0-41cc-b857-c257ac556f34",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49b2cdf-4411-4314-8b9b-ee3567ce2e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2935bc-5dc8-46c3-90e2-cfe0357f9258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83465c1-0290-457e-a3ba-29f3c0644a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d14526f-e48b-4e4a-99bf-0913595fb7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f434e6-31f6-4b9c-9f92-1e2c8195fcd6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a0b5b4-c746-4909-ab10-34556f1362ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760bd431-2dfe-4451-bd2f-62fe5ca406a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc4bedd-cfdb-4063-a0eb-e1f80f1da3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fecd30ed-fa48-4698-bdf8-8f07953bdb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fd69ab-09cf-4a19-a44b-a68a0ca31fc2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2f1064-6c7d-44eb-9509-54658f3eb241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a1a044-5f0a-44d2-ad2b-c40c6e4304aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b03a550-a8da-4613-8d80-cdd5d02549bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2453635f-184f-45cc-9b51-7c7cfbfb24cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008f8fa5-181c-41a0-b20d-5557360b9fef",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78865f6e-9247-4cbe-b373-0ddc6d4a40dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a658d143-24f8-4822-9221-5cba45873fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cacd43-ed56-4a87-bcb1-d6d3a6b331e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04c14967-b986-486f-9248-697a450d8612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ed035d-09c1-44da-b32c-532c30bdf459",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f438e268-8ceb-436a-879e-583dcec41e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db6b338-9fb3-4e65-afc9-cf73bb2ac6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73e5c86-e62b-4915-8d94-6b1d8c1e479e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e4ea9aa-04dc-47ff-854b-508920a5010f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8ee707-0bd6-4ed2-8ad7-25885e3dafce",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e466927-fcf5-424f-87f7-fe80cca32e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89be8f8e-7b52-4871-bd73-8d2a48e27ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea019559-0485-4a57-9690-004630ea8b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "28754434-b05e-4983-959e-354cecf94717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7834adf0-cf88-46e3-8315-0af9a5e8a63a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82d7aa7-2671-40ce-9e63-07767ca7920e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f75fdf-e821-41ae-9866-03a5b3036ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437f08b9-5b32-42d4-b39d-45ab0f9cf55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5058846e-bf42-4336-a844-6ae1020fcb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06561eb-0831-4a04-91fb-abce45bd1242",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1464e62-5306-4edb-a25e-c046094ea4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36de793-5554-4001-be07-14ea29b7ef84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a536574c-d0f6-41c2-9b62-b768e085384b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "233ac70d-4a87-4b69-862d-c7e4f721523d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faef924b-3d69-445e-94c8-fca38889a3d9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343d17bc-08d1-4bff-8f41-af435cc0becb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e986e2d8-60be-4443-a443-a3d1cc4585cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6f7083-97bd-4049-8603-1cac3cb6b096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3adace-5ed0-48f5-a42f-6786e804e12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4252a84-59d4-4db0-99a5-bdd14f19c177",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11912a0c-7ef1-406d-88cc-d1ce9100b823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596aa70a-35b8-4e05-9373-f51121932ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52aa0e3-2df4-4054-bf7d-5648dd466a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca47ee9b-5ee8-4748-87d9-e66a3e215adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8331fbbf-d482-4a0c-8909-474921d871bd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275410ac-529b-4445-b848-0318a5e93348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9976c32-785c-4b58-ba05-13345c2ddbdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9896b8-f596-472a-a734-f0ae6b014694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f497f5f-070f-4235-a218-4a57058657ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4dbc02-49ad-4223-bece-ac644e489c73",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e483db6-9342-4588-aabe-1b5bf85cb2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12b12fd-72ad-48b1-a22e-7bb70b55cd46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6aaa949-5ea5-418f-a8e2-79cd367cd3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0706209-88de-4e52-adbc-3ee936b5ebb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273975fa-7532-42f4-acdd-424f848e344a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b663aaeb-7e1c-44bc-b2a5-e8c4f57957f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49cf4dce-d82a-416e-9f2a-88f3c4c0bb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37798b51-26d3-4e22-949e-9a9e6516d04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7297fcff-50d1-4925-bdde-09d3d0a46da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6009fbab-be09-402c-8c5c-06e998bc56c7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a83c40-5d81-4870-8578-845617c5877b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bead77d-62ba-4e1a-9fff-22f0852cf705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504c4a63-e3da-4623-b28d-fa8d93a6218a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96545807-9900-4bc5-a49f-faef8f2b9402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3b9639-a2d7-4d5c-9d23-7e3fd4a77d02",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5a743f-437d-40da-8238-b65531a593d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de734418-3146-4d9c-ab63-49a6c3a9a0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13b5950-517a-44b9-bb3a-0ae4781c56c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b8f47f-ce08-4c55-af2a-f67af45f7ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0343dde6-34f7-45c8-8c0b-6521efa5e7c0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04db4eca-df45-43fb-b812-a12d0170e682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5417f37f-8d97-4809-becb-26d54c29311c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6aef549-afe3-4ccb-b448-ed0f6ec63432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5346186d-02d4-46f9-a94a-0ab3fef57a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80869d5e-ae8f-4bca-bfa2-0a5c943b0174",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498c9a0e-2e3e-4223-a54e-54f1cbb44e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da14374c-8e57-4606-9cbc-da42b306b509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd0f8f1-de9b-47e8-b993-613290074d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c98810a4-00a7-4755-8344-d9a16cead0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6806d5a4-ccfa-4d9f-906b-c0832ce7ef44",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b67504-962a-47e6-bfaf-911c197f622c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544cfba3-1a7f-4e6a-82ba-d8fd3630e986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dfa1ba-20e8-475e-ae02-27afaccdc9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f81a0f42-4cb5-4136-af95-d1d72c51a4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f867226d-b49c-4849-ac72-62053203bb5c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df446a67-d8f1-428d-b9b1-2266178da214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db98e8c-ff2b-4109-b2c9-0400536bc521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a79620-f219-4809-b114-2a0cc7045b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "44b52731-da1f-472e-bc85-335b1b62c2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c7775c-d4e9-42cf-9298-11a7163478c6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37d1ec6-673b-42bb-b78e-b7a44e1b02aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66681a3-b2c0-4fbc-bb14-d10176dec17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ee2f8a-c19a-40ef-8d11-6c2cd1e95a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51caffaf-6c14-4d5c-8595-fb911eb75722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e966f1bd-c3ac-43bc-a787-9e0fca643c2e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678c8bd8-4e5d-4c91-ac14-77ebd3aa1a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba108e0-79ef-455a-a05a-d330b28bf9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d9580b-0bf6-4212-931c-bfc4a64bfe78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8dd842-8b16-4688-aa57-994d0f9583ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8de20dc-c4c9-455b-9169-92f0432b04b1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793ab205-1ced-4c9f-b051-123fc18ecfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb49be9c-0aef-499a-8b86-6dce7e2ed5d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a1bce3-bd58-4560-b656-212ef6dd7937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97066ac2-6194-4f0c-badd-336024a065cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa75c51-f191-4506-ba2c-39c8e46ccc32",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1654cefa-314e-4562-8b4e-8ab5ff9c5de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4669c90-0608-400a-a3e3-904e4e12ddc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69aee8a0-14d9-41a0-8f7b-3204a0485109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9b019161-e860-4a08-b81e-fd44db1763b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac16d15a-c155-4768-8633-5dfe3df62aaf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdce665-c92c-4757-95ed-11ad5018dc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e4aa5be-6407-4e30-9080-d6cbfe9b6a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb5b216-a17f-40f9-9576-0e239fc7acb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0eca1ab5-63df-47f8-93b5-18fa7a61bc95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0dcea1d-2d42-4fe6-9d0c-d1c11a788347",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f04f01-ae91-46b0-86d1-3c9eb325435c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae772cdb-ad22-4d78-82aa-26ce653ec4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f5394b-d119-4cb7-b8e8-8a74af70d556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32e0d917-8f9a-4eb3-ae54-75c6343db89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2db99e-e238-470a-9a1e-086de20b8891",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04bda9a-3aee-4bb5-9eac-8bd73270478d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a006c6-533d-441f-9af1-084ac8df55ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d0da7c-e5f6-4fdc-8b43-f4ec6bf546d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d80e7704-03d3-45db-a822-14503ab6a915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a49879-efd9-4f85-bc0c-0031cf3c41cf",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac509ed-d758-4efa-94d2-162f69559004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e610ea90-d34d-467c-906a-71f025baa829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8710bbc-c824-4a71-ae72-90fa7bf3759b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a13c065e-a187-42cb-b3d2-add8eacfc90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05416e3-7978-4550-8884-83d7cf91adf2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528b19b8-43ce-4963-8e8a-be2ea6600769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9232fca4-2c56-4bfd-a5be-07bbd929868b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24bfaed-6b10-489a-b291-35ef98cf2c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd98538b-e73d-493f-91f1-285a47d624f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e596cac-1cd8-413f-8ad1-d961706df39c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f1ddca-639b-4ff3-ba22-a4d5bc5900f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c2ae7c-b962-4ca4-b4bb-4ac31c5584f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8084fc-ac5e-40f1-bd07-de36b9e4fd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "35050da5-9552-4635-aae8-dcfb8488808a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edd86a5-2040-4bee-97bb-09ff22bd4378",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42689b8-240d-46ce-8b63-6d728642b055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec99a486-4ab5-417e-96a9-9da4d47bd24d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb43c3c-49c0-44cc-9e53-67ecd6071c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "26da6ef9-4949-4887-a886-51afc580dd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ac6587-bb85-490d-9631-392933c4c2f7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897efeba-427f-42bb-9231-c7b31ede25e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329af04a-407c-4b9d-b2f0-0427e0352998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015a476e-9a65-4956-8459-7e3116737b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a65fbd8-9abd-47e3-a7d8-b2ad5dc72801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62f4948-4910-4a07-a8f5-c2b2d1907fc9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e37df9-b2f3-4fe8-badd-3a1b504c0d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288a5bdb-1b1b-4998-8045-83f9dc0ab34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bd7c2d-ead3-4d29-b72e-7e33273e504c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb16102-563b-4952-8e3a-b8371e500398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3eb0156-09d0-4fbf-9a44-79503009f5aa",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4162727-0d83-46de-816c-3d5fa5608ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5827c45b-ab8a-4c46-be39-0f28b19dab97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5cbd1b-56bb-4384-bbb4-194adf4fded3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6170e4d3-452c-4b44-9418-041080205c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400b8a83-7320-413d-9f5e-4d841fa0fc12",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e19db7-d799-4720-9f42-66934f3bb389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b027ad98-02a7-4509-bddd-441f52114352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9e229a-1f7d-4cf6-a527-126db46ea4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac541d85-5f5b-4ba7-b4a8-a13994b49b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5259c5-58b5-4f41-aeeb-122e9ab063f6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633676c7-2735-4d38-816e-0726c89e1d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "342f882a-cfbc-49a1-a798-2a8d6800f906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b4b890-9505-47cd-84fd-b7e28054196a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "961c1b99-8199-4aa8-9c4d-197321289179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8204fed3-fd47-414c-babc-1c2e39bc62ad",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82153ac2-39f7-4b57-a002-6bfb52c6ebd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad6c7a3-2ec4-475b-a725-57cbb786fc39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745293fa-77f4-4a13-990a-686e25154b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31ffecc6-2acc-4382-8730-f18ce7114b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd70427-7b93-4493-8962-b1732dde3930",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e688c7-d37d-48b5-84db-20dde23d872b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cea390e-7c1f-47ed-b839-5d896936ad54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4771dea-839c-4a94-a597-fdf49b2da603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce445c2-33d7-4556-82a9-fa87ae2097ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51866442-b69b-475b-b0ba-6e6d82b5cc57",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacdf110-dde1-4611-b823-57f9e07f16de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7926c643-7972-4e05-8641-8ad4662a0345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb09273-f11f-4df1-b464-43dbcd59df22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7916725-aa57-4aff-9555-457d7a01ef2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fce0e8e-a91e-4d31-b67e-1250a6a32d6e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af1ec3d-74ad-438e-9c03-a4c4dfbac465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d0f8c3-7638-4fb0-9cf0-a777548bff98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d71b66-bafa-4bae-a0cc-5509b95a2b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "17756948-c7c3-4263-b3b2-3d3f57d60bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49708603-a560-452e-bfbf-9b775f5fe228",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84868f43-e953-4e14-93c7-c0b1e708c7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1ffd9d-98ea-4560-8332-09cba406c0c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7679cc5b-d89f-4cc8-a211-94fdc2b39016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a592994-f38f-48d3-bd49-405aea37180f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937489e9-0ee5-4bb4-ade1-2ef84d9e459a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57312f4c-7c99-4e07-8010-b03fb87a5224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27409030-6c8b-476e-b2bc-23a2925eb651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c6a084-c889-4600-aec9-c7fe6a74c28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d66f94e-f5ac-42ab-ae08-66bdc2a09482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e2a3de-0164-4115-b938-e22a7dfbf5f7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c6088b-a861-4d3c-a684-26064ca297b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "777146c8-85b8-4e5b-a57e-d01dd7530595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9327dd36-0f46-4f27-9aed-0555eb545f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba96b4da-3b15-4c53-b12e-ae868b015bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe1608e-c407-4485-9f46-e07e383156a2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186d8b9b-9d6f-41d4-bc5f-3fb241ae1af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f0230d-ab37-47f7-837b-ea9f8797b2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9025cb-3c94-4ac5-8b6d-b5b40d658d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24e80f3c-65a2-4393-87eb-76bdaaedd63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ee5f20-b6e7-491e-9439-8749072c00b9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc465f21-009c-4129-aec0-cc8b3759efde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c7eb9f-1746-45ce-addc-c129fe96f211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf941e6-7b76-4330-b6a4-c3b646b3af5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fb980e0d-e373-4eb0-b427-8a00b85ad352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c6c208-4b74-4f2b-af54-9cc8114d6ad4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf61634-3c15-49d7-988a-aebdf2320182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ce1e7b-bb96-415c-9e0a-3dfe1fd994d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b38980-864f-4ce4-97ec-bab49818f56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b31665b-a21c-4884-b09c-06a106c416a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d63523f-384f-4d0d-9c86-a64ac148d8fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac049432-8f9f-477f-84b7-14da2db5c6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a483a739-87bf-449e-bef8-ac9c98e7b7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99525bb-fe7c-47dd-8e96-fa7965872be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "91b97c2b-62e7-4055-a792-70a22d6a22bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23836e54-c892-4b17-9992-7ffa4a04f444",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f113d1-6c2a-4cdb-8e42-63584f246593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf33f05-df2c-4dbe-b241-22e59a8ba3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e0eb83-401c-4942-8888-6456d4a9fdc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "10a52c71-bba5-439a-9e47-fbfd4f43bc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe6f522-ccc0-4e19-bfde-4f4fded00cc7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1bc151-645d-42cd-8ae7-2a6816914a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74de45db-a9a4-49f8-b928-02a717f5b239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217d0a55-717c-4158-b42f-b3dc456b850f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8841df-0df6-48fd-b223-0d5d85b23ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5782d89f-4d94-49ff-a34e-de73674c25b8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4168f81a-54e9-486f-bcff-7558a727bc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d952c70-a4b1-4680-a2ae-5dd5c8357e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f7b1bf-7f8f-43de-9a1d-88865ffaa91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a329591-52f0-4dab-9881-08eb909a9a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5d3c9c-6bf1-4c87-8716-a3d0d9536cf5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b255e61-456d-41be-99c9-1edd3157bbb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bdbd7e-a9fd-401b-b6c8-1aaf51070140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6a03d7-cd90-4f4e-90e3-23310b0f1138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4ba71c-dac9-43a9-9ae5-dc32b7f00c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656a3bfe-8a97-42b8-a90e-d88bb47d3721",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5640b66e-93bc-4b0c-862b-14d457994de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909aed68-80e3-4d22-a5f7-3f5a05bf22e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9a0f8d-e078-4a83-b6f2-3193d59b7084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a59aaa3f-1787-4f93-87fb-d9e7d029a076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0eff92d-869b-4e5a-8ebf-380be05937bd",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4316cab-d0b5-4ccf-b47d-9e97cbf516a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03230299-73fd-4437-a9e8-3d9b9773271d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e736552-0e60-42ab-9bc5-d08013be3563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0182cbeb-bbe6-4bf3-b398-d376a0b952f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d2b176-c9b6-40db-8432-47bf531e6e30",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907b3beb-66c8-40e0-bd87-64a2f19ddc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60bd0cd-9a9e-4365-8ade-3e064417961d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a483e4a-2fbe-4258-9a43-40885da4e722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59026e99-b4d0-48b3-ad7c-0a551fb6d687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd970e4f-9eb1-4a58-9360-73a29794550c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f2697f-5158-45c0-b67d-dab3a8142687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ed052e-077a-40c6-acd6-2cd6fe4f11f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84b99bb-56da-4842-891a-6cac5c455fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75f790ed-927d-4c5f-b79a-63ee0f9891e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a83e5b7-6375-447d-95d2-e1e10b5909d3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676cb123-e363-425d-971f-06367d782301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "276a431c-6434-4055-a8bb-9441626beb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02123a1e-0d9b-4e5f-ad8d-126b21bc1b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee394261-b64a-439a-ba12-f6983468170a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9085547a-ea33-447b-94d0-8fc37e5fdf66",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d00797e-ebdb-4ccb-8b7f-f745370f4404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ab4e53-1f7a-45b5-836f-8d0a13d1ac78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340b2aec-4c5e-4827-98ba-e0c451a6997e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3b3980-bc0c-4612-9f91-96e1be90a5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adacf98a-94f2-4ec5-9553-b5dd54848ecf",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82481ce4-1cd1-42b9-b45c-b60ee6232303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "266c10ba-78c9-4497-b9fb-2327a1862592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1555e03f-87f3-4f8e-8407-d1da32396515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b46ac74b-18b5-4bb1-8af4-9bf24d92e381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063b02fa-c960-4d77-89f0-491822bc82f3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6407e7-de5e-497a-bb22-143f39e71270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56790ba4-ca42-47a4-aef8-e140eedfcfdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a12282b-8581-4620-a6c6-28f2fadab962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3083a593-a216-4907-a3bc-a83627a87fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b8934a-4f53-4b2d-ad35-9bfdc499fa11",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6016dc-3e28-4a7d-a2ed-3eee85d0d16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62818f6b-1d6e-4c84-b914-71293901c921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c9d5b4-2b14-4113-9e85-166608b25af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b51469cb-4fe4-4e95-b91b-fc18c583fbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2fefea-ca28-495f-8cb6-e1f4e612d285",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c038c2-fb62-40c5-96c9-cc20171e805c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94e7a0d-1212-4872-a0eb-4b9e591a08b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78724aa8-5517-484d-85fb-dd4049c3715d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25a64474-eafa-4e33-bb51-46016ffbf095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6e3608-eccc-448a-8f7c-d64b96861793",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b46bce-4c98-43f7-915d-ecbc8a7f77f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81ff463-a53e-4919-8de1-47fb699ba3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddf01cb-571b-4441-ad8e-4c99991e6810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adc3e286-7072-4321-9e47-9235285d5138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99072d3-d36b-49cd-b899-1f6c734b2a03",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90becf0-5d55-4b9f-a581-c2d64f21523d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e860b713-a4d3-48fe-b7fb-0cec0ef0a289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12311b6d-8829-43c2-b5b1-5f1be2658fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21b3d43d-4ac9-42d2-934d-852510679193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73946148-1ca4-48c1-bb1a-268d1f0e676a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60650570-7c69-4f6a-a93e-b37f96dffa76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3a95dc-8e09-4b43-8b76-5b19ab704617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b922db4b-116b-44ff-ba55-1574541c147c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8700e3b7-495f-405f-83ea-c5373697f14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4843be4-986e-481e-921d-f8c709d89817",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0592af99-6d59-4bf1-ad01-bee9b874aaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c04ac28-0d98-4b48-8399-919db56b747e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08778b9-0f08-428a-acc0-82165daba794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2d0b4b-16ba-46e8-a0f8-6952f6a7d840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00c4d22-8a9a-4e7d-aba2-7b728bcbda46",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ce91e5-6236-4c12-b86c-7a67a02d7589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa51d424-d7bf-43a1-84d4-459f25567a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6ff4ad-a4b7-4c95-9f5e-d607c32ece73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d87d5d5f-45ad-45bb-b909-a4ef07385a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc33ad72-64e7-4982-809e-38370c2d6682",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03932b1-25e3-43f2-8c89-3174fee8811d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7116c7c6-9abf-48b5-9129-f42769f235e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d42ed42-0b4b-4956-8300-dcd48a5ce77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed226ae7-0040-4104-84a5-37912b8d1e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d49666-48aa-4a1f-8206-0879062a9fcd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ac86cf-d3ef-49e3-9e66-119247d180ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97282166-2cc3-40e1-a416-ab1c830fce98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46dd115f-b006-4fc0-8687-b63ad1be35d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0de701-605f-40d6-81ac-d1a923e3af0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81da6387-21f3-46f5-92b5-02cd1ec6bb68",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f868e0c-e853-4cdd-9b0d-bced33d10126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a062fdb1-85d5-4afe-aa6c-fbc0c1ef8b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb23e03-a566-488d-af65-d69816e64ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "497264ef-51d9-439a-8918-04206043392f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c9ec83-dec7-406d-9078-a176146a2a7f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383d4d8d-7fc9-4296-9e3c-4d0bdc0100dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe6b467-9302-43e6-883e-ed685ad4ae72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66144bf-fdea-4187-908c-5224cd20078a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "86e5ce1e-fe16-4349-b648-a26cb8cd288d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f9b181-3d15-40f9-b5e0-aca67609c5c9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662165bd-d876-4c2f-96d8-b2023b3bf6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8909b4d2-7478-433d-9913-060072db6096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39256abd-f966-406b-8eb6-185f31985415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43922100-7207-4fb1-b0df-d0dd2d7e6052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d7ec58-9db7-4ee6-b3a8-2e6846c81aaf",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d606029c-4c1e-4839-a5ca-054f3906d782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53752793-8f54-40bb-a374-71d8bfa58cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245a7f16-ae31-4490-85e0-5184228ddbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55667fb7-79ce-4d3f-bff8-050c8c1611d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8347d7-7b6e-40a1-88db-61818c3e2539",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972dcb2b-77dd-47cc-891f-8dbfb7492feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3ac7ffe-2513-420a-9d50-ca4bc7f351a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9c8d7f-0be2-4d29-a2d8-6e22353f1993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f0cb49-da1b-454f-8422-8c591fd072f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0186481-80fc-4234-a830-9064de5e5abc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67765bee-5797-4c9b-b9a6-de67af4272f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7498c7-f70c-44fc-8b9d-da454462c8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7ec46c-8d0b-430e-a8d9-b2f9df2c957b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9babaf5-257e-483b-884d-9a4c08a256a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2bccc4-14fe-4f85-984d-6101721bbcc6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab6214e-42f3-4fcc-84a8-b4b6bd866b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "962c80b5-ee07-47b3-a9e0-3360afeb0fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c9e559-09d1-4056-bcd9-44dd19a55965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e1452a-ed8c-4f41-8a97-2a494720ea1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81cd7c7-4f12-4c93-b881-e73c04ea943b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b80cca-4edb-4919-83b4-6c7e0fa73cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea092fec-d055-4ba0-98ec-118739039173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e6d2c9-bef4-4413-aec9-a53cf7c068ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e114d33-03d4-4f5e-b259-ede294f7cddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8643d9-8d37-4ba9-a4b0-a0a8ef6a0ac3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a032d62-943c-452e-a87b-401d01624468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34162212-7425-48ec-9c4d-3d16ad01ac1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15604602-b218-43c2-aa7a-980c6947625e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d455f34-ad85-44ff-a6d0-3475ad07712f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6cc42c-2909-4780-83ee-8421c3eacd04",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5ac386-9f94-46bf-a720-77e3492d4ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983b8f6d-28ab-43ec-855b-4b77325bffc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74081ee-8b7a-4fe8-8db9-35e5bca73549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2b0e6b-1c33-4679-8745-a66067f9b381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e166211-9ea6-454a-bb49-3f06466c53a4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f619a1f8-06b1-4ed3-8581-262ee735e88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82b3404-df1f-4000-850d-3a1f675f1f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44598f60-8963-47c8-9bf4-5dcaae275f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "094a17bc-a15c-4c08-8657-f36502d9d05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d36f8a-7025-42ba-a882-1cfe7b8555ba",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dabaf1-ccac-4e2d-ad22-dd9401db9a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea53889-4196-494c-bcd9-f167a10bd325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5ab950-63b7-4f2e-aee6-06cffd345199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c333aa9-a1f8-4dcc-af08-b216fa92933f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368c0b6e-c585-4f45-b2b3-857dcf9cdd65",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46ae529-440e-4f70-8c86-e2a2c343bcbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4a1c6b6e-09b2-49ae-9587-0aab5f15c685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abaa6f9-f6e8-48ea-bf75-e95342ac18f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee5a3e0-a694-409d-90ac-33d0ff68c7d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0dbdee17-8d96-497f-abbb-fb68cb43a89e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd5c9170-b5f4-4d4a-95e4-ab34f670f93e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad3009f-c617-4169-b9ed-fa20af558112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8a3d826-5b4e-4ed9-a416-614ab90f65ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5dcec3-1a59-4bdb-9ad9-e47e4c54cc63",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "410421d2-24d2-4fca-af57-36e3929ac854"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5f8cf12-3df6-487d-8676-84d5a335852d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b474fe72-9324-42fb-8ce6-5c015f8b7fa0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "85973727-113d-41f1-b698-36f41b85e4d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97069310-1c36-419e-9ab8-1050b61b1e30"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a16aa1f8-197b-42c8-a9dd-9b66ac05b732",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a2bebe0-584f-49ae-bc9a-b3bd8e805535"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "25a47b81-c5fd-41c6-9d6b-19450028498f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91377e4c-b41f-41d6-a2f9-139de7da7915"
                }
              }
            ]
          },
          {
            "id": "c59fc888-f994-4efa-bd5b-913bd6df8d42",
            "name": "Positive Testing",
            "item": [
              {
                "id": "79e06cd3-dd31-4c8e-b329-bf595b625521",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f0723fa-f5c2-4021-a0e9-8c09637a577b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05a5c881-4d2d-4978-8332-223f6f685f95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d35338fc-b50e-4afe-a358-f7ab8d895d23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0fbc2764-46fb-437b-918c-df7cac189e24"
                    }
                  }
                ]
              },
              {
                "id": "308c5eb6-71d7-4008-b334-f66c4bf5feb8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68c13587-e86b-48ca-a662-2a63c214235a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b42f05a8-61b7-4478-98f9-57092945dc84"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb437c4f-eb7f-43bf-9674-a9d0f90f937d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "40140952-4ecc-489b-8345-6398b8d60a9d"
                    }
                  }
                ]
              },
              {
                "id": "ab2a3e5a-4ebd-416a-abd8-b1ad1210cadd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c63d93c-2549-42ac-9e4f-a4953358f630",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0555fccc-e167-492a-9776-e73f8a6da448"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30810d85-a99d-494e-a907-958a07884379",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "22cd841f-7ede-4423-b741-d6be02188fbc"
                    }
                  }
                ]
              },
              {
                "id": "c1f03842-084e-498e-b91a-3edeef9fc8b8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47cda3e3-5f36-4d37-b2cf-cc7f5beca261",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b480e402-a08c-4116-bd4c-189e18cf670a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25f9b01c-48d9-4d1b-9e8c-b5200a5cde45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5d3d85e2-f9d4-4d0c-830c-4da0ea5cc2a8"
                    }
                  }
                ]
              },
              {
                "id": "793c06ae-84b3-4805-957d-e49d99b9b941",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fba93182-3cae-41a8-8eb9-31b626a6602b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23cc6c71-ac02-4835-901b-94831bb8e086"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cc226a7-db45-42fb-8280-dceb97e785a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f808b58a-a6b0-4818-961e-39a147162106"
                    }
                  }
                ]
              },
              {
                "id": "8ba90722-4249-44c0-a14a-1ca1ac53b222",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db5ae4d4-2baa-4963-9cf5-1873bd6c3764",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d3b7c88-2379-459e-b8ec-a144d0a3e43d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7472e0c2-091f-4d10-9834-3cd55c955c3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "958ae6ca-e30f-4b0c-bf67-981d82ce11b0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2392992-18b0-432a-ab11-4e3daff89086",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7228de46-8eda-4331-9dec-c3501827bb23"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "53e01893-2e59-431a-b6e9-b6203645e067",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7e3c63a-4cd9-4ec7-ae6d-fb3f36bc7ba2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce04e718-2037-4ab7-8567-b49edc90ba6b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ecb56d71-e904-42de-a2ff-61b4bc0f0c0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c269c14-0b3f-4a5d-8578-05f8e827cb43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3636329e-df24-46a0-a36a-76663a74fc2e"
            }
          }
        ]
      },
      {
        "id": "a8967f95-41d6-437c-b9e9-467c5ab02a46",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a7e5a9d4-a38c-415b-9013-50fed7437ac7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "518be9fe-9857-415c-b6cd-4860220e4a3f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da8fe91e-4da8-4fd8-939f-47027d6bc7b6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388fa5f3-3bf7-4f86-a896-3ae707761e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfdccea-7233-4699-a84a-b768cdf2113a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1877eb4-0593-48e5-aad9-fb0305d951c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "27f3f1d9-99ef-4362-85e4-730644654cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c595115e-db07-42b1-9ca3-f11adb906a43",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d5ad8b-eccb-48fa-9036-deab71908a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b018705f-f7a7-42bb-980a-34404fc63ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca23bb5-c9ef-4038-ba71-a444afdb7eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e74d0753-794f-4da9-b863-9183893c8661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033c9e85-1460-4241-982a-b3d90fabefd0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d00c5c1-7f03-498e-8709-9063a18af1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f56721-7626-43fa-b08a-b5e81a192690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef437fed-9901-44c4-8033-62995e74634a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83f99af1-b710-4749-9994-5cb83f027245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12bfae5-2b5e-4767-a92c-e28a47455b73",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "972c500e-da4a-4cd7-bb00-a03330b8f9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2db1b2-15ec-4853-a6dc-48396ab97508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5412a5-16ed-43fc-8ca5-b13f88250dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0de7d7-923a-4b16-88e4-399724d4ef44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc6d6e3-8c3b-46f6-b7df-a2227ad6ba1e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf052fa-2f86-45ac-8036-af79bb964895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd7f0de-c3ec-4056-a231-01435cb7b09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc2c7ce-a119-4bb2-a36e-913e58232f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "faa59e2a-23bf-4124-82ad-4b5c9aa31693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad91d657-9ebf-450b-bb1c-893853b6ccb5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ce06b7-ecdb-4a94-95a4-5a56bb5532d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be2bb1d-f266-4276-93a0-a1e98fa7a2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc589185-fe15-4842-ad54-001591a4609a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93aa1414-1650-4572-be28-7bd4dea02d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04c7162-d644-425a-8591-6d9491941236",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6dd2db-d761-4444-a122-35c486278c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe278b9a-bae8-48a8-bc54-370635c38cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e0f34e-cf63-4bdc-b663-aabff2ef3da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a658b4a1-1877-44cc-8ea1-fcf0fd4ad1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d582d15-fcb8-4da1-b4bb-85d5f552f47d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e93a8b1-6cec-40db-a1d5-aa4e28b9c0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d71070f-bbc3-43fc-b9d5-f71db233a9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1912e51f-2094-4d49-84ee-0fed766ff86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd39be48-c800-4363-9d03-51d419797d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2daf686-0064-4395-aa55-017537923555",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ed910e-8c4d-41b1-9ac2-d9dd69cee897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047e20cc-3f9a-4be2-92a9-c407234fed64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77dd346-a9e1-4856-9be3-4759d5378087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24adbabd-1e87-49d3-9c1e-225c417116b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99fb966-76cb-4b8f-99ae-a3aae2d85517",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f184784d-a02f-4325-b538-6a5bb6d506c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6161990a-ae3c-4e30-8b3d-cdfabf03946f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7099ce9f-3c14-458b-bc80-4eb047a9a2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "238d6462-7a81-4aad-9186-98ce33f2feaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc22907-8a56-4072-93e9-10934d8982b4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44284f1f-9fc7-4a8d-bb5b-b98ec3038c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30647237-7b14-40b8-b92b-c9119f4eb1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb632d69-f0fe-456e-ac13-f9060dab68c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf31b4d-e988-4cfb-b7f0-0fa6818fd2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d2c405-1db0-4079-bfff-6d211e7ca5d5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b7e192-91e9-41a8-b9ed-c20682b8156b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb2115b-1f51-43bd-8fa1-5ef5c8c9ab85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c861dbf1-d92f-4a2b-8b33-d65fd24d3d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "369d71d7-6dbf-4c2d-a345-d5bfc8151d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe054d5-c024-470c-bcd5-0af8dc299653",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6488a4-9f15-4d43-8a62-f09d0dcdf158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6190c53a-4513-4c38-aec6-23bd9212a4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5645999c-f25b-442d-a752-27b72059d71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5495f6-b46e-40db-a06e-9c253756af21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2109598-25de-43db-82f7-9a44fc7f0b4d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b42ea85-1d2c-47dd-a019-e27065c6c395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42a635a-878f-45b6-9527-20643c9abb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32417eb2-cd23-46cc-93cc-235c936dd1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dfbe65d-7966-48bd-bcb7-7c3cfef91e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ee4339-5dfd-43f5-99c5-4e7bd626e6f3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732d2626-1bae-46ef-a9aa-b09b15b19499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01bc8bf-9ec5-4c1b-8df9-6e4c9c5582b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a367a00-3048-439d-9523-9c266641caf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8be047-d8f7-4fa7-b971-bf39ba232edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cf4217-71e1-4a7a-892a-99af1eb189cc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94311ed0-6ab4-4f0c-99d6-3ef0141b0a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72df129b-6318-4f4b-b119-f1d793ed7b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e883c69c-ca55-4d03-9012-096e41e63440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd02bbab-de45-4d1c-8467-c1f5005eb5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a211099a-c3df-4956-b2ed-3b5f46429170",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdb6feb-432b-4493-97f7-a3130ce8f92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceecaf21-33c4-46a1-869b-45aca527b35f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06163a4-feda-4dfa-beda-bc9af4bc8a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7368e08a-944e-45b3-a73c-a9e4dea0a9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542fca0e-e210-4386-afef-8df1748227af",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765594fc-d4c9-4184-b95b-4159a4c774f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dcb492f-c86b-47c1-8426-9fc610fe6488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475d7924-89b2-4c34-be00-1b78cdf3d5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0d714f-1495-4839-8a5d-882b7ba05ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bac9653-a41e-4189-a850-fa4005cb3f28",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0a9c87-eb3d-4bde-8fe8-a1232f2f3bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e00ea3e-5ff7-41da-8913-247c666fe978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc65239-73b9-45ea-9470-f53afdb5c688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d570e08-db18-4d72-bcd1-ad13b39569e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d7466c-bc75-45ff-9c50-7d66403de6e8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0793b3-c776-4dee-846c-d730b7e50137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be4e8b3-2c4a-4b54-ad8c-fff70b728086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78795ce3-10da-4feb-9086-b1daebc16b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "559dab94-f4a0-4075-bf95-5e0b9e3f1f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e60ed4-2ac8-4e2e-832b-9e19fbac91ab",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed49684-f389-463c-9f07-7f36b0749cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20317ff-1fbb-4df5-86a6-6b94527d651f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4065df-db65-4ceb-a3ae-c17299ef9dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "144e647e-7d91-4f5f-b43c-2e2e9f0bb5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dac03a-9aa0-4fa3-961c-4c07da7b8276",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c287b36-13b1-459a-9ae8-69c67cf5fbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46951b2-c2c4-43ef-b753-2311ecdcd545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c23467b-d916-41e7-a9f7-e0af55896958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca7c2fe-97b8-4ca7-b20c-0c02d06d9f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79285c7b-c2a5-4d85-9cd8-4cf507ac74df",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc93e60-6436-44c8-8438-8310dbb2de57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a819abb-76fe-4e1f-a064-4b34f85b0ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e36157e-f897-4b4b-86be-7393aa631b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e667c62-6e0d-4d71-a19c-dbc1e924ac21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712f958e-3eb8-49f0-b10b-4c4eaccdb0fd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd1dcdf-8239-4135-9b85-da154a46a7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1462ac3-9bfa-4d6e-90ed-d149e8a67bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22fc46c-f6c0-4be4-b291-73072b49ff16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43baa249-f349-4081-922c-3ae7dfe1a9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7fdfbf-ffdb-40ea-a9d7-f460c22a9fbe",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2d9b8c-0c80-4114-9189-7086a0e2e5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7083e4a-60df-42f3-9040-20101513a613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfcd504-14f5-454f-bb61-c60162a36994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3ac826-c555-4c2d-b27a-70e1fc35c987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36a10f9-5e01-421e-8847-d029d4790b48",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01f5571-9c0d-4562-9342-8e46f2abb440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052e6ec3-15d5-4d03-8b9c-9b25b9acb7c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951c19e5-94d3-45e9-9eb1-21ca74e2cd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5475a042-ace8-4550-ae58-820322660c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9a3aa3-d562-445c-ba3f-7d2d5217c783",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da55efe2-8d0a-46be-8b71-7138db936e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4e8ad8-684e-4f0e-a721-830dc86ab42e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53905b6d-7ad3-4cca-bb29-325ee0413aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16f47089-27f1-452e-afd7-b113611ab137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf56ad0b-36e6-43c6-91d7-b2286164216c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68518699-a124-41d7-8fb6-585b96b6c3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c5066e-5c96-428a-ba8e-c834f69f5faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c615a9f7-2a70-4e29-b5b0-acf991c42598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d121313b-55a2-4cfa-9d1e-6182d3c43067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bae5ef-1ccc-4263-9f25-6e79bafdb6c1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36d8014-055f-4e17-8161-57b0e38a0275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac94d8ba-83e5-4b3b-bf1c-09ef9de566f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1396cddd-f994-4b9e-88c7-be2f1466fa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43449e9d-2aad-400c-9399-e780bc751463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9304fcfe-ee9d-44f5-8df8-0394927c6487",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee97fb59-1dfe-41d6-992d-fa7a10bb1378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fed01c-9771-4251-8981-a7bbf30eca30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e870926f-bd61-4f7a-a13c-7b6c4be656c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb58954-28d7-400b-b772-481ec9dff61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97437db-79b0-47d2-8132-09a8acb1e92d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870afc04-fd85-4a03-a32b-190ff6e51cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bebc9a2-e188-4ec7-b24b-fd0a238a3681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7101730-0cd6-4353-8c03-e76156a6a052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85e656fd-6886-4f94-8557-ba8595fb1679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc03d610-7434-4f3d-be23-bcf4be3bfd27",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddb4abb-5b8e-472d-b296-1c7dbc77c92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e242a9f2-4af0-405b-8a74-4c27c4e64389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f20b27d-52cb-468c-b570-d7297f372f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ac36c7-7eac-4f69-85c1-9e946a841f8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e3f709cd-aca5-4985-a54c-c4c8d768fd09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9900e9b-7a20-4ebb-b62b-737eee0d8116",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03d89e2-e346-4d98-91f3-6ab15e5b42b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1b188c58-1bae-4434-af21-0a5085d33990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a64e20d-b60b-4149-9e08-fa48f9a2fcf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "980f7bab-e4f3-40f1-beb3-9f2638b64ae1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2681790-2b56-4f9a-8eae-a335bb73ca14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "daa33a3a-acfe-486d-8513-90a2bd903501"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5706582-5360-47ca-8d37-8762e117f935",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe2a5a63-8044-4d8c-b18a-b13c630b2272"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "706fc41c-54db-4cfa-90d4-d31897c9644b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "44be93a3-c51f-4c71-a824-1d12c665620b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3494071-eb2e-4ffe-b05c-97655cdc50ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a27e7db7-1629-421a-8281-6c9b4bd4b078"
            }
          }
        ]
      },
      {
        "id": "c50f1ec7-0bbf-4a31-b58c-ce40a33029cc",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "076cb7c9-f35f-4394-be5f-663aa2524a11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b3b57d1b-8cec-4f9d-aaef-c6eafe59eb22",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3055c8c9-84f3-4fac-a861-36165beab14e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750740e7-a315-4ecd-a05b-2b8225e01965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88cdb56a-8fd2-4824-84c7-b135253b80e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2dac4d-b0f3-4b53-b973-af0c0e63f041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "87f3a82e-a969-4cc6-a19f-2356a52d3a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d2d107-6163-45d6-b1b9-82802799ca2e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdaac5a9-46f5-4ec9-9ed1-9501bcb00b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5f9fa4-4c23-410f-90ce-dcabf082adfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14dee5b-3a7a-449e-aa31-b70d0de8a699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d65177c-5a82-4631-bd7a-91e16c71d889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4987a455-8fc7-4bc2-9ba0-ef17be6e76e7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316ca9ec-5913-4e80-b9c9-90cba6896355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1fc01ca-e592-4978-a829-de92502174ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee317cd-7658-4ad4-a41b-27d5377d0ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af50bf11-b50f-45f6-840b-3757d0a2bf1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1affaf3-ae21-4bcc-884c-605983bc131c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a4fd58-64e8-4dfb-a7c1-4204ca0d3c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8d4083-ab13-48ab-8aa7-aa243f05bb34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87734282-bd25-46d1-8628-ff57963a1d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25e982f4-a6d2-4e41-9ea1-f8b7462bc5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6014c9d6-579c-4f92-8399-b874106d3dec",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcacd7df-6a1b-4747-82e4-f9a60c402238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9329d5-8ae4-44b5-9870-4ceaccb7b476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1882d050-b9c2-4832-92fe-fd5a4ae5ab3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe7293a-f348-4786-9f2e-fb1145894e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afac60ef-d024-401a-a0e2-2a350f171932",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4dd6c1-b616-4bd9-9cc3-febfecdb22d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4260ff-5044-44b4-97e0-6ab2af4d8472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee368f6-1ee1-48cf-9192-3e3f42316f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10338a8f-36e5-4f7e-9039-a11c6c416af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c248556-66a2-41bc-ba27-edfdfa8fa2c0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360ce228-297f-47d0-bbba-304d052740a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c87ad1e-995b-40b9-920a-a46d1284b082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a03d61-ee42-4472-9d3b-419e5d1ee0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d38a82f-72cf-4ffc-b6b7-54ed31cbeaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a527ab0-151b-4fca-be18-44f1357db9c5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad2329f-f8e1-4eeb-aaad-c5f7a682fc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbaccd52-7e92-4a89-9313-165f0b65fb5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3843e1e-6f7d-4c35-a83d-197200b36d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb2f32c-3d4c-4d4e-8af0-c95a3d03f19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78302834-b0d9-43dc-9249-21064eaebd71",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2a485e-ac8f-4d5c-9860-e847a411a4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e7f778-82b5-4ef3-b6a3-eac7bbdfe322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4236c94f-1457-4040-b3e2-c540d62b7fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70a50a9a-3fd7-47ac-989c-dfa54dbe12dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cab030-7ce1-4703-be34-18e252788885",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb04063a-c073-45ff-bda0-f69311cf8956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6760fa3d-40e0-4554-9594-f2fcf61ba83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5265b9a-ec4a-407f-b6c8-47482e0d9052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a76fcad6-52ce-4de5-af8c-5887a209c16e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507f9570-cdc3-4fd6-90b3-573988aa067a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273546da-f102-4025-ac67-0870144f3d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2664270d-ff70-4e8a-99ab-c4ce6d3041e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c759c8fd-8a14-4f58-8ffa-efeae375c8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc956ba-9955-4529-bf0a-7e3c75224504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525c2ec2-3796-45b1-9160-bc877629d786",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f284eb55-47a2-4ac0-983f-363a3f287c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf785b7-3773-4bd6-a3bb-846eb1c8c267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4f483a-cad4-4a3e-9859-df2844634358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0df279de-2c12-416a-b87e-95d73e3e295b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d54d40-b6c1-4f0d-bbb6-8cbd60d86906",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b455bfa-b3ed-4fee-a7a3-64df9e8eda22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c6fd02-41ea-4c85-a012-79f95c219ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314d620e-16ea-4769-aa6d-bc5f259cb104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af5b1754-4c3d-4488-8c18-e9063d4eafe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855126f5-df48-475a-b2f2-c1ec69f23a26",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15aaa9bf-cb64-462b-8668-4c40d5aa0560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7eaeff-bfd5-4d57-9005-4926983de849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099a15ed-746b-4ec3-a09e-fb76c01302a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5007fae5-6ba6-491e-836b-a9b84df58081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcefbaf-95eb-4544-b55e-b48e8ed6d475",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0da747a-f1ce-4f92-b9b7-fd798445c090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce0aab1-f11c-4d15-83d9-45f1fe70fc05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0e8757-606c-4908-bbe9-4185487bafa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8960a0-10d0-4f7f-9763-3963d7cfe51e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3908f878-1066-46b9-827a-e09361bedf5f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f376c63-a56d-43ef-854b-6d64f1ea3201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d85337-4a33-442c-961f-0ba217dae04d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952be26a-189e-46b3-8c9d-a50e4c390b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3455a6c2-529b-4ad5-afdf-7d35fc14852f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fee109-4da3-4d8c-acbc-68f6e7a85c2f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c76b401-e3ef-427b-984c-89143d8f4f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b09b9a-aa71-4939-84af-6eb3b1c57cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6952739-fbba-4abb-ae54-76f89fc31b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "771167ba-931c-4e3e-b4c4-68289215a5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad70e1e-b7cf-4734-b4bc-8831fe0fffd0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fc8805-28e7-40bd-b25d-8f0d226b1572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ec90c3-f0c1-4f2c-a03d-a030df93981c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef823cc0-500e-4bbd-8c0d-ead804f56db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "93f635b3-4c2a-4e1e-abab-68cb99029728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fb3589-6ff8-4156-8971-850cb825eee6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fea9cc3-4917-4288-b1c6-ec7d5b8a979b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63888e87-202c-4ad5-ab82-56cb8c73ff43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24290ca6-9ee7-483e-ab37-b33396560d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b47de2-cab9-4110-81cd-ad604c413618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4350816e-716d-417e-88ba-ba773792539d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63091d66-39f4-493f-ac57-7b3b0244ce0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf92c15-e90b-4ac5-a045-64da8c79ed17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f566d458-5dce-40a0-84f8-461168ad90c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "700d9d18-0987-41c0-ac53-7be3a265cc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b882d09d-c971-48df-af6c-25148859a992",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3eec3bd-6aea-4acd-adaf-e7221dae195e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969bff01-2da3-4fe3-a70f-c124d2a3cdb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19be503-432e-4dd0-820e-5539d58857bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5afd736a-f2f4-41c0-80e3-85f377402e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3401b0ab-4d5c-4a4d-b38e-6a5c3e2654ca",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c175f9ce-a169-42ed-babd-956126d721e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70683065-5471-4e61-9338-ed37955566f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58511965-a8b1-4092-934d-d382a4a44112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6358405e-019d-4c2d-8394-dc7f5ff8761e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721ac7f5-6d92-4363-82bd-655c05fd02a6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215cf3b9-af37-4f54-a6c4-0fe290c9d5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054766da-7b3f-447e-b295-df6efdd0d13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0212861a-7c67-4483-9a06-91396ff270d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e81a089c-0d70-4e98-80c4-fcf52e998b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c918f1-b98c-4c4b-bb6f-8a2a22491d91",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a399201-fa8a-44e0-9319-9b4a533aa62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13698265-01d6-4d85-9d1f-f574c766cd91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d23b61a-ebbc-403c-a87e-4874f9cee51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56e36145-05ba-4200-b049-a2bf57d66bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485f074d-70d9-4262-9aad-f683cfdbc5f4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32be40f8-01b0-4224-bfd3-f5ebe3ee8056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec03380-1f35-4155-8351-bf34187b60dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d9eb1f-c61a-490a-8de4-f8752ff56ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c426509-bddd-4e19-a662-ce1b44e31093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489ec788-6a74-4b47-82be-98732b1462d2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb4cd1f-1376-400e-bd9b-2126d8feb85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904843ba-2562-41bc-a533-49dcb6605628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e20409-7708-452b-9d34-15162e4be02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3038a4c6-de9d-4490-ac4d-25aa4c8f4c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8cff38-bb2a-4017-beab-e82ebc784a79",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd395353-de94-441e-8e09-6a8bcefe3dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1c62de-d376-445e-8fa9-71373ac21766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7322f5-c206-47ee-8c00-28bffb8ca0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32cedae1-2186-45b4-aa2d-a2f9150adc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d385d0ad-b099-4daf-b411-5972e69f64cc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010c122f-38c8-4961-add3-68c6ec485061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a289cc8c-8320-4dfc-bb0d-01b8359b935c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f85758-1259-4ece-968c-f02da7f88e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c67dc3-1ca7-4835-aecc-71ddfb560a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1893e13-9e36-49c9-8bc7-bdcb41572e52",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3637e43c-5b85-4e5e-886a-2a851bbab27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13068253-3c6a-47d4-a427-532ae0d99ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da5e2ea-41c8-4e7c-97e7-17030439bf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c093f182-f65b-41d1-922f-385989fab02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af38577f-f338-46c7-b66b-d0f9b5f91b67",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80778d6b-beff-4755-aa27-b8831a3fd1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd971a8-e228-415d-83dd-8cc96c294774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b23321-9100-45d3-8a6f-0ffda7992c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "161b3c4c-63b5-4af8-84a3-ea49f45808d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc22e6d-6677-4d2f-a71e-e7ff71dacbf3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0b9ee5-cbb5-4c73-8336-1013021a2e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e19900f-d04a-4941-a8f0-a3df6d738fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb32ab50-f616-4675-8dfc-6c389d8a67c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "785cacb5-181d-48fb-adea-b169d28dc839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860b56e7-5551-433a-ac7b-d0c727534509",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d34b3d-f3ea-46ee-a9fc-6a6ad334fd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4740bf34-edb9-412a-b089-eb92a7054e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259ebd59-876f-4a6d-bd90-5679da538a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2893da-b0a4-4223-a46a-3ebd6ef6d2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0b5796-96fb-4347-adf1-077d190e35be",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354cc63f-a0b4-4d5b-9f06-00a6a94d97e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5adabff5-0f9c-4338-a091-d2fadbc08a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fec9df3-d7a9-410a-b951-8c5661ec2898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cad08150-b660-4a12-88bb-d23e8e7f1422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7e2b69-f936-4a41-8137-3c2a9a274b0f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec67de2-efc4-4206-a31f-6bab1f3423c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f22225d-e925-41ef-a80f-026449e827dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229e5f31-cb22-4b16-a8cf-5cdef2165b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec47011-bb91-44c2-b9b3-732311a0e8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401a0326-c89a-4c3d-af41-851ca1b62693",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f7376e-46ab-4cfa-bca4-8999297a491e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc4472c-277e-4c19-bbc8-e191445b8d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f74608c-c6be-44fa-9a40-188cd10c1a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "207d2153-766c-42b3-b071-86042cf2efc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b130ff68-4cc3-4be5-a07a-23c07afeae1a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13683a3-14f6-4282-af6a-601dea2f26de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169c94e8-e545-4cd9-a1a7-294513eea830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2a3e76-e7bb-49d0-84a8-9cc3103dfa34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce17adea-edee-4128-8bf8-9da239178cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa063a2c-8b5b-4563-ae57-f14596266ae9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5901fc-89ae-4def-8736-1de4ab24e385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b5f3a9-8a65-44d0-ba23-fb590f635262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36770e94-c632-4172-8a11-d325ec18e8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0937b7-a214-48f4-879d-85d2c2e6921f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "36295825-35e6-4828-92bd-212a0e6ad6d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20c11471-ac28-4f7b-84ab-3d69c697a873",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670a339c-c30d-4ebe-bc13-c017431f2017",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b112e4-294d-4515-97ba-0c7809c5d677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "640954c7-0298-4137-842e-26e31f97e35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff438029-6673-4d44-a854-5f0d42f23c88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e52577c-c641-4702-a37b-55a141a491d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59060497-f5aa-4dcb-94b9-0c0b696695b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0267f01-30f4-476b-bf69-53ba9e9ace0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ce6156a-f252-407f-af11-253b2b88f538"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71df1e1a-84dc-46b6-9415-90988b070432",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6e2a05cb-6d0c-4dc3-ac01-4b0c62cf343c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b7d4645-03b1-4cca-8f08-f75f50845d6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17e8b3a0-cdd6-4f7b-ba73-c5bc942c09da"
            }
          }
        ]
      },
      {
        "id": "546eff6b-46df-4bb4-b8a6-66d477094cc7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "09441d6a-9de4-479c-b9d5-aa2fe3cb52a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03779420-657c-4a50-bca0-d235718089be",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "76cb7065-0de7-4071-883d-f1e50333356a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd907dd-9010-467f-83a1-1a99467de937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ff2c1c-bdce-4ba4-8212-0e4d0903cd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1789c2-cb11-47dc-a392-2a68bb52bafd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36960501-0d07-4ff8-bcdd-f40dfc0b1e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ffacd0-6bc0-4894-8669-9b38f9121d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c5aa3e-00f2-471f-a17f-38370f57441c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35aee4a-9201-4771-aa54-a1c7a3d1c18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9902ac0d-8b9c-4a6f-b13a-cf5030019860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa05214-8bda-4bf9-ac43-3c7bf250e5de",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29681c65-779f-4b3c-994a-9c963a9cdb8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87629f9e-95be-45fa-b2d2-76f7b6c4c0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7368ee8d-d1a6-46d9-890e-307898484c6c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8773e8f-9451-4254-93c4-097d389c125d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2073ca9d-aff7-4f92-b10c-349c7b0efc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff480a6e-0e77-43bd-b644-edc0eb20c62c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2fe6ad-02ab-49fc-bfe9-ec4fc62cfe42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd68794-60a1-4256-babe-f99910ebea82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d02f3f-e131-4d44-a457-7b7c269091f5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58167185-cb03-4848-aafa-a5f16ee3960b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02fa743-7e57-4b85-97a4-87c76e796b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc3a3f2-d41c-40e8-bb31-be1192a51604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa5e16f-50ac-4201-958c-e1c61fcafa73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a85e508-df36-477a-af79-72e9c949596b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8d017c-089e-49bf-831b-3ab619821f64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f8f9d57-9c64-4f5b-97c3-92e1f7b622be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd2f9a3-2b40-47a6-a3d5-1d8e7a522480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725ad968-4fb5-4bed-a09a-81cb9f3725ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a6c5a8-300e-45f0-9eb9-7ffff04d4c51",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14d965d-d119-4d09-b0c0-b86103012d34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "537a6732-dc0b-4721-b56b-405d71e0bac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc51ee06-7eb7-4741-9910-494847dba515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d9beab-f598-4a8a-b50b-e3ff38b30d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e22614-06e0-4e77-8a88-726062c7c852",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81396e1c-8d3f-43e3-8462-173f04453ce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce5ec369-3841-44d5-bc22-0ce5bd178576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4adb80-3ebb-43bc-883d-b05a400b64f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2db171-e0bd-4646-b9db-3023490fbf05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f824386f-bc99-4a52-bac6-4845fb7b26f2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a134060c-2389-49d0-bf10-a9e9141bfb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a344c6-6f22-4838-a577-dfd78a8c832d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9841138c-7e99-46da-bc7f-b94bc1c26f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de154d17-3ca2-436b-9a32-6fb2e9c470f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04336aa0-1bf8-4946-acb2-38f3e0a9456d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2b519d-1bcf-406a-b27e-927314a13b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83ef89d-f9bc-45bc-a9f3-e56b09285ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f0d11f-9a82-4a02-9e7c-c0fa85c0e223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451e0384-f57e-4127-b8dc-9d9553ff5e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ce0c21-4058-4a7b-b36c-27643864495e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b69e58-0ee7-4079-9f94-5d9f822a823d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7d83707-e9e5-4cbb-8d44-309f480d107c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34328f90-4063-4d55-9c19-7e0aff3336a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29d3f4c-ba2d-4619-830c-a89957a34845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae3503c-cd9a-4c0d-abe8-4fe7427fe06d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883a615b-7e2c-4016-8c5a-5e197f7122c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ee07ed3-db7b-4323-9098-63b87ab0bdc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d663da18-e936-49ac-a638-10e1181984bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faff5a04-9faf-43ad-9598-83b9c84a16d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1574fc02-1f28-4543-9bfd-43545d55073d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0301fa03-f624-47c2-b1d4-0e4731a199a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f41e15-5eee-464d-beaa-ab38e22db748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacf1919-000f-4055-9bf9-7f9bc256f56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89006ab9-cb91-4bbe-8564-171695e512e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf49c59e-1432-4abb-8d0d-f6990b53c2aa",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc01853-26a3-4d5a-8224-f45b24a7013f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "412a859f-54b9-4a11-be68-f47a2a74ef88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333423eb-ce26-46d0-8668-bbc24f66ea43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e05816-2cfd-46d4-acc6-4f9cbc77aba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7b5fe1-50e6-4682-acc5-b85e807d5cae",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057fccba-9a02-4354-a763-d5b0cf9248e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee6874b-3bb7-4824-a7c9-359d559c472e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd9ea52-74b4-405c-9e56-a95d53e13349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd10122-9416-44ee-a6be-95cac813fc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a949e77-86e0-415c-88ab-7686e9c975f9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a599735a-d734-4fdf-a1d0-dc63e71e3528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f5546c-9d30-42cb-a935-7c1e07fc600f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f6e830-579c-421f-a1e6-114f02e45033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523cfdf2-f18d-4485-b9f0-76e8e5c12803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985c7344-36ba-4f52-bee5-d534291c0305",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173b045d-a3b2-4c74-afd6-89285876f411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa785eb6-e723-4b38-b801-65840918d989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f7dd8d-ecfd-4458-9251-28e5ab2cd2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29162998-7d96-4fa0-9dc2-d44a9fef4b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88bbf62-b68c-44ff-8893-2c1b99811eaa",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7da9531-fed0-404c-baf4-4b9fdd69c5f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0e78cb-2e34-46ed-9e04-ccef3e532222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09e4d63-ed63-40cc-9dea-8fffd2c144fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af15abc-b162-4b1f-96c8-ff31da07a925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d5a44d-5be8-4bc3-83e1-2bc81bd00806",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bbfcca-25c7-412d-a38b-e453ae9c0e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3304e0f5-235b-45cb-8299-0499caeaeb4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cdaef7-7345-430b-9fc0-962a307fff62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3265dcd-8ae5-4f10-a6de-baae304aa549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcd909f-32a3-414b-b234-d1e4df8bf879",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e19f467-7dab-4c7d-8c24-927035c6410f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a9938d-e1e3-42fb-a985-bc0cc681e31f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dc0705-e48c-46c2-a39d-ddf48a1a0190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a411434-5b4a-49fd-b6f2-925c721dfe7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be1c83a-719f-4509-bca5-d2cd31c14a63",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edac273-8cc8-45a1-a3b2-37ff5f32e34d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a77e420-d066-4012-8b27-9d8af2cde0ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca892c60-da96-46a3-a473-fec2a4e4a531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d42d07b-3fb6-4b6e-909e-0a98efd9798e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec311ee7-37ce-484e-bb38-4bb14ea6190a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca23f7fc-5e1b-4e71-a433-eda215a7e83a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0acd50e3-9517-4aac-909a-487ce39b9d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077e046e-be8e-45e3-b41e-b77dc84ac1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2381ccd6-a6f2-48ac-8a61-919f9c2ec24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74758e4-2fbe-4a99-bd9e-ef1f552f4f0b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ff576e-1a7d-4573-a2c4-447a55822e68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "806c851c-cdcf-47f5-bba6-9584a7fecef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8883ad5-73a7-4274-9766-d776d2c7b88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55d34dc-6e67-4052-bf4a-dcc9893cc740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ad3dec-6fce-4c67-b870-5c28962dbe82",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95298ed7-5e93-4d9a-9f8f-c3283492723a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f602a382-d885-4806-8053-3af6bd3adc54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc05dd62-5be9-4717-9d76-66e7f16b9347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82409fd-c38b-426d-9c8a-967341484ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e9b5f6-f27a-4b6c-ae9f-055cb4acddbb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fdd19a-ecfc-4988-a1f8-da0e490ba85e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7044af32-f7e2-4608-947d-7f832e529844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe30791-02f7-4980-b575-8bcd2bdfc435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db16c71-4a86-4280-928e-ba3f1e0c0e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328574ae-5400-4381-a072-85ed03c857b9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc82966-8cff-44f3-9236-a89621fce985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c5ebc8-f9ea-4682-88d4-4ab28f5aab5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa08a5d8-01f5-4218-84ea-136f47dfe185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c697c4b-43d7-45a1-a60e-53b11372b848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e33169-70a6-4993-a766-8ca8eeddd837",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec7937b-7e3a-4d0b-8278-17a4c59cf88d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ecdf849-f11d-496f-a5c3-a4fba885f5fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4e286e-6ed1-487b-8ead-39fb4864558f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39f10db-81eb-4376-8680-6ee5d5c5b3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c71996-e921-4e9c-9f8d-4a0db590e83a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628f0dab-5acc-4f2d-a797-1fb4813e86af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "331edc34-a749-43ce-ba19-00666cc95b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f3c5e1-fe38-4db7-bce8-632990e797a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc9d95a-b8d5-4c8c-bf3c-471956b125fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ff7c1f-da72-47cb-97e3-0dca7fbe1096",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cfbe02-be73-473e-b8dc-8b9f6d0ecabf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73e24812-b68c-49bd-b672-93bbc066bd7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa09727-dd5c-43eb-a81c-a1948e6ffb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43291873-e4ec-4b3e-9ffe-1ecded8598b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6948ac-4d15-4c0e-8296-380d1ad96ee3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c023bb-db16-4009-9ed7-6a76cef826b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cae5e39-2cfa-4028-9368-c2ef4710ec36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "683950b4-d989-45a9-9e42-9a2dab17ca47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d84cbe-8525-4aa5-9537-04c621372890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85974f28-1f96-4838-934c-b3e13f3a12b0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99732de2-0373-4964-818e-69c01b347052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41d1e441-2639-431d-8f4e-bad1f28c91a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c618ca01-0296-464f-a98e-3d8ff1e2444e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b39a4b-ee15-4830-add8-584fe4f49eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d960f65d-60a9-466a-b307-8ca70f49c141",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8907771d-4a32-465e-ad34-3740fb2b961f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a053d66-071e-46d8-a531-e4b0ffa9eac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f8d9f3-e71e-4c80-ab51-c36ffb8a6bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d8b49e-b11c-40d6-91a9-7ee19af109c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16b1300-0c03-4dcd-ba34-01838ae69421",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4117b8d1-af49-4fbc-973b-c29965aa86a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90d35d5-dff9-471c-a906-6b4d30da6206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6db473-e50c-4146-a953-da2d3b400e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19523b4-e019-4434-ad89-4e3a86b30131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8686c8-9947-4b58-a027-cdd105a8ffa3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bdfcaf2-110f-409e-a9d6-2e0472adebdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28d41d6-1776-4df7-867a-1c162b67d7fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b163d4-5829-44a9-9131-b3d1fbfdce06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5392791-e5f7-4769-962f-289a16a3e8e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afaccf3-f23f-443b-a9d0-7aa8ec67a097",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0def5c4e-f6bc-46b1-a73c-84ee36c276ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb06228-9cf0-4ebd-997e-1a8aad47ba57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f069398-452a-4f55-a64e-f6ef0d4378e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9040847-01a6-49d3-b5cd-a3cec6e0d9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203cd4f1-51c1-4ae9-8b60-121e3e450b5d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee7b90b-43ce-4058-8c7c-4357c514e1eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e6b9c9-f765-4d80-9fdc-68517b39c26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5de163a-906a-4886-b9e4-35f81d380fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3f2981-beff-4c38-bf2d-4d136eaf1171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61ec293-1441-41c2-97cb-c46b1bf23f34",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8e05c4-e37e-42e9-9e16-2031cef27aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a55994-c2ff-4abc-834f-cd1a166e5041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a63e0e-d314-4f51-aac9-3ba614030781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea9e8a5-b734-4dcf-bd20-4995505a6f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03be84a-08d1-4f9d-a3ea-1f5a7ac7a09f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a83e526-2bff-4a51-bb8d-a152ad1af270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c05b723-c5e3-4403-a538-ff75d19051a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548d8307-793b-4161-b6af-2292323065cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b9bcb8-9180-4757-9c5c-2a2ee46c358b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02497310-9856-47dd-beac-08ca91f64525",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3424bbb3-4049-43fe-aff3-89f3418d32cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e42679f-d529-4399-a11d-c9ff1d7e15a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e280fe-80e9-4d08-ae2a-01df9ea20af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5aa8933-5b38-46d8-beb4-eff2750ece79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ea664c-9982-4eee-be9c-e664dbaeecf1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e6568b-3d40-4eba-a669-deeae1e847a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251c7d2b-d708-491a-94f7-8ceed143c62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3d11b6-524f-4e29-8937-68051aa7b6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9c78f4-a6e1-4b0e-8aac-cfe5a23287a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fbc485-1788-4039-8020-2023fbbbe4e2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61984525-5207-439b-ab33-3c1d5afd191f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0119f21a-149e-401f-b69b-9ff0185a38bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd33fa60-fe81-49fa-b57d-78e22c4f9cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6adae879-d505-46ce-b2ed-74304319c3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd537784-0af0-452e-a35e-9e9d6cb2d225",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da809955-2825-4cfa-833a-499936625be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6fadc6f-96ba-4e77-be03-4a49569dd8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2424e380-8d86-4b85-882f-06eef6911124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d655710b-4244-4c8d-9b92-49d6b820001e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3215d01-8821-4210-bd12-2f1dc3dfd7db",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992aa61e-5276-477d-8fb3-3da46d609748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616610ae-4891-4c83-b29e-fc9b0be35cd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2232ebfa-d33b-4214-a69b-84089df67ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a285ed4c-f8cc-44ce-b209-909c17830156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65999e6f-ec72-4c7d-bf82-9cc05d9c5cf6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f165d28b-f761-4409-aa14-51c8fb446bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a4f5a7-fbc0-43ed-9068-df514da41ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf9e6e1-3c20-4c94-8e42-a70ca84bc489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1868a62f-fe8b-42d5-aa82-6255ae09d81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8231a1ba-baec-4ca1-ba61-a28656eae3f7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f841eb-8f05-4062-b723-78549e93316c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5092575e-80d1-4e7a-b86d-32789779b62e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4543df-ce34-453b-92ea-22ffc4ab8a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203233e2-c3b1-4465-a449-2a03058a7baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350e6837-05b3-4d8a-b62d-dcff57ca35c5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a264e312-e0c8-4791-a83a-72dde4ad451d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7671f8c2-87e8-4aed-8552-3726bf349bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfd2868-bc69-451a-b7a4-7ad961cc00cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b43df77-8d7b-47b9-80ed-6230f3abe950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83502f2e-2273-4a00-badd-24de8f82fb20",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d05dc81-4ee3-4ab4-8669-72ad968d98b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66319d8f-9236-44ae-819a-1011de3365b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9d0ddf-0e11-4a64-b45e-74f89614fc77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ef65d4-35bf-4e78-b3f0-4fca4673a742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe0e185-990b-4174-8488-8646ebea940a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d33ee2-2e08-4e3c-abe8-c075c5585a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a43da6d-2569-4651-a873-530a21da1a74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0408e3-776f-4c47-b357-ea7b81bbee48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bae4c05-d9fd-4cec-90c1-d58fad3ba6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcd0b98-3dfb-4932-a587-5e22a4f93e13",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fdf592-cd52-474c-93d5-b19b369e1cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19cf7334-2107-4a54-a53e-8031b06c9337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c275fd-2fa1-4b53-8872-ad725ee3e6b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb711a14-bb82-4456-afc4-c9f455ebaaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5327674c-627d-4713-9dd3-e6a30a4c3369",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ef987d-38c2-4748-85c5-49cb3441444a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9faff8b-3ff9-4ac2-8690-350d607fd939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c14758-d192-4ac3-9bbb-f4dcbf8c160c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05ac7668-c1a4-4ddd-ad7c-c747c063febc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7051fe83-87a1-4050-95d2-9c6e815d6614",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963c2e79-2bac-4eaa-b222-b4f371ad90ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525a2209-19e9-40e5-b0b0-632e690c5353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd28a4b3-1082-40cd-bb9a-17ee2a5fe463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b150f303-51e2-49a1-9b72-2437b2291853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbe1484-5a84-4622-8986-3fe9abe774af",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852ab283-73d3-47b1-a4e0-535a94b74368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e026ea8-c417-4a9d-8abf-6d3a3bfc7220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c79f41a-2f49-4653-9063-d8bdaba9b1c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91905fe-a936-4841-8dc8-855a21dfb72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a92ead-76cc-4b5e-9f36-bd679ff60ca9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc72bb00-fcba-4d8b-8c4b-2bb617c797e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976f77d2-1a1a-4b97-b32f-250f7f2897de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79373d1a-2843-4712-8ac1-208b6fb927d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5cf6c0-e6b6-489d-9b37-ccb4614bee7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18dd680b-59a4-49a5-b109-019a5716583f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c002b3-1268-4c01-a10a-206d56b01c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052ed777-841c-4ef7-b73f-de5c2429ac2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a981f182-e2b8-4177-b2e3-ed0803b7a919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eedf6752-efdc-4e48-b7e1-45d014dd1396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251c235a-d14f-41d8-9973-8430026b2e75",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57039ae-ef4f-439d-98be-952ff63b6e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2e51f7-a58f-4923-b03c-dc3fc600783c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a9fa8f-2c88-4f63-ae1a-f9433682bd7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8cd76d-5d08-407f-9884-e0bd8a14392b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2543adb0-9c19-4d1b-bff6-6fb9bed4e5c9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9a1fd3-01bf-4eeb-b2de-566a35c3c9a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293e392c-66f3-448c-b6f6-95142ecdfd62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0deb481a-26f1-40dd-8858-b4f6cd4411a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "863e7897-e641-41cf-8f07-be233f383060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7caf7ea6-cae5-4e3f-9c3f-7551194e20dc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed35dc2-cfd9-4af0-b8fd-e26248aad25b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3734db85-9162-41b0-ac27-95ae7d639eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cf7dc8-1f83-49e7-9b89-828ba54ee8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3198e1a5-dbd8-467d-8eab-4814b53ddf99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c9ec85-2722-4336-813d-92a1844ae734",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fac31f8-0400-4c60-9bb4-a834d9fc7d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b01546-3e8a-403c-b4ee-4d9abbc30af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d0508b-19b3-4e47-8bbc-dee783ba0162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1db6a7b-3b07-44d9-aabe-d3dc51134196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861ceb51-4791-4f13-be94-b2fd05d943e6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f3cfe5-b597-4d85-b317-753d85f03be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94d8341-a767-457a-b407-8db58b6d4cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf858647-5aa4-412e-a636-f5ddd5a826d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8edab7ad-4c34-4f28-b3da-e4b36383394b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c53fffa-ba60-4bfc-9b06-9387dc7e7b5b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f57dc4-4d4f-4d8b-b31e-a82120bbf6da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bda3a0a-1ca2-4b17-bd16-8952b2ab910e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71087588-69a4-4345-8308-d39f1fcdeedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736a72aa-0274-45bc-b3d8-f72d1a6bb402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c875621-d50b-474f-9001-ed105bdfc3fd",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad732d6-62ba-4886-b666-ebe23d5fca94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e095796e-257a-4276-9480-0699315d3c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43256423-974f-4f3e-9f66-5c9bca3f2bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b8ea7a-8d53-4df2-91ac-b4cd39ef5c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59272116-1249-4aaa-80ef-a919b4cd582f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac28881-e25c-41b1-8f90-b4d7162b83c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce45759f-d72a-4a31-a26f-db90346b79db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbbff9a-d035-482a-8a21-4f2367bcddad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676b13ae-4c3c-404d-8838-15c3f0790f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d2fde9-228a-4f85-8647-3637f0ab47aa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8291295-6df8-40df-8a6d-3ca2bca6b624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c6b3be7-7ae2-4d5c-a280-e5c769b44dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466c3f1e-9ec2-429c-ae0c-b2bb6dc8a876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17c015d-08e1-4eff-b778-d06bbb08d8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59aafe71-56b2-45f0-b1a1-aa66f9efbd7b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bb866e-2aa3-4310-9c39-c14e34ab2a82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c770aaa6-31d9-48c4-8c6a-2505c3f3e262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007b4d0b-3517-48e3-8423-0ca0c664fed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84fdcdcf-dd58-438d-9211-0c86a39889d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b061ea13-63ce-4447-8964-f259c3b95e42",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8fc117-23d6-4f85-afdf-93b7804d270a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5966e02-6736-4b47-8a43-f3dd07a80c23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c211659-0c07-4230-9f12-4980cd9ec7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070ee8fb-fe60-4fa8-aa2c-7a3d7d3cd7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f655002a-f5ad-4145-886e-f88377bd91b7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1db967-ea66-4d6c-9f86-b3b64e41f214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c4884e5-90de-482c-b057-306305b29dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8484d12-bda8-494d-8720-4ef1350f1f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572f2803-9a4c-4c6d-9288-e3ac38c99f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa46b79-89eb-4777-a583-3f054acd7348",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28daa116-f431-447c-9265-c218da740161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6528ca01-d490-4ef6-ba97-f09e03b53543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70bfd594-1b82-4302-89c2-8e289e146843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92eb4256-914e-48ec-8f7e-b7d085e53bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7683b8dc-eb97-41b8-ad40-619b34a648f6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ef5c06-2c42-4415-be95-767275c824b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce3436bc-df23-4e17-9270-43b2161e571a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8afdb91-8e1c-40ce-b27d-f0a0cb1c6290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ecc94c-f409-4404-8896-ce156bd36a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb2628f-3932-440e-b9f7-2b58cafbe023",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435d2b1b-ef67-435b-8bc6-8ade0510b6db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6da69f30-95f5-4192-9cdd-e164844bfa81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f771f9d6-c85d-4256-86b6-27a296400fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f76b016-f8b1-45db-b26b-824b19a310ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451534d7-e51c-49c8-806b-2ea6e2beada4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b600c52-9474-44c9-ae39-6244f15eaa89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "754497ef-172b-426d-b3c3-c45270bcddf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81520dcd-e37b-4bda-bf8f-a8c5e3d26661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab4908c-d162-4fc7-8aef-ba5f2ad4f8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f163acfb-cd58-4db4-8d27-76e4d1d7f36d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc05dd58-fb70-4610-84d6-71d9438b268a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad44baf0-1ccd-4c0e-8ec4-bbacda710828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a89e905-6713-4e32-812f-c524d24cc86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1d3748-3bf8-481d-83cc-b6610c9ff442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f425a701-b356-417d-a32f-48881967e489",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7b3dee-5afb-4190-866d-66c0e2682667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ba7e904-b32b-467e-abc4-5068b0af87f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1806d7b-1c20-461a-be70-b2d18f0c3b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d36a028-6c72-4cbd-867a-107ddd5633ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e22074-8bfa-49c5-877c-3019db0a683a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592a4e08-e3d3-4f8c-bfba-da3c41915fd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5733d342-b1d2-446b-8e02-ef5c0fd550e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c731e8-6166-4412-a91e-d98547859cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f633fbeb-9a7a-4f66-9853-834a30ec2944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a31c188-e7ad-4d55-94c7-85eb38ade52f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdfecb8-54a6-481b-a3a0-f652bddd9943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "904b468c-5b27-4436-a71d-2f53cd9409c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3759e940-a9d1-4332-b110-c157f99dac8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2a8baf-f836-4cfa-8297-b6f9035fbd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d37904-ff8a-4adc-a9f4-1c35dd8e1997",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fb9b3f-8d13-4235-9d39-5fa5a4f6de9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e50f0b3-6529-4084-bee7-f77d0f4c72c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e68664b-5fef-4137-8822-38786e37818c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09716da-f9dc-4230-a6c5-1b44c299764f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5d736c-be88-4b54-a717-a39bd8e46dd4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdc73f3-c7d7-4f29-a2aa-cab4f30527bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "474cc51c-fd40-4599-85ba-4983f77cdbc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd560e9-dd9a-4caf-8f37-f976dc87264a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930c30c0-d5da-428f-8e2d-f707fb2ae7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b04846-3c5f-4381-b7de-d43948c17e5c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f51941-1a71-4be4-84d1-a5aafb52e40c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e61e0fcd-8413-4faa-adb9-0e96a9cd6aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "929c5c37-37a0-40fc-acb9-6cfc67efed2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852de327-34b7-4204-961e-db1fad456bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e614cf26-311c-4740-b761-9a33c1207837",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a45597-d1c2-4d72-9970-0a0e404b585a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "074d0541-1d16-4b30-ac48-1164b4d84fd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9766bd23-3c34-4e3f-8b67-d35fb7656b7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abddd8a5-1799-495f-8508-bbe29db46a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d2b1e1-f4da-4e82-9bcc-cd839acb0d1f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4288a11f-f60c-4f2d-9236-ff5f14d4917e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e776e3c5-b9fc-4ee6-88fb-8404d3de84ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3069be0-5e95-4568-8594-2cb1b6980522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1689c1fa-c1f3-4dea-813f-0fa83864763e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a11eb6-f163-4340-95ed-15a95636ecee",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f43795-006d-4390-8f4d-ad0f2b4ebd97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c7589c0-8030-484b-a6bc-00ce196c81c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52cb1c1-3053-4502-bcb3-4722fe904398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba2a3367-1e4d-4d94-a48c-ba16308239e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083e7835-7ddb-434f-98b3-9ca8ceb379fc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b00d97-25d3-4b6d-91ee-c95f0f45a85d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86b5d366-bd97-4611-b489-b539582c6c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0bab93-d461-40a2-b8ae-47ec7ef62015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c61fd5a-0461-403d-8a74-3672540ec683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81706b45-eb13-4d37-a90c-04fab61cc9cc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58766245-c3c6-4c07-ae3d-471a36f21c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d61cbfc-a70d-41d0-9d20-a35728d81613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2b1c99-540a-4744-b70e-28c7e86c5913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4aa5d6b-ae46-46db-b02a-d4998d5135cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef95c72-ad6f-4775-ba41-9bce0d0c1473",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a28ec7-edca-4a51-a03a-83f19272fd63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd3118db-b3a5-49dc-be19-3401c72e8703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d53097-2931-4498-b1c3-2f4ad007d0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df17768e-6743-40fe-a50a-7703c7a81c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d57612-5cf9-40f2-b671-0ede5839ae6d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef161ed3-9674-4757-98a5-722de0fe7b64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9155f930-cb9a-4345-8dad-d9acd4a6b49c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5a9df2-30d4-421c-8b5b-1257812e757a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6654296f-fe77-486f-9060-85fa956325d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12234053-638a-4cb2-97fd-f830c668aeb3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac5676e-86ad-44c2-b0a8-6e5f314bd16a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fd7502f-beef-4429-bc9f-04b1171b983c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f933ea88-5a98-43a3-957d-318b204ddfbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571a4d38-ba9f-4841-936c-17e00ef8b59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2e21b8-2a3d-4f10-9a1f-383701586f57",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c4042b-04ff-408f-88b5-7aaf818d7f54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28632e6d-8742-4e1b-9d2d-2be7525b7385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1a6f24-bd42-4c5d-aadb-0d632dcf4868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1128801-fb1a-44e0-a7c3-beb106a5cd06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5e7687-2de7-4957-bb47-dc1026d34f3d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54f2ed4-8ef8-497c-a857-db3cc100e077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e54039f8-51dc-40fe-b4f6-d1cdddd92e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51ef2b1-3faf-4c1c-9d1b-435031d971fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e91bd0-9597-492c-8231-5dc530576cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3ac496-4541-4cc8-a9ea-ac8b55d670fa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a3ffa3-c7c7-43d6-8989-6c7cbdf56797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d110786-301c-480a-ad1d-79b719604ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fc6000-30d5-4f7e-9400-104225802367",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf837e5-6045-4e87-aa9e-fd3b06d36322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4a1da8-676b-4d4b-951e-4c243485e4b5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4e287b-4404-460c-bdcb-86b71fd9d52e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cc77f9a-c57e-4e95-873d-b919cb06c19e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5f3c5e-ae30-40bc-a51a-024588577304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70bded9-1746-40c5-89b6-ac63164f3240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49284af5-ff4a-4d1c-8f48-eac73abe297e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2afd8ba-a253-4e7f-96ff-9688d37abe34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e4ddf69-55fd-4020-b986-3a622297124e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fcba3e-1477-4e2f-b5fb-911fea61654f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1be6ca-02f8-49b1-b100-82c961a94196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac00467-54d5-4150-9df4-91b0835f398b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0431e556-6a25-4fb5-a1f7-036eaadf26b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a2a9b29-fda6-488f-a20c-db8fc29ca254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "184c6a93-303c-45c4-b68d-ce5ea2482509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbda2a0e-d7fc-4c3c-8a80-78b2ef361e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68a9087-ee6d-44c6-ba50-0433eba43586",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f637fd5e-549f-4eb6-bc0d-3c5f64c2f503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "490d0840-cfb0-4232-9d86-efc6956b9d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "224d3415-2734-43fe-ad7d-54a88e6e0096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b38a4d4-4ca4-4c6f-8484-a59e768f83a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb80dccd-51a6-411e-b916-02add285e88a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5250f9a3-576e-4566-a0af-5d917796f2f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a273ecb0-60b6-454b-98c4-a50d61572c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c06174-3633-4900-920f-7dcba2b9cc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668b4499-6b98-46ec-ac01-c3ff5518845c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046f973e-145a-4480-b33d-0f2d23b26f40",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee6b88f-816a-4a57-99c5-ee09a39fba57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ebf69d0-c534-492f-be57-28abfffb6bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575a857b-6f1d-4c79-a2a6-77e3e5589ee9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc819a3-3bd7-4426-8205-953c7b17b14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea8d3ea-1aca-4f36-9696-d1b6e871697c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca75b6d-99be-40b5-9770-e20b76b27d6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d66b3892-f579-4bcf-a71c-452ee3562c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf8e215-7e01-4cdc-ae5b-0347d0311c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921e7b05-71fa-4238-b725-b3b4d4457cc3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3da87da-bb1d-4838-bad2-0f75a8bfb002",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52288ba2-f4f9-464a-bdb0-52e101533a98"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e2a09ce-61db-4373-9937-9b998c6a31f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5187f333-f4d9-46e8-a3c8-4f54e0c2fcde"
                    }
                  }
                ]
              },
              {
                "id": "5f493635-8584-4548-9e03-b4fa96b0c216",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63d26488-4e25-4988-bbd1-8860ae45afd9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a4bedb-ecf9-4986-9b19-04b4e2bee631",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5dfd1a26-3526-402a-b750-974d9507b65f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec62c393-fd81-4b30-a575-1d44f8473a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e47e10b-09c3-425f-9f4c-ae9d9f46007b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "530031bd-4c88-4108-86d4-9b6219fb7773",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba92d173-cb8f-444b-a45a-069fa32752fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6999db51-9b0e-44f7-b368-d6fbe9d9e643",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3aa232a4-dbcf-4c56-a471-aacd1df07df7"
                    }
                  }
                ]
              },
              {
                "id": "0817dbe9-f98b-491c-883f-165a27f868ca",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cb905e0c-2502-4f30-b737-fd2e950ab352",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d77c09-60e8-4e1e-aa64-e96b62bc96fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9769258c-39b8-4398-ba89-3274bbe02029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f225c9-a0f1-4616-83f8-51084a0f00c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3fda697-d715-48e8-b4f9-f74cb894abc6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3ae4ac4a-c27a-4d30-9aa4-30ef09db8deb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d839ec2f-9adb-44f4-a066-7c818384cc82",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37487c3d-f89d-454d-a9fd-dc2e9be64f9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0cadedad-4ef2-4e13-84aa-ee3e90c68c29"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "745da9b5-1c7a-42c2-b7a9-9225256a53f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c7481c1-5219-4435-a731-c78d1917a8da"
                    }
                  }
                ]
              },
              {
                "id": "4153ef34-248e-456a-8f2c-81720ddec8e2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb895409-9481-429c-a534-bff77f93f1ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d2359fe5-1283-4490-a122-87f713ccf76a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "244508db-2a03-4142-8e90-86ebdc57dc89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea451eba-9764-4739-94ed-594ae0f1c237"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "111b4a4b-1e62-47bc-b2a6-3fbd81b45f69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1e994352-e7ab-404b-855c-491e34964197"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38a67cd3-2a2e-45ab-927d-5c2892039f79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "992577bd-e8c2-4973-badd-f586d75c8a27"
            }
          }
        ]
      },
      {
        "id": "d291762b-a908-4196-b3d6-c63eb70da8c5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4174e557-b83f-4408-b4bb-493d71f97ecc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb17d270-3439-4313-83fd-4dafc9701ad9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0816a385-be42-486c-a9a6-973e897fce98",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae68d119-20ad-4339-a110-6857094b726e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "23b3cf2a-0e91-489a-a77f-db23f8c72b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dbdfdd-57d0-4436-859e-6a4e0debf010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04c33448-97fe-4b04-a009-2aec43fff1f8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "047b93a6-910c-4cdd-a20f-5a1c7e2a0ba4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "921e65dd-c6c5-4134-bb55-bdfc8bf0e66e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fb55d21-132c-4686-ba89-f2988b58cd43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a04f1c65-79b5-4b9b-a138-a3b2eaf12621"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b47aa07-c68f-436a-8927-65a21183a30b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dc124265-2ec7-4d23-824d-d37b88a007c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08b957ff-31bb-4397-8239-911a11f92de9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c76c8cb-9ba8-4e1a-80f7-a5ca60502863"
            }
          }
        ]
      },
      {
        "id": "332cb397-9e10-4bf2-9fa7-6ffd39e43e18",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c340ef3b-aa63-4609-a6db-f4b998f1136e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97528f24-a1d6-4a3e-9f61-1e5efa57d860",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56a9879a-52ad-4d9f-ac6a-344e3649250f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc08486-eada-4c87-b14e-b2ffd414ef97",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c02ce2a4-f5fa-4529-b4b2-e7edd5814426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "665c890c-dec4-4428-bb3e-103c166dcdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35697966-36a8-4a40-84cf-c88c4872f620"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ad77063-adc7-4cd7-b269-689d603dc77d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c92fc503-4777-49cc-893e-3eab6deabbf2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08a8add3-c525-4837-bad6-e8342c8127a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1046cd5f-4efc-46db-b092-fdc4944ad626"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "613d03bc-57ae-4764-aee6-38eb175bc075",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "50aa09db-5450-40e7-be76-7077107f80d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35b47612-c700-4901-808a-985c74e9238c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "baa89a1f-acc7-4a51-bc2a-cafaf01a503c"
            }
          }
        ]
      },
      {
        "id": "2d7f9075-ef8b-4537-a4c4-d41a3a716050",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "36c145b4-3b19-4633-ba9e-21933fc0451e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d1ae2ad-ca8f-441a-a704-3d27a9a96102",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62f6120e-f636-484f-a561-2832ea3a0143",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ef09df-eac8-4c64-b38e-1c685f35c417",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e579fa53-9ba6-4bce-a570-07e2e5c558b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85bd9a1-4a68-4a91-a4f8-562c856612ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e7e6597-c9ca-4761-9e35-7d4ced71124c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "500bab30-0dd4-49f3-b664-a77184936230",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45fb93a6-c884-4c0a-85af-26bb823301f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbef3856-ed57-4417-ac91-8799a7d2bf8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae960436-616c-44dd-ba24-b43066ec22f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "827675b4-4efb-4c6f-8e78-15c74bac354f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f3feb97-4636-4ab0-ab7a-b2aef8bac7eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2187ec0b-c9ee-4318-9403-ae04f8203e9b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db717ffc-8110-4cec-a3ae-fa7c137c8362"
            }
          }
        ]
      },
      {
        "id": "2eb9e59a-f083-4bd1-be52-e09f27f2a580",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8e33861-ed30-4bbb-96e3-3610e5a516a9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6412886e-de52-4811-b8e2-156188d5f5bb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ba1fc603-1942-4833-a599-c1937f3b580c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10b480de-b663-48fc-83df-a638707856a6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c98db002-987f-4e78-ba7d-d3440cfd0019",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 14.183098591549298,
      "responseMin": 7,
      "responseMax": 446,
      "responseSd": 27.819240407991025,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693355548678,
      "completed": 1693355564332
    },
    "executions": [
      {
        "id": "55a8e3f9-39bf-4ae6-bdc7-0aec3812a58c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b552ede1-674f-4283-a7a5-f63f29578576",
          "httpRequestId": "7dc0d08d-8f94-48a7-b11b-f7f80b2bb090"
        },
        "item": {
          "id": "55a8e3f9-39bf-4ae6-bdc7-0aec3812a58c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "01b8f134-1474-49bb-a073-06eec958748a",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "fef8c056-d08e-45f0-a05c-3cab22804a49",
        "cursor": {
          "ref": "f9f324fd-c053-4da8-8be9-f466475234f2",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9d2f159f-aeb2-42c7-bf61-8a0fd7bcf791"
        },
        "item": {
          "id": "fef8c056-d08e-45f0-a05c-3cab22804a49",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c53aa2ac-b199-4dd9-8a8c-9a47dc88196a",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "d7379ebd-a6d6-414c-a22c-af9fb00c1e33",
        "cursor": {
          "ref": "85c99504-441f-4033-b94f-c95108cc054c",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0c0f556f-4c26-41aa-af05-2b304730bcbf"
        },
        "item": {
          "id": "d7379ebd-a6d6-414c-a22c-af9fb00c1e33",
          "name": "did_json"
        },
        "response": {
          "id": "5b5f2442-e0d8-437d-8bba-57b57a5770ee",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84012fe-442f-443d-bec3-ed993f53de57",
        "cursor": {
          "ref": "4b02246e-3f2b-4e7b-a45f-485dc3e40617",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e592068b-b726-4f23-bb76-cf024e1e85fc"
        },
        "item": {
          "id": "f84012fe-442f-443d-bec3-ed993f53de57",
          "name": "did:invalid"
        },
        "response": {
          "id": "76a1764a-bcfd-428c-8dfd-acf8351bc870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84012fe-442f-443d-bec3-ed993f53de57",
        "cursor": {
          "ref": "4b02246e-3f2b-4e7b-a45f-485dc3e40617",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e592068b-b726-4f23-bb76-cf024e1e85fc"
        },
        "item": {
          "id": "f84012fe-442f-443d-bec3-ed993f53de57",
          "name": "did:invalid"
        },
        "response": {
          "id": "76a1764a-bcfd-428c-8dfd-acf8351bc870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d887a45b-ed63-40c4-93ce-b037738730dc",
        "cursor": {
          "ref": "3e04de76-5c4e-45c0-9c7f-8bd7aaf0d0bf",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f453cdd7-b536-4372-87c9-9eb32889fdba"
        },
        "item": {
          "id": "d887a45b-ed63-40c4-93ce-b037738730dc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "85133ffc-1e84-4e30-a42f-aa0d3cb2e66d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f837d135-62a0-49a0-985a-a6937aca1845",
        "cursor": {
          "ref": "f96fb8ea-844a-4fa4-bcc4-cf1f02e5a53e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b83c7d57-cf8a-4049-b5b2-8b047a3919af"
        },
        "item": {
          "id": "f837d135-62a0-49a0-985a-a6937aca1845",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0b189886-485d-43f1-8f2a-94c2e2d2d0ae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81200810-cefe-4f71-985e-c6409759c94a",
        "cursor": {
          "ref": "f8902c4e-93bc-4c35-bd84-6bf7b3e14f7a",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ecbe8f6f-8034-4cfe-bf5e-1b7936c70265"
        },
        "item": {
          "id": "81200810-cefe-4f71-985e-c6409759c94a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "05aed5d0-ab40-4215-b597-68c03195df5e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434e611b-d02a-493d-b231-a16e4293d548",
        "cursor": {
          "ref": "f0a1816b-36cc-4d92-b002-7c323ba8cc89",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "05bcabbe-79c1-4878-a0e0-ba461a764712"
        },
        "item": {
          "id": "434e611b-d02a-493d-b231-a16e4293d548",
          "name": "identifiers"
        },
        "response": {
          "id": "b3a4cf47-9997-400d-968d-fa4245578fe0",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463c0fc4-8699-41a5-b754-2207237ee4d9",
        "cursor": {
          "ref": "d8f41735-76c9-4979-b77e-a203aedc2f01",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cd6d04c0-36f3-4289-9b1e-93037bb22f92"
        },
        "item": {
          "id": "463c0fc4-8699-41a5-b754-2207237ee4d9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "43a9d621-11f9-49d2-a7c3-0bea8594c0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c15446d-942a-456f-a838-a613332ca2ae",
        "cursor": {
          "ref": "23bc3e1a-1a6d-4c2f-986e-5ca2251acc3f",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2a26e6dd-9be4-4f22-a812-2c3db8e96b3f"
        },
        "item": {
          "id": "9c15446d-942a-456f-a838-a613332ca2ae",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "012c25cd-2038-4b73-992b-e7f44fc96a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172d6e82-e75a-4686-97ad-8eb2b5328766",
        "cursor": {
          "ref": "d158f632-e823-4a3c-bf3d-44cb123f2b94",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2503d956-2fb5-4814-a33a-d4c35b9c8359"
        },
        "item": {
          "id": "172d6e82-e75a-4686-97ad-8eb2b5328766",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dd1d3cb5-e493-4043-b122-69962214fa2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc687630-43fa-4642-93fe-8cd3a7789baa",
        "cursor": {
          "ref": "f68cc2c3-31cb-49ab-a5ac-67f4203ae7aa",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4e733b67-7c69-4a1e-a76c-bae97b52f1d9"
        },
        "item": {
          "id": "cc687630-43fa-4642-93fe-8cd3a7789baa",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "99b65d96-493a-4a01-8466-e96f8312b358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccccd8b-7ce6-443e-b6ef-293fba4adfaa",
        "cursor": {
          "ref": "35745fb5-6cc5-4374-bad3-e119b0b9ee59",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b4c671e1-5e79-4fdd-8075-5e8c87f90915"
        },
        "item": {
          "id": "eccccd8b-7ce6-443e-b6ef-293fba4adfaa",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d603f787-e46e-4686-a2fb-25349e8a257f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcc76bc-1a9f-4e27-af2d-cabbbe2b6fa0",
        "cursor": {
          "ref": "d82bd7cd-0f19-45d7-8f0d-4bd06cbba639",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d592d556-ca47-42e4-8a72-878560642c6a"
        },
        "item": {
          "id": "7fcc76bc-1a9f-4e27-af2d-cabbbe2b6fa0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0330bc79-501a-426d-b6b5-8f1ca29334f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c61f98-4190-4457-87fc-3c0cf7b39196",
        "cursor": {
          "ref": "e68bc1d4-d7ca-4497-8d10-dbb737794fd7",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f8ca27b8-c5c0-4965-8b64-9d78c85ce5bf"
        },
        "item": {
          "id": "a5c61f98-4190-4457-87fc-3c0cf7b39196",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "375a62f2-8f79-42c6-8fb9-b652e0dcfac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c341218-d1e7-4191-92a9-f4a63625331a",
        "cursor": {
          "ref": "c97b8c0e-edb9-4a5e-9722-9f30dc92e557",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b03bf5fc-0055-4894-ae4b-1c89eb9dafd5"
        },
        "item": {
          "id": "2c341218-d1e7-4191-92a9-f4a63625331a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b4796ace-838c-47f5-8ac9-fea4974a792b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52d68ec-c3eb-4133-a394-e8dcdd119fb4",
        "cursor": {
          "ref": "b6a576af-e424-4496-8024-824f534bbdf6",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cc124efb-e45b-4636-b2fd-e53004316a49"
        },
        "item": {
          "id": "e52d68ec-c3eb-4133-a394-e8dcdd119fb4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9ac91da3-9346-4a52-9e01-e053f63ef524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9b0324-f646-4593-a460-5e67783043a7",
        "cursor": {
          "ref": "f186d140-d8f4-4f90-9ad5-fb9748b8e09e",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "64f6ac2a-8299-4c0d-8c65-6173a357c015"
        },
        "item": {
          "id": "9a9b0324-f646-4593-a460-5e67783043a7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "02b30f46-1352-4ea0-9e80-3055ede8b6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9b92cf-553c-475f-ad84-e9afdfd87b52",
        "cursor": {
          "ref": "02172093-1311-496e-a046-77399aa09c87",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5534d11e-96c6-4b40-bcd6-a30ffd412f0b"
        },
        "item": {
          "id": "5b9b92cf-553c-475f-ad84-e9afdfd87b52",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c5b430bd-3fef-40e1-93e0-de171921ec57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618f5e30-7823-4c6b-8d13-fb12de1de0a2",
        "cursor": {
          "ref": "71ec90e2-3637-4726-abc1-d4f137b45dc6",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "171500ed-8888-4fdf-a407-c84326dff8c5"
        },
        "item": {
          "id": "618f5e30-7823-4c6b-8d13-fb12de1de0a2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9ef671f4-112e-4ba8-a09d-a57afee12b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5f9f8a-f1a0-41cc-b857-c257ac556f34",
        "cursor": {
          "ref": "a86b1636-f446-44b5-93eb-ffea6f91a761",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "67f65c16-d3ff-4d57-85aa-d7abfd8e3c2e"
        },
        "item": {
          "id": "1e5f9f8a-f1a0-41cc-b857-c257ac556f34",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9ad70479-9d55-492b-892c-95ce456682d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f434e6-31f6-4b9c-9f92-1e2c8195fcd6",
        "cursor": {
          "ref": "7f2c8eda-796a-49f1-bed7-39068c46b1a6",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c5691fd1-2cc3-48ec-b3cc-0ab201398ea9"
        },
        "item": {
          "id": "42f434e6-31f6-4b9c-9f92-1e2c8195fcd6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2cab33dd-8ee5-478c-8491-a7d397b1683c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fd69ab-09cf-4a19-a44b-a68a0ca31fc2",
        "cursor": {
          "ref": "3abf7cd5-f2d3-4047-b45c-1a891bbc70fb",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1ea2705d-681f-4c5f-affe-bb83ee438225"
        },
        "item": {
          "id": "f5fd69ab-09cf-4a19-a44b-a68a0ca31fc2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "55abba16-e59f-425a-b7a5-93e175999e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008f8fa5-181c-41a0-b20d-5557360b9fef",
        "cursor": {
          "ref": "f70eef09-4f22-4643-bad8-068d2437ea42",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "29410d37-30d9-49bf-9bfe-cb1a793ffe61"
        },
        "item": {
          "id": "008f8fa5-181c-41a0-b20d-5557360b9fef",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4ecfe110-a8ad-499f-8611-c8fcae97cfb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ed035d-09c1-44da-b32c-532c30bdf459",
        "cursor": {
          "ref": "e70c9dac-06b3-4c1e-bd78-e8b88eefa99a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d9c41639-51d7-47a1-b12a-01e93528922d"
        },
        "item": {
          "id": "85ed035d-09c1-44da-b32c-532c30bdf459",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "737f545c-12d0-4f25-b204-85b955a4587a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8ee707-0bd6-4ed2-8ad7-25885e3dafce",
        "cursor": {
          "ref": "8c017c18-ff39-4a4d-a345-5db46595c347",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "260b8614-345b-4239-94f2-d88f81246610"
        },
        "item": {
          "id": "ac8ee707-0bd6-4ed2-8ad7-25885e3dafce",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ee76ecdf-9783-41e2-b093-6300a3cbab63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7834adf0-cf88-46e3-8315-0af9a5e8a63a",
        "cursor": {
          "ref": "aa115969-7eaa-44fd-961f-35539fcbc12e",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ae70b67f-492a-485e-87fc-380da8c0860e"
        },
        "item": {
          "id": "7834adf0-cf88-46e3-8315-0af9a5e8a63a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6ce7d7e9-4c59-4c35-a928-13a5aec47db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06561eb-0831-4a04-91fb-abce45bd1242",
        "cursor": {
          "ref": "b5d1a840-a2cf-48bb-9ff9-58533b620887",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e2bc62fd-df7b-49bf-88f0-888611650961"
        },
        "item": {
          "id": "f06561eb-0831-4a04-91fb-abce45bd1242",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9407a663-a0a6-4b8f-8665-6a456daef219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faef924b-3d69-445e-94c8-fca38889a3d9",
        "cursor": {
          "ref": "5ac4d505-1e45-4d3c-b9c5-b7226b6d95dc",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d78672d7-c449-4ee8-9a5a-49d6615a0048"
        },
        "item": {
          "id": "faef924b-3d69-445e-94c8-fca38889a3d9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6b725279-2796-4970-9ca0-26c88ed9e004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4252a84-59d4-4db0-99a5-bdd14f19c177",
        "cursor": {
          "ref": "f8a59da5-801a-4b7d-a050-b6ce987e9aca",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2ec69fbc-cc67-4080-8289-7c7b362a9590"
        },
        "item": {
          "id": "d4252a84-59d4-4db0-99a5-bdd14f19c177",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "48ae2972-ad2a-4e77-91a5-03dda9546d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8331fbbf-d482-4a0c-8909-474921d871bd",
        "cursor": {
          "ref": "42d5edac-8183-4d60-b853-03e39760e4fe",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9a31bd19-4a7b-4a4f-b4ac-8a1702305044"
        },
        "item": {
          "id": "8331fbbf-d482-4a0c-8909-474921d871bd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2b181a1f-45e0-4cf7-895e-75b1477a58f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4dbc02-49ad-4223-bece-ac644e489c73",
        "cursor": {
          "ref": "dd0d6c83-0210-4a27-a54b-d2b40f14e891",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e464cbea-ef79-470e-825c-6d494459e4df"
        },
        "item": {
          "id": "cc4dbc02-49ad-4223-bece-ac644e489c73",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "331fe4b9-60a3-4b8f-8c5a-c54012f39529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273975fa-7532-42f4-acdd-424f848e344a",
        "cursor": {
          "ref": "12f92029-846e-4ca8-b288-cf199fe9ff68",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "76ae3ac5-7940-4937-aaa6-730c9663e7b7"
        },
        "item": {
          "id": "273975fa-7532-42f4-acdd-424f848e344a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "40e821d1-3a83-41b4-95c0-587143c0940e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6009fbab-be09-402c-8c5c-06e998bc56c7",
        "cursor": {
          "ref": "f0bc55f7-2335-4b85-92b9-46a8328160c6",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "90582f06-c029-4de1-bc48-e6b5f24a918c"
        },
        "item": {
          "id": "6009fbab-be09-402c-8c5c-06e998bc56c7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3ed95497-9af3-4f42-8eae-8a081808f95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3b9639-a2d7-4d5c-9d23-7e3fd4a77d02",
        "cursor": {
          "ref": "acfd0a76-3cd5-4fd6-9609-f7c7a18a3529",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3a708cbd-f41b-490e-8328-d37a0b730f72"
        },
        "item": {
          "id": "7a3b9639-a2d7-4d5c-9d23-7e3fd4a77d02",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ba1937f2-debd-4cdc-b0d3-815709028b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0343dde6-34f7-45c8-8c0b-6521efa5e7c0",
        "cursor": {
          "ref": "a6d0847a-1b56-4e7f-92e2-2e4e2f51d4dd",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cc45d135-c73c-4518-901c-44c3a39fae16"
        },
        "item": {
          "id": "0343dde6-34f7-45c8-8c0b-6521efa5e7c0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8bbcb866-e00d-4416-b4de-a9975308b61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80869d5e-ae8f-4bca-bfa2-0a5c943b0174",
        "cursor": {
          "ref": "9bd1b489-dee3-4c2e-9c8e-5ea0ea90db28",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "eab56dfb-3996-41d3-abf3-1e0f6f552478"
        },
        "item": {
          "id": "80869d5e-ae8f-4bca-bfa2-0a5c943b0174",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "43fd8503-cfb4-47f3-be46-99942e55241b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6806d5a4-ccfa-4d9f-906b-c0832ce7ef44",
        "cursor": {
          "ref": "30c459cb-991a-45dc-95e4-83dafcbbb369",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2be2de35-8f59-49f3-be85-a8c779c2aa23"
        },
        "item": {
          "id": "6806d5a4-ccfa-4d9f-906b-c0832ce7ef44",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "786c6fdd-e475-429c-a25d-510c56064d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f867226d-b49c-4849-ac72-62053203bb5c",
        "cursor": {
          "ref": "9123cb9d-e72e-4016-968a-3ac19bf1bc28",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "49abc7c5-fafa-4227-a479-ab4d006c3cd2"
        },
        "item": {
          "id": "f867226d-b49c-4849-ac72-62053203bb5c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d5ac13ff-9177-4eb6-9f34-3821ab23f4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c7775c-d4e9-42cf-9298-11a7163478c6",
        "cursor": {
          "ref": "863c673b-78a9-4b89-8ec3-b88337eef109",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "10631c97-18a7-4c90-bfb4-750ab43ac4d8"
        },
        "item": {
          "id": "02c7775c-d4e9-42cf-9298-11a7163478c6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "45828ecd-2cc4-4518-9109-d10e55728fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e966f1bd-c3ac-43bc-a787-9e0fca643c2e",
        "cursor": {
          "ref": "44494dc6-807a-4159-acd2-21865d0618eb",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "99250ca2-7991-4276-b7a8-2b6f07f8ee73"
        },
        "item": {
          "id": "e966f1bd-c3ac-43bc-a787-9e0fca643c2e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e00d3652-e345-4d7c-8b3b-b79d5785a08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8de20dc-c4c9-455b-9169-92f0432b04b1",
        "cursor": {
          "ref": "bb508e68-97f0-404b-a61b-c5f738e3f71b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6640efe5-da89-4ecf-a990-f967dec4a56b"
        },
        "item": {
          "id": "b8de20dc-c4c9-455b-9169-92f0432b04b1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "95547c4d-a84b-4068-82d3-4981507e5327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa75c51-f191-4506-ba2c-39c8e46ccc32",
        "cursor": {
          "ref": "bed966a4-877b-4cc4-b86b-139755950385",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e7d36093-f76e-4c39-8268-72fe1022e4f4"
        },
        "item": {
          "id": "6aa75c51-f191-4506-ba2c-39c8e46ccc32",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a6f9a302-9267-445e-bea5-d82501c3dba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac16d15a-c155-4768-8633-5dfe3df62aaf",
        "cursor": {
          "ref": "dd6c294b-dd65-435e-ae80-3c755637598b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "74e5ba93-2e72-4778-b02b-3475ea345ccf"
        },
        "item": {
          "id": "ac16d15a-c155-4768-8633-5dfe3df62aaf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "64178045-5631-4fa6-9e4f-b1d95ad90614",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0dcea1d-2d42-4fe6-9d0c-d1c11a788347",
        "cursor": {
          "ref": "66b977ee-642e-4670-89ec-8df6b86de780",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d7cf56b9-22cd-4113-88f4-5187c820cc9a"
        },
        "item": {
          "id": "b0dcea1d-2d42-4fe6-9d0c-d1c11a788347",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "36df5e76-b18e-4d01-8ca8-74cbb895f66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2db99e-e238-470a-9a1e-086de20b8891",
        "cursor": {
          "ref": "2f1e111f-7ce6-4320-827d-8672d12a34b8",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "025e1d4b-89d3-4e30-9705-70df865ead10"
        },
        "item": {
          "id": "2e2db99e-e238-470a-9a1e-086de20b8891",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9f2bc9f5-6a25-4b92-9880-7657fcf6277e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a49879-efd9-4f85-bc0c-0031cf3c41cf",
        "cursor": {
          "ref": "721e5c4c-7117-4e38-b01e-6ac47348a5c1",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "989d3661-9209-43e6-88f3-e7d4f4e1a9f6"
        },
        "item": {
          "id": "37a49879-efd9-4f85-bc0c-0031cf3c41cf",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "719dd21f-efee-4b2b-bffa-2d4c55f10aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05416e3-7978-4550-8884-83d7cf91adf2",
        "cursor": {
          "ref": "0ae99610-7ca5-42da-b095-7497d751f1eb",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "62455166-4037-4c3f-bb09-2776539e61b5"
        },
        "item": {
          "id": "c05416e3-7978-4550-8884-83d7cf91adf2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d92c51ff-a2d3-4031-99fc-698c44e7375d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e596cac-1cd8-413f-8ad1-d961706df39c",
        "cursor": {
          "ref": "dba13152-3ddc-49a1-843c-feb28b09afca",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c638d3ba-c38c-400c-ba3a-5476ad250c78"
        },
        "item": {
          "id": "0e596cac-1cd8-413f-8ad1-d961706df39c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "18c4bd45-ed50-43d2-a12e-b7fe8015e13e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edd86a5-2040-4bee-97bb-09ff22bd4378",
        "cursor": {
          "ref": "ee1a2253-daec-46e8-a71f-8e49bb8758e0",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8ef92952-34b3-4cef-8743-bb010c9b635c"
        },
        "item": {
          "id": "6edd86a5-2040-4bee-97bb-09ff22bd4378",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e4b0db68-0878-4388-8290-28d88f3517e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ac6587-bb85-490d-9631-392933c4c2f7",
        "cursor": {
          "ref": "520bda3d-38d2-4052-843c-146415df57da",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a1592488-8623-4e5c-a1c6-8ae2ba1fadc0"
        },
        "item": {
          "id": "07ac6587-bb85-490d-9631-392933c4c2f7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0b3fbec9-e7b7-4297-9941-6091068a093a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 25,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62f4948-4910-4a07-a8f5-c2b2d1907fc9",
        "cursor": {
          "ref": "75821313-5519-4c1d-b25b-f621fd7907a3",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c20e9d2b-0a8f-4fde-a442-a8909265af81"
        },
        "item": {
          "id": "d62f4948-4910-4a07-a8f5-c2b2d1907fc9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "32d128fd-ccc2-426d-8e34-68823372dd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3eb0156-09d0-4fbf-9a44-79503009f5aa",
        "cursor": {
          "ref": "ff947937-f0ef-4f5c-ab59-a95cf0614a21",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b6b2216e-0812-4e26-95dc-e46ed04bc3b5"
        },
        "item": {
          "id": "a3eb0156-09d0-4fbf-9a44-79503009f5aa",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "35d48365-c722-4f76-b2f9-3d79b40bd4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400b8a83-7320-413d-9f5e-4d841fa0fc12",
        "cursor": {
          "ref": "cc5c7a95-8edc-4ab7-b7d9-e8a76aacf157",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3d70aa61-3b69-49cc-a8f5-d3769e3f51ff"
        },
        "item": {
          "id": "400b8a83-7320-413d-9f5e-4d841fa0fc12",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "418cc90b-a9e1-4167-a879-a7870ec5bde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5259c5-58b5-4f41-aeeb-122e9ab063f6",
        "cursor": {
          "ref": "51fc10a6-ec78-4b25-a95e-b671a2353aba",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b9f79a75-e845-402f-a27f-f3ca33ad4b37"
        },
        "item": {
          "id": "3a5259c5-58b5-4f41-aeeb-122e9ab063f6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3a58d0ca-b4c8-49eb-b32d-f3f2e08c057d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8204fed3-fd47-414c-babc-1c2e39bc62ad",
        "cursor": {
          "ref": "f3f552b7-293f-4756-93da-ff76588e96a0",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "191a0c7f-6249-44d5-95b2-300769f948ad"
        },
        "item": {
          "id": "8204fed3-fd47-414c-babc-1c2e39bc62ad",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9c20c928-6c4e-4be4-a897-e30f17f07877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd70427-7b93-4493-8962-b1732dde3930",
        "cursor": {
          "ref": "74c4fe6e-5483-4671-8402-589fe3129e46",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cb0b78bc-60e9-4eb2-85bb-885e9cdae5f7"
        },
        "item": {
          "id": "5dd70427-7b93-4493-8962-b1732dde3930",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ed213536-6e10-4f1b-a631-1c4a38d7d653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51866442-b69b-475b-b0ba-6e6d82b5cc57",
        "cursor": {
          "ref": "f24a2520-2894-443f-a513-c6d1ccda374f",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9aa3730a-1067-49a9-81aa-3767848dbeaf"
        },
        "item": {
          "id": "51866442-b69b-475b-b0ba-6e6d82b5cc57",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "36fe7a57-1984-4f35-b665-35b6e1ff28b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fce0e8e-a91e-4d31-b67e-1250a6a32d6e",
        "cursor": {
          "ref": "5cab7684-be9b-4e2c-9e54-7b44e7fa5079",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "92a7ec38-b48e-466f-9bc5-a967af8c6020"
        },
        "item": {
          "id": "9fce0e8e-a91e-4d31-b67e-1250a6a32d6e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bf2424b1-4dcd-42a1-bf1b-b890764e7543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49708603-a560-452e-bfbf-9b775f5fe228",
        "cursor": {
          "ref": "bd895f8d-cf22-4bfd-b6ef-0fa38308c17d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "82360192-6b7c-4260-8884-96d09b46233f"
        },
        "item": {
          "id": "49708603-a560-452e-bfbf-9b775f5fe228",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "66e15e3b-3e5c-4937-a1b0-cdb3f100cca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937489e9-0ee5-4bb4-ade1-2ef84d9e459a",
        "cursor": {
          "ref": "2e54c011-1e8c-4adc-bcfd-0178fb201194",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "976f0518-55ae-4f68-bf51-94f065184555"
        },
        "item": {
          "id": "937489e9-0ee5-4bb4-ade1-2ef84d9e459a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "451d931c-d00d-4f6e-aa9a-4c766b1e3555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e2a3de-0164-4115-b938-e22a7dfbf5f7",
        "cursor": {
          "ref": "3c132d5d-f5ae-467b-a102-668b18370cdf",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ecfcdc0d-6664-4b6e-9f88-2b4403c99b85"
        },
        "item": {
          "id": "12e2a3de-0164-4115-b938-e22a7dfbf5f7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4bd3083e-65be-4c93-8f0b-a093cec9c9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe1608e-c407-4485-9f46-e07e383156a2",
        "cursor": {
          "ref": "7aa27758-3072-4a0a-adec-b434814e9bab",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e71f8204-773c-4773-a28f-fa558010fa73"
        },
        "item": {
          "id": "dfe1608e-c407-4485-9f46-e07e383156a2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8f361698-549d-4476-b297-0b5211690c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ee5f20-b6e7-491e-9439-8749072c00b9",
        "cursor": {
          "ref": "ba50dbd9-0953-46fb-9971-6fc6eb79e9b9",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "36d55bc2-dac8-47d4-8c21-91089e7931c8"
        },
        "item": {
          "id": "c1ee5f20-b6e7-491e-9439-8749072c00b9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0c2fe01c-025e-4185-a30b-959e1fa9f7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c6c208-4b74-4f2b-af54-9cc8114d6ad4",
        "cursor": {
          "ref": "52c9271b-613a-40e2-9dcc-8e31cc2dd2be",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "860e6f86-811f-47a7-b973-de07da5b4cb8"
        },
        "item": {
          "id": "69c6c208-4b74-4f2b-af54-9cc8114d6ad4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ce2b5910-bb4b-4710-805b-04aea7173a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d63523f-384f-4d0d-9c86-a64ac148d8fd",
        "cursor": {
          "ref": "6b97a798-0b21-4d74-9856-59c0a9d89aa2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8ff36274-51b3-416a-b138-ac4c2c727b4e"
        },
        "item": {
          "id": "1d63523f-384f-4d0d-9c86-a64ac148d8fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2120e607-8ff2-4d09-9f49-07ec54b3c7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23836e54-c892-4b17-9992-7ffa4a04f444",
        "cursor": {
          "ref": "38ace15e-193e-46e4-8661-eaa8077427db",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8cefdb9a-9c0d-4f87-8f06-2343bddca44d"
        },
        "item": {
          "id": "23836e54-c892-4b17-9992-7ffa4a04f444",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1d7b3a2c-4561-443a-a70e-0c1a48c3c84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe6f522-ccc0-4e19-bfde-4f4fded00cc7",
        "cursor": {
          "ref": "242331a9-d299-4153-81ad-bbfcfc405e80",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9c23d02d-8c43-4008-ac88-923d0a9bcc45"
        },
        "item": {
          "id": "0fe6f522-ccc0-4e19-bfde-4f4fded00cc7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "45a89061-8520-4f6e-82af-bd7b60cf54de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5782d89f-4d94-49ff-a34e-de73674c25b8",
        "cursor": {
          "ref": "14815e50-6b66-4501-a2bf-a73ff0fb616a",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9ab19591-1606-494a-87dc-77bae262972b"
        },
        "item": {
          "id": "5782d89f-4d94-49ff-a34e-de73674c25b8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "083cf041-79dc-40e5-8a75-0e982609360f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5d3c9c-6bf1-4c87-8716-a3d0d9536cf5",
        "cursor": {
          "ref": "cce0fccd-c34a-4ec8-82af-0123103e71e1",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "14eaea4e-4d81-4d97-813e-0b9e6e3b1e09"
        },
        "item": {
          "id": "9d5d3c9c-6bf1-4c87-8716-a3d0d9536cf5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "72193f27-746d-46ac-9114-f003272e6dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656a3bfe-8a97-42b8-a90e-d88bb47d3721",
        "cursor": {
          "ref": "dad2b2fa-9dad-4483-a69f-515434fbf215",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9fd6721d-2690-451f-b324-33813fc6fdc9"
        },
        "item": {
          "id": "656a3bfe-8a97-42b8-a90e-d88bb47d3721",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b932184b-5ea5-48ae-8440-82bbaa70bb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0eff92d-869b-4e5a-8ebf-380be05937bd",
        "cursor": {
          "ref": "98f63e57-7b75-4e3d-8948-611d55b398b7",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e374feec-0370-4678-898d-6d0d0f8616c2"
        },
        "item": {
          "id": "f0eff92d-869b-4e5a-8ebf-380be05937bd",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3659f95e-b901-4ea0-a804-457fe6b4fec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d2b176-c9b6-40db-8432-47bf531e6e30",
        "cursor": {
          "ref": "eb12e7fa-b4e4-4a04-9e2c-49e96a7b64c4",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "407e3a5e-34a7-43c0-822b-26337b577012"
        },
        "item": {
          "id": "79d2b176-c9b6-40db-8432-47bf531e6e30",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bd561d1c-eca3-4b28-926d-116a367e1857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd970e4f-9eb1-4a58-9360-73a29794550c",
        "cursor": {
          "ref": "cce5427b-c6da-40d3-be35-371290ba69d0",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "60dfc05e-cdf0-4793-9718-32065ca24be2"
        },
        "item": {
          "id": "dd970e4f-9eb1-4a58-9360-73a29794550c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "df03e7ab-716f-4729-b651-a55e7dec4e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a83e5b7-6375-447d-95d2-e1e10b5909d3",
        "cursor": {
          "ref": "98f19bf8-b6b9-4b71-9271-9467ed9dc75a",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "abb59623-0114-4698-8c18-3988a143d05c"
        },
        "item": {
          "id": "9a83e5b7-6375-447d-95d2-e1e10b5909d3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a6eb962f-b5f3-4fe3-936e-72736c3fafe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9085547a-ea33-447b-94d0-8fc37e5fdf66",
        "cursor": {
          "ref": "01026942-6e5b-4baf-82ea-8e067d27c8cb",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "04e25688-fa43-4753-9db1-be2d32d56e56"
        },
        "item": {
          "id": "9085547a-ea33-447b-94d0-8fc37e5fdf66",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0dc2ea48-dbbe-4a72-8885-239d70341496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adacf98a-94f2-4ec5-9553-b5dd54848ecf",
        "cursor": {
          "ref": "1bb737d4-c012-49a7-b1ea-2a54d9cfb07c",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c1fba864-a825-4fc2-b4b7-60261cc716be"
        },
        "item": {
          "id": "adacf98a-94f2-4ec5-9553-b5dd54848ecf",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cf53399e-6e43-448b-bbef-24260c370ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063b02fa-c960-4d77-89f0-491822bc82f3",
        "cursor": {
          "ref": "25404c5a-2655-4f54-90a6-ac512765fc24",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "95e7b8d3-5105-4d51-8d22-9d0cfdcc06d5"
        },
        "item": {
          "id": "063b02fa-c960-4d77-89f0-491822bc82f3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b19365d3-6ea6-4df9-90b7-392893c69395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b8934a-4f53-4b2d-ad35-9bfdc499fa11",
        "cursor": {
          "ref": "17585f17-8b42-49f0-8e7f-ac3686c69056",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "50474143-7152-459e-9079-e88e37edbb5b"
        },
        "item": {
          "id": "36b8934a-4f53-4b2d-ad35-9bfdc499fa11",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1db4a7ef-5065-4131-8ddd-03cf51449fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2fefea-ca28-495f-8cb6-e1f4e612d285",
        "cursor": {
          "ref": "dd89391b-1957-444f-830a-087a342eeb4e",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d78db76e-b350-40c1-9c4c-e88da0a23247"
        },
        "item": {
          "id": "7a2fefea-ca28-495f-8cb6-e1f4e612d285",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b249d82d-c448-48e4-b63b-c605374d1028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6e3608-eccc-448a-8f7c-d64b96861793",
        "cursor": {
          "ref": "411e7882-57a1-498e-8be4-9117988e8768",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9cbc35ec-c688-4032-88cc-e233dbebd7d6"
        },
        "item": {
          "id": "fa6e3608-eccc-448a-8f7c-d64b96861793",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "768ca783-3325-4b28-b35b-95dcec7200a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99072d3-d36b-49cd-b899-1f6c734b2a03",
        "cursor": {
          "ref": "91971e25-dadc-4dad-b98f-0aa12c481f82",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "730cb9ed-5828-47ab-85cf-f84fdcabe732"
        },
        "item": {
          "id": "c99072d3-d36b-49cd-b899-1f6c734b2a03",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f599e649-d6d4-4323-b63f-541cc218688a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73946148-1ca4-48c1-bb1a-268d1f0e676a",
        "cursor": {
          "ref": "f949f540-f6c3-4887-b005-a649ab79ec2e",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bb88410c-30fe-4fd7-aed8-302270987073"
        },
        "item": {
          "id": "73946148-1ca4-48c1-bb1a-268d1f0e676a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "043d4255-b844-43cc-9a91-dc711bf82953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4843be4-986e-481e-921d-f8c709d89817",
        "cursor": {
          "ref": "dff3f330-aec4-41de-852f-b94d538d28ed",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "903b3774-90e7-4595-9368-8c0c682cf8c6"
        },
        "item": {
          "id": "d4843be4-986e-481e-921d-f8c709d89817",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a95a00e6-b0bb-4ca1-bab9-6cfe5518d593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00c4d22-8a9a-4e7d-aba2-7b728bcbda46",
        "cursor": {
          "ref": "1c5b6f1e-8b7c-40d6-a536-eedfdfc3d6aa",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bf199930-9941-4d4a-9297-c6d846c398cf"
        },
        "item": {
          "id": "c00c4d22-8a9a-4e7d-aba2-7b728bcbda46",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8b0e5ef2-6a96-4012-9f0b-3fdafde388c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc33ad72-64e7-4982-809e-38370c2d6682",
        "cursor": {
          "ref": "a3adfe97-0550-4f21-b6d5-9a29b2d402e3",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fdf7b0b9-ba30-4dc6-8814-823789471682"
        },
        "item": {
          "id": "dc33ad72-64e7-4982-809e-38370c2d6682",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e2813bf4-31d2-4612-8c3f-3ac20a8451a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d49666-48aa-4a1f-8206-0879062a9fcd",
        "cursor": {
          "ref": "f3ce2966-4733-4c6a-933d-95f63603ee16",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a4c292bb-97fb-43dd-b31c-b171299d9313"
        },
        "item": {
          "id": "97d49666-48aa-4a1f-8206-0879062a9fcd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e8d61b18-e851-4a4d-9e54-bb79029b8674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81da6387-21f3-46f5-92b5-02cd1ec6bb68",
        "cursor": {
          "ref": "6e17ed68-3e6d-4d08-8ef3-8f572cca8389",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "141ff6e1-c009-4ff7-83f4-2b63b6dc5f64"
        },
        "item": {
          "id": "81da6387-21f3-46f5-92b5-02cd1ec6bb68",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "91ed9dd4-b801-4384-a84d-08045a3ba9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c9ec83-dec7-406d-9078-a176146a2a7f",
        "cursor": {
          "ref": "5890bbe5-3551-456f-bc39-c533aa1048ed",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b080b859-984e-42f3-a677-a31b32332910"
        },
        "item": {
          "id": "b9c9ec83-dec7-406d-9078-a176146a2a7f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4aeda687-cbda-4478-bcfc-91d857c09629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f9b181-3d15-40f9-b5e0-aca67609c5c9",
        "cursor": {
          "ref": "4e65072d-f625-4c0d-acfb-54e5b8e930d2",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "591a74ef-c3f2-428c-b922-07ae897aaffc"
        },
        "item": {
          "id": "01f9b181-3d15-40f9-b5e0-aca67609c5c9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ef98e962-aa96-4e7a-b29f-6834412e51cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d7ec58-9db7-4ee6-b3a8-2e6846c81aaf",
        "cursor": {
          "ref": "3741df2b-adbb-47e9-9b90-fe67e773a229",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "459ec900-bfb0-4a55-a643-d00e303be960"
        },
        "item": {
          "id": "68d7ec58-9db7-4ee6-b3a8-2e6846c81aaf",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "87ac98ff-2b59-40a4-9bd2-7a58b1ec744c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8347d7-7b6e-40a1-88db-61818c3e2539",
        "cursor": {
          "ref": "ab661b40-03db-49c8-bf91-a546867182e4",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d5bb3f33-1a65-4391-a8aa-1a3bafab514c"
        },
        "item": {
          "id": "9f8347d7-7b6e-40a1-88db-61818c3e2539",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e9a29cc9-e7b0-44fa-a8b8-cdd88da6a6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0186481-80fc-4234-a830-9064de5e5abc",
        "cursor": {
          "ref": "eb244f29-967d-411f-a969-86669cc5e624",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "82c61dc4-4f9a-4579-81e5-3df948f4ccfc"
        },
        "item": {
          "id": "d0186481-80fc-4234-a830-9064de5e5abc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a7e8fa29-defe-469f-9ac6-f8d9e2659a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2bccc4-14fe-4f85-984d-6101721bbcc6",
        "cursor": {
          "ref": "f71e1e78-47b8-4acf-b121-274162bdcf88",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e9f900ec-7786-4731-857d-44b665f92b55"
        },
        "item": {
          "id": "4e2bccc4-14fe-4f85-984d-6101721bbcc6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "df071b8b-d03d-4dd9-a079-45554d4da93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81cd7c7-4f12-4c93-b881-e73c04ea943b",
        "cursor": {
          "ref": "67625338-74bd-4106-8d75-0421cbf15939",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "188e244f-e127-416f-98d4-8c2a9095bac6"
        },
        "item": {
          "id": "c81cd7c7-4f12-4c93-b881-e73c04ea943b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "617429c2-7c57-4a77-bb06-29118ffa0e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8643d9-8d37-4ba9-a4b0-a0a8ef6a0ac3",
        "cursor": {
          "ref": "feb4cdea-bdc7-4956-978c-cf75f3dd8c79",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bc63cbdb-20e0-4dfc-bdc1-593c7c753214"
        },
        "item": {
          "id": "ff8643d9-8d37-4ba9-a4b0-a0a8ef6a0ac3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "26811907-52fc-4f88-a6c0-761fd1689cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6cc42c-2909-4780-83ee-8421c3eacd04",
        "cursor": {
          "ref": "2e3e46f3-8978-4fac-9e11-6e498e4766c6",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9df2a956-f441-4416-94db-faf71b3b2574"
        },
        "item": {
          "id": "5c6cc42c-2909-4780-83ee-8421c3eacd04",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2527bc04-fb57-4f05-af6a-e8203bba7c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e166211-9ea6-454a-bb49-3f06466c53a4",
        "cursor": {
          "ref": "cc3e0a38-dd39-496e-be2c-b9b90ed983bc",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8b492ae4-468a-4cb1-a216-691d9e45a524"
        },
        "item": {
          "id": "9e166211-9ea6-454a-bb49-3f06466c53a4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d8edcf76-4b89-4894-81c9-fc54bcce5cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d36f8a-7025-42ba-a882-1cfe7b8555ba",
        "cursor": {
          "ref": "bbc33a0a-4faa-4025-9d33-7d5b14c4b4d9",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "03a9be9d-892a-461d-bd30-c88f3a60dba4"
        },
        "item": {
          "id": "50d36f8a-7025-42ba-a882-1cfe7b8555ba",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1e39c4b9-3300-436d-8db8-bffecf705eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368c0b6e-c585-4f45-b2b3-857dcf9cdd65",
        "cursor": {
          "ref": "a30aac0b-a54a-4b85-b839-37d6b1a70890",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b8b435a2-4d64-4410-a1b7-20699693a159"
        },
        "item": {
          "id": "368c0b6e-c585-4f45-b2b3-857dcf9cdd65",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "96cf3fd4-be91-4379-9fbd-76930edbe521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5c9170-b5f4-4d4a-95e4-ab34f670f93e",
        "cursor": {
          "ref": "cc30e3d6-ef41-4cc0-a3a6-3bf61ff71e7d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c6b72591-7f00-4290-baf0-e4da1b46c659"
        },
        "item": {
          "id": "bd5c9170-b5f4-4d4a-95e4-ab34f670f93e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "03856abf-c5ea-4fcf-913b-dc020950202a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e06cd3-dd31-4c8e-b329-bf595b625521",
        "cursor": {
          "ref": "6e738941-c3d7-4080-9c1d-bee258ba5e80",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "eca560f8-44e0-408d-aec6-f09f7b5c605a"
        },
        "item": {
          "id": "79e06cd3-dd31-4c8e-b329-bf595b625521",
          "name": "credentials_issue"
        },
        "response": {
          "id": "df4c0650-5be3-45ee-b9fa-2bc126e6a2f3",
          "status": "Created",
          "code": 201,
          "responseTime": 45,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "308c5eb6-71d7-4008-b334-f66c4bf5feb8",
        "cursor": {
          "ref": "c3e34a96-8961-43f8-a640-55f76033ea07",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6c966c51-d0ba-4139-9dac-40ad207a378f"
        },
        "item": {
          "id": "308c5eb6-71d7-4008-b334-f66c4bf5feb8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3afaf044-4a90-445d-b9d4-0310b26235b2",
          "status": "Created",
          "code": 201,
          "responseTime": 134,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2a3e5a-4ebd-416a-abd8-b1ad1210cadd",
        "cursor": {
          "ref": "345f54b2-1356-4c4a-8a2c-2bbaa226bbb3",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c79fd046-b392-4933-b790-43ca4b508738"
        },
        "item": {
          "id": "ab2a3e5a-4ebd-416a-abd8-b1ad1210cadd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "17dad3b5-a309-43e7-b29a-13e8d99f66bf",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f03842-084e-498e-b91a-3edeef9fc8b8",
        "cursor": {
          "ref": "60d873a6-c0b6-4f34-8426-b73786bb11b1",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "240625e4-a335-4839-a020-52b0ca47e04c"
        },
        "item": {
          "id": "c1f03842-084e-498e-b91a-3edeef9fc8b8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2d94485f-f042-4b5d-be97-1b93f0e620b1",
          "status": "Created",
          "code": 201,
          "responseTime": 39,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "793c06ae-84b3-4805-957d-e49d99b9b941",
        "cursor": {
          "ref": "f8a5dcca-944b-4663-9c2a-014b4f6466d0",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f5d4c7e9-25e4-4002-ab43-20bdb2a670e5"
        },
        "item": {
          "id": "793c06ae-84b3-4805-957d-e49d99b9b941",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "25749506-75d2-4661-b6f7-a526ce8c5017",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba90722-4249-44c0-a14a-1ca1ac53b222",
        "cursor": {
          "ref": "3fda68c2-1eb5-4d36-9747-9de7aac7729c",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0724b63f-9523-482c-8ac4-161e673c527f"
        },
        "item": {
          "id": "8ba90722-4249-44c0-a14a-1ca1ac53b222",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f2bd34ae-fadd-466e-8138-c4e88ea98b9b",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8fe91e-4da8-4fd8-939f-47027d6bc7b6",
        "cursor": {
          "ref": "e9126052-342b-44e4-8c01-4aadafd86d6d",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e43d54f6-cc6b-44d2-a278-ed55d33d6fd9"
        },
        "item": {
          "id": "da8fe91e-4da8-4fd8-939f-47027d6bc7b6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6867fc21-6061-4625-be12-bfdb02ba2962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c595115e-db07-42b1-9ca3-f11adb906a43",
        "cursor": {
          "ref": "072aa43a-0c31-491e-8fe0-1351f3468aa2",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bcb6b01b-ae0c-40c7-be2b-6310296cafa3"
        },
        "item": {
          "id": "c595115e-db07-42b1-9ca3-f11adb906a43",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "72fb4fbf-9635-4b9f-9aac-ec3340242f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033c9e85-1460-4241-982a-b3d90fabefd0",
        "cursor": {
          "ref": "a200db3e-38c6-42bc-983d-270398e16a2d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "429c3890-d695-4116-8017-96f6041e53b5"
        },
        "item": {
          "id": "033c9e85-1460-4241-982a-b3d90fabefd0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "423b7995-c219-4b66-838e-570f6431f132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12bfae5-2b5e-4767-a92c-e28a47455b73",
        "cursor": {
          "ref": "c243b424-bd7f-41a7-a0bb-5dbb3a38be08",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5dbb0931-0be6-42f8-a441-845f53620f51"
        },
        "item": {
          "id": "b12bfae5-2b5e-4767-a92c-e28a47455b73",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "797afea2-cb87-4189-8dc2-7a9911ece951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc6d6e3-8c3b-46f6-b7df-a2227ad6ba1e",
        "cursor": {
          "ref": "0ea316a6-17ff-4a64-bbf3-5d4eb0e4dacf",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9941d7c1-598e-4114-9377-2cf4bf177430"
        },
        "item": {
          "id": "6cc6d6e3-8c3b-46f6-b7df-a2227ad6ba1e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d13a9369-624a-4e45-a699-d70a43a95099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad91d657-9ebf-450b-bb1c-893853b6ccb5",
        "cursor": {
          "ref": "96d6791a-b7ca-4a47-9d64-7eccb4bc4b73",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a744b1c7-f336-47e1-9045-6ea91893bdfe"
        },
        "item": {
          "id": "ad91d657-9ebf-450b-bb1c-893853b6ccb5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b2ed20da-f3ed-4392-a4a6-aaf3cc88a603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04c7162-d644-425a-8591-6d9491941236",
        "cursor": {
          "ref": "0b09aa34-3a6a-4472-a544-3b1da80db7a8",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "12b7747b-28bd-4548-a50f-38a406343441"
        },
        "item": {
          "id": "a04c7162-d644-425a-8591-6d9491941236",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "29a31ffd-1ec9-4bff-aa0e-c4beb6738a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d582d15-fcb8-4da1-b4bb-85d5f552f47d",
        "cursor": {
          "ref": "b843c4c4-1c8f-4ff8-a330-caa4a831fb43",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e10037ba-c57f-4866-9367-c95704f9037b"
        },
        "item": {
          "id": "3d582d15-fcb8-4da1-b4bb-85d5f552f47d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "70d20228-d02b-4d90-9d6c-9957b79c4fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2daf686-0064-4395-aa55-017537923555",
        "cursor": {
          "ref": "4b7869b9-5038-456d-bcac-b156941d11c1",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5461d2a6-a6d4-477f-a9a0-19f03e097d5f"
        },
        "item": {
          "id": "a2daf686-0064-4395-aa55-017537923555",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c6b20442-8fae-4543-8420-04afe7acba2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99fb966-76cb-4b8f-99ae-a3aae2d85517",
        "cursor": {
          "ref": "fda3a00c-f98e-4ba0-8df4-93166d526e40",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fd200143-d4b6-47a5-b0a4-ad1d10b4658f"
        },
        "item": {
          "id": "c99fb966-76cb-4b8f-99ae-a3aae2d85517",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3d83d995-d5fa-4cf8-a3e8-cbc44cea2af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc22907-8a56-4072-93e9-10934d8982b4",
        "cursor": {
          "ref": "2b94f645-eb9f-43c6-ad25-534619f9cfb8",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7d16f3b1-ba55-4305-bff6-c8e8c59f5015"
        },
        "item": {
          "id": "acc22907-8a56-4072-93e9-10934d8982b4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6a546bbc-ba17-4a28-9b41-b534b567805d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d2c405-1db0-4079-bfff-6d211e7ca5d5",
        "cursor": {
          "ref": "aea6c041-344a-44c6-bc89-38c1ec8579ae",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c9e17b16-ea8e-402c-a864-6dd776c1e520"
        },
        "item": {
          "id": "51d2c405-1db0-4079-bfff-6d211e7ca5d5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "44d8bb95-0894-4988-b4f7-3c75ab9cd6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe054d5-c024-470c-bcd5-0af8dc299653",
        "cursor": {
          "ref": "4a2b29a5-db30-4c58-8d68-0dd55af9081b",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "080f732c-39a2-440c-a671-041cafa49101"
        },
        "item": {
          "id": "bbe054d5-c024-470c-bcd5-0af8dc299653",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "39369e7e-5e9d-45ca-8166-33fc55596b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2109598-25de-43db-82f7-9a44fc7f0b4d",
        "cursor": {
          "ref": "4c51cd67-a3f5-46d5-94f6-685954163276",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4f8e660f-495d-46cc-9586-c751e3c206d8"
        },
        "item": {
          "id": "f2109598-25de-43db-82f7-9a44fc7f0b4d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "70046227-ee57-4188-9b12-2a98f95ad64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ee4339-5dfd-43f5-99c5-4e7bd626e6f3",
        "cursor": {
          "ref": "e341c27e-3083-4131-ac08-4ec990fdf615",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ba91bca0-5912-42f0-8f3d-c0a579f5ad3a"
        },
        "item": {
          "id": "47ee4339-5dfd-43f5-99c5-4e7bd626e6f3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ed764abd-fc0c-4172-9def-a3e3edc873a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cf4217-71e1-4a7a-892a-99af1eb189cc",
        "cursor": {
          "ref": "800fc710-aad6-44b0-aba6-caee194e0104",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "03b447b8-29a2-492b-9ee9-90295f3e0794"
        },
        "item": {
          "id": "52cf4217-71e1-4a7a-892a-99af1eb189cc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6f89768f-6436-4ed7-b04b-b2dd4b1da45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a211099a-c3df-4956-b2ed-3b5f46429170",
        "cursor": {
          "ref": "74ee4bfc-f340-42ea-a2ef-226e2f1aaa6f",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e06d7006-ab1a-4f2d-ad80-738b67a72c67"
        },
        "item": {
          "id": "a211099a-c3df-4956-b2ed-3b5f46429170",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ea2a5adb-2a0a-4cba-840e-154978d566af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542fca0e-e210-4386-afef-8df1748227af",
        "cursor": {
          "ref": "e11355cb-7305-45a5-b278-33b0b3929d2e",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8d86ede2-1484-4f5e-9d50-e540d97e39eb"
        },
        "item": {
          "id": "542fca0e-e210-4386-afef-8df1748227af",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fd35cfd4-2be8-4815-8c88-7798a9702c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bac9653-a41e-4189-a850-fa4005cb3f28",
        "cursor": {
          "ref": "4d980576-30b2-4ad3-9495-ae17284f4071",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6dedef0c-2477-4b63-8c38-b5b6a1cc66ae"
        },
        "item": {
          "id": "8bac9653-a41e-4189-a850-fa4005cb3f28",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "59b532e2-56d0-40de-96cc-708753d7b397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d7466c-bc75-45ff-9c50-7d66403de6e8",
        "cursor": {
          "ref": "32b592dc-262e-4c25-b581-adaad8e92d04",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "31405052-2880-4351-b83a-2d8fd1f52e69"
        },
        "item": {
          "id": "b9d7466c-bc75-45ff-9c50-7d66403de6e8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dbdcb57f-8a45-41b8-99b2-fdf12fa940a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e60ed4-2ac8-4e2e-832b-9e19fbac91ab",
        "cursor": {
          "ref": "c9bc3f31-0e55-4782-96ab-943d665838ad",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "59211e06-08d3-40fd-bfe9-6a45a944d256"
        },
        "item": {
          "id": "e1e60ed4-2ac8-4e2e-832b-9e19fbac91ab",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7dfbf8be-0b00-4e16-bc9b-3d889f25b78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dac03a-9aa0-4fa3-961c-4c07da7b8276",
        "cursor": {
          "ref": "68b76b40-348f-4c8f-bcb8-561c762c7680",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e158bd4d-cc93-4907-8ca8-92f158ee9d4f"
        },
        "item": {
          "id": "40dac03a-9aa0-4fa3-961c-4c07da7b8276",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6c3ac0c7-a352-456e-a3ff-8aae9f7c1b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79285c7b-c2a5-4d85-9cd8-4cf507ac74df",
        "cursor": {
          "ref": "67c7cdf4-6942-4fe1-96f8-5642ec149f96",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "06299436-aa0a-4a95-a5f1-b36fc080bed8"
        },
        "item": {
          "id": "79285c7b-c2a5-4d85-9cd8-4cf507ac74df",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f5b46870-74c5-4f5a-ad5c-e45c1dd1b45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712f958e-3eb8-49f0-b10b-4c4eaccdb0fd",
        "cursor": {
          "ref": "2929a73e-a28e-4b9a-add4-cd7c72afdd57",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c2f21a83-fe3f-4ce4-9bb5-8ea87e31c95b"
        },
        "item": {
          "id": "712f958e-3eb8-49f0-b10b-4c4eaccdb0fd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6868a0c5-e2a8-4e24-85e0-5e0f8b403d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7fdfbf-ffdb-40ea-a9d7-f460c22a9fbe",
        "cursor": {
          "ref": "0928b1db-563a-408a-b3ad-3618940fc79e",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "354bb1a8-e875-4604-99fa-32b6b1baecd0"
        },
        "item": {
          "id": "8f7fdfbf-ffdb-40ea-a9d7-f460c22a9fbe",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d9e7ac0d-0757-4f13-9690-8d11c8cc2f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36a10f9-5e01-421e-8847-d029d4790b48",
        "cursor": {
          "ref": "27f42c18-3ac4-4076-8f71-dac3db65c699",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e5b937e2-14b3-45c4-a81a-f753499261a7"
        },
        "item": {
          "id": "a36a10f9-5e01-421e-8847-d029d4790b48",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f3486e85-aed4-4a17-8b9f-6b9c6630348a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9a3aa3-d562-445c-ba3f-7d2d5217c783",
        "cursor": {
          "ref": "90e5ce3a-3d24-46c4-bbd2-93907590dc92",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d9d5b1e6-bfb4-477e-a592-0d41d3399ac9"
        },
        "item": {
          "id": "8d9a3aa3-d562-445c-ba3f-7d2d5217c783",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d51e4ce3-9316-4c96-ae1a-1e4a79031fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf56ad0b-36e6-43c6-91d7-b2286164216c",
        "cursor": {
          "ref": "4a894fc5-9d0e-4f4d-99e1-9922f8586487",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d7cfc3d9-813f-4126-ad9d-c8e2894d4494"
        },
        "item": {
          "id": "cf56ad0b-36e6-43c6-91d7-b2286164216c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9c482096-04ed-4ea6-86aa-78b9939b33e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bae5ef-1ccc-4263-9f25-6e79bafdb6c1",
        "cursor": {
          "ref": "f23c664c-d835-491b-b01b-5704208d3e0e",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "493ce467-7659-48f5-a526-c30fbcb6dc2d"
        },
        "item": {
          "id": "c9bae5ef-1ccc-4263-9f25-6e79bafdb6c1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7b79acb0-be9b-4cb4-a609-3543507d18f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9304fcfe-ee9d-44f5-8df8-0394927c6487",
        "cursor": {
          "ref": "d1385297-dbaf-445f-a836-b84e9d71aa64",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3b36b94d-0175-466c-a319-476bfba72d8c"
        },
        "item": {
          "id": "9304fcfe-ee9d-44f5-8df8-0394927c6487",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "50b8701b-e8dd-49a0-a064-5b8a36a19eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97437db-79b0-47d2-8132-09a8acb1e92d",
        "cursor": {
          "ref": "7bbf2da2-4df2-4881-8e34-3e270687a792",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "229a9da9-9552-4ea0-9655-a2a4715c2650"
        },
        "item": {
          "id": "f97437db-79b0-47d2-8132-09a8acb1e92d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5f3f6453-ddc0-4f63-91a4-8f2e5a849a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc03d610-7434-4f3d-be23-bcf4be3bfd27",
        "cursor": {
          "ref": "ca92b539-7a5a-4f3f-95a6-ef933df8a260",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2933a678-6f76-4ce9-9255-5e18396c27b1"
        },
        "item": {
          "id": "bc03d610-7434-4f3d-be23-bcf4be3bfd27",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2a158cbf-a895-4b21-9a53-dfa996b8b7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9900e9b-7a20-4ebb-b62b-737eee0d8116",
        "cursor": {
          "ref": "dade2d40-e9c3-403e-9f55-3a88c8de442b",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a895bd65-1b33-4dfa-acbe-7409760ec198"
        },
        "item": {
          "id": "b9900e9b-7a20-4ebb-b62b-737eee0d8116",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8e4b879e-d703-441d-a4f9-0c2461d0cdb4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3055c8c9-84f3-4fac-a861-36165beab14e",
        "cursor": {
          "ref": "899e361d-e7d6-466c-8fc5-8152f0062b00",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "25ca0e81-0daf-4caa-b62e-3b0cb56daa96"
        },
        "item": {
          "id": "3055c8c9-84f3-4fac-a861-36165beab14e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1e4c4720-69d8-4af7-8ed6-9bb0f7e76c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d2d107-6163-45d6-b1b9-82802799ca2e",
        "cursor": {
          "ref": "8d66d83f-8762-4180-a574-cf18f1ca12c1",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a90d575c-7d7b-4742-9a97-b3f8242d937b"
        },
        "item": {
          "id": "27d2d107-6163-45d6-b1b9-82802799ca2e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f3590b8d-a666-4ccf-9e59-33b2875a457a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4987a455-8fc7-4bc2-9ba0-ef17be6e76e7",
        "cursor": {
          "ref": "c02337f4-f323-48bf-bb81-ca9ebc7419d2",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "37de4d7b-4d49-44ed-8d97-5a54168b468c"
        },
        "item": {
          "id": "4987a455-8fc7-4bc2-9ba0-ef17be6e76e7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "37c53a08-ab41-42c3-a2fc-e4cb4899c834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1affaf3-ae21-4bcc-884c-605983bc131c",
        "cursor": {
          "ref": "25f3fdef-8c8c-4075-8819-9b937e0aa776",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2eba6daf-8900-4b37-a607-a870f630b8f4"
        },
        "item": {
          "id": "e1affaf3-ae21-4bcc-884c-605983bc131c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e0c1517b-554a-45aa-8f28-b0a162565f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6014c9d6-579c-4f92-8399-b874106d3dec",
        "cursor": {
          "ref": "ea4ac01e-b7c8-4420-97f4-cd96455f0e3f",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "40b35a63-a32c-4d01-98bd-e592af0368cd"
        },
        "item": {
          "id": "6014c9d6-579c-4f92-8399-b874106d3dec",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "43ded175-4eb6-4460-a49c-9e94b862ee24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afac60ef-d024-401a-a0e2-2a350f171932",
        "cursor": {
          "ref": "50efe2f3-8930-44e7-8f4a-211e6bd17cc5",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "caa1939a-4603-44ac-a130-04fbc2da950e"
        },
        "item": {
          "id": "afac60ef-d024-401a-a0e2-2a350f171932",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b6d5f660-d244-48d1-8b07-e28d1c398b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c248556-66a2-41bc-ba27-edfdfa8fa2c0",
        "cursor": {
          "ref": "b6d289a8-e2fa-4b92-bce5-d5c07fc3187f",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3a436864-ebff-4c17-9601-14d3d5068c77"
        },
        "item": {
          "id": "7c248556-66a2-41bc-ba27-edfdfa8fa2c0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "80f78e4f-393e-4612-985a-05d6755ccab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a527ab0-151b-4fca-be18-44f1357db9c5",
        "cursor": {
          "ref": "3dbd6412-910e-4d24-a16a-9555967444ae",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6d9d8b5c-ada7-4ba2-bee2-0ee440358db8"
        },
        "item": {
          "id": "2a527ab0-151b-4fca-be18-44f1357db9c5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c3119a49-9004-4579-8123-f8843db9a5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78302834-b0d9-43dc-9249-21064eaebd71",
        "cursor": {
          "ref": "997ee32d-a125-4fc6-8f6f-d03fb5a9a222",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "505d4f70-af54-4ab5-ae59-1c586b75691f"
        },
        "item": {
          "id": "78302834-b0d9-43dc-9249-21064eaebd71",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "84ea3d7a-8348-4835-98e8-664dcd1a2372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cab030-7ce1-4703-be34-18e252788885",
        "cursor": {
          "ref": "7cb3811e-d2e3-4e71-ad44-d4c5491d0f56",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d6e61b87-8c5d-4448-a63e-342bbf02b445"
        },
        "item": {
          "id": "74cab030-7ce1-4703-be34-18e252788885",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "71d2e0dd-7433-4d68-a3aa-209136fd595c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507f9570-cdc3-4fd6-90b3-573988aa067a",
        "cursor": {
          "ref": "5a476582-a1f0-4c5d-9df7-0a8cf4f86960",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "09ed44f5-ace1-4981-8ed3-fae477dc718a"
        },
        "item": {
          "id": "507f9570-cdc3-4fd6-90b3-573988aa067a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "878cfee8-a55a-40a3-8ec3-9db8701aed08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525c2ec2-3796-45b1-9160-bc877629d786",
        "cursor": {
          "ref": "b795856e-6999-478a-8e02-d8d0de9994f8",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b51139aa-b8d0-43ad-ba8f-ca52d6755d88"
        },
        "item": {
          "id": "525c2ec2-3796-45b1-9160-bc877629d786",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "257263aa-c328-4674-b1b2-cb195ccf2e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d54d40-b6c1-4f0d-bbb6-8cbd60d86906",
        "cursor": {
          "ref": "0d96115f-14bc-4ea4-8179-a2a11894473c",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f1e4ce41-d267-4ca6-8e94-aa5d8b44ff6d"
        },
        "item": {
          "id": "51d54d40-b6c1-4f0d-bbb6-8cbd60d86906",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "21851dd9-2871-43d3-821d-3d2847f49947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855126f5-df48-475a-b2f2-c1ec69f23a26",
        "cursor": {
          "ref": "683f2cb7-f745-4e37-a936-f0afb18425b2",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6c413d48-6dc3-49ad-9009-a1a3bd0e9f89"
        },
        "item": {
          "id": "855126f5-df48-475a-b2f2-c1ec69f23a26",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ed3f40a4-53dd-4eb1-a9a2-a1030d5972c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcefbaf-95eb-4544-b55e-b48e8ed6d475",
        "cursor": {
          "ref": "ea49435e-6261-4237-8885-70694543969d",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "eb0f9d20-29bc-4c08-9888-bda6b2e53d3e"
        },
        "item": {
          "id": "cbcefbaf-95eb-4544-b55e-b48e8ed6d475",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ed23aaa6-3503-4559-8cec-4fd0036324b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3908f878-1066-46b9-827a-e09361bedf5f",
        "cursor": {
          "ref": "ed220fc4-0d26-49a8-8cf6-de32db373598",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d8e3f15e-4d63-4fdf-a160-6c3a1ccaed85"
        },
        "item": {
          "id": "3908f878-1066-46b9-827a-e09361bedf5f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5b9eca25-7c90-45e2-acbf-52be9a8a015a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fee109-4da3-4d8c-acbc-68f6e7a85c2f",
        "cursor": {
          "ref": "73051964-95b7-4f04-bc97-12bd14b22217",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "66ca8256-fe6a-4615-85f9-f998e54e43e2"
        },
        "item": {
          "id": "c1fee109-4da3-4d8c-acbc-68f6e7a85c2f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "13954798-141a-40cc-b53f-ab2d6a89e8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad70e1e-b7cf-4734-b4bc-8831fe0fffd0",
        "cursor": {
          "ref": "8c5ae35e-d350-48dd-ba6b-b4b93a04cee6",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e1326d49-5556-4ad5-83e2-e3e9c738378c"
        },
        "item": {
          "id": "8ad70e1e-b7cf-4734-b4bc-8831fe0fffd0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "320b063d-475e-4608-adeb-60215e828699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fb3589-6ff8-4156-8971-850cb825eee6",
        "cursor": {
          "ref": "a89163d6-5e74-4d31-9f50-a284eb3625b2",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "195a57a5-2eee-452b-b9e5-0d074001bbf9"
        },
        "item": {
          "id": "d4fb3589-6ff8-4156-8971-850cb825eee6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "18fee0f1-9945-4b05-ad70-f8d66e2cfe32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4350816e-716d-417e-88ba-ba773792539d",
        "cursor": {
          "ref": "3751647f-20b8-4427-a486-206be28c3714",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "95576229-bfc6-462e-afb2-f29dada562e1"
        },
        "item": {
          "id": "4350816e-716d-417e-88ba-ba773792539d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fa5de18d-39a6-4b05-97c7-0e118ae9669d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b882d09d-c971-48df-af6c-25148859a992",
        "cursor": {
          "ref": "6a5c9fba-87ca-4259-8f22-7220fb8c4e9f",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6b3eeb07-4f0e-4759-b18d-024a82d89a3d"
        },
        "item": {
          "id": "b882d09d-c971-48df-af6c-25148859a992",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ddf57574-72a7-4ce1-9478-f77020ed9a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3401b0ab-4d5c-4a4d-b38e-6a5c3e2654ca",
        "cursor": {
          "ref": "91649124-cc28-4298-9ae8-d457b3652c93",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "703f74ed-0088-405e-afdd-b698dccd949c"
        },
        "item": {
          "id": "3401b0ab-4d5c-4a4d-b38e-6a5c3e2654ca",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6ea970b4-46f3-45bc-8697-4ad3b4b1aab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721ac7f5-6d92-4363-82bd-655c05fd02a6",
        "cursor": {
          "ref": "0680c7ea-3545-4820-a490-be7c4c2c2282",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "78eb62c2-417d-41ae-aabb-dec6b07a8166"
        },
        "item": {
          "id": "721ac7f5-6d92-4363-82bd-655c05fd02a6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4b4ff167-6e28-4e52-b5aa-697d575a3c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c918f1-b98c-4c4b-bb6f-8a2a22491d91",
        "cursor": {
          "ref": "417028f7-359d-4712-91de-cb76b60e1cae",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9381c6f4-5030-48ad-9f55-10fea1e80f83"
        },
        "item": {
          "id": "d7c918f1-b98c-4c4b-bb6f-8a2a22491d91",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a0354abb-c00a-46d1-8b9b-0bb56d2ed516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485f074d-70d9-4262-9aad-f683cfdbc5f4",
        "cursor": {
          "ref": "b9449058-5e3a-42fe-a5dd-95a9485a321a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8602efcd-8b01-40f4-a2bd-8f1ba10a0441"
        },
        "item": {
          "id": "485f074d-70d9-4262-9aad-f683cfdbc5f4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b0aa502a-1a40-4c41-bfac-6a95c4b862b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489ec788-6a74-4b47-82be-98732b1462d2",
        "cursor": {
          "ref": "bbd0bc68-222d-4b83-bce3-a4cd524c4e5f",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c2ca75e6-5edd-4b31-8008-93171558352c"
        },
        "item": {
          "id": "489ec788-6a74-4b47-82be-98732b1462d2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "daf5abb6-62f8-4969-8569-b82fe0bb88d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8cff38-bb2a-4017-beab-e82ebc784a79",
        "cursor": {
          "ref": "cc976f89-a66d-43e3-9c08-58a4d1ff5f60",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b0b0dc79-ffcc-4089-bd67-2a89a7da444a"
        },
        "item": {
          "id": "5c8cff38-bb2a-4017-beab-e82ebc784a79",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2382c86e-3c19-41fa-8f2d-a3c4cf1df669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d385d0ad-b099-4daf-b411-5972e69f64cc",
        "cursor": {
          "ref": "42d31765-79c2-4eb5-b6e4-99c8eb0595ff",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7d283a01-e136-4cb9-a02f-69380e643f7f"
        },
        "item": {
          "id": "d385d0ad-b099-4daf-b411-5972e69f64cc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a522e08e-3d3a-4d49-9d9a-70227a74fbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1893e13-9e36-49c9-8bc7-bdcb41572e52",
        "cursor": {
          "ref": "bc12bd33-106f-41d7-8647-e71a255c1687",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4704dcfb-8679-4726-aabc-50bc9bdbbb12"
        },
        "item": {
          "id": "d1893e13-9e36-49c9-8bc7-bdcb41572e52",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3539e9e9-ebb9-48cb-b8a1-98248e048e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af38577f-f338-46c7-b66b-d0f9b5f91b67",
        "cursor": {
          "ref": "f7ead583-aa87-45c6-a4ed-de5fd251ef8e",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e5a1be46-6ca3-4c15-87dd-ba11e4432dfe"
        },
        "item": {
          "id": "af38577f-f338-46c7-b66b-d0f9b5f91b67",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a9b043d2-fe5b-4185-94d0-71af56be8a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc22e6d-6677-4d2f-a71e-e7ff71dacbf3",
        "cursor": {
          "ref": "4b3feb45-748c-422d-b026-c9ebadff08d0",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c2a56217-29c3-457d-8ba3-488f1502bb50"
        },
        "item": {
          "id": "adc22e6d-6677-4d2f-a71e-e7ff71dacbf3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ee45e890-c021-40d2-9930-57e0b5af5b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860b56e7-5551-433a-ac7b-d0c727534509",
        "cursor": {
          "ref": "c6ded0a5-dd13-410f-993d-6b99a14794fc",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "aa0e2cf6-7fc0-41bb-8799-f3faf5ea4b22"
        },
        "item": {
          "id": "860b56e7-5551-433a-ac7b-d0c727534509",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "25167c46-38df-43aa-98fd-42a4867b956b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0b5796-96fb-4347-adf1-077d190e35be",
        "cursor": {
          "ref": "e3ee7828-66c8-43d8-8c60-44eb3b25c4aa",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "181b2f60-90fc-49db-95fd-ee0ff8d23eaf"
        },
        "item": {
          "id": "ee0b5796-96fb-4347-adf1-077d190e35be",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "071b2ec2-1dcc-4fe4-9d24-e719c4da3b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7e2b69-f936-4a41-8137-3c2a9a274b0f",
        "cursor": {
          "ref": "2a5141ec-eeb5-4d07-abdb-77c9f6f43f33",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bc2ada28-4eeb-43f4-a63d-c3362c25583e"
        },
        "item": {
          "id": "4f7e2b69-f936-4a41-8137-3c2a9a274b0f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a5da32e0-e7ce-42ea-b896-72e421e7ec96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401a0326-c89a-4c3d-af41-851ca1b62693",
        "cursor": {
          "ref": "6ec0087d-debc-4256-8af9-c274610c9cd0",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "730ecbab-a582-4d5c-8945-8909138f8c2f"
        },
        "item": {
          "id": "401a0326-c89a-4c3d-af41-851ca1b62693",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2d10e5c9-9bcb-4e0a-ab03-7d8df8435c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b130ff68-4cc3-4be5-a07a-23c07afeae1a",
        "cursor": {
          "ref": "51e5e492-bfe3-4b72-8073-daff2ec8170b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bf06cbff-d27e-4135-bd99-86c42502afcf"
        },
        "item": {
          "id": "b130ff68-4cc3-4be5-a07a-23c07afeae1a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b47ec394-2fd3-4a95-8985-cdd44bb61bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa063a2c-8b5b-4563-ae57-f14596266ae9",
        "cursor": {
          "ref": "0511ae53-8f75-456c-9574-0c0f79559837",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d9624480-7172-4376-ade0-a547fe3dc306"
        },
        "item": {
          "id": "fa063a2c-8b5b-4563-ae57-f14596266ae9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8798e041-2ebe-4b17-9c39-f7156d0b7405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c11471-ac28-4f7b-84ab-3d69c697a873",
        "cursor": {
          "ref": "0d4e82f2-cce8-4f1d-b507-1f37b0531db8",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a7804008-29fc-4143-92db-3eae80022e0a"
        },
        "item": {
          "id": "20c11471-ac28-4f7b-84ab-3d69c697a873",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a1338b56-2e46-429c-8c1f-78a048d88561",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76cb7065-0de7-4071-883d-f1e50333356a",
        "cursor": {
          "ref": "f0b191f2-a844-4142-b58f-80bf708641bf",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "81f1afb5-ca71-41bb-8403-f6d85a561f9e"
        },
        "item": {
          "id": "76cb7065-0de7-4071-883d-f1e50333356a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "897af1a1-7600-46f8-b80c-8e410d4032f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1789c2-cb11-47dc-a392-2a68bb52bafd",
        "cursor": {
          "ref": "f81dd195-87e1-458a-ac3a-2d77334bd2ad",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ec9ef30d-d151-4882-892d-f8dec28d1aa3"
        },
        "item": {
          "id": "8b1789c2-cb11-47dc-a392-2a68bb52bafd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d558e2d5-0798-4b71-a396-99d2f8f6df82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c5aa3e-00f2-471f-a17f-38370f57441c",
        "cursor": {
          "ref": "11429cff-a0e7-43bc-a29b-4c1604377a5c",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "57d94bc1-19aa-4617-9315-6cf9a20403af"
        },
        "item": {
          "id": "97c5aa3e-00f2-471f-a17f-38370f57441c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7b8b06dc-9f03-4fa8-8966-5626e59bf02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa05214-8bda-4bf9-ac43-3c7bf250e5de",
        "cursor": {
          "ref": "87c677ad-045b-46d0-a3bc-d8e5bd5c3e46",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "aed54344-7dca-421a-ab09-fa0f7112a3cf"
        },
        "item": {
          "id": "6aa05214-8bda-4bf9-ac43-3c7bf250e5de",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9eee2c9d-8497-43f7-92de-623052f2748e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7368ee8d-d1a6-46d9-890e-307898484c6c",
        "cursor": {
          "ref": "d7ffdc75-f082-4ab9-83ee-46747770cd8e",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3284274e-9d11-4f92-bdcc-a18fa851073f"
        },
        "item": {
          "id": "7368ee8d-d1a6-46d9-890e-307898484c6c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ee72e924-768e-42aa-91a9-2d1dd370ca08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff480a6e-0e77-43bd-b644-edc0eb20c62c",
        "cursor": {
          "ref": "45d0d410-b5da-420b-8318-da2600ca868f",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "afd007e1-dcf6-4a4c-9472-a2d61848bb8b"
        },
        "item": {
          "id": "ff480a6e-0e77-43bd-b644-edc0eb20c62c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "78a728a1-ec47-4edd-bfa7-9235d3b459d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d02f3f-e131-4d44-a457-7b7c269091f5",
        "cursor": {
          "ref": "51dcd4b0-a675-4410-ae8f-3a2dc7e99448",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9fb89173-6dc7-4e46-a4dc-f2dd3befd039"
        },
        "item": {
          "id": "d6d02f3f-e131-4d44-a457-7b7c269091f5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d221d95b-0a71-4f9f-8e67-01598b92ceb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a85e508-df36-477a-af79-72e9c949596b",
        "cursor": {
          "ref": "e9d89a9b-a7ce-4b30-ad7a-1c11390a7024",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "96b48e1a-0cc2-4cf2-b4c6-7db3a467ba15"
        },
        "item": {
          "id": "4a85e508-df36-477a-af79-72e9c949596b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ae914084-1c66-49ad-b0e7-8597e826f3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a6c5a8-300e-45f0-9eb9-7ffff04d4c51",
        "cursor": {
          "ref": "5dcfd80b-a86d-414a-b40f-22bcd25d0109",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "956304bd-231e-4720-88c6-f6e540684c5c"
        },
        "item": {
          "id": "18a6c5a8-300e-45f0-9eb9-7ffff04d4c51",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "25e7e8fb-2023-40b2-a168-e3eaa16702e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e22614-06e0-4e77-8a88-726062c7c852",
        "cursor": {
          "ref": "acedc1f8-b6ba-45ab-80fe-b4ef974b8e0b",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "18432c46-bcbb-4e3b-bf68-216ca7a8d5a7"
        },
        "item": {
          "id": "d6e22614-06e0-4e77-8a88-726062c7c852",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f3fcdf92-aab8-4c2f-ad7a-f4a8eaecddb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f824386f-bc99-4a52-bac6-4845fb7b26f2",
        "cursor": {
          "ref": "2faefc29-f9e9-4763-a5ac-1fa19b8239ff",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0f2a7a54-e094-4d41-a167-8f6d729f75b7"
        },
        "item": {
          "id": "f824386f-bc99-4a52-bac6-4845fb7b26f2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "92241054-b69e-4694-b5d6-b276f412b0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04336aa0-1bf8-4946-acb2-38f3e0a9456d",
        "cursor": {
          "ref": "011cc4d0-0033-43cc-8187-a459bc7b2ecc",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5a2c817f-3316-476c-a067-1fc4bb2826ce"
        },
        "item": {
          "id": "04336aa0-1bf8-4946-acb2-38f3e0a9456d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "83d109db-3edd-4438-ab1e-ea68e5451d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ce0c21-4058-4a7b-b36c-27643864495e",
        "cursor": {
          "ref": "3a8b2257-e7c2-4e41-9907-c2ade784bad5",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "36e73668-f985-47b2-9837-f0a7a093e19a"
        },
        "item": {
          "id": "76ce0c21-4058-4a7b-b36c-27643864495e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eb494e76-9f10-499b-a1c6-8f21245d26dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae3503c-cd9a-4c0d-abe8-4fe7427fe06d",
        "cursor": {
          "ref": "bc4762f2-b086-449d-9330-69f822a42ae5",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ee4c6afc-cc42-479c-b2ed-460f0896ebd3"
        },
        "item": {
          "id": "1ae3503c-cd9a-4c0d-abe8-4fe7427fe06d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b18737db-33f4-4a63-8598-6cbe0f7ae326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1574fc02-1f28-4543-9bfd-43545d55073d",
        "cursor": {
          "ref": "af374490-2b42-4203-a419-814bb6eff21c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9fc8862b-0f92-4811-9c37-bc40db0edf2b"
        },
        "item": {
          "id": "1574fc02-1f28-4543-9bfd-43545d55073d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c1b2f841-ea36-4aff-8a99-5d18f850fdcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf49c59e-1432-4abb-8d0d-f6990b53c2aa",
        "cursor": {
          "ref": "38e9269b-6d9d-4236-bd61-80d62da57b58",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d846b74f-f57c-4e0d-a366-e6fdda7a9016"
        },
        "item": {
          "id": "cf49c59e-1432-4abb-8d0d-f6990b53c2aa",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d97f59fb-3ff4-470c-b216-b5e0b6f12ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7b5fe1-50e6-4682-acc5-b85e807d5cae",
        "cursor": {
          "ref": "e27c29f3-0d72-4bd0-a7fa-8b1ab1de159c",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3b8663e3-e48c-43ba-ab2d-f0ac6a13d7dc"
        },
        "item": {
          "id": "7b7b5fe1-50e6-4682-acc5-b85e807d5cae",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ca2123a9-023d-419e-b7e2-06da5995a49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a949e77-86e0-415c-88ab-7686e9c975f9",
        "cursor": {
          "ref": "3fa70803-c7e2-4718-8848-be261e3613a0",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7c9889e2-2b2c-4c27-8680-51ed5e65ba20"
        },
        "item": {
          "id": "6a949e77-86e0-415c-88ab-7686e9c975f9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "26eca6a2-033f-4fd2-9be4-7ceaf34547fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985c7344-36ba-4f52-bee5-d534291c0305",
        "cursor": {
          "ref": "52ccfd0f-fa08-459c-a018-b400bd0ce6ec",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c55c0e8d-f27c-46a4-8622-e580f8d83325"
        },
        "item": {
          "id": "985c7344-36ba-4f52-bee5-d534291c0305",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "76653b48-476d-49f1-aa90-2833c9b87a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88bbf62-b68c-44ff-8893-2c1b99811eaa",
        "cursor": {
          "ref": "b0030ed0-bfe6-45f8-8c56-4f60e15f51b2",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "04538ff4-14cd-4ade-9a76-e12deacb8940"
        },
        "item": {
          "id": "b88bbf62-b68c-44ff-8893-2c1b99811eaa",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0bac5d01-9317-42e4-8a9b-1af033cf8ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d5a44d-5be8-4bc3-83e1-2bc81bd00806",
        "cursor": {
          "ref": "e2c5db2e-49cd-4059-b518-5ad89586391b",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5ed01dc3-d06c-4dcc-8236-034f04df9c92"
        },
        "item": {
          "id": "35d5a44d-5be8-4bc3-83e1-2bc81bd00806",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "daa8de5d-edf7-4170-9b5b-da672186f55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcd909f-32a3-414b-b234-d1e4df8bf879",
        "cursor": {
          "ref": "96d7b686-101d-494d-8214-15f794006940",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7e1e9ab2-f5dd-4bf2-ab2f-8facd3353dea"
        },
        "item": {
          "id": "9bcd909f-32a3-414b-b234-d1e4df8bf879",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2256f4dc-4154-4f26-a44f-90f5e812a0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be1c83a-719f-4509-bca5-d2cd31c14a63",
        "cursor": {
          "ref": "65afc5d1-029c-4cfd-ad85-3d2bef310e82",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9646c87b-0357-4968-a519-38b15d1131ce"
        },
        "item": {
          "id": "8be1c83a-719f-4509-bca5-d2cd31c14a63",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5edc0a8f-e561-4111-bdf9-af1d1617c6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec311ee7-37ce-484e-bb38-4bb14ea6190a",
        "cursor": {
          "ref": "7c73f04e-8fe1-443d-b3cd-546bb38cbed5",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "111fbf25-ca33-452d-8493-0531d31b78a0"
        },
        "item": {
          "id": "ec311ee7-37ce-484e-bb38-4bb14ea6190a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5c5364ad-a623-4ff1-9ebf-7a09e282d6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74758e4-2fbe-4a99-bd9e-ef1f552f4f0b",
        "cursor": {
          "ref": "2a05beef-3908-4387-9a52-e4f190688cd2",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8e345b42-00f6-4640-a207-a20e218726f2"
        },
        "item": {
          "id": "d74758e4-2fbe-4a99-bd9e-ef1f552f4f0b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "13d3d90e-58f5-47e7-9ad4-abf60e9b2174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ad3dec-6fce-4c67-b870-5c28962dbe82",
        "cursor": {
          "ref": "017aee49-6497-492a-b256-d210e74f5a30",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "80de0d20-890e-494c-bd6b-6bb1f2e347af"
        },
        "item": {
          "id": "87ad3dec-6fce-4c67-b870-5c28962dbe82",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a1eab8d8-909c-42d3-8e89-71f68878b593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e9b5f6-f27a-4b6c-ae9f-055cb4acddbb",
        "cursor": {
          "ref": "8388ccee-5429-4ded-847a-632071348ba7",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e99f4ea5-4529-44bd-8268-a6a24c30acc6"
        },
        "item": {
          "id": "f5e9b5f6-f27a-4b6c-ae9f-055cb4acddbb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e44753e9-3aad-4fa2-8348-730ee5a3b30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328574ae-5400-4381-a072-85ed03c857b9",
        "cursor": {
          "ref": "9976af90-5ce0-40d0-b1cd-fb26bce02738",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d76b5cd4-a037-46c9-b8a4-3b6a704c13b8"
        },
        "item": {
          "id": "328574ae-5400-4381-a072-85ed03c857b9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c78a82f6-eb21-42a1-9328-6ea7a48f20bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e33169-70a6-4993-a766-8ca8eeddd837",
        "cursor": {
          "ref": "13f1209b-6d5d-4d09-8f7f-ed1903c07a68",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3570e175-d2c2-4b3a-a9dd-fc20d9e53471"
        },
        "item": {
          "id": "a4e33169-70a6-4993-a766-8ca8eeddd837",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "21054954-921b-4c72-b631-1b8c9ecd2116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c71996-e921-4e9c-9f8d-4a0db590e83a",
        "cursor": {
          "ref": "9dac1586-2961-46c6-8289-8dc8736708d8",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e244b6f4-33f9-4c41-8b45-dd23bf6fc9c9"
        },
        "item": {
          "id": "70c71996-e921-4e9c-9f8d-4a0db590e83a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "97d42f41-2df0-4edc-a078-5a1a2d5d4f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ff7c1f-da72-47cb-97e3-0dca7fbe1096",
        "cursor": {
          "ref": "6d591c49-e0f3-4059-84b6-11f25e5263e2",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d889b386-8462-4b53-a7c2-3be8e9c1ea90"
        },
        "item": {
          "id": "34ff7c1f-da72-47cb-97e3-0dca7fbe1096",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1b6767d8-fd30-4f31-9fb8-21415b6381d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6948ac-4d15-4c0e-8296-380d1ad96ee3",
        "cursor": {
          "ref": "0ebdaa0a-7ed4-4142-8577-dca3b00ce665",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "69ee3a48-e289-400c-98be-7be88b7c7ab9"
        },
        "item": {
          "id": "4c6948ac-4d15-4c0e-8296-380d1ad96ee3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "da0f0898-4820-4a36-984e-ebd5a130108f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85974f28-1f96-4838-934c-b3e13f3a12b0",
        "cursor": {
          "ref": "114b3b10-6a89-4e9b-998c-f21f03083545",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fdd93875-704e-4bcb-a4e8-dc35f9dcad32"
        },
        "item": {
          "id": "85974f28-1f96-4838-934c-b3e13f3a12b0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "854e0c70-d0ea-4e81-aa6e-138412dd2f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d960f65d-60a9-466a-b307-8ca70f49c141",
        "cursor": {
          "ref": "ce3c3282-16cb-4d10-8a60-22f42213d542",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "560858e0-205c-4079-8b53-a264cd8341c9"
        },
        "item": {
          "id": "d960f65d-60a9-466a-b307-8ca70f49c141",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f0b2b801-3479-4178-81ab-3359aed1919c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16b1300-0c03-4dcd-ba34-01838ae69421",
        "cursor": {
          "ref": "f60da7e9-b92d-4150-b7e8-f38e5f1383b7",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "154c78c8-0fe9-4b31-a5dd-5f7cb3c63384"
        },
        "item": {
          "id": "f16b1300-0c03-4dcd-ba34-01838ae69421",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e8d67b15-cc44-48c7-930c-fba861418421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8686c8-9947-4b58-a027-cdd105a8ffa3",
        "cursor": {
          "ref": "a10184e4-7270-44ab-b28c-94fab114bd05",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f19f07a7-9634-4db6-a390-ab6b30b4d23f"
        },
        "item": {
          "id": "2a8686c8-9947-4b58-a027-cdd105a8ffa3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1272efd3-9184-455a-8929-ff01fe0348bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afaccf3-f23f-443b-a9d0-7aa8ec67a097",
        "cursor": {
          "ref": "a428e80e-5480-4fe2-9713-78adc2607322",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "546f402c-452a-45a0-a439-7fce74762812"
        },
        "item": {
          "id": "8afaccf3-f23f-443b-a9d0-7aa8ec67a097",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b47ff0d8-8fb8-44d1-a14e-bd14e3398ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203cd4f1-51c1-4ae9-8b60-121e3e450b5d",
        "cursor": {
          "ref": "8424a1c1-91e3-4999-b8c3-219313e8cf9d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "13b97a9c-36fb-4614-88a2-c85423598ce9"
        },
        "item": {
          "id": "203cd4f1-51c1-4ae9-8b60-121e3e450b5d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "425c6d0d-927c-49d3-8b66-c85ec31fe121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61ec293-1441-41c2-97cb-c46b1bf23f34",
        "cursor": {
          "ref": "962c7ba0-68b1-4deb-88f9-9d575fb504a4",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "22648d36-31d9-4ecb-96d3-bd0a050796c1"
        },
        "item": {
          "id": "e61ec293-1441-41c2-97cb-c46b1bf23f34",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4ecf8954-1072-4976-b4cf-be98b1308c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03be84a-08d1-4f9d-a3ea-1f5a7ac7a09f",
        "cursor": {
          "ref": "ccbc4c72-bce9-444c-853a-1f3105533c51",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5ed84fd6-d250-4ea1-847c-0edc80f9df2a"
        },
        "item": {
          "id": "c03be84a-08d1-4f9d-a3ea-1f5a7ac7a09f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c6353c4e-ed37-4dc2-98b3-9cdf2b825067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02497310-9856-47dd-beac-08ca91f64525",
        "cursor": {
          "ref": "86f05173-9df0-4cce-b947-81e312f65be9",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7841eb36-fc15-4bf0-a67a-7b904169ca5f"
        },
        "item": {
          "id": "02497310-9856-47dd-beac-08ca91f64525",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2a80347f-c1ee-4f84-bbd3-3e52eb566729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ea664c-9982-4eee-be9c-e664dbaeecf1",
        "cursor": {
          "ref": "c3919e7e-c2bd-4e7f-9d0b-99107fa9eaa2",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7af4345b-3743-448c-9239-1ce46edcdb55"
        },
        "item": {
          "id": "40ea664c-9982-4eee-be9c-e664dbaeecf1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c9ac309d-8792-447e-8c41-db36b90886d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fbc485-1788-4039-8020-2023fbbbe4e2",
        "cursor": {
          "ref": "a160690d-3d56-4fe2-98ff-f776059aeefd",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "915c9136-db1c-49b4-8c10-5d7709debb20"
        },
        "item": {
          "id": "f6fbc485-1788-4039-8020-2023fbbbe4e2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "04d768e3-8492-4290-a5b2-0e487f6b54ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd537784-0af0-452e-a35e-9e9d6cb2d225",
        "cursor": {
          "ref": "0de2dff6-c146-43ac-95b3-cd05e1c07f27",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "da748f11-a8fe-42de-9f58-06ef818677ba"
        },
        "item": {
          "id": "bd537784-0af0-452e-a35e-9e9d6cb2d225",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9a962579-821c-4aef-975e-f3f3277bb378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3215d01-8821-4210-bd12-2f1dc3dfd7db",
        "cursor": {
          "ref": "87b5905f-8acd-4c70-83a0-3e6c8a0d72af",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b398a842-ce0b-4e3a-b308-714a8d847587"
        },
        "item": {
          "id": "f3215d01-8821-4210-bd12-2f1dc3dfd7db",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a0feac56-77b7-4c88-9d19-691f38614d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65999e6f-ec72-4c7d-bf82-9cc05d9c5cf6",
        "cursor": {
          "ref": "47f62fdb-26b8-43aa-8690-be89c97c425f",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e2f0652c-0781-4629-b5e5-f43873bf7e2d"
        },
        "item": {
          "id": "65999e6f-ec72-4c7d-bf82-9cc05d9c5cf6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "31e35e6d-0a60-4cbc-965c-e95e11df2da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8231a1ba-baec-4ca1-ba61-a28656eae3f7",
        "cursor": {
          "ref": "dcb8ff54-0668-488d-a285-e4f7c0422bf0",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ac69ad1b-24b9-4b9f-bbfd-0262d88e72a2"
        },
        "item": {
          "id": "8231a1ba-baec-4ca1-ba61-a28656eae3f7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "aa7ebaac-4d88-499a-a070-e436420b7cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350e6837-05b3-4d8a-b62d-dcff57ca35c5",
        "cursor": {
          "ref": "ffc7f09f-10e4-40bc-a98c-2b92fd54991c",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5bf48ec3-7636-4ef8-af4a-9c8ed70ca85b"
        },
        "item": {
          "id": "350e6837-05b3-4d8a-b62d-dcff57ca35c5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "66d18608-5e0c-4b5a-9e8f-1e1fabc9a51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83502f2e-2273-4a00-badd-24de8f82fb20",
        "cursor": {
          "ref": "503c3fc1-a350-4575-95a7-045e8a0cbc9a",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cfbe9370-7856-4244-ab6b-23c2cd2fc4a1"
        },
        "item": {
          "id": "83502f2e-2273-4a00-badd-24de8f82fb20",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "72122e3d-2615-4605-88b3-d9bd0f8a7d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe0e185-990b-4174-8488-8646ebea940a",
        "cursor": {
          "ref": "93c8a550-f3ba-4f27-9c67-d3acbf4314ff",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "12ef816a-ae18-4f4c-9313-1142200a9be0"
        },
        "item": {
          "id": "0fe0e185-990b-4174-8488-8646ebea940a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "dd0531f6-3552-4ccf-8007-6b60e9b7d778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcd0b98-3dfb-4932-a587-5e22a4f93e13",
        "cursor": {
          "ref": "fd9a834c-6d23-4717-bee9-775f4d576f5c",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "370f22af-4407-436f-a714-ad0d97d2e248"
        },
        "item": {
          "id": "efcd0b98-3dfb-4932-a587-5e22a4f93e13",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "10510f2f-8979-4f86-b375-f33abb2e8078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5327674c-627d-4713-9dd3-e6a30a4c3369",
        "cursor": {
          "ref": "7e9d862c-ebe9-4eec-b398-e39151c8516c",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "14f68e90-e406-420b-9d8a-572d4ab8aa20"
        },
        "item": {
          "id": "5327674c-627d-4713-9dd3-e6a30a4c3369",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6a29d9de-9187-4da4-9e9b-407ed2a894b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7051fe83-87a1-4050-95d2-9c6e815d6614",
        "cursor": {
          "ref": "fc35a3ea-e335-4f10-99e8-2e85cca42d1a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bca077ac-0aef-4739-9e6e-5cd8a27dead8"
        },
        "item": {
          "id": "7051fe83-87a1-4050-95d2-9c6e815d6614",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6d16f0b0-fb90-425f-b71f-7bd2f6219cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbe1484-5a84-4622-8986-3fe9abe774af",
        "cursor": {
          "ref": "85358bb0-9ad3-44d9-aa71-7b6568451c8c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9c41dcdd-014d-4621-b31a-80784610e0e8"
        },
        "item": {
          "id": "bbbe1484-5a84-4622-8986-3fe9abe774af",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6f0cb910-6237-4504-a6aa-f8331a8ea008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a92ead-76cc-4b5e-9f36-bd679ff60ca9",
        "cursor": {
          "ref": "c6a289eb-7d08-4c01-805a-f8827da3c822",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "65056231-6912-41c8-8c07-fda625ecebe5"
        },
        "item": {
          "id": "01a92ead-76cc-4b5e-9f36-bd679ff60ca9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "087f4d66-94d5-4661-a7f8-f9f472674f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dd680b-59a4-49a5-b109-019a5716583f",
        "cursor": {
          "ref": "252662b9-0368-4c42-8941-ee816af778aa",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7ae6ae1c-ca36-43f1-a991-4ccac9c7c371"
        },
        "item": {
          "id": "18dd680b-59a4-49a5-b109-019a5716583f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "718f0c46-139c-4ce0-a5a6-f6a9d6007d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251c235a-d14f-41d8-9973-8430026b2e75",
        "cursor": {
          "ref": "75de1fd8-2858-4701-9d29-5f4b7ac8ce4c",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f28460d5-5a69-49d5-95a0-b3fbbe87bb4c"
        },
        "item": {
          "id": "251c235a-d14f-41d8-9973-8430026b2e75",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7d0ac1a3-c0f6-437f-bee9-5bf38d2950fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2543adb0-9c19-4d1b-bff6-6fb9bed4e5c9",
        "cursor": {
          "ref": "00f3a85f-97ca-4403-9da5-37a7478b336f",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7e37a931-0ad7-462a-aed2-8e453a1a2f5a"
        },
        "item": {
          "id": "2543adb0-9c19-4d1b-bff6-6fb9bed4e5c9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a661f94d-da78-4ec6-b446-ad4553addaac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7caf7ea6-cae5-4e3f-9c3f-7551194e20dc",
        "cursor": {
          "ref": "b3139c61-c4f3-43b5-8190-c3a641bb5f63",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1c73f5d4-66be-4a64-ab66-3747d3dabb7f"
        },
        "item": {
          "id": "7caf7ea6-cae5-4e3f-9c3f-7551194e20dc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e4ef9d04-67c0-42a4-8953-9a17076906ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c9ec85-2722-4336-813d-92a1844ae734",
        "cursor": {
          "ref": "f2cafe42-0087-4a02-aca4-7fc246058d89",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9a4493be-b139-4a7b-9754-30d2367fcb10"
        },
        "item": {
          "id": "57c9ec85-2722-4336-813d-92a1844ae734",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "03407feb-02de-4921-8b17-d2d191e91a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861ceb51-4791-4f13-be94-b2fd05d943e6",
        "cursor": {
          "ref": "336205a9-1449-40d1-b589-83c230adf3ac",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ef0f98a6-3531-4636-b81f-4302df791efb"
        },
        "item": {
          "id": "861ceb51-4791-4f13-be94-b2fd05d943e6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8eeb6757-1313-40bf-90ff-45a331f63fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c53fffa-ba60-4bfc-9b06-9387dc7e7b5b",
        "cursor": {
          "ref": "0d7a2167-3d6b-4b75-ab1e-1188af0ed11d",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7d1b32b7-484e-4469-bd68-ba193f9e9cc0"
        },
        "item": {
          "id": "6c53fffa-ba60-4bfc-9b06-9387dc7e7b5b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1494c370-b40b-4224-a158-8dcbc687cbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c875621-d50b-474f-9001-ed105bdfc3fd",
        "cursor": {
          "ref": "91437f75-ddb3-4f2d-88d5-cfe153b3d30f",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "75fde134-f248-4482-b374-c3de1b4d6a1d"
        },
        "item": {
          "id": "4c875621-d50b-474f-9001-ed105bdfc3fd",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c4143bb2-b030-4985-9acf-02fd19d1c268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59272116-1249-4aaa-80ef-a919b4cd582f",
        "cursor": {
          "ref": "bfb904eb-5863-4029-818b-0255ba8e9140",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "339d6ab8-cbed-46d6-8c1f-471a57e79660"
        },
        "item": {
          "id": "59272116-1249-4aaa-80ef-a919b4cd582f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "63b8824b-249d-4d4e-add9-2346b6ac3fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d2fde9-228a-4f85-8647-3637f0ab47aa",
        "cursor": {
          "ref": "d6411dec-16d4-4435-87d2-77e12fe0bc23",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a412a747-8a17-4cff-8740-76744065122e"
        },
        "item": {
          "id": "91d2fde9-228a-4f85-8647-3637f0ab47aa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "456b005e-7a25-4b9d-91c6-f3cdfad6f085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59aafe71-56b2-45f0-b1a1-aa66f9efbd7b",
        "cursor": {
          "ref": "9ccd3151-d63b-4fa2-8d14-fd0b32eae4af",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "212567ce-053c-4f01-b61c-77037f2527f9"
        },
        "item": {
          "id": "59aafe71-56b2-45f0-b1a1-aa66f9efbd7b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d8d573d8-fd66-4740-94f3-f9203cef13c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b061ea13-63ce-4447-8964-f259c3b95e42",
        "cursor": {
          "ref": "df80b621-b94e-4ade-970f-c84e6cbbb849",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a1d95bb4-ff79-482a-a24e-928f3da72ad3"
        },
        "item": {
          "id": "b061ea13-63ce-4447-8964-f259c3b95e42",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a03db4d8-5b6e-4835-b768-40fa3b6080db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f655002a-f5ad-4145-886e-f88377bd91b7",
        "cursor": {
          "ref": "3f72910b-83f5-4bb0-abd2-8187712069dc",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bbc5fe08-0534-45a6-8612-dcde6e2dee12"
        },
        "item": {
          "id": "f655002a-f5ad-4145-886e-f88377bd91b7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "eb969616-cba1-480e-a201-9866ccc5620b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa46b79-89eb-4777-a583-3f054acd7348",
        "cursor": {
          "ref": "160ed914-a0f9-4b49-a169-419ffd876bb5",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f7ef13ac-b7a5-40e4-977a-ce7d4befe466"
        },
        "item": {
          "id": "faa46b79-89eb-4777-a583-3f054acd7348",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b6677d2a-3636-4cce-b3cb-19ba39367ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7683b8dc-eb97-41b8-ad40-619b34a648f6",
        "cursor": {
          "ref": "06e164ab-1881-4215-bdfa-2da91e5b2571",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "25eb0dd2-c8e3-48d7-b344-74617e8d7383"
        },
        "item": {
          "id": "7683b8dc-eb97-41b8-ad40-619b34a648f6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "26a6a7be-45ae-46a2-a7d6-9cc98cdcc958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb2628f-3932-440e-b9f7-2b58cafbe023",
        "cursor": {
          "ref": "fd2ed3cc-6ca9-4fe9-b584-695e3f5cdf6c",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "64563f9b-231c-4551-b3d8-d641816558b7"
        },
        "item": {
          "id": "7eb2628f-3932-440e-b9f7-2b58cafbe023",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8a4106c4-0c13-4e23-ac83-ad682d3af2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451534d7-e51c-49c8-806b-2ea6e2beada4",
        "cursor": {
          "ref": "6ebba63f-44e2-4e17-a2b9-f6f92f614926",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b64dd47a-cd5b-4110-9ecb-e25f6f6c9f10"
        },
        "item": {
          "id": "451534d7-e51c-49c8-806b-2ea6e2beada4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bb4a87bc-7bad-4c66-92f3-468cafef68f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f163acfb-cd58-4db4-8d27-76e4d1d7f36d",
        "cursor": {
          "ref": "8b105f9a-3d6b-4828-a668-418681120b01",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0450fb87-36a9-491d-9a91-229ed9a1bca7"
        },
        "item": {
          "id": "f163acfb-cd58-4db4-8d27-76e4d1d7f36d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ac72bfda-7ca7-49d4-a8ff-21f669954672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f425a701-b356-417d-a32f-48881967e489",
        "cursor": {
          "ref": "b74f0249-53ad-4383-9b46-e0050a86d71a",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d27e9c8b-b196-43eb-b109-8d70d7a386a6"
        },
        "item": {
          "id": "f425a701-b356-417d-a32f-48881967e489",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c619c95e-2dc6-49f3-95a1-44e1ed4da65c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e22074-8bfa-49c5-877c-3019db0a683a",
        "cursor": {
          "ref": "0f1fea8a-66a6-446e-b787-af41ad4823c5",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3913d715-e555-4061-ae5f-fda1e3894294"
        },
        "item": {
          "id": "58e22074-8bfa-49c5-877c-3019db0a683a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c24fa185-2228-49b9-8980-ac3741730190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a31c188-e7ad-4d55-94c7-85eb38ade52f",
        "cursor": {
          "ref": "a499a608-c4ee-4765-9953-ce7206ca4043",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5e662507-ccbb-4cc2-82cd-bd911cf98fb7"
        },
        "item": {
          "id": "5a31c188-e7ad-4d55-94c7-85eb38ade52f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "549d3d12-194b-4467-8eaf-a8c92b7053ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d37904-ff8a-4adc-a9f4-1c35dd8e1997",
        "cursor": {
          "ref": "0ba84dea-5751-4e36-aafe-553e1fe8e52d",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1e97b324-a4a3-46e2-9afe-54027211b2ab"
        },
        "item": {
          "id": "a9d37904-ff8a-4adc-a9f4-1c35dd8e1997",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "36fe442f-a613-492e-8df1-f46dd56b95f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5d736c-be88-4b54-a717-a39bd8e46dd4",
        "cursor": {
          "ref": "b3ebe264-d98e-4cee-bed6-5610095a0201",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "819246fe-6526-4156-bd58-0508515b7eb8"
        },
        "item": {
          "id": "6e5d736c-be88-4b54-a717-a39bd8e46dd4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8cced4c0-b970-4098-8f61-0d3478d7c2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b04846-3c5f-4381-b7de-d43948c17e5c",
        "cursor": {
          "ref": "d83efb2c-9ad5-4bf6-a202-516beb9314d1",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "34eda5f2-4188-4b58-aaf0-63f3252e3813"
        },
        "item": {
          "id": "55b04846-3c5f-4381-b7de-d43948c17e5c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b91f1849-03c2-443f-99ee-d3fc498d868c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e614cf26-311c-4740-b761-9a33c1207837",
        "cursor": {
          "ref": "03d4b0aa-a44f-4483-8797-58d2e2ade760",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f946c296-2706-4225-80d0-cefed9c6a2bf"
        },
        "item": {
          "id": "e614cf26-311c-4740-b761-9a33c1207837",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a5f86fe5-8611-454c-af2c-b84dd96f90af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d2b1e1-f4da-4e82-9bcc-cd839acb0d1f",
        "cursor": {
          "ref": "48fd977f-e2c7-40b4-9fdf-304460e18d2e",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9e533c2c-9c7a-43f8-b624-af06bae1b384"
        },
        "item": {
          "id": "a4d2b1e1-f4da-4e82-9bcc-cd839acb0d1f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9bf11081-2874-4c5a-a26f-b29aaa2a724d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a11eb6-f163-4340-95ed-15a95636ecee",
        "cursor": {
          "ref": "0e60ed82-6b0c-442e-93f4-99b49bff1979",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2adf1831-1877-4eb9-addc-b88fae98beeb"
        },
        "item": {
          "id": "38a11eb6-f163-4340-95ed-15a95636ecee",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0662af80-6ad5-4640-b2d5-a56fd5307cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083e7835-7ddb-434f-98b3-9ca8ceb379fc",
        "cursor": {
          "ref": "bf627824-55da-4b00-bd2f-b051f77b2379",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0ef46900-3057-4812-88e1-8e6bf5e416af"
        },
        "item": {
          "id": "083e7835-7ddb-434f-98b3-9ca8ceb379fc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9f062a29-28ed-4b79-a205-05429f147af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81706b45-eb13-4d37-a90c-04fab61cc9cc",
        "cursor": {
          "ref": "4218dd2d-af00-436e-b017-6f3db120896e",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6383a410-e4fc-4ab9-855f-4d5308e1d949"
        },
        "item": {
          "id": "81706b45-eb13-4d37-a90c-04fab61cc9cc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e1230e0d-256f-4209-a9e9-00b1e226a66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef95c72-ad6f-4775-ba41-9bce0d0c1473",
        "cursor": {
          "ref": "3177e3f1-0f9b-40d9-85e1-c07cd1682362",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b6a57936-7320-42fb-9d5b-4cbfd4be6c5b"
        },
        "item": {
          "id": "4ef95c72-ad6f-4775-ba41-9bce0d0c1473",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a9cd60e0-da31-48ee-8211-cb183efd7c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d57612-5cf9-40f2-b671-0ede5839ae6d",
        "cursor": {
          "ref": "610e31f5-1544-46b7-a3eb-1210e33c32c8",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "70812e33-b125-466c-b9f6-cc82f2b0359f"
        },
        "item": {
          "id": "98d57612-5cf9-40f2-b671-0ede5839ae6d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f5d3bbf6-b0eb-42ff-a8ad-e904726b292d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12234053-638a-4cb2-97fd-f830c668aeb3",
        "cursor": {
          "ref": "363b061b-813f-4c31-a83e-e125d3e63897",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d7e1d5d6-db39-4fe6-9de9-76614364344b"
        },
        "item": {
          "id": "12234053-638a-4cb2-97fd-f830c668aeb3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e0680323-5fe2-419c-8069-197f040fd376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2e21b8-2a3d-4f10-9a1f-383701586f57",
        "cursor": {
          "ref": "f9333138-108d-48b5-a8cf-24ca35b65425",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9e3180a2-19cf-4ee2-b506-787cc81bdc56"
        },
        "item": {
          "id": "2a2e21b8-2a3d-4f10-9a1f-383701586f57",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e728a371-43c3-42f6-825f-4e5b3284690b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5e7687-2de7-4957-bb47-dc1026d34f3d",
        "cursor": {
          "ref": "a441d2e7-656d-4691-b3a0-73545f50f110",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a2f4e9c8-fe63-4090-809b-212c77ad0213"
        },
        "item": {
          "id": "0d5e7687-2de7-4957-bb47-dc1026d34f3d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d401ad08-f962-4ceb-8c28-85ee16bfcc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3ac496-4541-4cc8-a9ea-ac8b55d670fa",
        "cursor": {
          "ref": "387bb4a5-2455-4f10-b131-a810732c0374",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "477a8bd6-a076-4409-9567-7bcddf5dcb71"
        },
        "item": {
          "id": "dd3ac496-4541-4cc8-a9ea-ac8b55d670fa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4afc59c5-c20d-4264-b9ba-58dd78037a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4a1da8-676b-4d4b-951e-4c243485e4b5",
        "cursor": {
          "ref": "50800abd-d00d-417f-aca2-efb67e5ba78d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "74399fbc-6571-4e12-927e-4b935d8bd4e4"
        },
        "item": {
          "id": "4a4a1da8-676b-4d4b-951e-4c243485e4b5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7b8dcb3c-dd4b-4240-bc63-54d16eaf64a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49284af5-ff4a-4d1c-8f48-eac73abe297e",
        "cursor": {
          "ref": "003d9405-c546-463e-93c1-d95096704a31",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "198306b6-c07b-4c18-9c7d-09b7840293b5"
        },
        "item": {
          "id": "49284af5-ff4a-4d1c-8f48-eac73abe297e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d3e2c8c0-ed5e-42b3-8f74-4dac8afabc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac00467-54d5-4150-9df4-91b0835f398b",
        "cursor": {
          "ref": "ca0022cf-f3a5-4b02-a2f5-e82fd53a8475",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c8ba3150-c6d1-432b-ab31-022e9e7ce1e8"
        },
        "item": {
          "id": "4ac00467-54d5-4150-9df4-91b0835f398b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7dbed9e3-a247-4e4a-9c2b-0c08704aa7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68a9087-ee6d-44c6-ba50-0433eba43586",
        "cursor": {
          "ref": "711e1620-2f65-4915-8cf6-8ae4c79208d0",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a0978e09-c9d5-4d4b-9a57-a2bd8983b105"
        },
        "item": {
          "id": "e68a9087-ee6d-44c6-ba50-0433eba43586",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "60c68eb0-991e-476f-8954-7da1cfa48a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb80dccd-51a6-411e-b916-02add285e88a",
        "cursor": {
          "ref": "05df5173-0764-4c8c-83fa-5754d1cc2dec",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "88878f37-3c2e-47bc-885a-086b078b7019"
        },
        "item": {
          "id": "fb80dccd-51a6-411e-b916-02add285e88a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9310db4e-6a2a-4a4f-937b-f0eed352643a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046f973e-145a-4480-b33d-0f2d23b26f40",
        "cursor": {
          "ref": "3f96f10c-0034-4fef-8587-5a94044bbec0",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "be647258-bcf3-4bb2-86ed-14695ad62333"
        },
        "item": {
          "id": "046f973e-145a-4480-b33d-0f2d23b26f40",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bb38225d-fe00-43d7-a8da-e0c61e684a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea8d3ea-1aca-4f36-9696-d1b6e871697c",
        "cursor": {
          "ref": "e0b125b2-09b5-4bdb-974c-f20fdafd0dcc",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a44a8863-7636-478d-a2c5-844c2dc964f8"
        },
        "item": {
          "id": "6ea8d3ea-1aca-4f36-9696-d1b6e871697c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c685590e-8fb9-4ab5-8133-475620fda9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d26488-4e25-4988-bbd1-8860ae45afd9",
        "cursor": {
          "ref": "9e503f43-0b56-418c-b3c5-960df92f2dc3",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "66ee4a5d-8e29-4eeb-9f1c-b512d51e0d66"
        },
        "item": {
          "id": "63d26488-4e25-4988-bbd1-8860ae45afd9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fc3db2dc-6054-465f-8149-10273f05ef08",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb905e0c-2502-4f30-b737-fd2e950ab352",
        "cursor": {
          "ref": "8844b922-7a71-4c49-bd5e-fcb437ea89e2",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "148190d6-c72e-4654-affa-4b56483bec9f"
        },
        "item": {
          "id": "cb905e0c-2502-4f30-b737-fd2e950ab352",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e83bec06-da06-4c33-beeb-30c8ff0069a4",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d839ec2f-9adb-44f4-a066-7c818384cc82",
        "cursor": {
          "ref": "a45ffa72-1366-49e4-b2a7-c7b3a57a14e5",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "cf9170ad-a2b4-4ce2-b0e7-ce2cb6b6dc7a"
        },
        "item": {
          "id": "d839ec2f-9adb-44f4-a066-7c818384cc82",
          "name": "credentials_verify"
        },
        "response": {
          "id": "df4c0340-4db0-4b80-8b2d-fd0edaa090f2",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4153ef34-248e-456a-8f2c-81720ddec8e2",
        "cursor": {
          "ref": "35b2718e-a38a-448c-9ca4-8b6e04b5755c",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "edf53e4e-6ccb-4c2c-a1b9-235cdb7ac19f"
        },
        "item": {
          "id": "4153ef34-248e-456a-8f2c-81720ddec8e2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "18a0fb83-9c36-4ae8-a54e-19be91ad4b91",
          "status": "OK",
          "code": 200,
          "responseTime": 29,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0816a385-be42-486c-a9a6-973e897fce98",
        "cursor": {
          "ref": "680a0a54-f89d-4dbb-ac33-9c1dc523f34d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "15c7aa78-5e50-4f70-978b-87880874daca"
        },
        "item": {
          "id": "0816a385-be42-486c-a9a6-973e897fce98",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "63b4fd30-468e-444d-baf3-3c59d09a535f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0816a385-be42-486c-a9a6-973e897fce98",
        "cursor": {
          "ref": "680a0a54-f89d-4dbb-ac33-9c1dc523f34d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "15c7aa78-5e50-4f70-978b-87880874daca"
        },
        "item": {
          "id": "0816a385-be42-486c-a9a6-973e897fce98",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "63b4fd30-468e-444d-baf3-3c59d09a535f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a9879a-52ad-4d9f-ac6a-344e3649250f",
        "cursor": {
          "ref": "7296614d-7cad-4374-ae29-8fcfc4b60991",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "aea74d66-4075-4856-9196-8344fe513a7f"
        },
        "item": {
          "id": "56a9879a-52ad-4d9f-ac6a-344e3649250f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8f271cde-9ca7-469d-8fef-62b1fd64b010",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f6120e-f636-484f-a561-2832ea3a0143",
        "cursor": {
          "ref": "42abe10c-4be9-4b5d-b609-ceb0c7b41a93",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "96ff0a17-fb39-4598-9e13-6a762de584e0"
        },
        "item": {
          "id": "62f6120e-f636-484f-a561-2832ea3a0143",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "69a6b61b-4bc7-470f-aeee-f35c235c1c29",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}