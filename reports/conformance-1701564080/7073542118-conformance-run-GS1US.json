{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c5d04385-17c0-4f09-9a8b-e45c0e380c23",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c0300d2b-abd7-47e6-811f-5944c160780a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "51231f3b-6170-4817-9fd0-ee2623db817d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "58a5600b-bd48-4dea-8e32-965962dffa87"
                }
              }
            ]
          },
          {
            "id": "63a99aba-f7c2-4a32-95f5-df3b62458e33",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e56fb327-d21b-4c42-ae8e-615ab401cab1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eb9f0a4d-5932-45cf-82da-1d6ec48ca32e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0b2a7fc3-08db-46dd-ab94-d7c3a2a039cf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a75f5d9c-461b-4b98-b431-e54d3e76906c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "831bfdeb-33bc-43dc-9553-80b7020ffa0e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f55cb15-e2c7-4134-8764-9a0f91b58bf7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82d45d6d-57f2-425f-9606-f26327396934"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9684354-c8ca-412d-90f3-52083033db12",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a8efa2a3-1f0d-467b-a104-84bee7b6c823"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e1be3df7-a554-400f-88aa-cbd97a8b9527",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b2e0085-dbe6-466f-98e5-c16ef2e683a8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c46b3c33-7ae7-42b2-bae9-5628d5e2fd8c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "36d768ff-f991-4db7-84e9-8606e5214c16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a688b108-2323-4b7e-8088-0fb9c27fce30",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54ac3963-8630-42f4-b20a-00f8d48ae6ad"
            }
          }
        ]
      },
      {
        "id": "40222864-c50d-4e18-a884-88728daefb7b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "672cf9b0-23d5-4c52-aa73-f27992c858c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f34e334-cf76-4de5-961e-ef0f82cfa1d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "edc050d8-48f9-4c01-9877-39505610c5f7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137e3d3b-ac34-4202-a829-2f3111502b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1265914-5b33-45ca-b542-04003c5454a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69236699-0bda-4e1f-8530-cb3e4ef689ba",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50752a4d-04f3-49f1-92eb-9e788755823a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "569280ac-5dfb-4259-aa9c-0d2d9143d1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd73c86-69f1-404c-99b3-9fec1a66a6c5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ff5190-58c8-4309-b5ce-0fc6df862800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51ab46db-a72f-407e-b9e1-99c6563e2172"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c3d382a7-4344-4493-b3f0-bcc9039259c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9387f61b-9334-42ec-9e38-3da81b5b37bf",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d9cef9-378f-4e35-a365-ec438f9283ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ae8a73c-d4ac-4bf8-8bfb-84f4c9b838b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afcc8ac-911e-43ca-91ad-03bdf3f47e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce47a5c-2b53-4f10-ad91-12103a1361d6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "43fcb5c8-888c-40f2-bb91-9e8f21599ee4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0802b137-ad0b-4f86-a4e5-e6ad62980d6c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "053b70ca-f55b-4546-96a4-02bfda728b3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b5cb670e-ddf4-4adc-a5af-f3aef0d523e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6e20872-0cf9-49f4-88f7-bcfebd087bb2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e05a1fb8-9ae1-4f88-960d-4cb1a293b897"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0afc4e0d-445b-407b-abad-4b136d4879af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af5451c6-4aa9-4c66-988d-b6e7eee938bb"
            }
          }
        ]
      },
      {
        "id": "7d1ff57d-ce95-4171-afa8-2bb8a6eed23c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4793d54b-126c-4f14-b444-a6ce96c7bac2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "794cee18-b598-4113-b167-52f33fd0356f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4a438561-c5ca-4e87-adca-1336d3502178",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d01928b-53f4-43c5-9e16-5a810c878b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35011dcc-9d18-438d-8d18-594070fce40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c933d0df-8fae-44d5-9cfd-425a773928a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8eaa86bc-dfd2-4eb8-83b9-ed2ee4183b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b95b869-5f88-4d89-a622-dfb97e69c991",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2296b227-8482-4f98-bbc4-e18c20310de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67dd988e-637c-4b77-8172-3f9560bc6735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f999775-f37a-4f7b-bcac-c9812d89e1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a215f8b-536d-41ef-8250-de1812b7c2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bf18b8-bce0-4517-b04d-bb24271b2eb8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c5a7e8-08e0-46ec-907d-c8b222c669ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807a33d2-884d-442b-b355-72586614e916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f60acb-d227-4d5d-9ee5-a0f015147ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "744e60ad-f060-49f0-a449-33871187db92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44f55cd-2c3d-4023-9398-74d4e30e8225",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824cb639-1af1-4719-930b-9339769b4fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ddf43aa-7abb-46dc-9e57-c7ff677ea532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b9fe2a-c53b-4e5c-8829-81eef6740618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "986eac01-d730-4bdc-9b55-ebb44a749606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90a3a90-fd5d-4820-a9eb-ec495cd9e40d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcb67cb-a61e-4874-b0e8-357d921ae695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2850efc9-2206-4c39-9f8f-33815cc761ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1e2351-c6e2-4c50-9880-3ce20ea4f46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56d6d258-e645-443e-9f8b-cc2b5e169947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3988de2-7b3f-4b05-b40f-e2b57f4917e4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030ecaf8-7abe-4a45-9de9-8707f664c09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fadfd81f-b139-45ed-b660-6b95fc66a999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c425fcc6-ff34-4f27-ab66-a6340efecdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33f15c63-2cbe-4c7e-a602-3e0f22b416b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b6164f-5e6a-43b7-a71f-b804a024df85",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07f2aa5-b785-4d01-a241-8357aadbea61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25036366-0158-4ed3-a569-11323c1189c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019eb2f9-21b9-4cf5-92a7-5cca8190c925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e9f3885-2a91-4b1e-8844-41206fcb2da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd6c224-b9ab-441a-8e77-c7ba2e4738c8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4720e2-ad7a-4838-973b-0168f42699b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8afd33b5-fc97-4f79-acf8-a743c5ea66bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9a8472-b333-4c63-9344-a025122b8fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40aadfc5-a793-4d9e-8632-523732a478f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff424c2-bc73-4390-bc4b-cfc13c05ebd6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fccc95-0d60-4115-b5df-34bf1d0054d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5753a9-2782-4319-a6b4-16d0a668d717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92cfe73-e2fa-4e9c-9e5f-62628e1876b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06e645a6-4188-4bc8-b7d9-0c45c13fa3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a45ff0c-52ef-4d65-b496-12c89a7bfae0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71340f65-0c9e-4581-8bca-0538a2be346b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93262cff-e9dc-49ae-a8ac-35e6fecfea6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40433a14-1286-43e5-8d32-5128953b1229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfce95c0-f381-4b61-9a6b-59d16a28d0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d237bc-2e63-45e3-b298-82cdfbfa65d0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3ffd90-65de-4418-8ec7-38abdf0dee12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294a7929-d6bf-4935-9b54-c75886fe7a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecabb64-2b36-4659-be8c-33a1164e5971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "813e2a0d-4332-4174-b5d3-5c836ed74af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659284f3-9061-4c27-9ba0-fe016ea4c948",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d73e25f-c6d7-4669-b2bb-0a8be5d07380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbda4462-d637-4261-b06b-3b4de4a9f7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac10d1c-c018-493d-a082-afdf2f154bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "214eef2d-b003-4db3-9437-f60a42d1bc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52261a7-4f9d-4f75-b1c3-60458c36bdc8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16832ecf-f62b-4e92-847d-fcf04ae61aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcdc23df-39fe-43ba-a6ae-67d5374c8f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f39925b-5d7c-41dd-a35c-7c0da5524664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fa6e071-2268-4d12-a2e4-f8d9353cb0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620fb6b4-8a87-4718-9839-431f35abfe33",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48304eed-c267-4d6d-9556-870834071122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13dc0d1-f740-4fea-85a7-7b73ec807b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54dae52-e50b-464f-a865-c431de740edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e4fea23-b3d5-4f9c-b698-6f91c9e873d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9054666-8d74-43ea-a09f-b4c541a25395",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c36858-d724-436f-99bc-65a75493a118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a311b3b1-4669-44d5-b5a4-c71a82abf8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b691daf-5367-41fb-a4ad-b9f0a162320f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e36f784-9acb-4c2c-9043-640a46d9d1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3081f8d1-11e5-4e06-9166-068db85f7934",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf55c03-436b-43b4-9e6e-1067a0583c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550bccfd-368d-4a50-a299-836a06686b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb47a070-e2fc-40dd-8851-d8a69804f17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77741f8a-26ea-4bcf-bb68-557fc59c05d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50595186-0201-4dcb-a713-dcdbaff89821",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cd51cd-7692-45fc-9535-f9ccd00f91a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b847227-ab60-463a-b999-a453e30a879e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42b28f6-b02a-4304-bb41-4f8576c9bdbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c64c66e4-5a5e-4e82-9229-b80a1215558e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc9c43a-50e0-4976-af03-1a0a7a2a6cb9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2a459b-d7c8-432c-bbd3-50b80a079d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c04f741-29c3-4bad-9fdd-e008a918db15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d6a44d-5d78-41b5-8593-a16fb4ea8c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ca042a-945e-4ef9-b9f1-61b8cfbdc952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e9a85e-49ed-442b-9d2a-b37736e18014",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c91aa14-a02b-4f53-9f09-d3cdb99b324d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557295e4-4c39-44b0-a83a-b03eacfc66fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234ee68d-4d34-4302-9b35-59f1aa10a271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55b0d2b1-d2ee-46d5-b875-7e4767673e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2475e4f1-8261-446f-ab67-27edd240cd6a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eaec9bf-9362-49cb-986a-73899e368347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b63ad9-d6df-43ff-801a-c1e7e13a002f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30229574-0a56-4c5c-8700-c40b30a19f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a037a4-74c6-4ad3-94d5-90a553c2e5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339f855c-18de-4a89-bfad-f2ade19b9757",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e010ca3f-283b-47ab-85f3-59959ab1d948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45618d34-1aac-41a8-a9dd-0efb7bab8a77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064ad7d3-8b74-4419-a773-f1e3363281d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bda311a-a284-438d-b71f-c229a386d7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ba24d6-0dea-41d6-8c47-2dd1c1fb635c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d61048a-271b-44b3-b636-2bf3a9a0d28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7558229-e354-4d0b-9e61-56563192847c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476146a7-7c5a-418e-b7a3-82d3b71eba4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0557dda6-2484-4db1-83fa-feb92e2eca00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e116c70f-57d4-4bc3-8e12-55837d94a791",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027a3b5b-6e9b-4903-a96b-415379183cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00dd47d-2fef-48b4-92fe-0df64ab98f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bd24b4-03b6-44c0-a558-f9817a27a72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "deeae593-1930-4f62-ba1c-f4ed169e064a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0f43f2-975a-4465-b97a-6c88758116ff",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9069dd-c338-4121-af37-3c2332778864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe04f720-8843-48a4-913a-86d3768cd9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52697926-a1c3-4f93-999b-895d88043576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb373cc4-816d-45e3-a74b-1726bf09e6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ec5adb-a955-4298-ae70-1a83d0c9ee0d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c02238e-0f86-43e2-ac66-7988a96a5b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0854dc0-6c4b-4570-8b18-1e965084941f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c413c5-028b-48eb-aa54-b2ec0bfa3ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58bdc015-05ae-46a1-b607-3100f4bb7ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19eb92bf-bcd4-461f-895f-ba754b06bfa1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf98984-0c8e-41bd-9545-64f699359893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192926fe-6476-4630-a7d5-a2c2865b6234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d3f748-49ad-459f-8347-bff2c798ed16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc01806-13ce-45a3-a8f5-e8617270cb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68d9541-b41d-40ea-80ab-be72f16abb6a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b4f9d6-7b47-4001-9273-ad68aa5b3c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b937c78-7bbc-40c3-ae5b-759d658f5fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9d30bd-10e3-49d4-a139-74ecef1cb1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d25c774-8500-4c63-8b41-6840a6b1c246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f8d595-b95a-426f-8322-4edf0de55f48",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1b2f75-1dab-4594-a740-e05511e81298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ce93ac-bfda-4f6c-a359-453f3e5b1310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1439dcb1-3717-4bb8-9333-eb30a6c64976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d802f92-b4b6-4e1f-a368-0d58fa501bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51814d3a-4835-42f9-a78d-befcd0e8d956",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c028bb-8e97-4b11-a4a7-b4e42a4cd165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5eaecf-153f-454d-9dad-debb9739cbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984bdeb8-e3a6-40b1-aa1b-27e37606bd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e252d5-c08c-4320-8668-4c1f33651e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bedb27-81c8-483a-9530-1f907ee43ccc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40c2708-d581-4811-857b-68b24930fea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74eb0a84-129b-4920-8547-ce85a581922e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5876463-106a-423c-9274-c97307e562df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f55c4d0-9af3-4de7-a83f-af523c7f57d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0227e852-bcc4-4a9c-95ee-40b8ae02aa9d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9417bc0c-7409-4c1f-bc36-a7f98fa17ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ac42da-694a-420f-b766-d946fa913c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f84386-0b95-4ece-84f2-1ebf6da5d408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "219798d4-1d20-43f4-8df4-5621b0521a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6220ea55-2820-4c36-b88e-06e8797f4e69",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1360fc-51c2-4cc2-af43-21c90163375f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe763d3-15d2-4af0-a554-a60f6e9e7dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcdfaa4-b880-4aad-b0a5-e026820911af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6fd9c12-420f-40fe-b4c7-7242b1b9f7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d677826e-4470-4a74-bfd5-15a1d1ef25e6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1448153e-07a4-48d5-83f4-7fb25a580410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7089527a-0a92-40c6-a013-93d4b12591f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c759b48d-677b-439e-b28d-d6c330ed636f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49e8aee0-894a-4534-9e50-44cecdd75f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b89625-0958-49ae-b917-b8a040f03e31",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b53c9e-d030-41dc-bc0c-26212c19912e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2deee2-cbca-4c1d-984f-08f34e8fdcc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe9df30-d58c-4ee8-ba3c-748dc099a969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2cd6d6a-4d88-4e5f-a7bf-645a630d1f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8970bb-6451-4ec3-a272-460d080c16ff",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72536706-cf6f-45e5-8bb0-caf46f7852f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5520e4b-7be4-4b58-a119-ea9574819753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc5cd1b-8885-4eea-860b-cfa97a619712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ba0757-a064-47f9-b5fc-4b02f0c96439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ad97fa-c1cf-4545-a908-53a18a9dab25",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6841ad4-8854-4305-aa39-a1f674f0ce78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66846227-298a-46cc-a029-18954b7efe96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a06d790-fcd0-4e43-befe-0f5b4373a233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08792602-0680-4dfd-9098-372a2b57eb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d2a16a-fbbb-44a6-9fa8-4959d9fe96c7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dd827f-d49b-493b-ac73-c12b61ad7201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d0839d-3c95-485a-a386-22f56f80e503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce01f82-58f4-47f6-a2e6-02395f58a128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "589f586e-689d-4a4d-b2d3-dae38246815e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5056dd9d-b788-436c-ac91-0704fbb61bfc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12ff02d-144a-485d-8592-10fa466a8f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810de03a-11bd-4962-b598-e70b5a0b071d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529f7d7b-a752-4a41-9757-06d7b23c97e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "98b7ca9e-95b5-4932-afd4-14544eee89b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891f066d-1b04-4935-b567-6035284d2368",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ffdba4-eed3-4b4c-867e-6993baad4652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c147299-5cce-4e3d-8cc7-f370aee0f407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66676a1c-f515-4367-8c7a-c5d3969c6912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2592fab-7032-498c-a931-df86a40d3d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f438615b-b932-46af-9925-dedc6d62ddd6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9266d9-077b-46c2-9166-86772a453239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da07a17-a69a-4828-ac08-21e79f52c7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abcb502-fe14-4afb-aec2-40ad18cceea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed240529-cbc2-4d04-9776-565968d83f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8680f9eb-8299-4a36-8abe-a55031cc5d12",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032ee3a0-dc6b-42ee-92e0-8c7ae73a3e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4336f6d-3429-4b0e-87a4-bc8e46f8e055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe950ae4-3d91-4955-a577-1402fe0573d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0dfdaa-83a6-492c-ba24-881bd971f918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415adea0-3bc2-44d6-a470-0e7754819e95",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac03051-2f08-401d-934c-94a092e7afb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bac98c-24d8-49f6-8bef-34abdd7fd5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbd5eb0-1a45-45db-a804-817638bfc2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "75d479c3-91b6-40f3-9a57-80de6da2e1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcac256-3b71-47e1-ad35-5166dc495fef",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a9cc79-e491-4366-a9f9-b205d039c21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b44971-8045-4fbf-9913-9c86f05da7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3fca8f-257f-4ccf-9b6e-182740e0a912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8aaf8301-c6ab-447f-a44e-5f44f9c56f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f837739e-5538-45b6-924f-826ff17dbe74",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5504f5d0-baea-414b-b0d6-4ab353250e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4659e8af-5d5b-40bb-a84a-0743a7b61c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c85e476-06af-4533-8942-ee7b4e57d082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbe1b0e-106c-4abc-b283-3d989558cc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf5178b-358d-4a2d-b327-b0abf99d8974",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002aa790-0ef0-442d-9bfc-521f71f785bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec72fee-f700-4c4d-b350-0f25f5eb081c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d2fb78-2d85-47d2-be4c-6d41b521a272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8139080d-b061-4587-bdae-8fcb6275480c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fd3381-f5be-4fa1-987d-c269fa17afcc",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e62198c-bb96-4151-a7a8-57eb008a6a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489bd9f1-dfef-4c41-835d-78389be7a0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4323edbe-34a7-4d43-8797-337917c9f705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed3e9578-d28b-45bf-91fa-f4552aa69cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc00cad1-986f-4eb0-bd85-6aebf654c656",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042115b5-10fd-4752-9d4d-e6467b21632f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db54853e-ff8c-4026-bfae-08e921c0cf65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdcb1f5-a7f1-41f4-bae0-e1d90c259e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4e584d-0dd3-4008-b73f-0971a015bfdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f97794a-edf5-4637-ba40-a2738bbbcd8f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e8aba2-c217-4c96-b094-b27c16cc875c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b3ca54-ddb5-44d0-a45d-1a63c58ccc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c57e9e-467c-4cd8-aadb-05701fd8e1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11bfd581-f6df-4eff-b554-6f18a0d0423f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950840bc-c993-44fa-9e6a-0820629c9ebb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b9f2e0-7114-4d86-9200-20a1e31f38af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7ec550-2229-48ca-b600-8c837c5b038d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc0fa0b-2c2b-4f67-863d-243a8a13e88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95b34e8d-c882-49f1-9703-e7757bb321a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d55840-9352-434c-be90-71e3a3fa366b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaf51c2-cb8e-40f5-b4f0-2965dbc64982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66864e89-a5c8-4090-928f-3335f296f45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659bb4cc-f7e0-4fea-b5be-e4787ebb180b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3fe807a-947d-4154-a424-12058762bd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00db815-6af6-4dea-8ee6-7bde4f5eb688",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bc86ab-bc14-4793-8759-b1d821de7470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22817ba2-bcc8-4d5b-a99b-b33eadc3fc98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5caf293-ff13-47c4-aab0-3b1223f5ce2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "26e5478b-60ad-4f93-8167-d9dfaad21336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0afb497-6cb2-46d6-8a28-27088e31a41b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75328cad-4e67-44e2-b07f-99ff0763efae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b23601-5c1e-4cb6-a2c1-cc5f9a5914e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7355dd-0049-4ca2-8b64-a6cfca65245b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bfa662a-d13b-4cb9-8ddc-e81e7fc9fbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4976182-8c33-4c5f-b8dc-d1681c6b6cd2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f95738-d2cb-4245-94d2-2cbc223e5d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b228150c-ae54-475f-98d9-527490e5e809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019fd3cc-b1df-4e29-bfae-26df2c5a14d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68deaa82-f5b4-428d-b95a-2f7854b54ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21b6a5c-86d4-408a-921d-7e439547cdb2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfd6f1f-b458-4bc9-8793-f9402d1cb7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b5a569-0c7c-4f24-b893-34c8e0ede02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8315069-42ed-4f10-8747-44beba642378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c529471a-a1ca-40a4-b994-cfb9fc3cd908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09736f8-b472-4bfb-8d5e-9246e02b9aaa",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80601235-5ce0-4d27-b231-67d637a6fe71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4eb9cf-3df5-4fa6-a192-ad50c3f405eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1dd59e-999f-4dc7-a5d3-bd0fb3e75e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d20adc57-fee1-46ad-b9a0-71b2767e6d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2f9101-63e6-4c91-84ab-9f64a3c20653",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95d4382-0550-4627-8c9c-0068474adef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45b16fd-e032-47a9-b3c4-10d23c632d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7336b31-5add-41ef-b1a1-144de2847e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ac671d-9043-482e-a7e0-a1a84a1635f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34441ee-419b-4002-9fe1-a6587da91449",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2673a38e-35c7-46eb-bf45-958045eb9359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f0cebb2-3755-4ab5-a1b3-b91e61e0565e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00ffe23-0204-4fce-bcdf-29828d33248e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "24e4ee2b-0234-4df4-a309-02d13ce70dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcb46e0-b1e7-4c34-a239-e36363f57ce1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d035d1b-5fc3-4bd5-ba18-928710b0e4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e56fd66-cd99-4638-905d-4ec4fcdbd503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9dcbdc-4541-4056-8f05-478e3998fe8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0aeecad1-297c-4ee3-880d-f04e526a962b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27fe8cf-f592-4900-9e2f-ea4b1a021e6b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848d86fb-1f68-4fe4-b493-213f32d2ef7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4fa44d-dced-49e1-b3c1-e4d8ca8c89c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7bd6ea-98b3-427d-95e1-e39b824d1a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf7185e-8512-46eb-bff5-fe1525daf7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300a53aa-c2b3-4a7d-bb59-23de39afa667",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3460101d-6209-445a-b394-74fd03a7d500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80444c5b-27e9-4f33-90ec-39c16ef01db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf14ed8-01a6-4dac-a416-c4ada6d5faa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3269cf9-5153-4dca-b25d-86b34e0cf507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026ae6db-443a-48ad-9af5-75140bfee467",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3e493b-8eb0-40dc-b7c2-cce4a1d810e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271205eb-14d4-4253-9045-8bcaac17747e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58b9068-ba3a-4cde-a559-b635333e7ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d1d30f-6e14-4b58-a317-c8855b6bc0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e179671b-a551-411b-8fc3-556ec413b62c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7436d8e-f247-46da-8f48-99928b38c0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d83124c-380a-44bf-86d2-f5971c8024b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aec1dac-3634-4074-a2cd-3b4dbaad46a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "79cfae00-de5d-40e4-80ab-6473d3eb440b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d39030e-6391-4c9b-b6f3-6fe9678e6804",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42daf24-bbb1-483e-aa19-dc9b85a19515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e004d9-8258-4535-91f9-8aebced86c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b3d4c8-9c85-49b5-b28e-f6a5120092ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "32326d4f-e6dc-4f6d-9cb1-66f8cb91f288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27962510-8175-40de-ad45-8b22a9fd4e05",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080c24be-8bf6-4882-9b34-f674dbad8cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1bd6039-2360-475f-bb95-e841921b9829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c6716e-6540-4c85-b7de-2b4ea69bfd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e478cac5-6d4c-45a2-9265-873a531df101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743c2209-6fef-46ef-917a-fcd996643bf8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abb375e-7756-4a45-be69-ca833c5e14ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45157707-4cc2-4fff-a047-d400dd7ea4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b91b1e-94bb-41bf-a60e-d10d7c239f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcad7500-371c-49d9-9262-c5d96f1f066b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0fca02-1820-4439-8133-a5fcb548a526",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf5efca-8dd8-4f5f-8c6c-43069637b592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9008e46-361e-4811-acdf-cd9c66272ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc3dd75-58b1-48d8-8194-aafae8da8924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aea9c55-8046-4a42-8a89-01cae7b12b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c47b470-866a-4a66-ae30-0c83a2e108f5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ca55a3-aaee-4c25-8122-04cce2e31904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b562dc1f-678d-4622-9287-6d3be5d550f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d44f706-cca4-49e2-b00d-6124c2624188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5991f05e-84c0-4ea2-b0fe-ff390ea21e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d7a8ee-4323-412b-9893-991b00c42e61",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01af0143-aa58-4508-843c-22ed1a6219f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c011d3-eb5e-4f5e-a845-ddd98d83c5a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57eb3c96-3e1a-4b56-8534-2556871377c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bd5a5b-a89d-4af5-8712-c923d5e17895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1b46d4-924b-46bf-af0f-4836c9e921ca",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a2ae50-67ef-4b5a-9cc1-54f55f8da29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83c5a1a-36ba-4039-8fa5-961901ebfeb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b83180-d687-449c-a8bf-b1b35aa0e8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de5dd2bc-c82a-48af-a7fa-04e08cef0599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb39fb1-50db-4ad3-b0b7-37d375feb569",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff43e6a-01e8-4a24-a842-069efa395c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f2b499-beee-482f-9cb4-c601838f5f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ec567c-6cd7-469d-8613-3ce6bf8fd4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad8bedd-4532-4efe-8d14-0203b9c9dc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b30348e-be90-40f2-80bb-3052e5f7f48f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96f70a9-08ff-4e14-acc6-80d1690ad8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d09f456-2613-4330-b87a-ef727e6816c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1d39ca-4093-40bb-b074-613e83e73941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e8e3e5e-419e-498f-9969-42222be7af4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db37449-048a-4b07-8913-c2c560233ef9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e8f586-01e7-481e-b52b-50d135ebe039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578430d6-0994-4e73-8290-70dd88865fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19c7546-6e22-4c67-b6b9-0ec3d5b8bca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "983dfa3a-4a46-4053-a1c2-725a497d8407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1bfa1c-eeac-465b-b470-267df24caa8d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d925da98-1caa-45ea-b12b-1a5423af229a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f369a0a-57df-446e-a940-e6764e34ad42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290ec4f2-ddf2-42dd-9e62-27db3e7b565a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c039f6e2-0209-482f-9d0b-00e3d7fcba44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad62e42c-4e79-4ec5-982b-fcb9a773e8e1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f81b9e-626e-463c-a953-f57efab8a166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e1e271-ac2c-408d-be6f-1426e22f9912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58310bf1-f642-4b65-bb9b-a2d146e920cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b1906d-0a89-406c-bbd6-d4a9ec9172e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b995cb3-1665-4cff-9629-727a51125de7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee25b25-a4b5-4d4f-a6f5-112e3749e130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e39692-7fce-4926-bded-b359b84322dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dc1767-4cd5-4cd5-85b4-06aafea2f5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6435d7b-2571-4a88-ae60-bebebea8c2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffe45a6-82cd-416e-8387-4757abbedd22",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3aea1c-6430-411d-a155-6d5c811a348c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af77e26a-33f5-4c04-825b-5c23dfe98d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72230d97-b7b4-47fe-9c53-cf524ba79308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2956cce2-7fa8-49df-aa48-90fd36499057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e295f76-ebb8-4356-8c0a-273fce1b11c0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a573284-fdf7-4ac3-90d0-98f759576448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84a6003-33df-4cb4-ac47-510706f57f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59451f20-bfba-4672-b025-1dac551ce439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "887b0b62-e88a-465a-af73-9fbba304be65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6d560c-4f90-4fe3-a26a-6cb904ce1927",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dbbdf7-fce8-4e32-b415-b87bbb2ab489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0c8ae9-4c31-467c-9529-d1a44416dbef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff9bfad-45be-4102-94ec-2cd10160879b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75b91f8d-75c4-4d2e-aeb5-8e6c122f988c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a691d4-d16d-4060-8b77-49c5056c4594",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adb4aa4-a222-4fed-a098-27b3afa77645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3961c0-65b6-475c-a551-4d2d88163e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f2d0bc-6953-441f-b92c-7fb104a8d380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "751a06ad-f951-406d-99ea-8ee12d3730d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44219ad5-d85e-4f35-8e09-b2d8da3efb1b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31396775-81eb-4d80-bc86-24e39395cc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88190a7c-df1e-41e3-a2c3-d1e197d0cab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a958df-8635-4645-978c-4e3c73d430e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a56d5e3c-7edf-46a8-9f70-acb43846e8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda277b3-4930-4fcf-a811-da636398ae81",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf3e0d0-cb42-48e5-b8a2-1dd117e50714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031616e0-6353-4c2a-97bb-102dc928abea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb07c2a6-1dd3-4ce1-ae5e-ef822a14ec88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3667f40a-f22c-4922-ae14-c3acee89a2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b15f4d-61a5-4237-8182-d0195b4ccf11",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04275f91-3901-409e-bd88-75876dd6da7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57abae4-16a7-4bcf-b7b2-4b547797b08d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5067f4-07d3-4fad-801d-9779923f1483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5afb77d9-a630-4688-841f-24f14446e616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41506824-8b55-4c72-a747-44e3c35a5aeb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bd0c2e-2802-4858-aaeb-5d4ce1db42d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ca8d4c-cb97-4ab2-a9ce-3958f9cecf33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92ec841-78de-4f0a-8a47-fa09ea5c171f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8e5fe3-f852-4832-a70a-64ac3d1e4c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b617ab-dd4c-4c4c-a544-377cc8cf8d0a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b166425-914b-4053-b562-aae8e93236d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d7e7ea-aca4-4800-a19d-b204a1dafa8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df2de71e-20e2-4570-b7c2-635c44f30511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54f3b022-0199-4b68-9dd6-30bc25659c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5dea9a3-227f-440e-9e5b-ef66e105dc53",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afa97b4-a1b6-4e27-8827-44ccb1addd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f1c699-5617-4819-8292-4b8811e4e484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0749409-2e63-485d-b67b-3fb48ef943c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "989fe025-13b1-411f-9697-2a489cf66777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa95bc0d-be51-43cf-85ec-a2dc5389940f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6dd532-a0cd-4b92-8a65-9e01b52ee740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80102a3d-6ef3-4861-888e-5f9b210e06c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b017081-f2be-4dd8-9bf4-796ddc3e5a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd77cd50-db23-4d87-8ad3-e9d3ccdba479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7785588-5c11-479e-9817-bb90fa2d551a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8d7305-71ab-4044-8e24-488eccd4ed53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb608529-ea24-4235-a030-43928afa2b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912caab9-576a-4110-a0bd-dc12c474dd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b13411-f8f2-42e8-b5d3-9115c559cfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61512ebc-37dc-4b5f-9182-42a234effa39",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387beda0-173e-4e00-9b76-671429cc618d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42bfc1f-4918-4a2b-891a-65d3c36f2e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a24273-adec-4898-b040-b24c3ce03934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9ce270-62af-4367-bb96-2f708f2cec47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085d2f3d-3daa-4874-8415-4da4eebdb3fa",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba84bfd1-8f2c-418e-b151-160bf4d28269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd7448b-b01f-42a6-9f40-55eba5b5e4e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83957efa-8f07-41a2-945f-b4ea1150f359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "70dbf426-32a3-4a54-ac35-bbc148e067a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c4c1a3-8fb8-48f2-925f-6e0673e4b4c1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3779df-f4b0-4554-87b4-320e9b67379e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65b8ffe-e0c7-4383-8c85-e951863324bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08eca0d0-d81d-43be-8cef-ae60a9f54bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "61684bb6-525e-43a5-b8f5-d743b8250a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf79667-8db7-489f-be2f-80021d733b98",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc13e313-f0e3-4e92-ab1b-11e6a4925209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8183ce3d-c1fa-4aff-8823-238961537d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bcca4d-4354-478a-a0bb-17c45dc1ea8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4319d197-6704-43dc-976b-37a267bf3f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35282e12-42e5-4de1-afef-e5313f03d548",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f43ff96-6699-4bab-a4bc-b6b41af722bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "21b0729c-2dd3-4638-8616-54f65aac8969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9223f72d-1598-4737-8054-e948f88c7ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2aa4168-79f7-44e8-bf1d-01c45eb00366"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a1db7b03-8355-4922-aa8a-509c926c1bdc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be0df00c-12d3-4118-8ba8-2877852220c0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb43979-b356-4ff4-9939-3ef0e7e0af5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76be7133-66f6-4f36-b6b9-35fcbc49e241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a8a6f7-3086-4f93-9de6-de1a8c9c40e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "597fdd32-b319-4be7-911c-9ac83407ef6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a709c58-0b74-4adf-ada5-2d7656afec1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36a06423-a498-4f4b-9eb0-55b0cc605d15"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "649195c4-f62e-4cb5-b234-dc8b3ef8b1bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "191c94cd-14de-4f31-b862-701d949721d4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "258b01fb-ea47-4690-b7c7-159c5c6ea9d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03dacfa5-8a21-42da-b997-073c1b9d46f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6b7c30ee-c489-46c9-bc34-5e1ab97d2100",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e24acaac-c7e1-4876-a852-8c3964e7e06a"
                }
              }
            ]
          },
          {
            "id": "d925b7c4-3676-44fa-9321-725d41327648",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0b61b94e-6150-4592-8ee7-08aa8901e9a7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4a6b7175-e276-43bc-8ab7-d6a8e0ecca92",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4281c8-f96e-4453-820f-3efcaa47a48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "781ab36a-a1c8-4ddd-9548-bcac52508cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89793e06-df1c-4f9a-a349-0adab850acbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e010957b-ff65-475f-beab-84fc1d3ef2ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25608f06-aafb-404e-acc9-13d4bbf55605",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4284366b-17e7-4187-832c-36ff10dc1730",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "de3e8344-5bf3-40aa-b6ab-1b91e6450949"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cc95812-2b63-4b03-8816-96b61faf70f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ced14ed1-2ec2-42e0-83e4-2ca13de15e12"
                    }
                  }
                ]
              },
              {
                "id": "9c862019-be8e-431b-8a9d-ad945856f5ee",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b81bb0de-4431-4933-9ddc-bcdc1b3f9cd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9930b3d-6670-408e-8722-68ee1b396cee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adca637e-746b-4233-9deb-2201ffc77b63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "435fd48e-9635-4223-b3bb-aa0f67cb0252"
                    }
                  }
                ]
              },
              {
                "id": "a90263d4-78bd-4431-88e3-2b80e7621f09",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0aac2733-844b-4696-9cf7-bdf1957074f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f32e7e60-8c46-4657-8ee4-ae171f89da55"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e03743a-df97-427e-b9d2-420367bf5585",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c9c9b4c0-963d-4936-98f6-c2717eee9859"
                    }
                  }
                ]
              },
              {
                "id": "0878c3b2-30c0-495d-89e0-4164afc7ad10",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4c8098f-b00a-44e5-aad5-47b48fadd109",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e2f4e99-1035-4255-80d8-3447c3536f07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68226322-dbe3-4bb9-8140-9a502fda2293",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ab4ec51c-00fa-4d27-a12a-57b349c00693"
                    }
                  }
                ]
              },
              {
                "id": "051ebdd6-6bca-410f-a48a-60ea15ce6be0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8423f292-8f87-4c61-8efa-161de5756f41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7eefba8-bd41-4d60-95bd-3cf13ecb936a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39b3f343-23a4-4ca0-81a9-d83ec27d55e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e8160ad2-a530-44fb-909d-70cc00f55d84"
                    }
                  }
                ]
              },
              {
                "id": "19461f8c-4df2-436d-9fc6-1f2a9110658a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0867ea08-7395-49e0-bee5-affb277ee885",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84e54a06-e560-4dc2-9172-69d53dee5a71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6bc3318-4bb9-46ff-9478-ec257d4a0216",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "275d1154-d624-4632-b6cb-cb9edec03916"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9b09afea-8283-4788-b2e3-50ad23bb163a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40856ca6-a536-4566-9856-4a5832ad2d0f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "393c1718-fc54-457b-bca6-a46fb4c845a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f17bb18-ed03-4785-aa6c-6efb85c29bbe"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "389f1e8b-2b6c-474c-b284-5e5b01b1bfbc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "714085db-ac9f-40e0-8d03-56d5860d5814"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c59df3f6-f660-4568-8e8e-e3b9a1a40c24",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d96736fb-f96d-42c4-be4d-ad6ceb7d6638"
            }
          }
        ]
      },
      {
        "id": "36ee329f-92b2-4b53-ae85-9d377f448f7c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "993fefb7-c01f-4c42-896d-4736376faf2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef51543a-db31-4885-b3be-74532e747d7e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "632b4ceb-2ad7-4ee0-930a-a52cd76ecb99",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8752d2-1033-4998-ab48-f0f5a1cecb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef0e516-032d-4271-967f-9ea8d37c4f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68ebb30-41a6-469a-874a-50733e6e250c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9aa330-243f-4539-85f2-e291817eb7c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328959da-dbac-4ae1-b6be-4bc51c1d2415",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec0e44b-151a-4564-8625-7999faee0aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ea797e-5994-4a72-8393-ddee2efa2a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b457773-d698-48e7-a7a6-81d75ecbf72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2df632fa-c9ed-48e1-8d08-bc462930c938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6c83fb-851d-42dd-9d70-20dab026398c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf444987-15d2-451e-8679-b61a6275c701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81b9e64b-b9d8-481a-9a01-14f367e45706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933cd14f-1e7c-4d33-8dd9-bcdee2507c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f79b490f-92de-4137-a541-78b45d0c107a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cab241-10d2-4a6d-bc68-2149494bf96a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1075ebb3-81fb-48da-bd5e-4f7cf49e6498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597943a9-8a66-4d0b-88a0-c8c422a418a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f4e52b-7dca-4e0e-9314-32adccc239d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17e31eeb-416e-4274-b26c-ad31fb13e750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7af785-5419-4a15-8152-c4e440611175",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b77e20-fc3e-4f0d-bad9-b3e86cef09d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2241f6-758b-4aa8-9bf3-4999a3904ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa03e806-dc86-4684-a54c-d074c7d74d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca44bb87-2e1e-40dc-b6a2-ffedb709aeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8abb216-a12a-429c-acbc-ffa4189c14e9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8168c02c-68f1-43dc-bebf-76d7af9b1e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6b514a-ebba-4147-abf6-8d4568524b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3099fa0c-4d9f-4cfd-aa22-cbb21ca5ff4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4c4882-1fb5-4509-a325-9a7f12cdc74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9181069d-5e89-4a58-b321-2bd71fdce88b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a79ac56-b563-4c0c-b62e-9af476004f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd517fb-e431-45bb-a923-de1587ddc04c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530fcc77-1f9b-46e9-a0fd-c8460ad4aaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "75d0a23e-3a7c-4953-8580-2f1928f8dd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fdcd56-8b56-4cea-95b4-b188bba90b14",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b079a341-92d2-4c5f-82ed-9c8e17306156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9ed287-10bd-4239-bcd2-7e71f3dd9639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee02a2e-3f96-4b3d-9931-380d23218f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2310127d-2024-46bf-ab1f-066129e2fbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419d334e-df33-45f3-acb0-ed335d8617c8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e22457-6b06-4422-8a53-2179588c0886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e871f7-bd96-4331-bf42-dc98b86f3f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5139df8-808f-4283-9fde-34d5171516b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f455102c-d3a1-4780-a736-1d97be23b775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ade9004-8de6-4316-9a49-b887e1508626",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bf4946-60de-4700-a87a-70d11fa9d0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958bb427-3d39-4ff2-9361-daaa721154b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0042e5ae-ec71-47c0-b44e-6091972f4bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0c63e8c-4a30-4f99-9b7f-fa2ddeee4741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4526361-487f-4ceb-a2c3-071f636fde05",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fab863-2c48-45d1-b051-ad3b024f9a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0da63b8-658c-4786-9a22-c76eef93bc41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5130dc3-65e8-48e4-b0e5-c47cc8214163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "925b7ffd-2bbe-486f-a694-b2890d0af2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a90cea0d-c77c-430f-855d-2469baf1c9f2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee74865b-e6f3-4dee-a959-a18bed086755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef630f3-0a83-472c-8a6f-c8e91066d96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a1afbb-c38d-4a1e-8250-27d1589f9850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a8e026-315f-44f4-98ee-6c16f47f83a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfd6de5-42f9-4c11-9d3d-2b364b4d3a5c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182ed2d0-3b18-48d3-937a-367b5c40e1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ccecbf-1880-445e-ac51-37262e80b15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c098f60-1220-4ca3-a27d-c1091212126f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7b458c-d840-4f8f-8d16-af78950e69d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce98690a-fbf8-4b34-973e-c2b5d3e36ece",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd6cd03-880a-4916-8d9b-0ea8f8edcbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec0d8f7-2e3c-4351-8b0f-fd6ad9bdd11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ff92bd-e007-4478-8e48-2973fa2fbf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f050c831-a9ee-4d55-94ea-d19b35970133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72215ad0-6f38-4115-bbb6-094af0dbc193",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946f44df-58af-4457-90c5-3dede0537f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d15fd14-317e-4c25-9551-f1459fe942b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884213cc-a232-43c7-ad13-fa938d411627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "89b43019-d8e9-4d1d-a69a-eb456a71c840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca155331-dbae-4d8c-8fc4-a7daf31fa873",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feeaa4a3-946a-4ffb-8d09-e8acb30f5279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33bbe0e5-e116-41de-9b03-4e99dcae7bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1afcb3c-ca7c-4d17-8ea4-c4e7503e561a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c900367-4c1e-4485-ba0f-294f1c915068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d92f69e-0e5e-4f1c-bf1e-0ca06cda2f83",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15710d49-cf08-47ab-a274-03b0e15a6129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff42fc2-cd25-427b-854e-0d0231ff0f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9560455-2a19-4683-a8b6-bf046e116bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e31e2b3-f4e0-4ccc-98d4-1a6d3c76402e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b1af40-95a9-42dc-8e0a-63e9cb5866ac",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b859d63-f167-4731-b3f6-06d876388655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b29eb0-7f03-4005-adb7-6d4ab6f7cdf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a80aa5-0e85-4522-8380-7af34e7993fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1f65e3-187b-4a1a-a29b-80194ab0ea91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88558808-7c62-4a83-a1f8-01de079794da",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff3cac5-f11a-4a3e-8d57-40d7d8543efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215416f7-604b-4670-bf98-a77781292d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7aa1e8f-4490-4b4f-b63c-bdaca346e10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2040d846-e79f-401e-a44e-13019a144371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e1f83a-185b-4eb7-af17-234f9e606628",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50c0c3e-36f2-4388-b715-881458849d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87554e3-1762-4aa7-ba6d-2a717db3602a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18fcb5d-c073-4f1b-a6b6-75df88912535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58ab3f72-8161-48a0-9faa-5302e7a65802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baebd178-bdcf-4d88-888c-0259d9bad686",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188c924b-8cfa-48df-a420-2f2971a10c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e940cfc-5cf4-4c94-afb8-a40b1747403b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c57d65f-4503-4748-ad05-d1b24bce86fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91b40b60-5400-46cf-a2ea-9c9b2f6eed07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d145849-522a-4eb9-873a-456424918bbd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0dcafa-1ee7-4207-b44e-8f7f4627acb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35c2b1d-011c-498e-9544-bb45ef3101b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d621dec-6bc5-4699-9d4d-2a7bad673484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8041fc-dc6e-49e6-bd62-1c18f325d69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b155f54-db4f-472a-b250-4b9a40b82e63",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0d1592-ec51-4cb1-9e5e-a89299faaf36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f16e618-39a8-4a7e-8241-cab1e99b9d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd53323f-848e-4ff9-aec3-1ab95ef68aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c306e7-6753-4c20-a722-fdda8c53ced9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b7f23a-597b-4677-886a-f627162a246c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df099294-2807-4909-aed7-0488899631c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa083b7-1acc-4d81-baad-643480179972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59ef8a9-4018-46f2-b1ab-de0690698150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "162901ed-9cd9-44c5-b643-331d89193435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5983cef0-eab7-4a2c-b2ca-5f33b3ba05f2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d22e9b8-529c-4b98-93f1-57aaf66e753d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff2dc86-d21b-49a1-84bb-651e08e84125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a71687a-dc76-4465-ae7c-97268e6e7acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf519263-0eb8-47fa-b652-d9a41d5a2c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26996cb-798c-4c8c-b97c-2a5565b65cb0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e294818-d965-47c9-ac2c-3eb5bc420639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93496f33-0ed6-4ffa-8ad2-bafb3c151907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad30811-601d-49be-b5c0-d562ef726bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54e74ac6-2a42-409d-8b10-042665cb16b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66d34af-b033-4a8b-821f-dc452257ae33",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb66c44-ebd7-45f0-ada1-b0a6bcd0c2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f881fe0b-f975-4cfe-a5fb-371a3f4959aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f7dea3-02d7-427f-a37f-7cb5bdd82a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ec52e9-f5a7-443e-ba03-183903c73aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08daee2d-157f-4f60-9fbd-adbfe30428a5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf026f35-6453-4f0a-a461-d17d3660930a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf53b5da-3e8a-4d7b-8aa0-6a113e0e41a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e023fdc-3c86-4dff-99b6-e4beb3487d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79603ca7-37ac-4347-a40d-c417b4babc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f28db9e-24da-4094-a4d5-4ae4c909670a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2be0088-9330-477e-89ab-af0e5ae4d906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbbe3ea2-5b0c-434c-8fdc-e88e4ee9e2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07f5f85-34e7-4deb-bd5b-6df906c31ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b5a686-ab6a-468f-bba0-3c27f66a48e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7914b7da-94b8-47d3-bfd8-e7471fd8de8d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871be76c-c1d3-466a-9bd9-a7d550657ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63434f98-aa5f-4958-beb6-853aab1e8779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472990fb-c793-4d3c-949c-0aadce3cc974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83806226-9e2c-4c19-8611-0e4bd81e2d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1eaa2cc-cba0-41af-9373-1c62f21f56c6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcd0d66-6d42-45db-bca4-d9b6ddb051c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297ac75f-670c-4fdc-b950-505558c22816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4177573e-217b-4859-bb4c-cdab990e9f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "817394d3-69ec-4c8c-9fa9-05b328ace677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72cb349-7cc9-42a0-9fdd-ff32f21a5411",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbd48a1-372a-4fec-b4c4-de9e08ef6f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d565fa2-0bc1-4fc1-b417-db1632f21857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc4b939-b78e-448c-9e05-e3a8c8b00172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a74efa-cf39-4012-a5ef-0519cc3db955"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f50a7cd-2135-4587-883a-6c369af09f5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdf65251-ab93-49f8-a7e4-436cb54ec1db",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5be2975-c8ce-445b-a9bb-3226c75e232f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b63302-11b7-43d1-aa4d-103cf0881a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7beaa04-4bbd-4df5-b84b-ca22298d1b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a056d160-04dc-40ba-9d97-e1dafc1d56fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c97e3bae-74c7-470d-802a-1fc2608d67af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c662c99-b9a1-4e8e-a7cf-0278af2bd9c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "86fedd52-a3db-470d-95da-a4cc8841269d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26d79d67-c7f5-44bc-9626-617e7fc684b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8981bfc0-40a2-414a-bc80-a1aab936b865",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d663d678-9366-494b-9f3d-32c448a67219"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36031efa-ee81-4a6e-8b73-6317844026bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba550247-fb50-4760-975f-0610ede2d298"
            }
          }
        ]
      },
      {
        "id": "35291d14-2fbd-4e73-a932-918ccb3b6ad2",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "22ff2109-ee60-4ca3-99b9-d6c5322c678b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56ade39b-4462-434a-bd59-7d1499592fcd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9a7cc32d-e1ec-4cee-8aa9-05c6e94596d4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d845166e-bcb2-49c5-8cdd-99eec7007fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "316bc61f-cc2a-466c-bd53-9390268a4834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4479bb5-4a6d-4dd5-b79c-197084f5fff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6df3ecbe-d0eb-40d8-9f84-409871f29d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614c9a80-d976-4b03-b971-4755902089fc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5583072-3a08-4191-9f23-479daeaebe9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9692ae-1dfc-4fbd-bf6b-dc6d0c4bda05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e0ea73-2ad1-46cf-813c-67057b37b217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74547951-db0a-4ec9-b9d7-e7897116e4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a8db1f-c7ca-4c6c-98b3-14b1bfd58f26",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad29900-b12d-4e47-bc4f-67d434596101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4f4b51-6f0c-4f40-9938-ed6107ffe430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298c31fa-530c-4436-84ff-5ecf2546f643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5a65eb-9f1a-4f25-9561-89373fd45873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491b8547-b876-4e30-b012-70153f392026",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70a1607-8d91-4c87-895c-58079fddd8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60745be-2172-470f-a93e-3f66e27f3558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5dc438-099f-4bef-a77a-dee7ec99804c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10deebf1-5795-4228-a41a-58792120ad6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccec8a6-ddff-4690-ab5c-91607bbb8e8f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca1cbd6-f2ee-4246-a1c0-27a2036a7209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad72924-333c-4e32-a5e9-96295b79872b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fcf2d6-7157-4205-8d77-bd626ca552b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2246fd71-2654-4bb6-bb38-79653a606bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eaf25aa-293f-46d1-8e66-a8d1e18999b5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce0bedb-4362-402c-97a5-59d4e4fdc18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3aabe01-c930-4516-9671-d5439f439bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9200cd76-af13-4995-846c-332a3521a890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "abf82684-2cae-433d-ab49-51d9f174cc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04762a94-8775-4107-b171-c1ca8bb63ce1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5c92fd-b41b-4cda-9ee2-eff339157cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60c628f-23aa-4c14-8749-985066a8f821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326ba1d7-011e-42ba-bcf0-d7bb3d617087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b1229f-f875-4476-966b-94ad484e907a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a058e3d0-d20b-4eda-b0d8-4aa54d45c631",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c039b16-aeaf-458c-85bc-9f7f0f1db702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0660fd4-2bd0-474e-a77d-f71ca686dd62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a08194-520e-4a97-b397-0f7b3ff2082a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a0c64c-aa38-40c2-b8e6-93131019aeab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48bd5d0-2a0f-4192-b2bb-f75bafd0171a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a2ecd8-3b0a-4339-bd16-dbf0280273e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7c0b4d-14ea-4040-badf-fb50a69f820e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b67e64-e38f-4ca3-b771-6fc2e59abc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "864a2610-d435-47d1-b264-ee822001eeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbda8a4-4e09-4c0a-9e80-faa42d9db391",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11870761-238e-4a68-b580-13a2836b54dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f326b3-c600-4884-a55b-61efbd31f70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2134f0c-4f8f-4aec-80f6-dd0f9f780343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7a9e37-6b1d-4d98-8ad4-707a9c74241a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e538bc-4306-48b8-8148-ded19cb49e50",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b235753-464d-4111-9499-c61d6ef16e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e002f6-9af2-40d0-a209-bb271bd2ec73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f50c4c-d348-4e0f-b789-c25522b334ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6a137a9d-684c-47b8-8a1b-de424a8f3188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147a1ff6-2964-415c-b845-d31650a003b3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99bb6b1-fa6d-4cc4-81da-0398c7616755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82bbe865-d42a-4fa4-b2c2-c90605140a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a641df5-ce34-471a-a8ba-bc84fc80fff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ada5c02-0bbb-469e-a6e2-e53d3aee82c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee89522-a9cb-4cb9-b62d-aab91371f67b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f6dc69-8af1-49c7-a832-d4b590b36d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8f8ea9-e8b2-45ec-89d9-828096f30fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d639ce42-dbc7-47de-b104-e4003f7045cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18c2b358-ad68-424b-8424-5656f83146da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295ec4b7-97a7-4eae-93fd-94123abb9816",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be5ed63-44ae-4a18-87a3-156f3577ccdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f7b8a9-3ba9-4c0b-bd99-a8388aff746d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75207297-2fd9-4fe3-b516-363c348447ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1ed064-8268-4630-a219-8078e643e0de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7dc795-1753-416f-9622-348021f1696e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5d6f7f-1807-47e8-a98a-b3ef33b4e155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7836af5-67b2-4abe-a781-3987147e4ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cabb56-7e94-4e65-bb83-5de94a22226b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "afff6fe8-9530-4b6d-a6ed-d86776c4f09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7ac895-55e2-493c-b9d7-43591678494f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ddb42c-ecce-4fe7-abc7-933fb437cf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378a915d-b1b5-4470-bf78-84935414de03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee32745-58ba-43de-a098-51294c036ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "62ec264c-5d3d-44cf-9d05-438e3951c8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e2b4a9-c093-4c62-a8d0-a1bec8217431",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6c7037-8d3c-4031-8576-e58b930529d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70a30d5-7ca6-4703-b47c-beee64a19d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4524bba0-7f9a-4010-b993-f5b8e1a8d82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b43308ec-5eb0-493f-841f-2631d0bf6807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d0f215-4383-486a-a0f5-0c6c49540b9b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3e7eaa-cc5a-4bc2-96d7-02648bb3aa61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055fe72a-0578-4d8a-b1dc-938a5daa6f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13954697-77ad-41a8-ae1f-74589ef7f934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7853e9c2-81e8-432b-b622-f99e16afe000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d6951e-2c80-463a-b4ff-e6fc3b54506b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f0afc7-0e3b-4754-9791-3e86e9fca148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be58073-5be3-4bea-8a4d-aeede7acabed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95d9bef-7ca5-4a45-8a74-bd16c4643185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e37529ac-03e6-4494-95a7-79e9c37d4e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635346a7-7e92-4cac-9fec-90d80cd6b836",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bc019c-a95b-455b-a21b-73830046cc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d763c90-b033-4b7a-a9db-b0da5a206634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b13815-09a5-4aa0-9641-74930cf4febb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d30060af-98d6-45ca-8f0d-ce14526f7806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1569afe-8581-467d-a1c3-35d031b90039",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dce93e-bfc9-4eb9-9cee-c7ec1bdb68f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62376951-1439-49d5-b951-f790ed1754a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab68801-c692-41ec-ac74-76a03ffe2b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dce1ff8f-9db5-400f-8fcb-1de8ee77e2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1fdd2b-4373-4f05-ba4a-45475577e7e8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548c15fc-090a-4406-84a7-9bff93cbb275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c7a178-af1d-4aa5-99bc-540682fbaebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88aa89ed-94b4-4245-83cc-a5e8c04fd3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a23dc3-c5e9-478f-9318-7edee2e89b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b019fa85-d2c9-47c8-8239-d70576122830",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4fbd17-d52c-493a-bab5-644a15d8b580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f54e9e-bf43-4176-bb04-2f233ee6b349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71470c1-5859-4e61-90da-b2ab6568a7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86649835-1cb9-4294-bd6d-9ffabad4a2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f6d0ce-95a9-4d27-b7f9-7f4abb46b12a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a432feb-c726-4664-bf03-09654aafc93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d57d582-0c2d-49b3-a1b3-08d63c5304b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc38fd7b-140a-421f-9bd8-3d89a67403b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0347e1-077d-4f29-aa10-589fd834abbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058c7815-3dee-4c11-9134-9474e398b7be",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0016d682-579b-4f82-aec9-31f54a3f538b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29bf9db5-5e56-4202-b8b2-8670ff980091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a1afe8-ff4f-4b52-ac0b-b5bd11f68251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31038b29-cda1-40c2-8700-967482ff8a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d3be55-c345-49a3-a25f-573a41f87358",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5c0a37-e3f6-40ac-940d-afbf93741fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2ac191-3bbb-4b93-9272-2d368120e441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb7cd32-ad80-42dc-8e61-818cc0d7cf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b660bfc8-90d2-489d-9859-ddbc33aa9977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab9e74c-37cc-4333-8e6c-fd33712a2e95",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efab4471-955f-48e9-b617-3db14183d914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284a3405-6885-4799-8956-d9b8cd3fb038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243d2734-f669-472d-bc09-34e81cea8cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c43ceb-c930-458f-be8d-fbbcf8ecedd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c89f792-c1cd-42da-8e19-95b96ecabb16",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ed74dc-923c-420f-b191-327da8c9f623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd19667-ae2b-4c7e-936a-60a85cfd2f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d628fe-3ba1-4fe5-b21f-3f3dc20c89b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21aff7fd-3a86-465c-99d3-847e24379a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6af045f-3ef8-4237-b635-b4cbc1254eda",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5a3fd1-86da-4102-bb5e-b578b9cc1642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd63089d-56c7-424c-82de-08fd09cbae85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb5fe8e-0084-41e1-b3b1-dd5b013ad8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5583a42-356d-4d84-9301-60bbe5680b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a1e888-02c1-452f-883d-63c01a8ff87e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef13d947-627f-421f-8261-2747c8dc14cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c775f8-c2f6-47de-87c2-e4bb78b4aea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd92ce5-3752-4697-86d8-96d9e84fa965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a554041-c130-4e9b-9b0d-2d15b341dfa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ae59d8-7c2d-48f6-98b5-f20d9a985190",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99611ba-4770-40c0-b521-75eb765baa79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eebf59b-fdcb-4d7a-b344-8434c0a99fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2eddf09-1104-4426-8396-42ccec04ba24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbcfc4b-a9d0-4c1b-99fd-3ce6b9acc0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ebe90c-d514-4605-a283-20758f82faed",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08866c62-6cd9-447a-8b0b-a8195f376e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a158b9-a4e8-4021-bc0a-83b56d7e99b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e505b8-d1f9-4d78-8e78-5caade12e65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88d22d3f-a49e-49a0-bb31-efd6c006a741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac2809c-8b24-4fb8-b675-e257e68b5ebf",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7be030d-a5d5-4493-b5b8-95be6a51d8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7669d05-97b6-42b5-b4a9-92bd52bdbf77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56197d7-73fe-45d0-b440-30d65d894469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d66d880a-9d6a-474b-aa71-f9eb57925373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0f4c03-e3d4-481c-9ee7-03f9b7168ead",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c207d855-5711-4aae-ba68-3225504f5817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d12ce0-e487-481d-8776-2d151d165603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d0a0d4-f0cf-4e4e-a334-589f785c4858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28a8015c-4272-4809-ab17-bbafc8f7996c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbac9b16-e3f6-4091-a955-f43334f6aad0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dae9ea9-136a-4d0a-b269-986257f19a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f3ff05-2ad0-4d7e-b0ee-1394ab796cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f46030-ee79-414b-b9dd-5a4d435f9213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8917d1-9b64-46a2-97e7-0640ee80ce70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff307ca5-4827-4678-a75e-d8bd9a2f06f6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5e23e7-40f1-48c9-b5ed-93b09fe5131f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af5b87d-163d-4424-824d-9d25e1257fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05487e2-ea73-48e6-8db1-e26f56d75b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3c9d8d-9b33-42e0-80b0-9e5e61fbdd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe5e1a1-d7b4-4695-8666-21f0133a00c9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5563bbfb-cf99-44da-b383-ce3350ef8eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afc173d-dee6-4a4e-bc8c-444fc5cb6192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434dc5a3-8e7c-44cd-986e-9d0a9cae2f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e674d44f-4e55-4e35-8888-a503050bb0d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "30f09976-b9e2-4d9a-8977-b4f02ada2fe9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "074f1f2c-bbfa-46b9-89ea-d3af0b46dcab",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7385e39e-a210-4713-a8e7-11b63e142711",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "345145b3-686d-4643-b5dc-e10ceefc60ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c393bcb6-62e5-4f49-901f-f7b702d97df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49f72a27-f903-4106-a186-53306dcec8c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8cc95e9-382e-4c74-8f99-ec5102789957",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f8376b4-2f36-4800-8ce2-e65e1d66f3d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f54f5a82-a796-43b9-a832-4ebb8a68d56b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4db26e2-e994-4a56-b064-1362eb72c308"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3c6917e-0d0b-43e1-a54a-3c0c7642b540",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e847e33c-401c-4b28-8c9f-a3982f1e89d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab80f3cd-8945-4da9-b9a7-3c51fd51cea3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb6de83b-2bc0-4dbb-a230-9136a159f5cd"
            }
          }
        ]
      },
      {
        "id": "f5bb3ea4-334a-43f1-9a8a-ecd950981faa",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6eb66ac4-b747-4feb-8f8a-ccf424b5f287",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd9741c8-e9df-43e1-b586-f9abf00b3d91",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "10ba92f3-4eed-4e44-9397-0d4947626b98",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aca58f4-697d-48ee-85f2-b1ef840a8b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202f3a17-c114-430a-8de6-e79c1c5be519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47911d6d-b2de-4488-a0c1-dee88f52d47d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df1326e-57b8-47b6-aad2-ea8851f48594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504f2fff-e6dd-44ba-a21d-9d7d393e618c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83edcf74-1a07-4e16-adb1-51804a4cb537",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5aad2a-3800-4654-aa4f-2117a956b22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17dfb71-7004-4e2d-842a-7b9c4beef25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696d76f6-f697-4e58-8b86-f0963acd8fb4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc54d729-10e7-46b4-9e66-a224478e7039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d2a6224-2184-4b42-b807-4af4a3f5a6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fe5dc5-ea12-4c5d-bdee-208673c81799",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e56fe69-0954-434d-a478-58bd01875f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e834e52-ae72-4fc3-8e00-9ded1cf5928a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23dd0f31-38cc-4ef0-af3b-669b963d1245",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78aae211-0826-4f5c-9f65-3100f575e592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978f4008-5dae-43ad-822a-65c177f8f895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74a730b-9621-4404-8ec1-90ea88a3a854",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704e0548-a01c-4c31-966d-43eb1b075cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4cd30f-609b-4e7e-b18c-6726c515312a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79326ad6-c8cc-4a06-8cfe-6c0924d8c1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5c2601-75b5-4046-ba6d-43e0a4722cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a56204-947f-4f6a-8100-1c4cc7e7c0fb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274dafb8-e12f-43ce-9aa7-6810b5c8aedc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3966c2fe-f1c9-45ea-8582-453adc7d6646"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72eb2961-9f6f-4e72-a958-3619e44dd85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e951dca8-7826-4351-af7e-41c83adff2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db68e8c2-6483-4dff-a1be-c4202bd89c57",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c3c636-58c6-4161-b689-9a8df5063c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d44fa6b-052e-4187-856f-af54c305460f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c602c0-ae11-482e-9667-52eeb96e848c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "626af1a0-d319-4ba8-b930-93861143712a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a40232-66c8-4b3c-89fd-bd8483d5075f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2bdbf3-9068-45d6-a58f-ffc4cebd7263",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a42b896-e000-46cf-a4ad-3146cb16ebfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921c292d-e496-4b9e-bd1d-cb31a0f814f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eabcdd8-fbce-41f2-adb2-3a7b4c2e6b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57552d06-8af1-47a1-83d1-d60044598a4e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31cd3aa-277f-4bd5-aa39-f6eaa24f49a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2fc19e-a5b2-4924-937b-1bb13463c670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e63234d-5bf5-49fd-a1da-e3f935c5c249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa553904-307c-49e7-bb4b-f0babf0035d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2a9546-bee2-414b-9799-5d776cfcb888",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36a1812-bc78-4e5e-a92e-4116c53414aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576e82d7-3a98-4ff3-afff-79ada91311a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97cd11c-42a9-4221-bbab-9180c7d399b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4383c6-24b6-4d5b-ae1d-ab17a525d81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df35a7a-ee9e-49e0-9ef2-728990c47071",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24353191-67ec-4c13-b614-a737986fb3a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d75c73c4-2a42-41b4-81f3-d45734cd050c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcaa444-c38d-41ae-a184-1de075ba5968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7872ca25-4cbd-4881-8d89-22de6523eada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89a787d-be66-49e6-a19a-996656e6af3b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a893287c-3287-44f8-a0c8-928fde9386b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b93828-12d5-4a46-89f4-063c885e137a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a5884a-ddae-42c3-b869-a3c28f449499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8c550d-1caa-459a-84fd-08d60108cb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9499b592-e552-4ebd-97c9-b76c674c3076",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaa739e-a796-4ea4-a649-863208e0a8a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "156bc70d-34c9-49ec-b44c-69534cfb3e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01af7e99-98d3-4c23-ac3e-662d52167bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fee5461-df93-49a0-92bc-62659a754209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c606845-ba08-4c24-ab99-9fe6c0b3d8a7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433ec54f-6b1f-4325-bbba-4e3460523685",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b4cf0f5-8c15-40d1-b5e6-1e65250d2fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab155c2-c27c-4c6b-b724-3b7320f4091b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db95983c-15fb-4601-9578-d256f56a7c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c31c424-2035-4a5e-9a13-302ff73ff5e8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0519dabd-bd8c-4ae5-8f93-88c13c0c05d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5cac9b4-6a22-475a-9964-b1dc692e95fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d41325f-5d18-4579-a631-f4a1d5af74e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0471bfd-6b89-4193-b0ce-408b31747478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de8d9e1-22b1-40eb-8b6b-dfc1101d3e7c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cdc608-b776-42de-83fc-65b7af0efdef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36e1d77-41b4-4ab3-aec4-e8f998778fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37902220-ad4e-4d3c-95cb-d3a708c9d231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2487485-b216-491f-9453-fd4b09d7bf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60e726c-f7c1-4ba6-ab6b-b0527988dcb7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12123640-368a-4cb3-8bf3-bcb850dde5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd415598-f42d-4c85-a2c2-ab4e1a42b6a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0f4909-606e-4328-8240-c749310f0758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3caf7f8-209f-419b-ac96-842136905f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4754cad-0669-4517-952a-cf0495bc85d7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ae8813-240e-4263-8211-5a2ea144ee7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3361cc2b-0e4a-466a-9e71-d559e2c2f38e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1f6e20-d995-4ace-b994-869d29032c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b42f8f6-e431-4200-ace7-22e2bfdfb891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4777901f-18d0-4ff2-9bd9-93c4b4b9b096",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3978e8-8483-459a-bca0-df1e896f77c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d376daa-c93f-4532-bc98-1944e34d0495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d801e3-5ec5-451e-b20c-3807bfb4efed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206af9eb-55ad-4567-a337-5b29751a1476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9fd228-c199-419d-a63c-eb205fcae940",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50383943-841c-4e14-b2d3-b14141eefa2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab52e7d-0664-4426-b9f8-441005969bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e03412-2387-4339-8ca6-94edab73730a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691d6906-cf3f-45a9-8246-534f18dc0428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d955b5-9e68-408b-a7f7-98919a27e84b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f879f883-aede-4133-a2ce-9590542c4eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43428c4-e377-4156-b0fa-29a12c743113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae382d8e-0d5c-4883-83db-6963a6cfdf7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafc22c3-ba0c-4385-92e1-7f1d97ae65af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac71333-d9b8-4d6d-965d-d7d298ed33a2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369c21e2-7c7a-4bea-989d-7189945a90e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "301dd020-7dfd-4fda-9f20-9b912e4c600e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9647d94-6b2c-40d6-abc3-740e5853fce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb9a3a1-9f9b-47bc-91ac-9272090d7d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f07a144-4447-4aaa-9d01-a189c3de532a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebe4445-a7f4-4803-982c-8437ceed98d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b186a86-0122-4332-9194-4bb198775d06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5dd9cf-06cd-42c3-96bf-c40e931591d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae076b70-9368-46bf-bb88-b636df522544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2a99b7-68df-4b08-9e40-ee9f7e2c438c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0bd2ed-c30f-40d5-837a-12db1ad3b6c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a504164-89fe-48f6-9b2c-1dae61186a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390f7d1e-faa9-4037-b190-e3e5153263dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5428424f-5d3c-484c-bdd1-bb082c90d9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a7a72c-41f1-424c-b8f2-7844bcfc53dd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cd7d1e-6c64-4748-b3c9-bbc631bdd54f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37604150-e37d-4348-8351-413337322b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "217f372f-225b-45f9-b4bc-b3ce085becb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7276b5c-28f4-409d-9dbb-98c4dc239fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6005999-5626-4357-b8fc-7e52f18d083e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596c3d22-729a-4073-9775-d1611a2b49e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2757f234-1bc2-47d1-a58e-b37aadb5a061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f683a2a3-345f-48a9-b901-77280bf7aacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3fbf4fa-fc87-4f60-875b-b0d1b318c000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01277fb7-d88b-40a9-ab57-f3c0e4796db8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f31dda-82c9-47e5-90b1-f6778f5e4975",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3af68278-1348-45bf-899c-76bcdb16c462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9522d315-c56e-4553-b4ed-a4bc5736bccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e575793-504f-4421-8886-8232fdf3ead8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18592b9-3be3-4db5-9c1f-424a436b57c3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0bf3fb-911e-43a7-a35b-9b1b7e25e7bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f018441-0e7b-453b-9af0-28a5baa653cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33234204-2d5c-4318-b4cb-892c05cb99fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ab5096-15c2-4147-8aac-8ef05b419fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d866961f-bb2a-45b0-ad4a-a5c073c0f6d6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f2821b-e2f5-429f-bbc5-2af96bc370d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "545bc52e-2ef5-4f0d-9785-f3fefe2cff66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ec5551-8056-4f27-bc26-3f3c469290eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dfaca23-081c-4717-94c6-038145c46f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d55a75d-67a2-4d9f-9fcc-eb97d53905f8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1501a250-d363-411c-b938-d7e669ced182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7896619-ba44-49b5-b212-fec44fe0f2b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0623b2a2-87b5-44b2-9efe-e2514a7f0f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63a1073-1b1b-4a66-9fcb-4f33ec80df58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00238f8-08f2-4360-ac5e-bf6edd391549",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d114a63-ab55-4d75-9325-43ddb5ef80d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "806971db-891e-4b0c-809d-c57573527429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd6bcba-655b-48ac-924e-f57e3e6c17ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b65411-1746-44ba-8591-f14da1e84d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed26326-cade-42db-b701-794f1e5cbe44",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c4790d-755b-4fc0-a7b0-4d2397044a45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54603457-c96f-42c5-84ab-4d8d181ef853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69792358-4514-4f90-ba33-332f86b452f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07683535-12d3-4b6f-bd96-2cd4b8818602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e14a24a-ae4a-47e5-9ebf-61006309947d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a569c4-120a-4d72-98d3-296b43b9ae86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f292e8c8-3d1c-4e93-9a40-0bba931ccc24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab204aa-eeac-44d3-b2aa-c7610a1177c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49eb2ec0-65b1-4f49-8ea3-4a29925c9a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301e0148-6f20-4df9-b9a0-b5b36db3a157",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3f7a26-c569-4c0a-8b27-31b16673abfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d797c40c-25f8-4fde-939b-6ea745090c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a90c404-93d2-458d-9a63-d958ccc2ac16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694e68d4-a483-4099-bccd-4a1be009f74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffc10fb-41f3-4fb8-8109-c77a4072868a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f001612-82b5-4218-a517-19a7edff9495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff74a35-215d-4ccd-a496-01c51af988ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44ddd2a-452e-478f-baee-5f92ac9afcf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e55c8f53-d61c-44ae-8f84-0f1eb9e302c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb216de-5247-431e-86f2-cf4a5d8a7cb7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff0b5dc-7577-4309-84d6-bc60b9fcb0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf509437-5b17-4cef-b008-bed591b3ae10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5169d5-63d0-4dd3-b00d-16b6b497af37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e910fd76-b2d4-4747-964d-a8f1c4e0ba18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b9c9ad-ba5d-41ea-9b1e-2fb7d1b11c88",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a046c730-6460-415e-bea0-98362809e794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3fca8b-df1b-4cdc-924c-78780291a8a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97168673-d74b-408e-9309-4e3c733f6515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd00f8f7-5716-4548-95d7-168d41380f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f806ce92-762d-4e5c-ba11-6168095de832",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae9e333-c1b9-4d07-aa6e-1a88b5a1085d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "803600e5-26ab-4e14-85be-c1b0c7a52056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54369ed5-5e7a-4411-8803-98873f605f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6da8e3d-3d33-4a46-b1d5-0751bed04db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57bbe3c-499e-4403-8ea4-80dc01a0efac",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638bdd99-b53c-4dda-bd79-a1cfccbb48ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa62135-27b5-45b2-a0f1-75279e00fa60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbec0a68-97af-4d2d-8f55-450364637990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4d0b28-95be-4a1c-8bb0-887d233c7e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6639c2-ab50-4840-9cfb-f6db4b4b4f1c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dd4c39-16a1-4286-ba20-f62491d00ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ee58a1-bcce-4e97-8c3a-83456460bda1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c5dd98-812d-4727-b7d4-9f48dc9df5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844234e0-d9de-4bc3-b08f-9d01f9a95ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1073b12a-c71e-49cd-81b9-4e4641247eb0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e5eb91-3338-48da-810a-827456b17082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f610c906-77c8-4c82-8673-c97ca3760485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3327718e-0e0d-420b-b8ed-6bc10b985a37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9dce50-1e8d-4d9f-ad6c-efa3003f55a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f28118-b855-4c6c-a3b3-1bc77efb9c5c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1479f93a-b295-4fc0-8cbf-9866eaba613d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859b1662-1e39-4e09-9aa9-347ad503a527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6638752-102d-4d86-b84f-d076704ff8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30537685-e079-4ba6-a218-3dd6c3621f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450790a6-51dc-4cf3-b794-716fec9754a8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29ba045-3c64-431d-ad36-fecb88087e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03aeddd9-d783-45d4-a8f7-4bfbad38aba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b72663-bbba-418d-9318-7e0d2007ad5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ee5609-ed5f-43d0-a873-ac8d16f2d166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2373fbb5-ad79-4abe-aeba-99f8643a7500",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4edcab-fa2a-4d41-8c2c-1e6b98d594d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f0d288-ce69-4f11-b0e2-41642fe72333"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45b72f2-543e-4fb4-8086-d2feec1912b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8409da67-c6f1-4e6b-9437-f78fc81a336d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d99367-4048-4ba0-a54f-8c0499f58451",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f068211-73ca-442f-88ee-d9f4d070d97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11b73be-3da3-4574-bc28-3a3ca9026c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e77cfe-c4a5-4bf3-850a-541f883885ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83244b63-7fd8-471f-a7ca-ebcb65afbb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7cf6985-bece-4ed5-981b-61e234d8b898",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf00ad65-4bf8-4df8-b392-a2b1733f061f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874256ba-e6fe-46c4-8278-0d05c3b6f64e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca80299-97cd-4b53-86f5-b4748ef42fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a8358c-25f1-4ada-9c68-51bba4c029ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbaf35e-9b8c-4ebd-b5fa-8f5ea85e4436",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be128a6-a1f7-4e79-a996-7d736ef1aa19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2239557d-bcd2-45f6-b981-acd8429cd645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156571f2-7409-4fac-b03b-dc58f4e2d112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7475406a-9c4e-40f7-a424-820f76c548d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1a96dd-de78-4275-85bd-58214e4f672c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e8e177-6129-40ec-b5a4-b853d04ab949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fccec5a5-1c95-41e4-b587-013803eaef9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b311587-b4fc-4ce0-85de-d1bdebea67c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf5e102-f73b-4e9d-a231-3b50d0d60edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6d8ec5-c120-425b-885f-9dfe2a05c2a2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0cb862-414b-4e7a-b7e6-37fe510c05ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad9d9cc-8043-4611-8e9b-56f755b4559c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7ee7ce-57a6-4bad-b5e5-b4bc63518aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c9244c-7ec6-415d-b70b-1e1a9d4fa274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0139c621-f99d-48d2-91d2-08c4bcd80415",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8c1f78-a6fd-4de2-aa22-ff6066abd8d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf33c76-3d61-439c-962a-dee788ef88d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e438cbf9-9cbd-405d-b637-adf643d07f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9afbb12-8723-475c-8517-3110d6081c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074c8aec-1e04-4ec4-a02b-99c4a969a5b8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2d8298-50b1-448c-ab1e-4789c90d8cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bec9d73-6dd9-4a1c-90be-ffc50109510b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eef583c-c3c6-4b4c-8b8f-c1e18410d194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d994c5ed-958c-447e-abab-be918aa80125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07268445-6c66-480d-932c-c9858299419e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8032e82b-2f41-4adc-9db5-40d42971d9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd92ee0-0183-4c00-924f-8a00f1c6a918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817c84f0-15a0-4b92-8884-b96b2e046246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4982b60d-9106-46be-8264-110414e8d200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4fa1bb-077a-4793-b83f-d0f2e593d22d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4196b3-3a26-4af5-ad28-add0fd46d56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb64aa4-be63-49cf-be12-7ab2c22fdefd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aeb4c45-ad03-4b12-843b-74bb7d52bb4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df697e70-4a10-4b1e-a306-8d01bca6a76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387029ed-2a18-43d1-b477-55946e512d1a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1df614-9ac4-46b0-9577-41d3033730c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140bc864-e8b6-4366-86fc-268cf53ce9d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08b7ba4-b891-481a-9538-cde72689d6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b10251-0dca-4f6d-a3f6-94db7fd252c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a736798-7d8a-49e5-b99c-e4bd7b4906f1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff72b457-1117-4ed4-9950-4452b2ed5ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a9365a-b8f1-466e-b450-53cd2919c0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206cbf3e-5b6e-4a66-9eba-fb9979b13dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b792a6-3bb1-4aa7-b53f-1b5a08fa373f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ec749b-8559-4876-9bb6-34c72525a239",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31654e90-3cd0-4ccf-a45f-a4125fdaa32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d1d248-b465-41ae-ae9b-195d58b3fd2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0ad6f2-2158-44d3-89f5-238ebeed4d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accd3f40-355a-4d07-9ac0-69a5abbf1f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834effbc-226d-4f63-8e8e-086b848458a0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe490c2-c832-46d4-a6c7-d0e68c16ae4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba13e24c-7eba-4acd-9d0f-ebed63750f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9511b6-ac67-43fa-a7d0-27cff9702297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de86b44-3027-4d7d-9d06-00d615954ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9de55b-ec1e-4986-ba5c-c4e225467762",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57ab736-3f8b-4f3a-875d-7691606e6d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1c7c5d-3f22-4d76-bb36-721870959bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e4ac67-6b05-4ef7-9f64-7bd040e6e1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ec1ff9-2a18-4753-82b5-d82fa297427e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877d5d93-5669-4ddc-ac53-e02aeb23300a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0bf1bb8-ea95-4d98-83a0-37609cbabb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b840cfa-1b32-4084-ac4b-e01d527197b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33059226-a3a2-4b10-8cbd-5684f598b721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9949667-93e0-44c3-8c7b-8ede8000e137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36be0492-8f39-4c81-9252-d18155f129d9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e261b3c-989e-47db-a066-9179517c07e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217b1207-dc71-4e19-bcdf-987ac72bb788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b7b768-7ac0-44cf-aa00-849d2a14d2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c3510a-780b-4f33-b61f-ccbb68272c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb6fc3d-7e3d-46b5-91bc-a93227a367a3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9540faf9-08a5-4412-a878-8095c754594e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bcc36b-f6e0-4acd-846b-cfced03c0355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f577a01e-c59d-48d7-8895-0e9df536c508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8235d25-76b1-4e0b-be87-36fbffb2a7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e04c59-c1c5-4e10-8dd7-1bc320370a81",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3844cce-7fe1-42d9-ac61-0ea959426fe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fa625af-5aa0-41ac-b90f-f394e7926ec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ce690b-ca33-4ebb-b520-407bb3200189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9d9f6a-4b02-44ea-a876-d65ab5795053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2098baee-4f99-4db3-b827-c61fa70087d7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d04576-e126-462d-921f-3e0d4ba9c9f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff25205-d172-4fee-932c-98d3c277d1a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00cfc78-caf6-496c-ace0-f476eabb328f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0076e03-86bd-4fa3-9f2e-777289b92ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d2e0e9-2e5a-434f-82b3-1bb227606935",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013320d1-48b2-4eaa-a098-5e8878154174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b218511-1f6c-47cd-8c67-c9632cba32f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7022185f-d1c0-4311-b26b-5dee848b0c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1797772-b1e6-4fb8-9abc-968e28c6ebf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67be24b-6263-4477-967e-a4b70bda0dee",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac50f80-43d3-445d-8b54-3f24592d7382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f391c219-d773-4725-954d-f359c57d9d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbb86b6-4ad5-4a18-86e1-257519198c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accc2089-16ce-435a-ae1f-1c686d93c162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70236183-fce4-4623-bf3f-c00540e30718",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad076b1e-2cde-4c38-86b3-ffc8d0c19c61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da5f6c09-a549-4386-9b74-afd1a53734a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cb3209-8e4a-423e-9b45-9e9a2933944e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ac1944-23c7-4cfc-91b4-bcf95fd7b72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360361b3-0fa8-4362-b68b-1aa66d530bf5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f67444-0f75-4097-9e1b-762b6362b86f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7253cb1-982a-42d6-af28-b931e3cbb3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "235c4753-01f5-445c-9ae9-2b19a1c82d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bd9913-d95e-4bf6-b571-35c727b73593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cace6bbb-3e28-43af-8b87-78c3742f667e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ebcbcb-ac79-46d9-a7bc-58baa5a5deff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8df33eda-dffd-44a0-96d6-c5c1927c6c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131485ed-2332-43f7-93eb-cde2ac257dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7aa4822-0c42-4f55-8297-e277eaae830d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd08749-4db4-409c-bc06-1c6098966e62",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac6ed6c-c1f1-4d46-a78b-fcd6bef00660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad0776b9-ec48-4c2d-9599-704c61a6ba4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4eaca74-9c07-4d8a-bf10-d506b51a6712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40d8ff1a-b74d-4b25-b0f6-0de8bd4f6c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284b2a8d-1481-4d3d-9190-e1bb31de0f9d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65bc37b-2bff-46e8-beeb-4f9615d2d5c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec563537-1d67-43a6-b8cf-119c81c6a95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f815678a-d1bf-4f16-9913-11ec8b091361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16b648b-faf8-480a-8443-d609939e0d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1891fbdb-a239-49de-854e-88b4b018b78d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe5c121-43bb-4b83-ac3b-737c2f0403e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0ae3203-37bb-48c6-a1b3-95c462f23713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a220a407-8dd7-4621-a088-f41114986c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f1cfbb-9a9a-473a-a67f-6d5da4b8a1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39354c52-3573-4a1c-bb6d-cfaa42bdc586",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967b8692-7e9f-4a78-b758-71c262c7936f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c00a899-fe40-4cf0-8236-61c184bc935b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "580688d6-907f-4853-af52-62afee62e3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d2c2d8-21e1-4f76-90dd-1b184745b2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a2230f-da00-4053-ae74-7f9bde4b8381",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e192caf-a0ec-4be3-af6c-3dec3fc08b96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6609cdc6-e046-4fc7-acf6-90cc3053d5ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf63155-c62d-4211-a5c8-40e88e8d1cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe196d7-bc11-4a45-9e8b-b29f38456484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b9d02f-4783-490c-9f9b-e3628e213768",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a03da8-4a5f-48bd-9277-9eabc8a7a917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5c5090a-802e-4f1e-b511-1a2a24f9ed5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa114efe-97f6-4bf4-8f48-22ea8e9543a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c689f5df-4574-4605-b322-ea11686c2821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4ad976-1bf3-4a65-8929-61a2793d1c6c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddfa589-440c-4c48-a513-9faf7d75ec14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bc7da9a-6988-408f-bc81-51cc7dfac021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e456d516-4005-4594-88c9-4335ba1ec21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f076cfdc-8e0a-463d-aee5-7f39203db0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9123c65-5537-4870-8c83-3283d86e80c6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb05632-5e85-4353-aea1-7b00bd305c9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0d0ef01-0730-4dde-ba49-85bcc34bbb4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9983cd3-c0fc-4d23-9b10-079dcaea12e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422adf69-a97a-43d6-92fd-95ecab424107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb27f69-47d5-4576-829f-cbea321a67fd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe48b2a-9730-4a61-8bf9-f13294e41264",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4fbeffa-3fb4-4f66-b3c4-2332084a0baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c369963a-db3f-43eb-be04-be40a5c7c107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36954921-c8b9-4beb-ba50-d3b612cbfa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fc427e-ee00-4fba-9776-19f588ad7573",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976bd661-1ac4-4162-863d-5e7902a7e365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "193eb7e9-8647-410c-80cf-fe7ab7bc17c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c603ac-8c37-4d86-a1d5-16a5f02fbd00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85c9b6e-4338-4fe7-b34e-b517926932cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816f9230-11d7-4e7f-bd12-3450bd4f991f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15a2b36-895d-4188-a9fe-bb202ef87ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69b7f479-5a26-48a8-badb-f3bfd6715778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c481e458-3d9e-4880-8d69-08de49fb3397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d983eb2-0f73-417e-a217-16f7de7dedb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e27ac0-f1e7-4a35-9414-f08041731e5a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e274dd-f21b-447c-b24a-3af388760dd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c9f7f1e-90d2-4239-8d5a-9935619cefb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c607cb-282c-43f1-99ab-218a196e38c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fbb1b2-9e53-43e7-a197-4ee69c32146e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df47b44-838c-4e77-a97d-3a9d25442c84",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e801ec70-91e5-411a-937d-8b097d609eda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba9ce305-6aff-4622-9398-71cf0e38dba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2863ee7a-c443-4a05-afc2-4c5f4ef88dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e60432-e908-4d43-a96c-2127f0097757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201d9731-93e6-4c0f-90c4-e36c81dbdba3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1cdf08-3fd9-4d9a-a881-fb17c4b4f657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdb85631-5598-4696-9cd6-f06760012a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "571b9455-cfc5-4e2b-8713-661983e2931e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8cd715-671c-46a9-8316-35ff367c63f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4576c83d-f31c-4b8c-81b2-4985ca39b6cb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45daf4d4-521e-4ed0-b8d9-e7fbfaedd435",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22b67d7d-851c-4a76-a88f-849dc6e6bd72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7034779a-abff-43ab-837d-bb0b12076a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7021e94c-e028-4a0f-a841-48d48788442b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef5627b-81a9-46c6-a79d-47e65749f629",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254d2c27-d3af-4764-9b46-4a7bd45beb1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db894f6-69e8-41ae-aff9-c97260c3a9f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabdb7ae-7983-48dc-9f13-1b0746db5dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11745b44-ff60-4771-a03f-67440946c0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101bff1f-5ea2-416d-8865-2dba8322ffff",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded9471f-e2d2-4f25-afdf-3084c39877f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5581c8f8-25ce-498c-85f3-eb4a9d98fc9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7888fd4e-9f1b-4f7b-9b25-b221053ee8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b2d60f2-9ace-4110-a2f3-9e2759f3fd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a4b5c1-2546-447d-9f10-7e586027e665",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64779055-778b-4d47-b96f-b816f5a6e058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "223ee7a3-e0e3-4f9d-95e8-324166f83f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8218f4c-01be-497f-a760-b30ad2871942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b55ed8-4c87-4df9-a527-5990b2484de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411fbe33-b387-4628-a495-ea2d743dcce5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0d2aac-380c-4d84-b946-36f067b9c73c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d0636fa-6625-4a0d-922b-2b3cdcddde31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29509710-2c19-4005-9954-a02c87ab45a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bd875c-6671-4f47-b40b-aba2b9580c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f56ce3-d41a-482e-a12c-17721c384869",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e248456-a332-4a15-88f2-c124ecf8c4bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbc3892b-d93c-4024-8219-8b6636717a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25926184-a4b3-4046-a79b-1a8b6c1ab790",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7f77cb-2cae-4265-bd9a-244c98200c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4307e98-2498-4797-9eed-f59599420f80",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51561bce-1663-46d0-9775-c1109b0be0a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "383ba15d-b00c-4f02-bbda-66dde3568a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad77088-aa00-4b71-a72d-d16ce4c32242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d3a955-ccd4-4341-ad33-a17ef968b3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245ed276-f962-49b6-ac26-e613fd619b0f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e556d1e-c4a4-455c-b4d0-b0d7c9fa2fd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e4915f3-51d3-4ba8-9c72-520ff5cf5fc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839e906b-d09e-4e02-af6f-13faaf405b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "904c07f0-5881-48c8-9cd7-939de402b5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0294025-50e0-4dc3-addb-32d948287901",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4e01e2-d92d-4ab6-aac0-f4dafd5343c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44a972f0-6f39-4fee-972c-33863787b8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29d682c-c10f-4778-bc00-a09c22d24dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccfafd6e-1540-46f6-8a01-37b178e1249d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dec179-6b8c-4196-b99d-2eee6ddcc96d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c192065-9ab0-4891-b9d8-b8e97349e740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "562606b1-a921-4638-933e-9d2fe7619ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a6164f-a964-4423-855d-8ba93f01c075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c19a3b-9652-4bcc-8648-2e7476ca1bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016e0402-4fc1-45d9-af60-100bfa334d9a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314f2c7b-1ef8-419b-a5db-11071fccfca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c7d4722-d9c7-49de-9c7b-072a37032ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c25f09-5bcb-461c-991e-b9c9228e4633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fffb644-9601-4ee7-acbe-49fcbe85d3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5685777c-51fd-498e-8453-7c5399a38337",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5bd5f1-b495-4ab1-8380-b5d745555770",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48f575eb-58d1-4a29-a4c5-46616eaf02d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327818b3-31e9-4eda-987f-4af80e5ac5f3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf58bc78-eec1-49e1-a8fe-a094b9f9d38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caefacbc-d4a8-49db-99b8-3a4e9629248d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0917418b-5fc4-497c-b7ed-3370013f61dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd029d97-fa59-477b-b0ca-a10ea2521ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb6e9f3-4ec3-4f8c-8afc-1c9fc7130908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782ffe90-68c3-456b-ae79-04ef87fd4596"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8eb57fd-87b3-4569-8650-79f1697f96fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c52fff4-a491-4e95-81cf-28f907f450be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b6754bc-1bed-4f3f-a09a-cd3572bd7a30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f1a2d908-f251-4ffb-a2f7-cd6f0f47aa91"
                    }
                  }
                ]
              },
              {
                "id": "f6611811-535b-478d-8860-63bd7f081f63",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "315f7065-8401-429a-a316-a7078bf23979",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6da5f7-5a8b-4cc5-8913-2681e62bb1a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e8d469ea-bb16-4c3c-a42e-5b1a855a09c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fe0f0d-ba69-4a2a-9d80-02156d6e4de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bee9a6d6-8e72-4586-a7dc-bbefdcd0e06d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ddbfde2-b9e4-45ea-949b-983c2c8c3517",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "256db7fc-da88-42ec-8099-e62c9e4866f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0f16c84-a623-4724-b254-429c0b99b877",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ad91bd7-0f15-4cbe-9a51-43ae900b0dec"
                    }
                  }
                ]
              },
              {
                "id": "80616200-3e67-4103-8edd-047bfde11602",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "32a01803-c26b-4768-b2a8-9878a33af5cd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ee3109-6e0a-4bcd-ac75-afc78bcd3075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6004b07a-a964-4fb0-b2b9-a889155fd65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0411de4-5bf8-411c-b9c3-b8474e58ed7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad85325-27ac-44af-acf5-59cff9107d9b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e1f7032a-9d25-4afc-a3a1-fc1dc4c52a15",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9a07e18b-d4a5-4c5d-aca6-64ca9808a926",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0c7732c-dc75-4321-b529-16c2cda72d35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "456d9919-9191-45e4-af4b-045010e2957c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dd5423b-724a-4278-8bdb-e20bd0f27176",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e144b47e-6dd2-46aa-be79-6e5cc826b04c"
                    }
                  }
                ]
              },
              {
                "id": "02a19348-e42c-468b-ae16-c00a8a97ea64",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2776feb4-a79b-4573-99bd-3abdf774a87f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "89a68764-e40a-4046-b538-c6a4e4931700"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a299a65e-0b35-4086-b02a-8e1172b58775",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c25cdc4-61cf-4ad6-9c3e-573c37f5447e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ee48ea0-a2af-4e96-9ab5-8b90fbe13f6d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d7f9b1b9-9eb7-4d69-a56d-afe90c42196a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb5ef60a-3cbb-429f-98ce-d43df6aad576",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca7dcd0b-67ae-403b-841f-f86e026b0d8d"
            }
          }
        ]
      },
      {
        "id": "65e3eddc-652d-4d67-b6b0-7283f5bd93a3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d7e9461d-3dff-47c6-826d-0a4ab1c63917",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a9877619-c8a4-4060-9598-b6e7997f8824",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c467757f-3731-4d10-b6c9-fc237282877d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950c1868-0cf1-4fb3-ba48-d3fce8f23ce2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b62be960-1d8f-4857-8d5d-e25e1f579b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6edebd-27cd-45ad-bdd8-731f07b0f70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6203077e-f81a-40a3-b416-37a3d7268580"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "504000e5-5db2-485c-8ab6-9d835a542461",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2424f29-e03a-428a-815e-67319b65e830"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e63508b-cdb9-4dc2-bd8f-4bd5835d5d55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcdc853b-bac2-4074-a224-73bcfe52a5dc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbf08114-4b46-4f90-8004-5e462b8a83cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3b33fe5c-90a9-4eec-ad2b-ee7b40c991de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2441e2d-8696-450e-b8d7-b47aec505de3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7593f00f-7c11-4289-8e0c-a31385afcc11"
            }
          }
        ]
      },
      {
        "id": "db3e2847-5f8f-4372-901c-de33e9362531",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c251fa55-50da-4119-a469-7dd5dbaf360a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "533b3f31-cd17-4d4f-ab0f-3ed5799a297d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5961d7f5-c1d1-4abe-8689-67363a0a341f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb41dee2-7fe6-4202-82d0-91c992369b96",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf99afae-2f70-47c8-b8f1-cc3b1d786df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5250b3-0bdb-4a72-9cf5-f9a007bae555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19cfdffc-0d14-4f76-838e-ec618e1dbd27"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "609c3754-76bb-46c2-90dd-c462ac6b84ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3265b12-7f9d-4642-abd2-873265e2c21d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75b30032-a931-4111-9e70-317857367793",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77d4ca53-7653-44b0-9a44-a1448542c2d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2b60cd4-8c95-4fff-9dde-c69cc35a7c12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d23c8512-1208-43ea-9924-347eea338fcb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "005d5cc3-9d3e-4d7f-afd7-14bbc84cc2aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63539baf-b59e-4870-ab02-88938c59884f"
            }
          }
        ]
      },
      {
        "id": "1d576695-7c95-4644-b81c-7a2d053d8050",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "127c3970-0a7a-43be-9a8d-acfa90dd5695",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2984425c-8db4-4e4e-a52b-e917b2e41f3b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47d42b00-58e3-446c-90bb-860c42e41a62",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2622fd7-a4fa-46e1-a2f5-e33d429a30a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ec9ab74-5da9-436f-b88a-1868ea40b3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "116d0ebb-003a-4622-a5e5-b5b23ed0d57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "456592d1-8f3d-4552-add7-95afc6d511fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b052726e-d916-49dc-897e-94b149672298",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffe56dbb-bcfe-4970-9c7b-3cfd1c8b212c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "846d818f-96de-4ae0-8da1-1b04c504cdc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c9f2064-bcd3-420c-a6c6-4fba10936115"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d065177-3e1c-49df-b6d8-df0408b97570",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fcc9d273-4dad-48b5-9ce1-5702d7fb9dc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7e9ec08-b5a5-424b-b01a-21c681ac0c5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "664c38ad-b13a-49c8-94e0-184c8740e80d"
            }
          }
        ]
      },
      {
        "id": "f88ed355-9060-4562-b0c2-fb31928123ac",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5200567e-b4a1-43c1-96f7-7cd68d817611",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a446262-16a4-4611-9b40-86b06d900db7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e047bd9c-0bd8-4508-99e2-1a29b47930f5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d7be674-a074-430e-bc03-c3cfd06326eb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bce2c5fb-ef4f-401e-8ea6-cad839fb28e3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 123.57543859649122,
      "responseMin": 20,
      "responseMax": 8159,
      "responseSd": 527.8322820681085,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701563880675,
      "completed": 1701563925062
    },
    "executions": [
      {
        "id": "c0300d2b-abd7-47e6-811f-5944c160780a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a6139076-6c92-4560-826b-f70917d2e976",
          "httpRequestId": "6e407eae-a37e-4e45-871d-afe2927b925d"
        },
        "item": {
          "id": "c0300d2b-abd7-47e6-811f-5944c160780a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1a77404c-b25c-43c9-8b19-7e32c59c26d1",
          "status": "OK",
          "code": 200,
          "responseTime": 142,
          "responseSize": 0
        }
      },
      {
        "id": "63a99aba-f7c2-4a32-95f5-df3b62458e33",
        "cursor": {
          "ref": "f0c3628a-afcf-4916-a768-5514e35c8312",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f896e343-e73f-4c08-ac45-38e63b3d9e85"
        },
        "item": {
          "id": "63a99aba-f7c2-4a32-95f5-df3b62458e33",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "15f4d640-abfe-480f-9277-5dfbe41a0c0c",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "831bfdeb-33bc-43dc-9553-80b7020ffa0e",
        "cursor": {
          "ref": "84c80b44-9055-4f77-892c-aa3b7a7e9bf9",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a5f287b0-87aa-4d7c-aae7-b64a6b083da8"
        },
        "item": {
          "id": "831bfdeb-33bc-43dc-9553-80b7020ffa0e",
          "name": "did_json"
        },
        "response": {
          "id": "a159fadf-369f-4155-b126-9cea226b5911",
          "status": "OK",
          "code": 200,
          "responseTime": 460,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc050d8-48f9-4c01-9877-39505610c5f7",
        "cursor": {
          "ref": "feaaf0aa-c92f-4283-8021-9e3f4051c3b5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "84420aeb-312c-4fd5-b9c7-c4ec1ef54445"
        },
        "item": {
          "id": "edc050d8-48f9-4c01-9877-39505610c5f7",
          "name": "did:invalid"
        },
        "response": {
          "id": "92604a98-a3ad-4328-b8eb-5925bf18e7e5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 925,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc050d8-48f9-4c01-9877-39505610c5f7",
        "cursor": {
          "ref": "feaaf0aa-c92f-4283-8021-9e3f4051c3b5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "84420aeb-312c-4fd5-b9c7-c4ec1ef54445"
        },
        "item": {
          "id": "edc050d8-48f9-4c01-9877-39505610c5f7",
          "name": "did:invalid"
        },
        "response": {
          "id": "92604a98-a3ad-4328-b8eb-5925bf18e7e5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 925,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69236699-0bda-4e1f-8530-cb3e4ef689ba",
        "cursor": {
          "ref": "2d7257e0-7132-4d81-b1f3-8c0ffddb7aa8",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "320a00fe-18fb-41b2-8fb4-d4b50148e02b"
        },
        "item": {
          "id": "69236699-0bda-4e1f-8530-cb3e4ef689ba",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bb798380-9748-444a-8084-eda10c81218a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd73c86-69f1-404c-99b3-9fec1a66a6c5",
        "cursor": {
          "ref": "3da3cc16-c2bd-4406-a02b-b43657f59403",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "07584012-0810-4c38-a6d0-2a0a95157682"
        },
        "item": {
          "id": "4dd73c86-69f1-404c-99b3-9fec1a66a6c5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7e3be18e-2bfd-4cae-bcf4-bb721b053c86",
          "status": "Not Found",
          "code": 404,
          "responseTime": 109,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9387f61b-9334-42ec-9e38-3da81b5b37bf",
        "cursor": {
          "ref": "c057051d-1ccd-4876-a0f9-b49803279618",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f0a58566-88e4-4ef1-919c-41fd686a5ffd"
        },
        "item": {
          "id": "9387f61b-9334-42ec-9e38-3da81b5b37bf",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d7f3aa37-abae-4c7a-8a8d-06ea44911cb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0802b137-ad0b-4f86-a4e5-e6ad62980d6c",
        "cursor": {
          "ref": "0fc1c312-91a7-48b9-9465-ada923b4ac99",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0b6965b0-9a2d-41ce-8083-537d3055f97e"
        },
        "item": {
          "id": "0802b137-ad0b-4f86-a4e5-e6ad62980d6c",
          "name": "identifiers"
        },
        "response": {
          "id": "e960e625-659a-4b98-a69f-d412c5f61f74",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a438561-c5ca-4e87-adca-1336d3502178",
        "cursor": {
          "ref": "f1495500-b8fc-41f3-a4a8-e864e083264d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "88cb4284-d784-4adb-8ba7-d92e78d464c6"
        },
        "item": {
          "id": "4a438561-c5ca-4e87-adca-1336d3502178",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "de6d8fc3-3781-4651-b4b6-2b347b12967d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b95b869-5f88-4d89-a622-dfb97e69c991",
        "cursor": {
          "ref": "9b393d30-7131-40ea-9039-e6de43b0e88a",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c5be8bce-ca8a-4ee4-be78-e995cbfbb5eb"
        },
        "item": {
          "id": "6b95b869-5f88-4d89-a622-dfb97e69c991",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "848e41a4-f750-467d-b83d-bcfe620fcb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bf18b8-bce0-4517-b04d-bb24271b2eb8",
        "cursor": {
          "ref": "e68bd52e-e906-42f9-b6f8-af769b87c55c",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ebe17ac2-ec2e-4aa4-a188-d4066a633dfe"
        },
        "item": {
          "id": "41bf18b8-bce0-4517-b04d-bb24271b2eb8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1dad27c9-a07f-4b48-8892-e6226467ca11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44f55cd-2c3d-4023-9398-74d4e30e8225",
        "cursor": {
          "ref": "77cbc835-d582-4421-9f23-ccc44ec312c7",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "42143a61-61ae-4a9b-aabb-7bfb80cfe41a"
        },
        "item": {
          "id": "d44f55cd-2c3d-4023-9398-74d4e30e8225",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d7fceb59-4e65-40be-90f7-7eb1f71d1cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90a3a90-fd5d-4820-a9eb-ec495cd9e40d",
        "cursor": {
          "ref": "ca7b5789-96cc-40d8-ad74-f8331505f0d7",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "51cee97f-5b24-4575-aabb-3947db79e84b"
        },
        "item": {
          "id": "a90a3a90-fd5d-4820-a9eb-ec495cd9e40d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b87c0ad2-4466-4e95-a107-588af337ebbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3988de2-7b3f-4b05-b40f-e2b57f4917e4",
        "cursor": {
          "ref": "dcfc3dc4-f447-4e92-bc23-ccb42bc2e9d2",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cb50397f-63a5-4ca4-ad42-e3f66c1c4914"
        },
        "item": {
          "id": "c3988de2-7b3f-4b05-b40f-e2b57f4917e4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6f617c45-c73b-468e-b006-25125d8b528d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b6164f-5e6a-43b7-a71f-b804a024df85",
        "cursor": {
          "ref": "c2f6feac-489b-4235-900d-3ce4fdaa6e01",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "1c6ee21d-bbe9-4151-aee7-04ddea437672"
        },
        "item": {
          "id": "24b6164f-5e6a-43b7-a71f-b804a024df85",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a51baa70-b4c0-459a-a8c0-7769311b41c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd6c224-b9ab-441a-8e77-c7ba2e4738c8",
        "cursor": {
          "ref": "d1b7c074-ad4c-4d8d-94c4-e4e343b93dc3",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1d3224a5-d924-4a79-95f3-31585d7b4400"
        },
        "item": {
          "id": "3dd6c224-b9ab-441a-8e77-c7ba2e4738c8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "dba7294a-a03b-4712-8db3-8fde1c2a02c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff424c2-bc73-4390-bc4b-cfc13c05ebd6",
        "cursor": {
          "ref": "f7823230-eb52-496e-a347-12a7fd95974d",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d7c42935-6a62-4723-8aab-289a51a30578"
        },
        "item": {
          "id": "cff424c2-bc73-4390-bc4b-cfc13c05ebd6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6f81faae-87ac-45eb-b2d2-df701a93dc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a45ff0c-52ef-4d65-b496-12c89a7bfae0",
        "cursor": {
          "ref": "e0570f50-10a1-4017-b3c3-91258830cb3f",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b5925456-cdf6-4d3c-98d4-545aa61fcb66"
        },
        "item": {
          "id": "0a45ff0c-52ef-4d65-b496-12c89a7bfae0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c4b0f885-5269-4a56-be61-455cad53971b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d237bc-2e63-45e3-b298-82cdfbfa65d0",
        "cursor": {
          "ref": "9efd8096-035d-4711-98a3-44bd9ea3c909",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9cf6db64-d519-4553-bfd1-558d7748a04e"
        },
        "item": {
          "id": "80d237bc-2e63-45e3-b298-82cdfbfa65d0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2f5bcd27-d1a2-448d-8db0-bbc905f82544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659284f3-9061-4c27-9ba0-fe016ea4c948",
        "cursor": {
          "ref": "81bb2408-7578-4ddb-9e1a-6a6f5b1653d8",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c8815279-1a8e-40af-8dd7-714f0c87beb8"
        },
        "item": {
          "id": "659284f3-9061-4c27-9ba0-fe016ea4c948",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "de00dc41-6414-4145-b39a-27e7d1d5385d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52261a7-4f9d-4f75-b1c3-60458c36bdc8",
        "cursor": {
          "ref": "6564e140-1be2-455d-a6ea-5485a82890bb",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "601325f8-408c-4f10-824b-a3ebc55405ef"
        },
        "item": {
          "id": "e52261a7-4f9d-4f75-b1c3-60458c36bdc8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "87694c51-a32b-440d-9ed4-9b666d561976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620fb6b4-8a87-4718-9839-431f35abfe33",
        "cursor": {
          "ref": "6aec4975-5978-482e-93d4-36862207b44e",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "77637fb0-316a-400d-b5d9-bc184ddd5152"
        },
        "item": {
          "id": "620fb6b4-8a87-4718-9839-431f35abfe33",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ae7265a9-0983-4709-8a6a-2c4791283279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9054666-8d74-43ea-a09f-b4c541a25395",
        "cursor": {
          "ref": "130299c6-3083-4397-9c9a-9088fd4c9b22",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "60c5afd7-6ce7-44fe-8d5c-2eb193d0655d"
        },
        "item": {
          "id": "e9054666-8d74-43ea-a09f-b4c541a25395",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c2c10f80-afaf-4dc5-847d-986f38511342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3081f8d1-11e5-4e06-9166-068db85f7934",
        "cursor": {
          "ref": "238cbac3-88c3-4bdd-9484-ce487568295f",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d060e7bc-eadb-48d1-acc6-7ce2a547cdd7"
        },
        "item": {
          "id": "3081f8d1-11e5-4e06-9166-068db85f7934",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "25a27b80-22e1-4b00-a29f-99cee77146a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50595186-0201-4dcb-a713-dcdbaff89821",
        "cursor": {
          "ref": "9f83832b-1ba4-40a0-954a-657fff661c6a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c5960c77-0d86-42c6-a002-ae1b6627bc09"
        },
        "item": {
          "id": "50595186-0201-4dcb-a713-dcdbaff89821",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "aedcd9f6-f54f-4ee9-be39-d8be59813ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc9c43a-50e0-4976-af03-1a0a7a2a6cb9",
        "cursor": {
          "ref": "2d0b883e-76c6-4f5a-8220-21b11ce3058f",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4bd8c8f5-763d-4622-a8b2-1d0cc58681cb"
        },
        "item": {
          "id": "5fc9c43a-50e0-4976-af03-1a0a7a2a6cb9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "63038288-f02a-4c6f-9469-37cb3c757090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e9a85e-49ed-442b-9d2a-b37736e18014",
        "cursor": {
          "ref": "17c59cf2-81fd-45e0-b42b-c344ecee46bd",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b97b6930-5bab-4e82-946d-8bef2efd8c6a"
        },
        "item": {
          "id": "40e9a85e-49ed-442b-9d2a-b37736e18014",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "5254593d-3abc-4464-8c2b-5c788fcd37af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2475e4f1-8261-446f-ab67-27edd240cd6a",
        "cursor": {
          "ref": "c6d9b894-7a04-4a8d-8db8-ab9e8435b279",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3c43d687-6b52-44fe-a212-ade299c6551e"
        },
        "item": {
          "id": "2475e4f1-8261-446f-ab67-27edd240cd6a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "570d4c41-cb20-4904-835d-4727d048b557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339f855c-18de-4a89-bfad-f2ade19b9757",
        "cursor": {
          "ref": "e24cc6ab-6f72-414e-b21b-c0339aa5f907",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "907d37ad-ab87-4383-9dad-b26f76142508"
        },
        "item": {
          "id": "339f855c-18de-4a89-bfad-f2ade19b9757",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "04c6c8dd-7707-4c82-b2da-4e906da6f666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ba24d6-0dea-41d6-8c47-2dd1c1fb635c",
        "cursor": {
          "ref": "43765243-ff85-412c-af66-af78a749ca62",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "07880237-8934-46ba-89b8-432e7df9194d"
        },
        "item": {
          "id": "59ba24d6-0dea-41d6-8c47-2dd1c1fb635c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7a0ba486-2794-4d89-9c36-8dc987464d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e116c70f-57d4-4bc3-8e12-55837d94a791",
        "cursor": {
          "ref": "11c609ec-b233-4cd1-9cea-e977c26bb6e4",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a1db6a3a-602a-4745-8a13-20a839f82980"
        },
        "item": {
          "id": "e116c70f-57d4-4bc3-8e12-55837d94a791",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fd07260c-53fa-4c76-8a9d-111d632aa331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0f43f2-975a-4465-b97a-6c88758116ff",
        "cursor": {
          "ref": "6f0fc9d9-e6ac-4310-a3a8-f56b9adc1796",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4ffe9845-e8c0-437b-8023-55a62b859c04"
        },
        "item": {
          "id": "5f0f43f2-975a-4465-b97a-6c88758116ff",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f906a436-fc22-4c67-adc9-011a547b05d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ec5adb-a955-4298-ae70-1a83d0c9ee0d",
        "cursor": {
          "ref": "81b6f8c3-1f8f-42c8-bae2-8a1186f7cf7c",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "850f8bf4-76ee-421a-9c3f-eb3590142919"
        },
        "item": {
          "id": "91ec5adb-a955-4298-ae70-1a83d0c9ee0d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "28930329-01be-4a53-9079-833985d57466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19eb92bf-bcd4-461f-895f-ba754b06bfa1",
        "cursor": {
          "ref": "aba5bc6a-7787-4cd3-be8e-a90628e58b69",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3e30a32b-b1e2-42c4-92f6-ef9f59822ad7"
        },
        "item": {
          "id": "19eb92bf-bcd4-461f-895f-ba754b06bfa1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cf0dca3d-17c6-4d7a-a2c9-d5438d22aa98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68d9541-b41d-40ea-80ab-be72f16abb6a",
        "cursor": {
          "ref": "e0bb6b8c-43e0-4cf6-aea4-45263eb62daf",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3b472ea6-036c-4e23-a856-4f91b46a1506"
        },
        "item": {
          "id": "d68d9541-b41d-40ea-80ab-be72f16abb6a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2c7028e6-8848-42c6-ba52-570fbeb7332f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f8d595-b95a-426f-8322-4edf0de55f48",
        "cursor": {
          "ref": "92ba9434-c6cb-400d-87c5-067f88594fd3",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "21e52a8e-6e19-4d82-b5f5-60e40de7bae9"
        },
        "item": {
          "id": "a4f8d595-b95a-426f-8322-4edf0de55f48",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f4177cd9-8bb8-418a-95fd-d5075d5c557e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51814d3a-4835-42f9-a78d-befcd0e8d956",
        "cursor": {
          "ref": "72c2f935-e566-4b15-bc80-e08e47cfbd6e",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "51ed1927-68a5-4756-9daf-f36f3bc7a1f1"
        },
        "item": {
          "id": "51814d3a-4835-42f9-a78d-befcd0e8d956",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "859e0ea5-7e84-4354-8e4f-9e7ba0380a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bedb27-81c8-483a-9530-1f907ee43ccc",
        "cursor": {
          "ref": "3bd234fb-a1d9-469c-b548-ae083ec7a471",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "053d7dd0-a9b9-4056-be34-bab25a3f5636"
        },
        "item": {
          "id": "36bedb27-81c8-483a-9530-1f907ee43ccc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f31182a4-cefa-41cd-a72f-65f934b12963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0227e852-bcc4-4a9c-95ee-40b8ae02aa9d",
        "cursor": {
          "ref": "76f1bfbb-ea7d-406f-96ba-91c1f530ce1b",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c520d9e7-ee58-4c57-be31-c8c6716d3ab2"
        },
        "item": {
          "id": "0227e852-bcc4-4a9c-95ee-40b8ae02aa9d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "29b49b0d-2fce-47eb-8064-ee856e8c3a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6220ea55-2820-4c36-b88e-06e8797f4e69",
        "cursor": {
          "ref": "93cdcbe3-0104-40d3-ae7e-bb0efd04a7c8",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5e6f2c69-9c01-4060-88e9-9c004f672545"
        },
        "item": {
          "id": "6220ea55-2820-4c36-b88e-06e8797f4e69",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "565ff4f8-d1c8-4efd-90a4-c0959a200e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d677826e-4470-4a74-bfd5-15a1d1ef25e6",
        "cursor": {
          "ref": "987656ca-fbf3-4536-aea8-557b1da897ea",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a16c37c0-ff06-44ae-80f5-2bc38f83fad4"
        },
        "item": {
          "id": "d677826e-4470-4a74-bfd5-15a1d1ef25e6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8072df8c-c47a-44c7-8853-614e4cd126a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b89625-0958-49ae-b917-b8a040f03e31",
        "cursor": {
          "ref": "c560fce1-33a0-4296-9109-b52b0e71a02c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a9daa31d-aa26-4d8a-8586-9b90f965cee5"
        },
        "item": {
          "id": "b4b89625-0958-49ae-b917-b8a040f03e31",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "878755d6-7ff8-447a-a732-d12d7c1af3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8970bb-6451-4ec3-a272-460d080c16ff",
        "cursor": {
          "ref": "73bbd07d-d607-4ea9-a56d-acfa7163263e",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "50ba4d40-b686-46ee-87be-46df4feff602"
        },
        "item": {
          "id": "0b8970bb-6451-4ec3-a272-460d080c16ff",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c5dbd8aa-711c-40b4-9edf-775370c8332a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ad97fa-c1cf-4545-a908-53a18a9dab25",
        "cursor": {
          "ref": "661c4a39-e93f-41bb-bf24-1807412e9ff0",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "95603cc1-7792-4c3d-88f4-7779ff436378"
        },
        "item": {
          "id": "89ad97fa-c1cf-4545-a908-53a18a9dab25",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "37e258ce-e8ca-466f-a1f6-21573518092f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d2a16a-fbbb-44a6-9fa8-4959d9fe96c7",
        "cursor": {
          "ref": "345477fe-15fe-4dc1-9e63-48cc63ba3403",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "67086478-e3a2-4b8b-be86-2a8551e128eb"
        },
        "item": {
          "id": "76d2a16a-fbbb-44a6-9fa8-4959d9fe96c7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "25b397e6-9faa-4c6d-a112-360496ea1e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5056dd9d-b788-436c-ac91-0704fbb61bfc",
        "cursor": {
          "ref": "b9a8fa3a-9008-4930-ac67-1c86d5040eb3",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b22d196b-702b-4181-b4db-d021239ce2dd"
        },
        "item": {
          "id": "5056dd9d-b788-436c-ac91-0704fbb61bfc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9cafc047-641d-4fa5-926e-c0436fb3dbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891f066d-1b04-4935-b567-6035284d2368",
        "cursor": {
          "ref": "7a60bd31-32d9-47e9-bc1b-430dbc240037",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a0358d45-af8c-44dc-9adc-c0a022c3c668"
        },
        "item": {
          "id": "891f066d-1b04-4935-b567-6035284d2368",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ab41237d-02b1-4d09-8b17-6f348dd6a959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f438615b-b932-46af-9925-dedc6d62ddd6",
        "cursor": {
          "ref": "09a9cb99-d843-49eb-abe9-358963646711",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e12910cb-4f85-4f39-9c29-3f7819e46550"
        },
        "item": {
          "id": "f438615b-b932-46af-9925-dedc6d62ddd6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ee576b85-1d1e-4e65-8a12-e1bdab475c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8680f9eb-8299-4a36-8abe-a55031cc5d12",
        "cursor": {
          "ref": "7de846a7-8c5e-47be-a945-70a509e5bce6",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "24592949-7aaf-4528-ad6a-c864d14859a9"
        },
        "item": {
          "id": "8680f9eb-8299-4a36-8abe-a55031cc5d12",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b51ac4a5-58e0-4a25-b9fe-89dca9653ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415adea0-3bc2-44d6-a470-0e7754819e95",
        "cursor": {
          "ref": "ef4c7b6c-6c2d-43ba-89a4-b40f80ec927b",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "508cb3e2-a97a-4e4e-b069-a6103ad9ddcd"
        },
        "item": {
          "id": "415adea0-3bc2-44d6-a470-0e7754819e95",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d6ae51d9-3db5-4823-b4b2-0b47cd8556a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcac256-3b71-47e1-ad35-5166dc495fef",
        "cursor": {
          "ref": "e94d4e7d-8e14-4592-957a-14d331f5500a",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5abb4408-9cad-4312-a7f5-fd5d8bb221b2"
        },
        "item": {
          "id": "0dcac256-3b71-47e1-ad35-5166dc495fef",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c4032ea7-2a67-49da-9c36-29addc3e5ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f837739e-5538-45b6-924f-826ff17dbe74",
        "cursor": {
          "ref": "5ffa777a-11bc-4af3-b407-31fede3c1c07",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "198cc5a2-bcc6-493c-9bcf-d4f15f118f2c"
        },
        "item": {
          "id": "f837739e-5538-45b6-924f-826ff17dbe74",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "afaa042b-3232-4895-9592-e856f441db98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf5178b-358d-4a2d-b327-b0abf99d8974",
        "cursor": {
          "ref": "226d7c33-add0-4030-9d1a-93fb15760e14",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4e994494-b0d5-4557-99b2-6e020234a749"
        },
        "item": {
          "id": "daf5178b-358d-4a2d-b327-b0abf99d8974",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cafb7786-93db-425c-9c24-5b9ad9292e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fd3381-f5be-4fa1-987d-c269fa17afcc",
        "cursor": {
          "ref": "0609fbfc-156d-453e-b398-48d99874a528",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dd1abc8c-4b3f-465b-b296-88f136beaecb"
        },
        "item": {
          "id": "e2fd3381-f5be-4fa1-987d-c269fa17afcc",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "30c5cd12-afd6-445e-b035-1c45e8f2418d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc00cad1-986f-4eb0-bd85-6aebf654c656",
        "cursor": {
          "ref": "af477727-6da0-434d-945a-faece828796e",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "072d13c7-1a30-403f-9412-b6cc9b04c9e6"
        },
        "item": {
          "id": "dc00cad1-986f-4eb0-bd85-6aebf654c656",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a82d2fe3-cd60-42a0-8f0d-3b2667deee02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f97794a-edf5-4637-ba40-a2738bbbcd8f",
        "cursor": {
          "ref": "5928fa21-a47c-4aac-98f9-5a7f3d198500",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "eaf5ab9c-df6f-444f-a55d-be307eddb4e7"
        },
        "item": {
          "id": "4f97794a-edf5-4637-ba40-a2738bbbcd8f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e23d3dd3-6fe6-4544-a4a8-79ae180887cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950840bc-c993-44fa-9e6a-0820629c9ebb",
        "cursor": {
          "ref": "e9a51a7a-945a-49ea-a356-66604206afe3",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d70ef1b0-2b74-42de-9b1a-994f0b84ad13"
        },
        "item": {
          "id": "950840bc-c993-44fa-9e6a-0820629c9ebb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6b5f7e47-5787-45ec-8a24-ddc0d29bc4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d55840-9352-434c-be90-71e3a3fa366b",
        "cursor": {
          "ref": "3e79920f-e1d2-4f6d-b884-2acf4af2a9a5",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2f38c0c0-313b-4373-ac15-cce32cd4573f"
        },
        "item": {
          "id": "17d55840-9352-434c-be90-71e3a3fa366b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "297bc350-c55a-4280-8944-9c133b1ef70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00db815-6af6-4dea-8ee6-7bde4f5eb688",
        "cursor": {
          "ref": "f43bfd07-0e46-4421-b449-489c1aab9aad",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a8d32f94-29c4-4ddc-84ee-8e12f213b9ba"
        },
        "item": {
          "id": "b00db815-6af6-4dea-8ee6-7bde4f5eb688",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7eae6aaa-7cb1-46f6-af86-53ebd26b9eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0afb497-6cb2-46d6-8a28-27088e31a41b",
        "cursor": {
          "ref": "7cf6a8b2-09d7-464b-9d9a-5b6f4b190f2c",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "56d8ae3e-52e4-4a22-8343-360738900690"
        },
        "item": {
          "id": "e0afb497-6cb2-46d6-8a28-27088e31a41b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f988e135-5455-4f72-bfe0-cb8a28b3e000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4976182-8c33-4c5f-b8dc-d1681c6b6cd2",
        "cursor": {
          "ref": "e5b2f869-e969-4bae-b8f2-1d78e3a9797f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "42507408-541e-4ab5-a489-6318a488640f"
        },
        "item": {
          "id": "b4976182-8c33-4c5f-b8dc-d1681c6b6cd2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "12bdb183-6a8f-4218-8d44-11f35c6fa33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21b6a5c-86d4-408a-921d-7e439547cdb2",
        "cursor": {
          "ref": "1e6540ca-13d2-4026-906c-2e23cc7814a8",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8bfa14c2-c73b-4334-aa23-94df3a42a26b"
        },
        "item": {
          "id": "b21b6a5c-86d4-408a-921d-7e439547cdb2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "89af93f5-a9b8-4e52-998e-9e8a7a83f954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09736f8-b472-4bfb-8d5e-9246e02b9aaa",
        "cursor": {
          "ref": "14b1c922-714f-408b-95ab-f0f7fab79cb9",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3dcbd1cb-c4ae-4887-a3d5-e416eb28a7f5"
        },
        "item": {
          "id": "d09736f8-b472-4bfb-8d5e-9246e02b9aaa",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9f9356bc-1348-43b4-88be-3a02b856a0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2f9101-63e6-4c91-84ab-9f64a3c20653",
        "cursor": {
          "ref": "14724c19-5a21-481d-b5e4-6d4f32ded797",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "03080bea-d28c-4057-bc87-66c973bb333e"
        },
        "item": {
          "id": "7b2f9101-63e6-4c91-84ab-9f64a3c20653",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b8cb35d9-79ca-4805-a673-3a9f782c30a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34441ee-419b-4002-9fe1-a6587da91449",
        "cursor": {
          "ref": "418c0835-9072-40c4-8e3f-1dc79b75e239",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "433393c9-5134-497c-8cae-0560cf0e2600"
        },
        "item": {
          "id": "a34441ee-419b-4002-9fe1-a6587da91449",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "03ba2e7c-e6c0-4541-9f3d-b147a424fade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcb46e0-b1e7-4c34-a239-e36363f57ce1",
        "cursor": {
          "ref": "4fe65f26-3144-4539-a515-a86eeacf3efe",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0cddeb16-5964-40a8-b5e8-09ca2b1aa48b"
        },
        "item": {
          "id": "ddcb46e0-b1e7-4c34-a239-e36363f57ce1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "73b9a215-f554-4584-9f02-01f30eab7eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27fe8cf-f592-4900-9e2f-ea4b1a021e6b",
        "cursor": {
          "ref": "301828ff-53c7-4b6d-b2a5-adc625304f6f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2ea5288a-3bb1-42b2-8c59-e89107d0e3c2"
        },
        "item": {
          "id": "e27fe8cf-f592-4900-9e2f-ea4b1a021e6b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "36285571-e541-4ce2-9a1a-095aa2c03cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300a53aa-c2b3-4a7d-bb59-23de39afa667",
        "cursor": {
          "ref": "03fd1c9a-8c7a-4d00-b582-32f35ce6cc09",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3e8edbd9-8ee9-483d-8adf-453f24cb3219"
        },
        "item": {
          "id": "300a53aa-c2b3-4a7d-bb59-23de39afa667",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f1d3e65f-973c-46df-ab31-2276f15418cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026ae6db-443a-48ad-9af5-75140bfee467",
        "cursor": {
          "ref": "e94fdec3-b5c4-42ae-9ee4-57f07c0f3272",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "34b27613-fdef-41d0-a98a-16a2937cae3d"
        },
        "item": {
          "id": "026ae6db-443a-48ad-9af5-75140bfee467",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f7b23334-328c-461b-89b8-9651905080b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e179671b-a551-411b-8fc3-556ec413b62c",
        "cursor": {
          "ref": "2776be95-e822-44c2-84d9-e1b07adb1309",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8689fb4f-54ca-4988-83ef-9b2517b86be3"
        },
        "item": {
          "id": "e179671b-a551-411b-8fc3-556ec413b62c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b782303b-fecc-4a88-8ac8-505799e0658d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d39030e-6391-4c9b-b6f3-6fe9678e6804",
        "cursor": {
          "ref": "e67a6acc-b6e3-48d0-88bc-658d86b0487f",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d7041f65-6986-4092-8e82-0f051a1c6738"
        },
        "item": {
          "id": "5d39030e-6391-4c9b-b6f3-6fe9678e6804",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "34b1d670-930f-456e-a3cd-30f2084ffda9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27962510-8175-40de-ad45-8b22a9fd4e05",
        "cursor": {
          "ref": "fe9466af-4518-4433-aa31-329cd8d0c5c9",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7104fd40-44bc-4acb-a543-26252aeb638f"
        },
        "item": {
          "id": "27962510-8175-40de-ad45-8b22a9fd4e05",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f9c7abc8-a627-4ef8-a069-73d673a8b368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743c2209-6fef-46ef-917a-fcd996643bf8",
        "cursor": {
          "ref": "31425932-37e6-4cb3-bca9-f80a2969acf2",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "75bc72d8-7be9-43ce-9410-8c41e3639e29"
        },
        "item": {
          "id": "743c2209-6fef-46ef-917a-fcd996643bf8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "377b129e-f5ed-4254-a49d-72231c671974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0fca02-1820-4439-8133-a5fcb548a526",
        "cursor": {
          "ref": "7d3d93d9-ae42-47c6-9f65-006425bee907",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f9a1210e-69c3-49a8-975b-f3971f6dc35a"
        },
        "item": {
          "id": "2f0fca02-1820-4439-8133-a5fcb548a526",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5231c59c-6c9d-4961-a8d9-6a362c6c9fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c47b470-866a-4a66-ae30-0c83a2e108f5",
        "cursor": {
          "ref": "c0114da9-533c-4dca-97e6-4cae57458ef6",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1fd7f3c5-351f-423d-984b-4b2766a76471"
        },
        "item": {
          "id": "7c47b470-866a-4a66-ae30-0c83a2e108f5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8f94e3d6-63d1-4d28-ad2b-ff2eebfa72f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d7a8ee-4323-412b-9893-991b00c42e61",
        "cursor": {
          "ref": "256f0827-1975-4123-93aa-223220886f97",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7165f969-b28e-44ff-aca9-e591d0955a37"
        },
        "item": {
          "id": "95d7a8ee-4323-412b-9893-991b00c42e61",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "78cf94e9-bcc6-4e4f-99e2-154c3e1ca2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1b46d4-924b-46bf-af0f-4836c9e921ca",
        "cursor": {
          "ref": "7a08bce8-d037-4186-93cd-efdc1946e1a1",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "72e802d4-3af1-438e-976b-8c8d8809a94b"
        },
        "item": {
          "id": "fa1b46d4-924b-46bf-af0f-4836c9e921ca",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "14e0a71d-aa77-480a-9990-508deb3d3f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb39fb1-50db-4ad3-b0b7-37d375feb569",
        "cursor": {
          "ref": "02ccefa3-9d44-4fd6-ad85-534c4c882e3d",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7b404c1b-019f-473a-9c57-8af42e51db2e"
        },
        "item": {
          "id": "2eb39fb1-50db-4ad3-b0b7-37d375feb569",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6f14eb1a-7675-4da0-b083-9cdecdcf3644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b30348e-be90-40f2-80bb-3052e5f7f48f",
        "cursor": {
          "ref": "9d4d609b-58a3-4e63-8c27-b0d326ba725a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cc197e26-d7de-464d-943c-580a7b48470b"
        },
        "item": {
          "id": "6b30348e-be90-40f2-80bb-3052e5f7f48f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bc8b1964-2551-471b-8bf3-57b3742ce984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db37449-048a-4b07-8913-c2c560233ef9",
        "cursor": {
          "ref": "9a23c426-70b6-4204-8ce2-2d119d20bcc9",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "afb155ed-7dc7-4984-8f0e-309fc8a86326"
        },
        "item": {
          "id": "9db37449-048a-4b07-8913-c2c560233ef9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "35bbb55d-cb5a-433a-b27a-ecbd2a5d256e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1bfa1c-eeac-465b-b470-267df24caa8d",
        "cursor": {
          "ref": "659fbe1a-6489-4f6c-bfa8-0205b9b74ad8",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0cd77875-b38c-496d-a5f1-3fef1d840a21"
        },
        "item": {
          "id": "7a1bfa1c-eeac-465b-b470-267df24caa8d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "10ea4da5-ab05-45cd-94db-a6ef4a575a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad62e42c-4e79-4ec5-982b-fcb9a773e8e1",
        "cursor": {
          "ref": "b398f00c-5829-4e57-8f1d-428fa32d631a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3b2019cd-3089-4da2-83e1-d94d177563eb"
        },
        "item": {
          "id": "ad62e42c-4e79-4ec5-982b-fcb9a773e8e1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4d9d9b41-4fb6-43a6-97bf-662e40881472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b995cb3-1665-4cff-9629-727a51125de7",
        "cursor": {
          "ref": "5ce1cdd7-c014-436d-9f7e-301b6a5497f8",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "169e5f14-3409-4da5-8f3f-87988edaece0"
        },
        "item": {
          "id": "1b995cb3-1665-4cff-9629-727a51125de7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7df741ea-bba5-415d-886c-77307edac631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffe45a6-82cd-416e-8387-4757abbedd22",
        "cursor": {
          "ref": "3dba1443-7903-441b-9c56-c240bd9e3545",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7e892692-ef2c-44b0-8642-237e22f5c009"
        },
        "item": {
          "id": "0ffe45a6-82cd-416e-8387-4757abbedd22",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8fac38e1-f7da-4a17-ac1e-3bdbb9e081e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e295f76-ebb8-4356-8c0a-273fce1b11c0",
        "cursor": {
          "ref": "4dccb026-7427-4e37-8e7e-a8bf37fc7c79",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5db96a73-91b6-4eb6-b103-a81183961afa"
        },
        "item": {
          "id": "9e295f76-ebb8-4356-8c0a-273fce1b11c0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bf6a9359-55f4-4bea-978e-ea83078a5669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6d560c-4f90-4fe3-a26a-6cb904ce1927",
        "cursor": {
          "ref": "8e0e113c-cbfb-40d7-bd3d-ec4a6da9ea23",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "44979433-e842-4533-a951-e48665a97433"
        },
        "item": {
          "id": "ac6d560c-4f90-4fe3-a26a-6cb904ce1927",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "68cd7c1f-11e4-4a56-81b0-8d5d3a415a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a691d4-d16d-4060-8b77-49c5056c4594",
        "cursor": {
          "ref": "dcfc365e-02f0-4646-af1b-e5f8877c2705",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "52e7f84b-bf10-43d9-ae2b-649158a12394"
        },
        "item": {
          "id": "55a691d4-d16d-4060-8b77-49c5056c4594",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8ddff795-233a-4588-a75f-d015edadb4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44219ad5-d85e-4f35-8e09-b2d8da3efb1b",
        "cursor": {
          "ref": "fa1b7b83-b559-493e-9fec-9de245556abc",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0ad5f2da-9e04-4ba8-b5e1-1038e4bc7e36"
        },
        "item": {
          "id": "44219ad5-d85e-4f35-8e09-b2d8da3efb1b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0a33553a-aa53-4796-8a04-c10fe4c0209b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda277b3-4930-4fcf-a811-da636398ae81",
        "cursor": {
          "ref": "2bae03a8-679f-4dfa-a0a5-1497dd48c67b",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "295362f7-30cc-422f-8513-8ef5e6a29bf6"
        },
        "item": {
          "id": "eda277b3-4930-4fcf-a811-da636398ae81",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b19edd3b-fbd6-4bcc-9b83-fa26347bbee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b15f4d-61a5-4237-8182-d0195b4ccf11",
        "cursor": {
          "ref": "d5cd8ff6-762d-4f21-b07f-c64c9f34fba0",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d34d6f93-b7e3-4307-8ee7-0de998492a98"
        },
        "item": {
          "id": "53b15f4d-61a5-4237-8182-d0195b4ccf11",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b5d28116-1db7-423d-a445-dbc48ec0af5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41506824-8b55-4c72-a747-44e3c35a5aeb",
        "cursor": {
          "ref": "678792ce-a57e-4604-8061-9f384bc66895",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "701e86f7-e272-44f6-a0c7-b42d18e15874"
        },
        "item": {
          "id": "41506824-8b55-4c72-a747-44e3c35a5aeb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "710de504-9220-4b90-a98f-33ec3be386a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b617ab-dd4c-4c4c-a544-377cc8cf8d0a",
        "cursor": {
          "ref": "a1be8687-5506-42dd-9314-b6a65e03bf5e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "13ebf66a-b444-453e-85e3-5b5a52ee14d9"
        },
        "item": {
          "id": "98b617ab-dd4c-4c4c-a544-377cc8cf8d0a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "382cc6cc-8b92-4f33-b631-f198eab79492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5dea9a3-227f-440e-9e5b-ef66e105dc53",
        "cursor": {
          "ref": "57faed2b-3dc0-4def-8a9a-edf359f6e155",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "70829823-1873-4d5e-bba3-865ee2b84098"
        },
        "item": {
          "id": "e5dea9a3-227f-440e-9e5b-ef66e105dc53",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b7784eec-5c1d-4341-a761-981249a5d982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa95bc0d-be51-43cf-85ec-a2dc5389940f",
        "cursor": {
          "ref": "a4136e4a-3ecc-43cb-8187-eedf6f1b2411",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a1328e93-0c05-49ea-91fd-d41c3977b076"
        },
        "item": {
          "id": "aa95bc0d-be51-43cf-85ec-a2dc5389940f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "aa662ca6-1762-4cc6-91a7-20c13d6a5cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7785588-5c11-479e-9817-bb90fa2d551a",
        "cursor": {
          "ref": "91072b1f-c7e6-4ebd-93a8-4fa9e16af3bb",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f85bade7-a80b-47d8-b493-3665d7696e2c"
        },
        "item": {
          "id": "b7785588-5c11-479e-9817-bb90fa2d551a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "32e64e86-e172-413b-8522-8a5e44cb50d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61512ebc-37dc-4b5f-9182-42a234effa39",
        "cursor": {
          "ref": "43e6ae40-c0b3-4f06-83f3-e9586db9f4ba",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "065011a6-df2a-458d-b900-a8725a302684"
        },
        "item": {
          "id": "61512ebc-37dc-4b5f-9182-42a234effa39",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d9648ed8-0d3a-4ec7-ad51-4c98970042af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085d2f3d-3daa-4874-8415-4da4eebdb3fa",
        "cursor": {
          "ref": "64b1cb63-f935-47dc-94e0-d16b584dc2ec",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "83dd7abe-8aa2-451f-bcee-dd6d8cfd9082"
        },
        "item": {
          "id": "085d2f3d-3daa-4874-8415-4da4eebdb3fa",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2d8b9268-a98b-420b-a911-74ec8efce058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c4c1a3-8fb8-48f2-925f-6e0673e4b4c1",
        "cursor": {
          "ref": "050669eb-90cd-4945-abe0-0ff65c881e30",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f515a3a4-38a9-4bac-aa37-607a85d79d52"
        },
        "item": {
          "id": "f6c4c1a3-8fb8-48f2-925f-6e0673e4b4c1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cee05f09-e09c-478f-880a-d28cbe3810d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf79667-8db7-489f-be2f-80021d733b98",
        "cursor": {
          "ref": "a76fb97f-1856-4a8a-991b-b2425fff6225",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "618ccf90-93a4-4774-a8e8-c2d23f10a9de"
        },
        "item": {
          "id": "2cf79667-8db7-489f-be2f-80021d733b98",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d2047078-1abf-4d56-8602-71d5c0b02b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35282e12-42e5-4de1-afef-e5313f03d548",
        "cursor": {
          "ref": "03900095-e403-452b-a08a-719adba8690e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "18cba8ea-a580-4165-95c0-b89a806af7d2"
        },
        "item": {
          "id": "35282e12-42e5-4de1-afef-e5313f03d548",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "70706503-4b00-4ab9-ab3a-5f099fa2e5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0df00c-12d3-4118-8ba8-2877852220c0",
        "cursor": {
          "ref": "e074d23f-32bd-4173-a20c-e996e2fc7dc4",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dcc3dbfb-5b76-43a3-9703-87190531f2f9"
        },
        "item": {
          "id": "be0df00c-12d3-4118-8ba8-2877852220c0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9f1b0abe-4853-4d42-b585-3a549963e5be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6b7175-e276-43bc-8ab7-d6a8e0ecca92",
        "cursor": {
          "ref": "1ea3dcef-613a-429e-989d-dfc8ff36b5e9",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6e1791f2-cd08-428b-bb33-334ed3d89442"
        },
        "item": {
          "id": "4a6b7175-e276-43bc-8ab7-d6a8e0ecca92",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3b1b063d-740a-4fa2-bc8a-65c2038aacb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "25608f06-aafb-404e-acc9-13d4bbf55605",
        "cursor": {
          "ref": "ca78ac34-5a95-4290-8346-781b323f82cb",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "59faad1c-a504-4a7c-8f6d-36787397dc3b"
        },
        "item": {
          "id": "25608f06-aafb-404e-acc9-13d4bbf55605",
          "name": "credentials_issue"
        },
        "response": {
          "id": "05eea90d-13a9-45ac-861c-df2ac5c50fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9c862019-be8e-431b-8a9d-ad945856f5ee",
        "cursor": {
          "ref": "447d19ee-efaf-425b-aafa-37c74903279b",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cf88eb26-217d-49b1-8de4-78f5dc00a583"
        },
        "item": {
          "id": "9c862019-be8e-431b-8a9d-ad945856f5ee",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0051f2d9-781d-4fa0-a952-56dba7e272b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a90263d4-78bd-4431-88e3-2b80e7621f09",
        "cursor": {
          "ref": "5b2e1414-8132-4fc2-9a6a-820d7737bfa9",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9006ff21-0e7b-4d0b-9d74-ae7ec52b6bdb"
        },
        "item": {
          "id": "a90263d4-78bd-4431-88e3-2b80e7621f09",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "acda44df-4879-4f89-9a19-ff4398eccdaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "0878c3b2-30c0-495d-89e0-4164afc7ad10",
        "cursor": {
          "ref": "684e2613-66d5-4366-8ee9-5a70410a2153",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "80d31d2f-d33a-4fdd-87b2-31974323424b"
        },
        "item": {
          "id": "0878c3b2-30c0-495d-89e0-4164afc7ad10",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0c094802-b69d-448d-af32-8d6452da2991",
          "status": "Created",
          "code": 201,
          "responseTime": 8159,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "051ebdd6-6bca-410f-a48a-60ea15ce6be0",
        "cursor": {
          "ref": "9de5fec3-6a7a-4a95-a9af-0025e58720bd",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7d923432-46f0-4dd5-9494-7b0196353d86"
        },
        "item": {
          "id": "051ebdd6-6bca-410f-a48a-60ea15ce6be0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d6b9b3c4-fdae-4403-bf0c-f3b85f54769a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "19461f8c-4df2-436d-9fc6-1f2a9110658a",
        "cursor": {
          "ref": "ce02eae8-b789-4ad2-9b8d-834b5369c54d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "094014e1-9f08-424d-8c37-32322b7140a6"
        },
        "item": {
          "id": "19461f8c-4df2-436d-9fc6-1f2a9110658a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9e2879ee-d92b-4859-abd4-67390d77a4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "632b4ceb-2ad7-4ee0-930a-a52cd76ecb99",
        "cursor": {
          "ref": "0474bfee-f59a-45ed-99f7-adbef89c8aa7",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e4ac1483-5452-4567-a41d-661c733c0ac0"
        },
        "item": {
          "id": "632b4ceb-2ad7-4ee0-930a-a52cd76ecb99",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f5d8e9e6-ff51-42e7-a7c5-de04b4841940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328959da-dbac-4ae1-b6be-4bc51c1d2415",
        "cursor": {
          "ref": "26773850-f98b-4b45-b7df-99604af01ac4",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3a3988c4-e95b-47fb-a3c9-97f995b75e4c"
        },
        "item": {
          "id": "328959da-dbac-4ae1-b6be-4bc51c1d2415",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4a2a4b8c-8a25-4271-845c-73ccdded9681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6c83fb-851d-42dd-9d70-20dab026398c",
        "cursor": {
          "ref": "da54b045-9d87-4a26-b02c-aee7429c8a7f",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4adb8fbc-5cbb-4bc2-9e2a-cac291a98c77"
        },
        "item": {
          "id": "ac6c83fb-851d-42dd-9d70-20dab026398c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "523460bc-857b-4a25-b5d8-465620196534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cab241-10d2-4a6d-bc68-2149494bf96a",
        "cursor": {
          "ref": "a1d706f1-1ec8-4e29-8a72-c26f221ca5cd",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0067be59-0834-47ec-ae28-1d0f04070558"
        },
        "item": {
          "id": "a1cab241-10d2-4a6d-bc68-2149494bf96a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "25a3f44a-6c9a-43db-b457-5aa809059493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7af785-5419-4a15-8152-c4e440611175",
        "cursor": {
          "ref": "aeed4858-4b06-4c61-a6ac-d18b54fa76c0",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4308cc42-5737-4c57-b913-f211c80eb94a"
        },
        "item": {
          "id": "9e7af785-5419-4a15-8152-c4e440611175",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ade8b02d-4019-4a49-976c-c57c052156ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8abb216-a12a-429c-acbc-ffa4189c14e9",
        "cursor": {
          "ref": "e04a93e2-6edd-4bb9-8468-31154c1664e1",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "420ca56d-ac79-468c-9bd3-c4127d90c57c"
        },
        "item": {
          "id": "c8abb216-a12a-429c-acbc-ffa4189c14e9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "89e2d68c-3c5a-4d0b-a020-a47021a1a888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9181069d-5e89-4a58-b321-2bd71fdce88b",
        "cursor": {
          "ref": "d7802328-22d4-4725-9e96-3a1d0727d995",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9af67274-1f98-4566-8858-5f3d23cca2b6"
        },
        "item": {
          "id": "9181069d-5e89-4a58-b321-2bd71fdce88b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "37c08c92-9a3d-4216-904f-afb8a4d8b4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fdcd56-8b56-4cea-95b4-b188bba90b14",
        "cursor": {
          "ref": "2d1a57d7-529b-4dbf-a569-892a937e8c2d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6856b53b-dff2-43c7-b329-46696e442b79"
        },
        "item": {
          "id": "f9fdcd56-8b56-4cea-95b4-b188bba90b14",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "deb52fef-d794-40c0-ac7e-20d0cbb6f9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419d334e-df33-45f3-acb0-ed335d8617c8",
        "cursor": {
          "ref": "af9cf2fb-aa1e-48db-889a-e6155292989f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ce70ff66-4df7-4504-beca-10a4a5e64de7"
        },
        "item": {
          "id": "419d334e-df33-45f3-acb0-ed335d8617c8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "db695ea5-4516-406f-9283-9aac41109990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ade9004-8de6-4316-9a49-b887e1508626",
        "cursor": {
          "ref": "2f5d4f6b-d4ed-4e05-ab38-d04f72429664",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7d08a0b9-3a20-49e3-9756-88f9d8354ca3"
        },
        "item": {
          "id": "2ade9004-8de6-4316-9a49-b887e1508626",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "29de7c71-af7f-4690-947b-179c2b2e236f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4526361-487f-4ceb-a2c3-071f636fde05",
        "cursor": {
          "ref": "f9e7aaf3-57bd-49cd-b6cd-64beb646978c",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bb1f8471-97ea-4869-991e-037426234556"
        },
        "item": {
          "id": "d4526361-487f-4ceb-a2c3-071f636fde05",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b5574a40-a5fe-40d4-b211-6f2bca55787e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a90cea0d-c77c-430f-855d-2469baf1c9f2",
        "cursor": {
          "ref": "c57f07a1-c295-43de-9695-6d353515d043",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a30712f9-51cf-4d6f-a3d2-7bd88f803074"
        },
        "item": {
          "id": "a90cea0d-c77c-430f-855d-2469baf1c9f2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e381fc1e-49c0-48bd-9201-937b613a17ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfd6de5-42f9-4c11-9d3d-2b364b4d3a5c",
        "cursor": {
          "ref": "ca0611c6-2473-4c38-a73d-d02e26fa2eca",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "413fe000-101e-4c8a-a589-b847072e83a8"
        },
        "item": {
          "id": "6dfd6de5-42f9-4c11-9d3d-2b364b4d3a5c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e8f52610-cda2-4ec0-8f8e-b222df8935db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce98690a-fbf8-4b34-973e-c2b5d3e36ece",
        "cursor": {
          "ref": "5b40065b-11d8-4043-9f8e-3df85b58c2f8",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2ff33cda-330d-4966-90e5-8c046d2b046f"
        },
        "item": {
          "id": "ce98690a-fbf8-4b34-973e-c2b5d3e36ece",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6c440132-3d53-4fba-a425-36477545a72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72215ad0-6f38-4115-bbb6-094af0dbc193",
        "cursor": {
          "ref": "086b3f7c-ec70-46c0-9237-19a3a9ecf977",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cb0c8878-4fc4-4378-a26d-1491a94d6ab1"
        },
        "item": {
          "id": "72215ad0-6f38-4115-bbb6-094af0dbc193",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e462f24b-9ff4-4719-9ec7-b06678bc2471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca155331-dbae-4d8c-8fc4-a7daf31fa873",
        "cursor": {
          "ref": "dd02bb5f-adea-4197-87fc-c498f95a45a1",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ed96e682-4c5f-42d3-acdd-7e4301cf5183"
        },
        "item": {
          "id": "ca155331-dbae-4d8c-8fc4-a7daf31fa873",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9de95d9a-34cd-47ec-b3e5-b9576d176688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d92f69e-0e5e-4f1c-bf1e-0ca06cda2f83",
        "cursor": {
          "ref": "0e2bca64-e2fb-4cfd-8537-843466d22a8b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "876079bb-378c-4ed3-a977-ab25b4df3f3e"
        },
        "item": {
          "id": "8d92f69e-0e5e-4f1c-bf1e-0ca06cda2f83",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3d194807-f789-488c-9968-7773151512b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b1af40-95a9-42dc-8e0a-63e9cb5866ac",
        "cursor": {
          "ref": "922aa338-fb2f-4db9-ab32-d23ae66423f5",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fa6b9204-52ec-4fa5-9193-8203e2adcd73"
        },
        "item": {
          "id": "c9b1af40-95a9-42dc-8e0a-63e9cb5866ac",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b8583130-926c-45ea-8e09-4a48bd7947cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88558808-7c62-4a83-a1f8-01de079794da",
        "cursor": {
          "ref": "6175b8f8-108e-45cc-9437-267a28ebcbca",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ceb31edf-e1ba-4d8e-b004-511e5542681e"
        },
        "item": {
          "id": "88558808-7c62-4a83-a1f8-01de079794da",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b6d7a784-13f9-4910-87d0-16dc86369dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e1f83a-185b-4eb7-af17-234f9e606628",
        "cursor": {
          "ref": "285bd299-9147-4145-9881-09f17b8b433a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f9bb34a5-322a-4917-91a8-2827cae58414"
        },
        "item": {
          "id": "b7e1f83a-185b-4eb7-af17-234f9e606628",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a173de1d-e89a-42c2-aa38-66e1c2e716da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baebd178-bdcf-4d88-888c-0259d9bad686",
        "cursor": {
          "ref": "947d6f91-2b17-4c01-8420-f38817f66f1f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8c29bacf-e5c1-41d6-bb91-d974288cda7a"
        },
        "item": {
          "id": "baebd178-bdcf-4d88-888c-0259d9bad686",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4e8e3e6a-397c-4361-8ad3-49d75c987ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d145849-522a-4eb9-873a-456424918bbd",
        "cursor": {
          "ref": "15f5be03-1227-4f59-8516-4a623b69f68f",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "583e5d32-a549-46c4-9981-cd36e038f9f8"
        },
        "item": {
          "id": "2d145849-522a-4eb9-873a-456424918bbd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2942ace8-c1df-4d24-872d-33a84a1013a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b155f54-db4f-472a-b250-4b9a40b82e63",
        "cursor": {
          "ref": "082f4b85-6835-483e-a6e0-68e1ef4cd1b2",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2c5a37fe-933d-441e-b85e-125248ec3d92"
        },
        "item": {
          "id": "2b155f54-db4f-472a-b250-4b9a40b82e63",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fa083bf5-cf45-4de0-a650-408c1f8eba40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b7f23a-597b-4677-886a-f627162a246c",
        "cursor": {
          "ref": "6a16b593-a30d-4a8f-b06e-5a74817f35dd",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "67eb27bd-4ed1-44fc-8a44-5287f56aaed0"
        },
        "item": {
          "id": "88b7f23a-597b-4677-886a-f627162a246c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c894e31c-3340-4ca1-82b1-863dcad6ca22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5983cef0-eab7-4a2c-b2ca-5f33b3ba05f2",
        "cursor": {
          "ref": "ba14838e-4cd8-4309-887a-584c79b62bb4",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e0cfd903-b1df-466a-b5c5-28fd4cebdb29"
        },
        "item": {
          "id": "5983cef0-eab7-4a2c-b2ca-5f33b3ba05f2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "09187283-9b16-4257-a909-ada7abd84355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26996cb-798c-4c8c-b97c-2a5565b65cb0",
        "cursor": {
          "ref": "997db987-1a96-477d-bd3e-766ced1a6995",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "614eb918-6879-4dcf-ab48-a0448ee7b381"
        },
        "item": {
          "id": "c26996cb-798c-4c8c-b97c-2a5565b65cb0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c1452f86-9274-4d8a-b5c0-323319a56fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66d34af-b033-4a8b-821f-dc452257ae33",
        "cursor": {
          "ref": "47955837-1637-4241-aa30-278d71bcab6c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7dbd0fe8-fd93-4e8d-8400-619ecc7d71ae"
        },
        "item": {
          "id": "a66d34af-b033-4a8b-821f-dc452257ae33",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "656f0853-ca72-4467-aeaa-113b77d94b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08daee2d-157f-4f60-9fbd-adbfe30428a5",
        "cursor": {
          "ref": "cb8b3246-f861-4815-aaa3-fcf8f7ccf454",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8b79b38a-a908-4304-8ced-b1234a563e05"
        },
        "item": {
          "id": "08daee2d-157f-4f60-9fbd-adbfe30428a5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "44277d13-6c08-4f9d-a78f-1eaeac612ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f28db9e-24da-4094-a4d5-4ae4c909670a",
        "cursor": {
          "ref": "12dcad1a-db00-4fce-a4a8-7672474aef5b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "adf60684-fe2e-404a-9868-92d8e148afd6"
        },
        "item": {
          "id": "3f28db9e-24da-4094-a4d5-4ae4c909670a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7c3595a3-201a-4cab-9a52-bc28413f5ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7914b7da-94b8-47d3-bfd8-e7471fd8de8d",
        "cursor": {
          "ref": "5b533d22-fbcb-4ae1-8f8c-87bdd559a686",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "20229994-025a-489a-a2bd-0f03ba3a41f1"
        },
        "item": {
          "id": "7914b7da-94b8-47d3-bfd8-e7471fd8de8d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "79fc25a1-6dff-4c18-b84b-057226219d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1eaa2cc-cba0-41af-9373-1c62f21f56c6",
        "cursor": {
          "ref": "0e86165d-ab01-47b8-b464-3f1a44d3437c",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3621be35-0b86-4953-aa56-cfb845cb19ad"
        },
        "item": {
          "id": "d1eaa2cc-cba0-41af-9373-1c62f21f56c6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "72cca764-0ca1-4237-baa8-48c318b7b23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72cb349-7cc9-42a0-9fdd-ff32f21a5411",
        "cursor": {
          "ref": "bef72199-a540-4da0-8971-55fbe69a9c55",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1118d3db-3b27-40b1-a362-4fd529c298b0"
        },
        "item": {
          "id": "f72cb349-7cc9-42a0-9fdd-ff32f21a5411",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5fa7d2c9-9349-4faa-ae0c-31af216d4061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf65251-ab93-49f8-a7e4-436cb54ec1db",
        "cursor": {
          "ref": "7a6021b0-f568-4f80-838a-a1b4758959b9",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e39731be-82c2-4a49-80df-abb508a2316d"
        },
        "item": {
          "id": "fdf65251-ab93-49f8-a7e4-436cb54ec1db",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "07cf62e7-a2fb-4e90-984c-caaabdd7f22f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7cc32d-e1ec-4cee-8aa9-05c6e94596d4",
        "cursor": {
          "ref": "84fbbb06-dd9a-4d68-8eb3-136fcc48078e",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7dffa052-1d0e-4803-9a82-3a0924377369"
        },
        "item": {
          "id": "9a7cc32d-e1ec-4cee-8aa9-05c6e94596d4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e9f514e4-776c-4d57-9e85-e009cc03f184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614c9a80-d976-4b03-b971-4755902089fc",
        "cursor": {
          "ref": "5ac703c6-1bb7-4478-a451-99483080facb",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a95ba09b-3d2b-4c9d-b793-8c5f841be109"
        },
        "item": {
          "id": "614c9a80-d976-4b03-b971-4755902089fc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9fe713b6-d8e1-43e0-9943-dbd508f37499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a8db1f-c7ca-4c6c-98b3-14b1bfd58f26",
        "cursor": {
          "ref": "3433102a-3fa6-4ed9-a561-c567bb85550c",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f0f2f0ee-2243-4ec1-8211-80f05f14c326"
        },
        "item": {
          "id": "11a8db1f-c7ca-4c6c-98b3-14b1bfd58f26",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "189ee887-7aa5-4190-8e32-52799ab8a6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491b8547-b876-4e30-b012-70153f392026",
        "cursor": {
          "ref": "370e6115-f4f5-477f-bf47-6b1e2a50cd5c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e3e256ba-57c3-4249-b054-d99677a9c94f"
        },
        "item": {
          "id": "491b8547-b876-4e30-b012-70153f392026",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b4bf2e87-6b82-4d6d-8702-990595671cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccec8a6-ddff-4690-ab5c-91607bbb8e8f",
        "cursor": {
          "ref": "179688d1-6ac6-4b09-9ef3-b907e569e2c3",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "30331a48-48a0-49e2-a058-74696efd6b1f"
        },
        "item": {
          "id": "4ccec8a6-ddff-4690-ab5c-91607bbb8e8f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0fb5d27c-8a27-41ee-95dd-d37eba7eb77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eaf25aa-293f-46d1-8e66-a8d1e18999b5",
        "cursor": {
          "ref": "9c36c85d-ec9f-43f3-ab86-0e02bb40e4a7",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "81dc517a-f64c-432c-8e23-de1c499aa3a5"
        },
        "item": {
          "id": "1eaf25aa-293f-46d1-8e66-a8d1e18999b5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f325ec2d-f21b-4949-8ac0-87562ac083dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04762a94-8775-4107-b171-c1ca8bb63ce1",
        "cursor": {
          "ref": "ed334eb4-de44-4111-8ea5-bd3d3db2a4ad",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6f721793-e2f4-477b-a1ea-36a70c3dca47"
        },
        "item": {
          "id": "04762a94-8775-4107-b171-c1ca8bb63ce1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d7edbe91-115b-4e60-9167-21d0a549a401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a058e3d0-d20b-4eda-b0d8-4aa54d45c631",
        "cursor": {
          "ref": "f205554a-68f8-4359-bb0c-1a287101a160",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2c7a94cf-8743-4c38-bff0-5e906d46f386"
        },
        "item": {
          "id": "a058e3d0-d20b-4eda-b0d8-4aa54d45c631",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4ad857fc-c93c-4958-b6a2-648cb3ab5954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48bd5d0-2a0f-4192-b2bb-f75bafd0171a",
        "cursor": {
          "ref": "9bbf0242-495b-418e-a67a-a0a75a02929e",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f5d70fb9-05d7-4d60-b357-b97019c53fd2"
        },
        "item": {
          "id": "c48bd5d0-2a0f-4192-b2bb-f75bafd0171a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9c472273-e365-4c00-b961-a65b99441784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbda8a4-4e09-4c0a-9e80-faa42d9db391",
        "cursor": {
          "ref": "bf13d108-7fec-4d50-b8a0-c56a741cdb76",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b6e527fb-536f-42a1-bbb2-d0636d63f9d2"
        },
        "item": {
          "id": "4dbda8a4-4e09-4c0a-9e80-faa42d9db391",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a7b27fe0-9efc-435e-b34b-c40d3da4996e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e538bc-4306-48b8-8148-ded19cb49e50",
        "cursor": {
          "ref": "11880278-80f9-4dc3-8d7c-bb399df655a4",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3eac6c0f-cc7f-421a-a0e5-4d1121140cc6"
        },
        "item": {
          "id": "f4e538bc-4306-48b8-8148-ded19cb49e50",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5c570e17-07b0-4d73-862f-019f04d3712e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147a1ff6-2964-415c-b845-d31650a003b3",
        "cursor": {
          "ref": "a800e2f6-152c-4c14-93ca-e22c1ea81391",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1c9def0e-05a0-4d58-9ac2-871d97882ec6"
        },
        "item": {
          "id": "147a1ff6-2964-415c-b845-d31650a003b3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4c2ab4c4-430d-4486-91d4-eb07397996ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee89522-a9cb-4cb9-b62d-aab91371f67b",
        "cursor": {
          "ref": "023494f8-f213-453e-8f64-3310a43b7fd4",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1c5e8b07-e9de-4272-ad91-8406ee2af7b5"
        },
        "item": {
          "id": "9ee89522-a9cb-4cb9-b62d-aab91371f67b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e3fcf7c3-1e22-4402-b474-d56aa525bd06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295ec4b7-97a7-4eae-93fd-94123abb9816",
        "cursor": {
          "ref": "d697a4d2-129a-4c8d-b0fe-4aa44f009f85",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c0965a0f-c7e9-4d57-8280-51669a651dc3"
        },
        "item": {
          "id": "295ec4b7-97a7-4eae-93fd-94123abb9816",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9400c9e4-bd52-447c-a976-55ed887b747d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7dc795-1753-416f-9622-348021f1696e",
        "cursor": {
          "ref": "99d6734b-df6e-4747-97ea-638d4f857d0e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6c1e1284-c448-474f-ba10-6dc9d53320bf"
        },
        "item": {
          "id": "7f7dc795-1753-416f-9622-348021f1696e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ef5c1bc2-7b75-4b08-9ada-90cf2cb516dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7ac895-55e2-493c-b9d7-43591678494f",
        "cursor": {
          "ref": "67e3191d-104d-428d-9afe-e651e4a21b49",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d9bcc681-1894-4883-ab04-b1f735b5b901"
        },
        "item": {
          "id": "ea7ac895-55e2-493c-b9d7-43591678494f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d6446e5e-7856-416c-8ba4-022e47739deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e2b4a9-c093-4c62-a8d0-a1bec8217431",
        "cursor": {
          "ref": "906fb92b-1deb-4cad-b63e-ad1b182cba22",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fa54657d-474c-45f4-a338-0a0dcd36697a"
        },
        "item": {
          "id": "15e2b4a9-c093-4c62-a8d0-a1bec8217431",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "64690ee8-2981-4395-91bd-d988152cf2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d0f215-4383-486a-a0f5-0c6c49540b9b",
        "cursor": {
          "ref": "be40eb45-6e82-48d6-8783-dd8f5ad063b9",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ba0a6cda-6f0c-4fde-9e27-c5e455a23293"
        },
        "item": {
          "id": "98d0f215-4383-486a-a0f5-0c6c49540b9b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6259c0e7-d303-4c7b-a22d-462345bbecc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d6951e-2c80-463a-b4ff-e6fc3b54506b",
        "cursor": {
          "ref": "34fdc93d-cd1b-401a-8f07-d519218a6006",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7b82e658-bc44-4315-bc81-9aa2256e4ef2"
        },
        "item": {
          "id": "69d6951e-2c80-463a-b4ff-e6fc3b54506b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b5970eb4-2b9b-4199-bc3c-ab092ef0f588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635346a7-7e92-4cac-9fec-90d80cd6b836",
        "cursor": {
          "ref": "a1e40c4c-bdfb-4d6b-9c37-eb5dfc88e928",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b16d6287-f030-4569-bca5-9a998eb8c585"
        },
        "item": {
          "id": "635346a7-7e92-4cac-9fec-90d80cd6b836",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "defaf2af-6552-4c50-a11b-67f50d3f0f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1569afe-8581-467d-a1c3-35d031b90039",
        "cursor": {
          "ref": "2ba31c12-27cc-477e-a9c8-41d65ab58be6",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e10f3464-6b4f-4519-8c71-c4981b86b2ad"
        },
        "item": {
          "id": "d1569afe-8581-467d-a1c3-35d031b90039",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6566e2ad-c970-4619-8ffd-6ff47fd304c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1fdd2b-4373-4f05-ba4a-45475577e7e8",
        "cursor": {
          "ref": "303ba104-c69a-493c-848e-0a69380a1b06",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4fcb24a4-e24f-4bb1-97f9-777b4c9336c0"
        },
        "item": {
          "id": "aa1fdd2b-4373-4f05-ba4a-45475577e7e8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "12fadecb-1890-4a14-bc19-8e22b67e34f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b019fa85-d2c9-47c8-8239-d70576122830",
        "cursor": {
          "ref": "1803f6a5-a235-4113-b1c0-758495161839",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "98244c68-9523-426c-b0a4-2921501c02ce"
        },
        "item": {
          "id": "b019fa85-d2c9-47c8-8239-d70576122830",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6350386c-0793-4d90-849a-33c472dd31ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f6d0ce-95a9-4d27-b7f9-7f4abb46b12a",
        "cursor": {
          "ref": "56235868-7d54-4028-9e79-986a4fdec509",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7e832380-09dd-4aff-b844-04ee43a6bc1d"
        },
        "item": {
          "id": "b3f6d0ce-95a9-4d27-b7f9-7f4abb46b12a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "96c6ec2a-7fb9-4859-9a6a-1d7b0434eeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058c7815-3dee-4c11-9134-9474e398b7be",
        "cursor": {
          "ref": "7f378877-8b71-44ef-945f-df25f1c48b1a",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5f0e8342-ac38-4db9-b56e-e73e544cb2ab"
        },
        "item": {
          "id": "058c7815-3dee-4c11-9134-9474e398b7be",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "58f2cf24-57d8-4e5b-b396-12a94a55fbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d3be55-c345-49a3-a25f-573a41f87358",
        "cursor": {
          "ref": "55bc1fd1-034f-42ff-a37c-32f55d7c33d5",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fa335911-4df1-4c08-b6bd-b90b7721b3f1"
        },
        "item": {
          "id": "01d3be55-c345-49a3-a25f-573a41f87358",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4720b1f4-e4fd-4f21-bc97-b78cd375aeec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab9e74c-37cc-4333-8e6c-fd33712a2e95",
        "cursor": {
          "ref": "674c7540-5f59-4a43-abe3-c35927f87777",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "581ff492-9107-4777-a7a8-f7bf5de37e5c"
        },
        "item": {
          "id": "fab9e74c-37cc-4333-8e6c-fd33712a2e95",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "97db43e4-5128-4e43-9826-a2b6a7e27417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c89f792-c1cd-42da-8e19-95b96ecabb16",
        "cursor": {
          "ref": "462a93e3-b174-488a-acea-752dfb60526d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "01ddaa49-b455-4327-b9c6-5ecbe3f44cc3"
        },
        "item": {
          "id": "1c89f792-c1cd-42da-8e19-95b96ecabb16",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "11b9a844-4845-4a08-b5ec-c06b92b7fa65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6af045f-3ef8-4237-b635-b4cbc1254eda",
        "cursor": {
          "ref": "4817f0cb-05bf-4f97-8265-a9c9c9d309c7",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a0f35d3c-0cb7-4fdd-bdb7-6b53e795315c"
        },
        "item": {
          "id": "e6af045f-3ef8-4237-b635-b4cbc1254eda",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9b07cbd7-0e76-47fc-ac53-01b55bf4049e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a1e888-02c1-452f-883d-63c01a8ff87e",
        "cursor": {
          "ref": "509b0680-77a5-4178-81ab-902eec8143f9",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "50a68519-87b4-4c15-9714-0caa164798ed"
        },
        "item": {
          "id": "c8a1e888-02c1-452f-883d-63c01a8ff87e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "12ed38f0-2a4e-42bf-8dc6-5f8459ac2bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ae59d8-7c2d-48f6-98b5-f20d9a985190",
        "cursor": {
          "ref": "3e32861f-16a7-4822-adcd-235644158399",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d4f99b9c-8322-4253-bcc2-5e99d9d6b08b"
        },
        "item": {
          "id": "13ae59d8-7c2d-48f6-98b5-f20d9a985190",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "31d7a97a-d41b-4c1a-85ab-d627d97169e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ebe90c-d514-4605-a283-20758f82faed",
        "cursor": {
          "ref": "356c44ac-2724-487a-83b6-4039fa40be1f",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6e858568-38bb-4e8f-abb8-b04c9b08fb84"
        },
        "item": {
          "id": "b4ebe90c-d514-4605-a283-20758f82faed",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0e0c9496-649d-4742-994e-5b884d933582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac2809c-8b24-4fb8-b675-e257e68b5ebf",
        "cursor": {
          "ref": "864a664d-951f-4c87-8d3e-bc4a4374ecc6",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4490ec11-5cd9-42ed-be3e-f00fa5d85956"
        },
        "item": {
          "id": "9ac2809c-8b24-4fb8-b675-e257e68b5ebf",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4dcf8884-198e-4ef5-8cff-720f2332cb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0f4c03-e3d4-481c-9ee7-03f9b7168ead",
        "cursor": {
          "ref": "a7c1626b-bf01-4984-af80-051f7aa8ed61",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "43adf9ee-505c-4d3c-b35e-dc6252a7bd19"
        },
        "item": {
          "id": "ab0f4c03-e3d4-481c-9ee7-03f9b7168ead",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2078e09c-5ca9-4f94-8a04-d5a59d702002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbac9b16-e3f6-4091-a955-f43334f6aad0",
        "cursor": {
          "ref": "42b5a2c7-4edf-4e4e-9d6b-4da5b647de82",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4e55c84d-9f25-4ef9-b94a-1be98bf10648"
        },
        "item": {
          "id": "cbac9b16-e3f6-4091-a955-f43334f6aad0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "08cc6005-7b43-4966-8b47-dc0b26825302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff307ca5-4827-4678-a75e-d8bd9a2f06f6",
        "cursor": {
          "ref": "d3df9429-0dae-4e15-a8d7-74456eedd3c3",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c93ebe6c-88fb-49f4-b8d9-ecb9e4e88b3c"
        },
        "item": {
          "id": "ff307ca5-4827-4678-a75e-d8bd9a2f06f6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "db357183-926e-4a07-93b7-b4100cfa0d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe5e1a1-d7b4-4695-8666-21f0133a00c9",
        "cursor": {
          "ref": "3ccf9da4-78a6-4938-8dad-c59170cefe02",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f94ae7fa-1f8c-4119-b172-6727e5b81b2c"
        },
        "item": {
          "id": "efe5e1a1-d7b4-4695-8666-21f0133a00c9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "69d8316a-43cc-4726-bb21-2e36e02fd5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074f1f2c-bbfa-46b9-89ea-d3af0b46dcab",
        "cursor": {
          "ref": "4185866e-af70-4b9d-bec2-57d1c3e450dc",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f5dedd00-939c-4e30-a329-23123ac1f26f"
        },
        "item": {
          "id": "074f1f2c-bbfa-46b9-89ea-d3af0b46dcab",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0d05837b-3501-4273-98cb-92727060032f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ba92f3-4eed-4e44-9397-0d4947626b98",
        "cursor": {
          "ref": "12baa52a-d943-4c41-87e4-184dc6ce3fbd",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "93407a0a-79ca-4f99-8246-cbc738eebb45"
        },
        "item": {
          "id": "10ba92f3-4eed-4e44-9397-0d4947626b98",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4d1ff45b-4867-4710-9b8a-2f7ab30a29bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47911d6d-b2de-4488-a0c1-dee88f52d47d",
        "cursor": {
          "ref": "cdbb6ebe-4776-4cea-b634-8bb525c70432",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "029eb46f-d073-491e-bf92-c3e47c4785b7"
        },
        "item": {
          "id": "47911d6d-b2de-4488-a0c1-dee88f52d47d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3d724cec-459b-42cf-88cb-5947f8e9030d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83edcf74-1a07-4e16-adb1-51804a4cb537",
        "cursor": {
          "ref": "e61ed607-98dc-4855-8cc3-f827694b2078",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "25b4e0c4-c927-4044-8eae-385fef151168"
        },
        "item": {
          "id": "83edcf74-1a07-4e16-adb1-51804a4cb537",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9fc1b92d-197d-46bc-a5c4-f64f2b32827a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696d76f6-f697-4e58-8b86-f0963acd8fb4",
        "cursor": {
          "ref": "c1c509d8-250c-4149-b988-8a8b67021b04",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "051d701c-7083-4928-bbb0-e75daad6924c"
        },
        "item": {
          "id": "696d76f6-f697-4e58-8b86-f0963acd8fb4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3e6b216b-888d-4d2e-9ccc-2a09edead1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fe5dc5-ea12-4c5d-bdee-208673c81799",
        "cursor": {
          "ref": "5b1f3528-8db2-4eae-866a-598c782a03cf",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "35675fe1-0547-4337-b30e-bd5c5814f1ee"
        },
        "item": {
          "id": "c4fe5dc5-ea12-4c5d-bdee-208673c81799",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a8d19cd8-1c1f-433a-b677-ff5ceba4c5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23dd0f31-38cc-4ef0-af3b-669b963d1245",
        "cursor": {
          "ref": "9258274d-821b-447c-b03d-fcc8b6b31b8f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8d7b3ecf-53ce-48b6-83cf-ed2ee9aed318"
        },
        "item": {
          "id": "23dd0f31-38cc-4ef0-af3b-669b963d1245",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1599beb9-7376-403d-b4dc-21b2a387cfe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74a730b-9621-4404-8ec1-90ea88a3a854",
        "cursor": {
          "ref": "67e60aa8-b1f4-476e-b6fa-37c630ba626b",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e12b87e3-446e-4862-85be-79749f638beb"
        },
        "item": {
          "id": "b74a730b-9621-4404-8ec1-90ea88a3a854",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9251b547-fbfa-4b16-ac02-871604043897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a56204-947f-4f6a-8100-1c4cc7e7c0fb",
        "cursor": {
          "ref": "dd6aa2bb-d6b2-40f8-8915-8b01262e12e3",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0ff2de7a-517e-4b6d-9a28-83115e6452cb"
        },
        "item": {
          "id": "d7a56204-947f-4f6a-8100-1c4cc7e7c0fb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "10845654-4cad-45e1-98a5-fb33e4beb539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db68e8c2-6483-4dff-a1be-c4202bd89c57",
        "cursor": {
          "ref": "e04d3ee7-c727-48f5-8f69-c6c84de1945b",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "efa7f204-b505-49da-bded-da094f7eafb4"
        },
        "item": {
          "id": "db68e8c2-6483-4dff-a1be-c4202bd89c57",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "db36ba41-7a52-4ea7-bd41-01a19785e21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a40232-66c8-4b3c-89fd-bd8483d5075f",
        "cursor": {
          "ref": "debb54c3-4f97-427b-96d1-3d2a515bfd83",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0fe87da8-ebd8-4954-835f-a87c6a148f60"
        },
        "item": {
          "id": "90a40232-66c8-4b3c-89fd-bd8483d5075f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "818fe7de-0ee4-400b-a24b-cffc5166ac94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57552d06-8af1-47a1-83d1-d60044598a4e",
        "cursor": {
          "ref": "302e7513-6dea-46c0-87fc-ba813eea4837",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e17c0c51-87ac-4be8-8bf9-ddcfb3736e32"
        },
        "item": {
          "id": "57552d06-8af1-47a1-83d1-d60044598a4e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2f377e84-23b8-40ad-bd98-d4b440b1de72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2a9546-bee2-414b-9799-5d776cfcb888",
        "cursor": {
          "ref": "937cc20a-9d26-4ff5-b4f5-f4f6e432f926",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3241cd5b-3af9-4798-8f82-68b29bacac3b"
        },
        "item": {
          "id": "be2a9546-bee2-414b-9799-5d776cfcb888",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "017ffb7b-0580-49b6-9b20-7c5e98808073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df35a7a-ee9e-49e0-9ef2-728990c47071",
        "cursor": {
          "ref": "8edf90d7-3ca3-4106-a5fd-3d5457286469",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "eb0289e3-8943-4caa-8a90-9c1a3b354f7f"
        },
        "item": {
          "id": "5df35a7a-ee9e-49e0-9ef2-728990c47071",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6eb9d2cf-190d-44f3-8e31-c3134f33a63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89a787d-be66-49e6-a19a-996656e6af3b",
        "cursor": {
          "ref": "4ca677ac-0c12-4b7d-a115-8c12cef00c24",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "25d9089b-3587-4c98-a115-1e879f2173c4"
        },
        "item": {
          "id": "b89a787d-be66-49e6-a19a-996656e6af3b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a391eab3-b010-47db-a967-541a0b335bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9499b592-e552-4ebd-97c9-b76c674c3076",
        "cursor": {
          "ref": "d0dbca00-52b5-4ee3-9b25-7ddbbffdb800",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5375c117-15c7-47a6-bd91-3a862dc25487"
        },
        "item": {
          "id": "9499b592-e552-4ebd-97c9-b76c674c3076",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "17aa27b1-9aa2-470e-a7f5-d8fc685cd385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c606845-ba08-4c24-ab99-9fe6c0b3d8a7",
        "cursor": {
          "ref": "c563312f-fc89-4974-88c3-91314db609d4",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1b718447-e8a9-4a9f-a8dd-fd587f66cc86"
        },
        "item": {
          "id": "1c606845-ba08-4c24-ab99-9fe6c0b3d8a7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "787386a1-124c-4e90-903b-b80f998d3f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c31c424-2035-4a5e-9a13-302ff73ff5e8",
        "cursor": {
          "ref": "1fb2f58f-dd5b-4aaf-b68f-4ad291e350c7",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a707e723-2388-48f5-b0a3-0f85b8e0e5e8"
        },
        "item": {
          "id": "1c31c424-2035-4a5e-9a13-302ff73ff5e8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5d2ce1aa-20ea-406e-8712-94e8ae8c7e93",
          "status": "OK",
          "code": 200,
          "responseTime": 169,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "7de8d9e1-22b1-40eb-8b6b-dfc1101d3e7c",
        "cursor": {
          "ref": "39ad86f9-7567-4fea-aa2d-154bc8f11d66",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7320218c-defe-4605-b777-f86e30e595d2"
        },
        "item": {
          "id": "7de8d9e1-22b1-40eb-8b6b-dfc1101d3e7c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b54208d6-5ad8-4d3b-938a-f1ea5c839b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60e726c-f7c1-4ba6-ab6b-b0527988dcb7",
        "cursor": {
          "ref": "c2793752-6cd4-4fe2-a93d-0339bcbf83fa",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0f224ef3-c7de-497b-b3f7-07fdff60d887"
        },
        "item": {
          "id": "c60e726c-f7c1-4ba6-ab6b-b0527988dcb7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "87cfede2-8462-4de9-bd71-25d8f99a2b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4754cad-0669-4517-952a-cf0495bc85d7",
        "cursor": {
          "ref": "14a1b64f-a40b-48b8-91b9-ccee31b99977",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "641d9963-f39c-45bb-b39e-1dd227d4bc06"
        },
        "item": {
          "id": "c4754cad-0669-4517-952a-cf0495bc85d7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "16c55774-9786-48ce-8834-eaef67752aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4777901f-18d0-4ff2-9bd9-93c4b4b9b096",
        "cursor": {
          "ref": "9576329b-0bc5-4094-9270-f16b7a22a1a6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1bbebba3-eb62-434c-b869-20dfe674bfe0"
        },
        "item": {
          "id": "4777901f-18d0-4ff2-9bd9-93c4b4b9b096",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0bd1c00d-5c1b-4752-b3bb-3f018a53d876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9fd228-c199-419d-a63c-eb205fcae940",
        "cursor": {
          "ref": "3618d84d-ec55-41d9-bcab-9f5295b62f40",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bba4e190-5b23-4d08-8fdf-d36e0783d3ee"
        },
        "item": {
          "id": "3c9fd228-c199-419d-a63c-eb205fcae940",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4cb63871-fe25-44ea-abff-70984c65a94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d955b5-9e68-408b-a7f7-98919a27e84b",
        "cursor": {
          "ref": "7b27ec03-32c0-4182-bfe6-193586cb4099",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "01f38961-5c00-4fbd-bdbd-40411b1057f7"
        },
        "item": {
          "id": "12d955b5-9e68-408b-a7f7-98919a27e84b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3ecad0e8-2fb0-4faa-b22f-6fa840677c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac71333-d9b8-4d6d-965d-d7d298ed33a2",
        "cursor": {
          "ref": "4081ba30-5dc2-4bcd-b094-208d5c5d6f90",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dca97a4e-caaf-4963-895d-ece7f02004b2"
        },
        "item": {
          "id": "2ac71333-d9b8-4d6d-965d-d7d298ed33a2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d7016dc4-47b9-4f7d-b3cb-1fc37bcd9276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f07a144-4447-4aaa-9d01-a189c3de532a",
        "cursor": {
          "ref": "44e355b1-2ae8-49d6-b9b3-f6ed34be5fbe",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a09abeef-1754-431f-a0c3-ce4c7d9832c6"
        },
        "item": {
          "id": "7f07a144-4447-4aaa-9d01-a189c3de532a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ee771e94-e91e-483d-ac0a-e2b1b4d52c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2a99b7-68df-4b08-9e40-ee9f7e2c438c",
        "cursor": {
          "ref": "bfb7b6ed-61c8-49f2-a747-ec994ced8ca0",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0b1d7b77-d72b-4f86-9eae-ad2adc6e4905"
        },
        "item": {
          "id": "1f2a99b7-68df-4b08-9e40-ee9f7e2c438c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d25ca792-ad5c-46c7-8a3f-54f4115091f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a7a72c-41f1-424c-b8f2-7844bcfc53dd",
        "cursor": {
          "ref": "58aef1fd-7431-4bd7-942a-71bc9496aedb",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a09797d7-2d48-4131-9fb2-f66d2ecd3600"
        },
        "item": {
          "id": "91a7a72c-41f1-424c-b8f2-7844bcfc53dd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a37160ee-077f-4fb7-9ff5-d4b1e44596ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6005999-5626-4357-b8fc-7e52f18d083e",
        "cursor": {
          "ref": "3c625914-09b7-46e4-9513-e1f5cbfce05c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4bfbd584-94ec-4df2-9d5d-db67cff222f0"
        },
        "item": {
          "id": "d6005999-5626-4357-b8fc-7e52f18d083e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8864abbc-242c-404f-a193-816bb8df6981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01277fb7-d88b-40a9-ab57-f3c0e4796db8",
        "cursor": {
          "ref": "77dd7820-40d9-4394-9b67-3834b5c6f436",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3676d219-8a95-4c19-906f-0e34e7a1ecdb"
        },
        "item": {
          "id": "01277fb7-d88b-40a9-ab57-f3c0e4796db8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c40c7acf-3dc7-4b15-b9ff-a92d9dd83ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18592b9-3be3-4db5-9c1f-424a436b57c3",
        "cursor": {
          "ref": "6b2c4e70-f9f6-43fc-86c4-d91cbf639aa4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "17c7996a-a5a5-4a53-bc61-12542a3cf8fa"
        },
        "item": {
          "id": "b18592b9-3be3-4db5-9c1f-424a436b57c3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5c795fa1-7f81-4268-bf42-984fb0b3a9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d866961f-bb2a-45b0-ad4a-a5c073c0f6d6",
        "cursor": {
          "ref": "fe102fad-f157-4a47-9e1a-87ec03974c32",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9780ad8e-754b-42e8-b4e3-b88981e92e96"
        },
        "item": {
          "id": "d866961f-bb2a-45b0-ad4a-a5c073c0f6d6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "783bbeb0-8390-4fd0-aeef-c4f03c2bf49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d55a75d-67a2-4d9f-9fcc-eb97d53905f8",
        "cursor": {
          "ref": "369e08ea-a265-4aa5-876e-2925d6cdb137",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6ccb3246-fe5e-49e9-8e10-bb61caa91022"
        },
        "item": {
          "id": "2d55a75d-67a2-4d9f-9fcc-eb97d53905f8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "55dd9970-9ace-4606-929d-5447f508d4cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00238f8-08f2-4360-ac5e-bf6edd391549",
        "cursor": {
          "ref": "7ea7b235-c8ce-4d22-8494-84bbe65df6ee",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4abbc16f-ebfd-4dcb-a04f-826b7af383af"
        },
        "item": {
          "id": "d00238f8-08f2-4360-ac5e-bf6edd391549",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4e43556c-f11f-4a54-97c6-797f5c814368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed26326-cade-42db-b701-794f1e5cbe44",
        "cursor": {
          "ref": "975e816d-48d8-4341-affa-cc694f1b1ba0",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f2294cb0-712e-450c-abe9-19922f794147"
        },
        "item": {
          "id": "eed26326-cade-42db-b701-794f1e5cbe44",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ca77299e-755b-4e6a-9fc0-eb5ee065f58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e14a24a-ae4a-47e5-9ebf-61006309947d",
        "cursor": {
          "ref": "3f8eb265-e63c-4698-b1d7-ebb537309202",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b87d69b8-28aa-47b3-a957-5dcbdc6d0785"
        },
        "item": {
          "id": "6e14a24a-ae4a-47e5-9ebf-61006309947d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d8e3b4c6-5962-45c7-ba4e-bbaa0726cd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301e0148-6f20-4df9-b9a0-b5b36db3a157",
        "cursor": {
          "ref": "b385e114-9e95-4426-9352-4f726e94aa36",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "df9e98c1-73c6-4b0b-99df-e6275a63b956"
        },
        "item": {
          "id": "301e0148-6f20-4df9-b9a0-b5b36db3a157",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "80a14eb0-a594-4208-9242-643c5c84767c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffc10fb-41f3-4fb8-8109-c77a4072868a",
        "cursor": {
          "ref": "e44f007d-b7a7-4dde-aa25-7aab2bcbd446",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a8a1d371-b3ef-431c-a820-28c9e1d81da4"
        },
        "item": {
          "id": "3ffc10fb-41f3-4fb8-8109-c77a4072868a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cca8cd96-d4e1-489c-9c99-c250d44ecb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb216de-5247-431e-86f2-cf4a5d8a7cb7",
        "cursor": {
          "ref": "89315d36-1625-4e4e-bae1-8648afee38a8",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7b1b542a-4633-486e-bbaa-a1a6577ff4df"
        },
        "item": {
          "id": "eeb216de-5247-431e-86f2-cf4a5d8a7cb7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a9ab68c0-e75e-4ad8-bba0-7cb24079988c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b9c9ad-ba5d-41ea-9b1e-2fb7d1b11c88",
        "cursor": {
          "ref": "b91d367e-26fe-4dc0-943c-31a8a3d05f64",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1ef04955-0993-4c80-9e36-fe72fc61b0f0"
        },
        "item": {
          "id": "f3b9c9ad-ba5d-41ea-9b1e-2fb7d1b11c88",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "264f7d67-a9a0-4ff7-b8f0-8a4d76ac3881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f806ce92-762d-4e5c-ba11-6168095de832",
        "cursor": {
          "ref": "39124f56-ecdd-45ec-a57e-4150aa8b1d8e",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "96a6c33e-fb55-45ce-8c79-1607efad3757"
        },
        "item": {
          "id": "f806ce92-762d-4e5c-ba11-6168095de832",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "aee72b07-d967-46c2-8ead-c3ed21944139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57bbe3c-499e-4403-8ea4-80dc01a0efac",
        "cursor": {
          "ref": "6ccc6cb9-18fd-42fb-ad2e-f7223baeba6e",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f25db225-2f7a-40d6-bb76-5b9f65c15a53"
        },
        "item": {
          "id": "e57bbe3c-499e-4403-8ea4-80dc01a0efac",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2fae462f-65d1-44e5-be7b-aa945220234f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6639c2-ab50-4840-9cfb-f6db4b4b4f1c",
        "cursor": {
          "ref": "bac1dce9-6634-4a3f-bfc7-215d064a5729",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "842492e5-3938-4182-9d6f-1f0ee3f62fa4"
        },
        "item": {
          "id": "1a6639c2-ab50-4840-9cfb-f6db4b4b4f1c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8e18c898-db5b-45b6-b59c-1d8b4931d491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1073b12a-c71e-49cd-81b9-4e4641247eb0",
        "cursor": {
          "ref": "e9c14f5b-2cf6-49f7-8207-b6fc9faf4522",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "309457d5-1ece-412c-ae64-f5818e963408"
        },
        "item": {
          "id": "1073b12a-c71e-49cd-81b9-4e4641247eb0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4a15a8f4-68bb-4bcf-a966-1cf30d132599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f28118-b855-4c6c-a3b3-1bc77efb9c5c",
        "cursor": {
          "ref": "9dff3a3a-debb-4c24-ad51-b9f21f324f6f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dddefc3b-ca20-4802-af7b-3daf206142b1"
        },
        "item": {
          "id": "b1f28118-b855-4c6c-a3b3-1bc77efb9c5c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ca5a261e-9cc3-4f74-a4bb-9d8a3244b322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450790a6-51dc-4cf3-b794-716fec9754a8",
        "cursor": {
          "ref": "6b620112-31b8-4f9d-a179-cb88846ed8b2",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2477aa8d-52a0-4428-8538-be9a2c1dd613"
        },
        "item": {
          "id": "450790a6-51dc-4cf3-b794-716fec9754a8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0ff3ffe4-c105-41b7-b8af-7a9b3e07b906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2373fbb5-ad79-4abe-aeba-99f8643a7500",
        "cursor": {
          "ref": "565f027a-f153-49e7-9404-5fe29d787f53",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "21d498a0-b4d4-445a-ab18-79f3070a785a"
        },
        "item": {
          "id": "2373fbb5-ad79-4abe-aeba-99f8643a7500",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f2145bd0-b388-413e-9060-7863fb704219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d99367-4048-4ba0-a54f-8c0499f58451",
        "cursor": {
          "ref": "58defde2-c45c-4571-813f-24b79f2a8bcb",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3438d30a-55ed-4ec3-8bcd-df57c932a2d2"
        },
        "item": {
          "id": "08d99367-4048-4ba0-a54f-8c0499f58451",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "16648c51-5136-4084-b56f-107f58e20723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cf6985-bece-4ed5-981b-61e234d8b898",
        "cursor": {
          "ref": "37a39d0d-39ca-478e-be44-6ed07025b153",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fbed3376-cda1-4484-8752-0982ce0cfe8c"
        },
        "item": {
          "id": "f7cf6985-bece-4ed5-981b-61e234d8b898",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0873a967-1b25-4706-a94f-5022862592e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbaf35e-9b8c-4ebd-b5fa-8f5ea85e4436",
        "cursor": {
          "ref": "98c61712-0cf8-4ad3-a706-5dd002599494",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d11192bf-f7dd-41c4-9bc0-fca52fc197ac"
        },
        "item": {
          "id": "7cbaf35e-9b8c-4ebd-b5fa-8f5ea85e4436",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0961260a-c6c9-4ac5-add0-c9a4cee4d877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1a96dd-de78-4275-85bd-58214e4f672c",
        "cursor": {
          "ref": "20b2a6cb-0ccd-4b93-b9eb-e228bfbb0330",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c7d90933-5c16-4f75-aa4f-ef25d4ba8d3c"
        },
        "item": {
          "id": "3f1a96dd-de78-4275-85bd-58214e4f672c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b587f290-a891-47fa-97a7-6ded55e8a3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6d8ec5-c120-425b-885f-9dfe2a05c2a2",
        "cursor": {
          "ref": "25a1641c-3570-4d1c-98ef-c6416f7988e0",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "98972334-f670-4e8c-bab5-9e837c0d6c80"
        },
        "item": {
          "id": "8f6d8ec5-c120-425b-885f-9dfe2a05c2a2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bc7df980-fc55-43a3-9be6-2d8d6e729e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0139c621-f99d-48d2-91d2-08c4bcd80415",
        "cursor": {
          "ref": "37852e39-83a3-42ae-9489-b024919161cd",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c2b9a2c3-8615-4854-ad28-8e970fb077f9"
        },
        "item": {
          "id": "0139c621-f99d-48d2-91d2-08c4bcd80415",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "cdf61d2c-54ca-4f51-9488-0652a9f30ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074c8aec-1e04-4ec4-a02b-99c4a969a5b8",
        "cursor": {
          "ref": "84f07136-dce5-4ddb-bc76-f5d3dfa1e141",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "bd791197-d918-4cb3-986f-dfb4aee58df2"
        },
        "item": {
          "id": "074c8aec-1e04-4ec4-a02b-99c4a969a5b8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a9ceb081-bd2e-4f90-be53-f648416d01cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07268445-6c66-480d-932c-c9858299419e",
        "cursor": {
          "ref": "a7b9b783-9c52-4352-9318-54015e32b9c2",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "49a8f613-ba0d-4f5a-9114-ac0108daf6fd"
        },
        "item": {
          "id": "07268445-6c66-480d-932c-c9858299419e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5a95e917-facc-45d9-95ac-f9bf34a482ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4fa1bb-077a-4793-b83f-d0f2e593d22d",
        "cursor": {
          "ref": "f533ce19-2896-4567-a696-8715c6504e4e",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6cf579d1-664a-4329-8fa7-62353233fdcc"
        },
        "item": {
          "id": "8a4fa1bb-077a-4793-b83f-d0f2e593d22d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "330705c5-2e57-4c01-80a0-c6cbe54baf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387029ed-2a18-43d1-b477-55946e512d1a",
        "cursor": {
          "ref": "e90ba321-43a9-4bbc-8ed6-ba47c9acdace",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "93d2db78-43ae-4997-8f03-31da9f2a914a"
        },
        "item": {
          "id": "387029ed-2a18-43d1-b477-55946e512d1a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f6ec657d-bf09-4447-b3a8-ef184b077b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a736798-7d8a-49e5-b99c-e4bd7b4906f1",
        "cursor": {
          "ref": "d602f3a0-4cf4-46c8-8e64-cb934553c26b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8b3b829a-d9d9-44f7-bd11-eb324cafe32a"
        },
        "item": {
          "id": "9a736798-7d8a-49e5-b99c-e4bd7b4906f1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7a3148cd-478b-4208-ab87-36964d27aa1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ec749b-8559-4876-9bb6-34c72525a239",
        "cursor": {
          "ref": "33950fcd-6e2f-4aad-8991-b972de689125",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b6257395-c290-496e-aae0-516a5a6ca9a3"
        },
        "item": {
          "id": "f4ec749b-8559-4876-9bb6-34c72525a239",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fda4d9a3-d7a1-46af-8e9d-031ecfba32f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834effbc-226d-4f63-8e8e-086b848458a0",
        "cursor": {
          "ref": "db3b697b-948a-4862-a7c8-cf1611439f33",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bb646f71-9d00-4f78-8fbf-b40e32a53f15"
        },
        "item": {
          "id": "834effbc-226d-4f63-8e8e-086b848458a0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cb970bd9-8876-4b3e-8172-322693da66f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9de55b-ec1e-4986-ba5c-c4e225467762",
        "cursor": {
          "ref": "45f2adca-7c20-401b-9a62-75b9f1be43b4",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d90646eb-9ae1-42ff-9510-90d1768e12d9"
        },
        "item": {
          "id": "3a9de55b-ec1e-4986-ba5c-c4e225467762",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9fbb6a70-3b3a-43d2-bfbf-c681b136477f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877d5d93-5669-4ddc-ac53-e02aeb23300a",
        "cursor": {
          "ref": "616bceec-440a-41d9-8eae-c67c77a74d27",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4249f647-3ae4-46dc-a6ff-cf78ff228f03"
        },
        "item": {
          "id": "877d5d93-5669-4ddc-ac53-e02aeb23300a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e16b3b42-0505-4f38-b334-3ec22fa714fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36be0492-8f39-4c81-9252-d18155f129d9",
        "cursor": {
          "ref": "ad7f7d0f-e343-4761-bfb7-eab9e801925f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "332a9185-5332-4a96-9930-47e17f256034"
        },
        "item": {
          "id": "36be0492-8f39-4c81-9252-d18155f129d9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "31535a98-b7fb-4159-898c-3999f04b6e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb6fc3d-7e3d-46b5-91bc-a93227a367a3",
        "cursor": {
          "ref": "4486e6cf-93fd-4184-9179-e9f4d71d204d",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "92dfea33-62aa-4962-914b-3b3957fd745e"
        },
        "item": {
          "id": "aeb6fc3d-7e3d-46b5-91bc-a93227a367a3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d9e710c1-f62f-430e-a7d4-9adcb09f92f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e04c59-c1c5-4e10-8dd7-1bc320370a81",
        "cursor": {
          "ref": "90382b3b-8788-4ce7-8cce-2c72f606ceaf",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1df947b5-0d51-4a83-ba67-321a4f8f2ae1"
        },
        "item": {
          "id": "b0e04c59-c1c5-4e10-8dd7-1bc320370a81",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0605887b-7caf-46a1-b17a-2e85c1c476f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2098baee-4f99-4db3-b827-c61fa70087d7",
        "cursor": {
          "ref": "41e48175-6817-45e5-871a-0c42dbc2fd4c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b7cc51e2-dc86-41c1-bbf1-bd0e6ac14dc3"
        },
        "item": {
          "id": "2098baee-4f99-4db3-b827-c61fa70087d7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a6dab517-78f0-4c03-9327-8d9b8a341a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d2e0e9-2e5a-434f-82b3-1bb227606935",
        "cursor": {
          "ref": "9ff97ccb-18aa-4c40-b7c5-6d7a16e80a90",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b48ed6f8-c5d0-4aff-a783-9377b3798055"
        },
        "item": {
          "id": "58d2e0e9-2e5a-434f-82b3-1bb227606935",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b817e749-0d9e-40e4-b88d-e349fe12c02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67be24b-6263-4477-967e-a4b70bda0dee",
        "cursor": {
          "ref": "763c3273-dda3-4241-b82e-8a7cfe764700",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9a5d293e-b328-483f-b402-4a3cbbfbd303"
        },
        "item": {
          "id": "c67be24b-6263-4477-967e-a4b70bda0dee",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "51210d15-9f8b-4cb4-bcb0-f4b2d887d810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70236183-fce4-4623-bf3f-c00540e30718",
        "cursor": {
          "ref": "41d871b6-3a03-4f78-a34d-46158133195a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bb67dc0d-72ca-4df5-a7f8-c6f01a220884"
        },
        "item": {
          "id": "70236183-fce4-4623-bf3f-c00540e30718",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6aff6354-d5c5-42c4-845e-777d6e899f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360361b3-0fa8-4362-b68b-1aa66d530bf5",
        "cursor": {
          "ref": "e8e84dfc-ea63-44d7-8686-b89a8a9fa6c5",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1aa3f0d7-0a73-4123-9ef2-a2392348dd50"
        },
        "item": {
          "id": "360361b3-0fa8-4362-b68b-1aa66d530bf5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9426abad-1ff5-4a1b-bb5f-bee8d8340945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cace6bbb-3e28-43af-8b87-78c3742f667e",
        "cursor": {
          "ref": "e5fbee0d-ce59-4694-a172-bc2666b0c758",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "07cd3ad5-1294-4cf6-a3db-04f7b184756b"
        },
        "item": {
          "id": "cace6bbb-3e28-43af-8b87-78c3742f667e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "69a9e26b-dba8-4692-8494-89da930ef4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd08749-4db4-409c-bc06-1c6098966e62",
        "cursor": {
          "ref": "0ec0db15-bab1-48b6-beec-4fcfb967e1dc",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6c8942d7-2ef6-45c5-b8a1-a472c36f64a2"
        },
        "item": {
          "id": "9dd08749-4db4-409c-bc06-1c6098966e62",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e464079d-25e2-4b47-9457-3bc6a4f5520c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284b2a8d-1481-4d3d-9190-e1bb31de0f9d",
        "cursor": {
          "ref": "8f30d849-e3f0-43ce-b549-2c53d42a2caa",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d6e14880-e81a-4f8b-a694-2307525859af"
        },
        "item": {
          "id": "284b2a8d-1481-4d3d-9190-e1bb31de0f9d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "497520e6-a8bb-4f27-8961-d0108f19e2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1891fbdb-a239-49de-854e-88b4b018b78d",
        "cursor": {
          "ref": "37111e19-37c3-45f3-8a0e-a98094232b04",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "091efcec-1217-4938-9bc1-96c8044450ed"
        },
        "item": {
          "id": "1891fbdb-a239-49de-854e-88b4b018b78d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "df725e8f-d3aa-48ca-a93d-34800d5309ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39354c52-3573-4a1c-bb6d-cfaa42bdc586",
        "cursor": {
          "ref": "cd8b11a0-94b6-4215-a2ce-0ae80140c38d",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "28cfa7d3-35e8-49dc-bded-55550cb9eeda"
        },
        "item": {
          "id": "39354c52-3573-4a1c-bb6d-cfaa42bdc586",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8b3aa793-b86e-44f7-b436-35d6b4fc88c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a2230f-da00-4053-ae74-7f9bde4b8381",
        "cursor": {
          "ref": "bdedcd59-85bc-4ff5-827b-23bd20d4f5cb",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1dbd7afb-265c-484e-86c3-a11931698ea6"
        },
        "item": {
          "id": "71a2230f-da00-4053-ae74-7f9bde4b8381",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ab508ef8-6a36-437f-9002-a8702955a90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b9d02f-4783-490c-9f9b-e3628e213768",
        "cursor": {
          "ref": "8d85abd8-f1aa-4d03-b7df-316bbaf6eaab",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "fec554f5-4544-4340-8d28-00ad9870c6b8"
        },
        "item": {
          "id": "42b9d02f-4783-490c-9f9b-e3628e213768",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ebf7939b-dca1-44e2-be55-524eee26735b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4ad976-1bf3-4a65-8929-61a2793d1c6c",
        "cursor": {
          "ref": "c3b229e9-7312-444a-80c6-f049783e0c06",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8fbac697-53fb-4a45-b5fb-b89dc8b82106"
        },
        "item": {
          "id": "3b4ad976-1bf3-4a65-8929-61a2793d1c6c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0fd24b97-865d-47d2-a44b-6c230cc82bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9123c65-5537-4870-8c83-3283d86e80c6",
        "cursor": {
          "ref": "bc6d0072-4cda-4232-b59f-5b5d01d5108a",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "160b3c03-64e5-4fce-8540-aae923f18195"
        },
        "item": {
          "id": "e9123c65-5537-4870-8c83-3283d86e80c6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b398601a-a19e-4bf9-a11d-f823aa6b2007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb27f69-47d5-4576-829f-cbea321a67fd",
        "cursor": {
          "ref": "b696948c-ff8b-4007-b3f1-df6fa2004dc8",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a1ba5e98-045f-446c-97d0-bf838b4fa72a"
        },
        "item": {
          "id": "dbb27f69-47d5-4576-829f-cbea321a67fd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9c7dcd32-ee54-4548-b5f8-f7b4de623655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fc427e-ee00-4fba-9776-19f588ad7573",
        "cursor": {
          "ref": "d6a44a0b-262b-49ed-ae17-2a382b309036",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e43cfc0e-c9c6-4fb7-9b1c-e7c3326ffb09"
        },
        "item": {
          "id": "f4fc427e-ee00-4fba-9776-19f588ad7573",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5a2abf07-52ca-4e8f-9d74-9c8d5cdfaa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816f9230-11d7-4e7f-bd12-3450bd4f991f",
        "cursor": {
          "ref": "5e252028-9370-4c34-9133-c1b4570e6904",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0ed02049-ca30-4608-b769-7a063dd38c29"
        },
        "item": {
          "id": "816f9230-11d7-4e7f-bd12-3450bd4f991f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e81563e7-4c45-4394-9864-62980ee21b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e27ac0-f1e7-4a35-9414-f08041731e5a",
        "cursor": {
          "ref": "3f8224bd-3fb2-4335-a18f-ec7b8104955b",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "baa3f39a-15c9-417c-a05c-726bbc1bc270"
        },
        "item": {
          "id": "76e27ac0-f1e7-4a35-9414-f08041731e5a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8a4306a6-f983-4226-8d72-1f876a7dc4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df47b44-838c-4e77-a97d-3a9d25442c84",
        "cursor": {
          "ref": "14afd24d-5b1d-4399-bf85-b19f26b8364a",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "380c6cf9-6b78-42cd-8a57-4f73bb8a25f0"
        },
        "item": {
          "id": "3df47b44-838c-4e77-a97d-3a9d25442c84",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8bfaa54e-2258-4a0e-bcbf-d2d9c20ebcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201d9731-93e6-4c0f-90c4-e36c81dbdba3",
        "cursor": {
          "ref": "99a5a712-35c4-469f-9efe-ab912af54312",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1e844cc0-45a9-4bd0-afea-24f2ce7e1fbd"
        },
        "item": {
          "id": "201d9731-93e6-4c0f-90c4-e36c81dbdba3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3c81cbe3-2d04-4862-8265-3304adb39ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4576c83d-f31c-4b8c-81b2-4985ca39b6cb",
        "cursor": {
          "ref": "5042fdb3-f804-4fce-abac-bf9fd1dc76ca",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9a699eff-f46b-4f2c-9847-5369de25e36f"
        },
        "item": {
          "id": "4576c83d-f31c-4b8c-81b2-4985ca39b6cb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a397b36f-8ef5-4f5b-a846-ce91000156d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef5627b-81a9-46c6-a79d-47e65749f629",
        "cursor": {
          "ref": "529a5cda-285d-4348-acda-88f28a664fe1",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2e307a98-665a-463a-ba88-0568ad97fbf7"
        },
        "item": {
          "id": "6ef5627b-81a9-46c6-a79d-47e65749f629",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3f7705b2-68d9-4049-a392-ac0cd984d37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101bff1f-5ea2-416d-8865-2dba8322ffff",
        "cursor": {
          "ref": "d13c3f22-05b7-435d-88a4-73699d55464b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a833988b-8621-4c6f-8dfa-8b6c9509a702"
        },
        "item": {
          "id": "101bff1f-5ea2-416d-8865-2dba8322ffff",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e08825c6-9c93-4280-bfcf-cf612ba13faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a4b5c1-2546-447d-9f10-7e586027e665",
        "cursor": {
          "ref": "bf70461e-c3d0-414a-a5b3-ad2d80c110a4",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e57e1d23-40ce-47fe-b81f-172d1d9d6024"
        },
        "item": {
          "id": "75a4b5c1-2546-447d-9f10-7e586027e665",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "92e5af0b-30f8-4317-969b-ae112b2569a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411fbe33-b387-4628-a495-ea2d743dcce5",
        "cursor": {
          "ref": "30ecd1f3-8061-4e35-9274-b6b5d0dc3e89",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "151270fd-e2cc-4622-bdf2-622c3292d64b"
        },
        "item": {
          "id": "411fbe33-b387-4628-a495-ea2d743dcce5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5f06600f-4cf8-4f00-a18e-b15316290375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f56ce3-d41a-482e-a12c-17721c384869",
        "cursor": {
          "ref": "37e9eba5-f266-49de-aa37-660617661178",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "824ed012-9cc8-4595-84d7-8970049b99e5"
        },
        "item": {
          "id": "d2f56ce3-d41a-482e-a12c-17721c384869",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ac0cffbc-523b-42cc-993e-e5f80c3a3bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4307e98-2498-4797-9eed-f59599420f80",
        "cursor": {
          "ref": "8e3a366d-cef1-42eb-90fe-fb1fe27f2403",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d2e98f11-fd2c-401f-a226-c213b0ff4b53"
        },
        "item": {
          "id": "c4307e98-2498-4797-9eed-f59599420f80",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "529fac12-83fe-428a-8e4e-405669e7781f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245ed276-f962-49b6-ac26-e613fd619b0f",
        "cursor": {
          "ref": "fcfaf282-90d4-488a-bd1f-cf7a213dea7a",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ca5d729c-58c5-4021-b40e-3302b5d308cc"
        },
        "item": {
          "id": "245ed276-f962-49b6-ac26-e613fd619b0f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "11248433-dd68-4a09-9e03-10550b65bb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0294025-50e0-4dc3-addb-32d948287901",
        "cursor": {
          "ref": "10eb6ef3-eb0d-4158-bc4c-3fc4e8740450",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "85e3644f-6a12-4a65-bbfa-68a6aa70efd3"
        },
        "item": {
          "id": "c0294025-50e0-4dc3-addb-32d948287901",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "74b0bf3c-b0f7-40ba-8549-57b4377810ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dec179-6b8c-4196-b99d-2eee6ddcc96d",
        "cursor": {
          "ref": "6d79523a-9ca0-48ee-b682-ee51da200535",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "77567e34-bd95-4cf5-b1ca-1d86b1e63b5b"
        },
        "item": {
          "id": "a9dec179-6b8c-4196-b99d-2eee6ddcc96d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "36db0955-a66a-41c3-af45-219579a00fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016e0402-4fc1-45d9-af60-100bfa334d9a",
        "cursor": {
          "ref": "6b0d3be2-fcf8-4f1b-b0e3-e04cfbf5dd81",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "da08a680-9cfd-4b90-a2b4-d5797d4464c2"
        },
        "item": {
          "id": "016e0402-4fc1-45d9-af60-100bfa334d9a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "006a7546-7356-4a13-9bc1-1428f9fc17cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5685777c-51fd-498e-8453-7c5399a38337",
        "cursor": {
          "ref": "b1ae6f19-397b-42c8-a5c8-160357f2179f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "696da092-a649-4898-90f0-611e4676ddbe"
        },
        "item": {
          "id": "5685777c-51fd-498e-8453-7c5399a38337",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e821b845-842c-4e3f-b3f7-25bd09ed6f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caefacbc-d4a8-49db-99b8-3a4e9629248d",
        "cursor": {
          "ref": "e04c6e68-eef3-4fde-9137-a69aeab2ea7f",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5b5d38c8-0383-4bb0-be5e-09467a7df9e8"
        },
        "item": {
          "id": "caefacbc-d4a8-49db-99b8-3a4e9629248d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4c07357c-df7c-42d8-bf86-bb3123a17259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315f7065-8401-429a-a316-a7078bf23979",
        "cursor": {
          "ref": "1347417d-ee7f-4a89-88e4-e31b086d7a8d",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ab8e8893-a145-4fdd-b099-89439b3fcfab"
        },
        "item": {
          "id": "315f7065-8401-429a-a316-a7078bf23979",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1843bf8e-1727-45ad-963b-3b832ad30b7a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a01803-c26b-4768-b2a8-9878a33af5cd",
        "cursor": {
          "ref": "0384de05-1151-400c-93f1-d76ff00f4ed4",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "fbd8a76a-55a1-47ac-81e6-ee19ca4292b5"
        },
        "item": {
          "id": "32a01803-c26b-4768-b2a8-9878a33af5cd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ba5e8efb-5f37-467e-b526-ad3f4ff4fea3",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a07e18b-d4a5-4c5d-aca6-64ca9808a926",
        "cursor": {
          "ref": "c3934227-8510-4f76-ac69-2a74926697d5",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ccb27d33-fef3-456a-9149-26f1b96570f0"
        },
        "item": {
          "id": "9a07e18b-d4a5-4c5d-aca6-64ca9808a926",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b6b555ca-481c-465d-a5bf-fe680a60cd84",
          "status": "OK",
          "code": 200,
          "responseTime": 2257,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a19348-e42c-468b-ae16-c00a8a97ea64",
        "cursor": {
          "ref": "c950b0e9-9738-4486-862c-75186fa6dcca",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ac5eae6c-fbb6-4da0-a735-53a898fe4d56"
        },
        "item": {
          "id": "02a19348-e42c-468b-ae16-c00a8a97ea64",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "645537c7-d8c6-437b-b81b-ccea4553f737",
          "status": "OK",
          "code": 200,
          "responseTime": 2524,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c467757f-3731-4d10-b6c9-fc237282877d",
        "cursor": {
          "ref": "10282193-be47-4ef5-b886-cf2cbc47a4b8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bbd5df87-3cf8-4ef6-bdf2-f92c9ae645a1"
        },
        "item": {
          "id": "c467757f-3731-4d10-b6c9-fc237282877d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6c9856a2-89dc-4d41-a89b-13be06f0a974",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c467757f-3731-4d10-b6c9-fc237282877d",
        "cursor": {
          "ref": "10282193-be47-4ef5-b886-cf2cbc47a4b8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bbd5df87-3cf8-4ef6-bdf2-f92c9ae645a1"
        },
        "item": {
          "id": "c467757f-3731-4d10-b6c9-fc237282877d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6c9856a2-89dc-4d41-a89b-13be06f0a974",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5961d7f5-c1d1-4abe-8689-67363a0a341f",
        "cursor": {
          "ref": "ca2787b3-d8f1-44af-8a2c-4ace5a5c3281",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "761d67bb-be42-4b86-8724-4c3df4e81e72"
        },
        "item": {
          "id": "5961d7f5-c1d1-4abe-8689-67363a0a341f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "46254408-f0fd-4f93-ac0a-8cd96c5ddf29",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d42b00-58e3-446c-90bb-860c42e41a62",
        "cursor": {
          "ref": "fae0f6ed-dad1-423d-877f-4e93eca428cb",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b69ad196-e21d-4edd-9802-6ffc0383011d"
        },
        "item": {
          "id": "47d42b00-58e3-446c-90bb-860c42e41a62",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "964b5d9d-5c9f-4342-a200-8d98dea628f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}