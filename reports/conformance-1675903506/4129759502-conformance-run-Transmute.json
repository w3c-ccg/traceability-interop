{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3e8eaa25-c8da-4cf6-b2bf-f74f37208420",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c4bf9a1a-56af-4dd2-b277-b802b575c686",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cec01c03-2647-4dfa-9bd3-29b539ebdaa6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "44b959cd-4cdf-4f2a-9e37-debfebd1bd87"
                }
              }
            ]
          },
          {
            "id": "ee129e40-b6ce-4ee7-922d-b14f6ce84728",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b11c0893-2f2c-48fd-91ae-5246dc11d9f7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a86db488-ba07-4025-95aa-4e9d4d2ddc96"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "169de410-a298-4e39-b2d7-d00c48a788dc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b74119b3-dcfe-47d2-a7e5-d6712ce84691",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0387c5ab-6e30-4ce9-ad6c-1f085b1d3757",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30db7b86-da9c-4959-882b-1005751a89fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c155017d-b4b9-413e-821a-40137dde8246"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a743d5a-3c71-42fb-869f-e1c4fec34cbb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef9bd064-ff10-488f-add8-7723ec0770e4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "452ffe9e-14c1-4bfb-ae94-3086bdccbc47",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3629c9c4-9273-47fb-b1a8-92c3a217197a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4298e7b-a739-4d67-8c95-9ff09347498a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2490f27e-38b4-4126-87f2-fa49c73ee692"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2801875d-e3f6-40c7-b48a-294878cb8e9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b51729f5-1efa-4e1a-b2df-327798e46bc7"
            }
          }
        ]
      },
      {
        "id": "7a76e677-736d-4374-a652-8e216c1c8867",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "97cb7b61-35cc-444e-9aaf-a2cf7f6468db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "822cda60-8cb3-4494-9923-a6c009da0fc1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a70500d-af32-4303-9e64-906c4f555d8c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6906ffd-8dfc-4ae3-87e3-f6ce9ddfe5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1c09172-a2be-49b8-9b7e-255d8bf78cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331e733a-8732-420e-95cc-bf754f225016",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d0efcd-d105-4e15-b01f-87644553d581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "891b373f-196c-482f-b657-d96b10de676c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63dacee-0569-4878-957b-2390193aa24d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b8c5cd-ac8e-4240-873c-4e7cea07fb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac444ae8-8ce9-4dbf-a721-cc92d67432a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ccbe35cc-cf38-4601-960b-282313817b53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d485428b-79b4-4d0f-8909-f803332a9494",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0a63be-0779-452e-8f18-6610f4966345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abfe03ca-ee5c-4a4d-96a4-37807ea67a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e798b235-4276-45ea-8ad3-242383c64f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ecf7f48-912a-4202-aff8-38090acd046f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63b887e-458b-49e7-a70f-b57384cd7801",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94a1d48-8d9a-42e3-8f79-cec7efa03d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "589feb8d-ffd6-46c1-ab88-116bdcc39eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43733574-c0d3-4577-9323-3ff827fa435e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "a9789254-99d7-4a21-a859-e16e6d1002dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bc28363a-4b7e-4144-89aa-6d0ed43e9b47",
            "name": "Positive Testing",
            "item": [
              {
                "id": "19ca3730-52d6-4c16-ae39-ea521ed49d2c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "076ecda9-4751-4600-b886-4159c27ffd73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2a191f7f-6eb0-4989-ba28-253be927123a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "213c356a-fd8a-44d1-b766-157e0c50282b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "d742ce70-ed3d-4f5a-9ed7-56dc75df0c67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89e07f7b-048e-44be-a214-a29805858db7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "128724c4-3128-44c6-825c-db52743b8377"
            }
          }
        ]
      },
      {
        "id": "5e9a230b-7f65-4662-aa84-e20a7613cf12",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c3690eec-31de-44a4-aac8-3dd4142ee528",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa1ca4c9-fbc9-4fe8-afe6-bfc380daf14e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "10407124-37a8-4bad-9ac4-3832d99d34c6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4273ac2-634d-4a24-8d30-c74e78c906f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b4a847-3c6c-4bca-ae58-21e7e9be2aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2be1b7-d05f-4d99-94a3-1c8445ac8064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cde4268a-b840-46eb-afe4-0c9ac4ed2a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e09f3b-b2df-40e0-8293-70ff224be443",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f09b93f-6f84-46d2-b6b1-01cf2406b2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c732f59a-6b2d-4386-8044-4743fa984a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e50c536-0ccf-4a76-a194-cd8f089b4f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "490c9b2e-5519-4561-a222-bb317fc1f66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6580a711-7492-4cd0-b827-83a7c3f927f1",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f257cf9-d5c5-404c-8100-651e6137a4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e8f124-4f0c-45f7-9757-71b445c563b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ed5a8e-d03c-42a4-ad04-d7e082f2c3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ed1a6a7-26cb-45a3-aaf0-0063a5fc551a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a61959-4cc6-4658-ac54-4b7936d14d6d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2eeb5c-316c-4b78-a68f-bf3b092e1f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5dcf69a-f989-4f89-a620-530c92a1e1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0780466f-a912-4efe-9ebe-0eece4967c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12dc7083-b37f-43ab-a407-cf4a6d310436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b084173-4502-43f3-b6fe-1b03e026bc00",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b5bfc8-1a15-4d97-a794-62400524d07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60460796-a618-4a1b-8627-d987d73cc55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcabb96-d20a-4b00-b0f7-61993740bd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f98fc396-8924-4150-b102-8804549175c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889e7d2a-c18d-4e1f-acde-94a4aefa2e45",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a42ba1-0789-4254-ba8b-0d247f133364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e9ab1f7-899c-4d66-b060-59aaff459357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c65832-9dcf-4c34-96a3-f2b80ca8e30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96f9feb9-893c-43b3-b8fc-abce2a0ccb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11df206-50f4-42fb-a5d3-e25943f144e5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc84857-9ef7-4527-a533-0a5533705b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb0d71f-368f-4134-86a2-88b38efe63a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5015b0f1-2683-407b-bab5-5e0911b21270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a71e820b-21d4-499a-b566-ce8f51452f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6905d06-24a5-4666-9827-afa1441f33d5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d63013c-fe41-4158-958e-a05c3ee78d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca38223-4564-4ffc-9ad9-c8d8d0f963d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a513c8b5-9bde-4831-9389-9c04e7c6f502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e73b0e81-d1f7-41c9-b336-b868ea8830dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dc6776-3340-42cb-966f-9be8dc935b56",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990527f2-9155-48df-9d5a-380025cc56c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "457c58af-b2d4-49b2-b0c5-26793981484b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fc257c-a117-4c0f-b6de-6cfae5d32cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e6fe2e8-37c5-4336-a98f-9232155126b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a88866-c5e9-4777-9c6e-b471aed0bf3c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca2b87a-512c-4b3b-a507-86231b96ad76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9525e21c-9822-415b-855d-a5998f6e9b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9374d2-17a5-4792-8c93-5fa38a008046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c97928a-3cf9-44a4-b396-a0002f7c20c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4122e75-ac32-499b-bff4-561eb0f20334",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d654a90-1bb6-4cdb-8d40-6d3c062241b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23dc2740-c37d-4e22-98f1-5a28f0e48fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6634326-6eae-4776-8d62-f678068c1f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb3305f4-870b-455c-abb9-48fbbb9677da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c58b0d4-0f51-43cd-b369-855299ae7544",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef1cbef-a014-4ccc-918e-4124f26ef915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428ae405-6b79-445e-b031-1542fdd17f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52ece10-a037-4414-a2e3-26b021cc5e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b8b87d1-8f2d-4030-9ca2-92821b78c263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796c1b21-086b-4ce2-bd5b-6f1e370e3657",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19998255-9cd2-4cd4-bdd8-db4db8dc6adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284e609f-e993-4cdd-a99c-47c2a44b10c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebef79ea-9108-4589-b9b1-43418cadb28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd2b7409-bf91-4cdb-b02b-eb10a5148ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395778b8-420c-463c-a57b-3188de4b795e",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6d91f9-5088-4842-b7b8-79535047721c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b113dff-a43e-4787-bc77-a09887bf37ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcaa4f77-98f9-4165-981e-abddb196383f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "223a5887-b6fb-48e9-b3b1-bef7c69da117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d69b9e-3391-4c70-838f-088a1756015b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c4f810-9395-4531-a5cc-92d50e72f70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b36da78-8e82-4059-b5ed-d621d8568ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1342af3e-e2d7-4a3d-aebd-6edef1dfcd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa4a2ae3-25b6-492c-ad57-e11b91f5947d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cbed75-b9c9-4f96-a212-f87cf6cfdaec",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b734a95d-2d93-4642-a4bf-ce84f119f92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655753f2-8d88-46c1-aee9-0e7102091247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a35796-b239-410d-94bb-11260ca9fa5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d51dafa5-c050-4e0d-9493-bc016e93b980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d661e147-4c04-4975-9791-34f9aa2b33f4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164e2e8f-dad7-47ad-b65c-37cbb25b9cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43f4fdd-ab09-447e-b3b9-51a2acc2e830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b813a0-0a42-46fe-a28c-91159b590851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "beaa1726-0e95-4aac-a8c1-1d3cc8ddaa8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf6a50f-cf7f-45c2-a153-07f4dfe814c9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1054c5ea-cc8f-4fd1-9aa9-eb59babe6bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f09e814-e315-4f59-9593-9524397312c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3fdb0f-e821-41b0-a57b-c117cc8f27a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "201eaae4-2cdf-47f3-98df-976481883fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ab4b58-ccd1-4cd4-97f9-8f7dc4cb6e20",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abad4ada-868f-4f8a-a22a-39e181b660d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80dc5e8d-4618-4ccf-bd31-d8ef82b50b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a90faa-b212-4e40-af28-f54b983bce6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca8f522d-4ae1-4e86-840c-e2694ec0c88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4616ae-1992-4171-8d46-219ecb705b60",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77645837-a3c1-469a-9a79-9caed0d1a101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be7b232-ec5b-48dc-b86b-76a63aaec6ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75df6189-283d-4955-84f0-2d7acf2ea3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "faad65c0-fa0b-44d8-8c07-443332e8c3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b45c2d-66fc-41e6-8cd3-403b2f0b9ddd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53204e4c-1aa4-4e99-8800-e58054703376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a65c23a-73c4-4cb4-bcc3-4de75cb54b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def628ad-4325-4ee7-8818-0eefe506f148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "310ea2bd-a4a7-4ab7-96a7-968744f07edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641923fc-9ab7-45f5-927c-fdcab00ee8b4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f4f3e6-7d96-4cd8-a59f-f1402097783c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c0d4b0-6dbc-4139-bd6e-d956864985cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7722f6-155c-4e44-bc26-b225c1cc0b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "954525f9-3656-484f-858e-633992fe1955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b5a0a3-c82d-40f4-ae35-a64735e75e61",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a72795e-94eb-4e57-be51-fd8d7fce9944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "befda501-4034-4688-bd3d-1d19466e49f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cee4e0b-4951-40b9-8fb4-8011799d6a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04d7f79c-5169-4d91-9e28-5e6b31206dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ba3df0-05ec-4567-83c0-304f17a0a62b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b93037-d253-4fc8-89a8-0b1661ed5ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1f6dda-b87a-4373-b93d-4449c65e46b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a884dd7-3843-4d73-be97-bde2602ccce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0e6d5f-02f1-4eaf-8bf8-ff028972bcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38aabb3-70c8-4411-a9b5-72c61109db46",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbf5cfd-65f2-4eb6-9bec-e0d1df3b2976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f44b84-b3e6-4d5c-a005-0b44cdfaf34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7bb0f8-d40e-49aa-ad7a-e8e4d2b4bdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9f5ff7-f009-4b71-93d6-f9f21ea95ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7a671b-2a89-42ff-8ac9-ac822c13a97b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3227d5fa-7106-4048-a4b4-2fbbe41396bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bffa7bf-d4fa-41e6-a9f6-de38a5658155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022e4d0e-8417-47cd-bb34-74c86e57472d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "13959936-acda-4f79-9c78-47ba3b5865ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d1acc6-8614-482c-b282-92919f015868",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633e198a-2d67-4e5e-ba10-7efd41306f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7b35e4-2eba-4b48-a209-f184502c9a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4456ef1-bbcd-493a-96a2-03b54cfa6035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c555224-6f49-4d25-aa06-8541522676b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb02c7cf-e142-4a1a-b8ed-e9765c8a880f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb71f1a-99cb-408b-b56e-8bb2f0a8351c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd4e8b7e-2a5f-409e-ab4d-692252651b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e4b993-fa73-4ccb-94db-3ee9400a7603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8558d0-552f-42ce-bee9-12aa81ba3f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217c7d5c-3469-4eb9-b5fc-f456b20b7f95",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff3550b-da6e-445b-81ab-3c390dd8c845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5f02a5-2f7a-4711-81e9-ad68f88b1962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85435c5f-41f3-4562-af6b-393f80fa9b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20f4a792-1161-4b88-8759-66eaf090e280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6293d1c0-3903-4489-b1b8-bf62b7ce9d5c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a82fa5c-4be9-4a2d-98e0-96a1d96fb6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34667c66-bdef-40de-803c-97fb2038e3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39bafeb-661c-41a2-98be-53b0f4a0469a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "476dab54-783a-4669-b458-ab2b9a917061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fbb8c4-8aa0-499d-b0ae-0aa70aad1448",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3341993e-22fc-408f-8cf5-9f8c231330d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d9f816-8eba-45a6-803c-2eabfbbfcdb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd48a409-3adf-42db-ac17-ccf87f23e116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d98c46-2cc5-47d6-8375-9bfc7928f097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6efda94-0478-4bb5-b1a9-2937e2d73f88",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca78dd4-8a97-4288-b967-857fc39da0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b394e6-e392-4e42-b7d5-05abaf83c713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b749398-44a3-4c9b-9fde-c065d25e6e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "80a812b1-f28b-4ff7-ba77-ff64f37dfbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201fe06b-219f-48d9-8a61-380befc33c21",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f717261-ffd7-444f-a874-05bcf4618208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a214243-203d-44b3-8929-e6af310d9346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c3d90f-3212-49b8-a155-ef8e5dbd1dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd6a348c-ae15-4b3f-b4ec-afcb88336662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77b71c0-2094-4c10-873c-84f82f9897de",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b33d158-87c9-40a3-b5f3-cfd05f453a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a0a2f6-67f9-461c-a1df-ffcec4fdfbb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ed797d-fb59-42dd-a446-479bc14636db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6df1678-76a6-4382-890e-71466d0bab85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdee1f9-66e2-4d90-bf1d-32f9ccf09800",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec9c8d8-a0f6-4305-91f8-4c0edd5e041a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f60aa3-1b2a-4c10-8f94-041f9159c3c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2404429-f054-400c-ae01-708686c9023a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55250bda-55eb-43e8-b32c-3f76d21d3f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b381ec16-65d1-439d-be57-22bba9aa1d7d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5d97f3-df0f-42df-8157-9a9895791752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64347b7f-dfee-4325-b5c3-282da63cd67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362976ed-52d3-49fd-8de0-ab64f10696b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae96aba7-6f7d-4399-b80f-50663d83ebac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cd1cdc-3981-4280-9020-3db8f2998ec2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182f8494-a7b2-4e0e-83c9-df66aad7f422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d674ab23-05a9-4276-9675-e6675f3af639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d249a5c7-da56-497d-9bcd-0f0a895fb2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ee76d300-5d7b-4ddb-a053-895a7bc71134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89075f66-5b33-4f9d-83db-fb4c91aa0044",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f2494c-c2b4-4bb4-9f33-2a571e824ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14a7fb8e-5c28-430b-a1b6-ee254cccc649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4421be3-1152-4867-8cf6-4a911a7978b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88d5e94e-6649-4a3f-af1e-5cf41c0714f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80a3a95-21d6-45f2-a1e3-b80f78480658",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901aa704-4a5c-4a0c-83a6-c7d67b93e0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9dab223-c235-43af-bcfd-5b281d7cd408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969f8455-cc5e-4fee-b30e-7557efcbfd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "174c30e1-b0c7-43d4-adc6-f302d8339533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a436a7a-e151-422c-81ff-ed15ffdac98b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef10da9-e7d2-4693-b68e-2e1919e99731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8b40e0-ab13-44bf-b6a6-489362db968c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5353a21c-4f21-4ab2-97d1-e8b95bcbda62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "30684e0b-de34-4eb5-8fa9-0a881abb4b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e12fee-28e0-43a4-b8d9-1be21dbd8dbc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab6629e-13aa-43d5-80f3-83fc2b0d15b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b46cf6d-fb04-4bf6-aefa-e00ca06f99fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e811842-efb9-40c8-bc82-dfdd6343a6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc25440-e332-4738-bf75-94dfa42fb225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795ebc8a-aee8-4304-8d0f-755061d3f69f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a72013-d793-4549-89fd-f5f2c0803858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed66b71b-2b90-4f21-bf87-2c722932d59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57a2d52-f368-4e34-8c9e-ef110c8c0bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "afd55e4f-7c58-450b-93dd-ad5585ebc08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e497bf-7e88-4d36-9484-48f2a1472416",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0feea57-8b0a-43e0-a1f5-eedf9eb7909b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b27cf93-491d-4b81-a00e-8f58387badba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364cfcfe-3548-4c57-bd54-85cde177776b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a941ff5e-b878-4125-b191-0916891b6807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a581d02-c418-4a67-a11d-e8b44d8bc6e2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe88925-643e-4857-a4e1-1888b3645acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048a878b-4908-449e-bd81-bb2fd1e74b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23df121b-5bc0-4c74-91f9-8cecd7d05296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7af66ad5-fa2d-4946-8ff2-be6195636ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a065636-d6b1-4f8c-8dac-fff82e3653f1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d9151e-d26c-4ac0-8f9b-fb14cfc00662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9560f4e1-99e7-401f-93f4-35b970149333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0180c116-af1d-4418-90bd-4afa0f60caf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "95561830-4040-4c34-90d8-ca2d3e081664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfca398d-c589-4156-b0c5-acde78dd4f6b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27feccd5-8bdb-4b3e-a561-efa7568c6bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bd0bd7-40fb-43ec-9078-3cb4ff033096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa45b27a-4a7b-4686-97f9-4905813b3eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a42887f-534d-41c5-b2a7-84a92d91c23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19845e86-4fe7-4f9a-a23f-958d3efbe295",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d88a35d-047b-4b48-af9b-4d749b4aa790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c7500e-af13-4665-bbb5-30590079e375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b7a557-1851-4fdf-998a-129fbfa3fa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63889637-c579-4d10-852b-c285d6be5526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e45eb25-a44c-43c8-97e2-33c98ab54948",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3d97d7-ea31-41ee-8567-b4d9c5b2a9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82bfc5c4-685d-4e9c-8a2f-b27e6ea14ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d85ad51-ea14-43e3-a7e3-2c4aac0f16b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00f8c469-8017-4ab3-a1b6-59acddcf9115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef840f33-6e9f-47d7-931c-730bf403b976",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091250a7-19f3-4894-8496-ea9108bca612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cba3f73-b926-485a-a981-8103100a9d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77917f4c-384f-4b5e-9dcc-ad159127cd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2fefb4-b96d-4564-ba63-c4ccabcc4b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1b1f29-14de-45ca-9640-809640d7d2c8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178c1131-c876-4bb5-b14f-df49ecaddee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae5bdba-e086-4c16-b178-de2db7cfab8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a51a6fa-8689-486d-ac69-ff1f024b4897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc233f8-3f06-4ecd-96ed-063b919b344b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1c9126-3f7c-47fd-9ceb-73eceb24018a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bacf4c-781f-4f5d-9d76-8a633837afd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e43593-59a1-483a-bd97-4c493de7a8fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75264e3-0529-434e-b892-c54e352cd417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "def78947-53ef-464f-9d31-080cca04c7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409fa301-e1ca-4318-91ac-f891d58bb098",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0a2fdb-e794-4074-b2e1-77fc50b8c891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6155fd-527d-4e83-90de-139f974a4aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a55ee7e-247a-46b3-8f6b-903b976e6c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb2f4e2-fafd-4090-af1a-68e43cf58bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af029b5e-0fc3-4f2c-aeae-f77c84c28f18",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17a0f17-b40a-4f12-b335-bb23ec956596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb773f0-8ac4-4cb6-9711-135c0b8c16ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803a9b88-fb18-4e2c-ad4f-159afe5c71d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd87d02-976e-4a95-a36d-596c797cb760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62408ab8-a3cf-41dc-ab9e-8761cd270dfb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f289cc3-f486-4b79-8372-6feea61c80fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a026e529-a216-4a65-b0c0-f1420572871d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b460e73c-ccd3-45b7-be0f-f4cd400f2098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "75d7d450-7469-4591-b545-dbf6c4317011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55bb768-0fc1-42fe-83fa-4f53ea245b06",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b82c7f-0f66-46bb-9bfb-ba685d136893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7191cf8b-5304-4220-9c98-4565a7fed3a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a83d70a-1b6a-4b99-a937-a03e3aa5cd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37a73d43-90ec-4c94-b7b8-a5c8937bdaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e035ee-28df-4b8b-ae54-314866608773",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb490f7-52a2-4f97-9213-8614b8969901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1117ff42-49a8-4e11-be9d-d73ba70f2a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c8d599-ed53-4fd8-8d8c-7b299610e522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f544f9b-e36c-4e0b-967c-2a2e1eb61524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b136c8-9119-4d00-8258-b11f918d2748",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01d09e7-541f-410e-8579-d862a303dac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ef36b7-9997-4be9-94b1-96c8ddc6d047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41516995-6c3f-4a29-910c-0a34cd3d291b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c68c9b0-cd7b-4197-81bb-94bca5030092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97bccdd-e937-40ad-ac15-a35bd0514440",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d30c1d-b863-43eb-94b8-b8eaf27323dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805807c4-736a-45bd-b390-647472b28dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0a9aca-3ba1-4967-93e1-53d521ff125b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab7a516-8033-4e98-947d-47f1497ed916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3071a7-43f8-484f-879b-bd216c7e1602",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a421660-8029-4919-869e-622ec1616d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f63ad12-3e3b-4c7f-b2c4-773f1aa56d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233d925f-8fe4-44c2-b000-bdfbfb3dd709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "345f62e2-052f-4751-9418-3dfa5502e41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45acb9cd-8323-44b0-8968-8b8ab5b1e59c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05882a47-4baa-45c5-812d-d48da66e0228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc4d0a0-6094-4e96-bee2-bd6b8577aaf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231e5b7d-4481-41b5-bfe1-c3a5e2177533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7520608-f330-4e17-8ebc-0baa041ea0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775df032-bcaf-4551-a22a-1279d87ffb31",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b39748-275e-4f57-83d5-7da1e44a1430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c230d980-e9ff-46b2-a51f-4fea670f9699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3915fad4-204b-41f8-859c-743027ef3120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1fe159c-bd2f-4770-a810-b9485d235d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d488542f-4aa3-4ff9-8f62-41c131aa52b8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6776fcf4-fa4a-4e0b-bc60-7cc9e5d9110b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d4d7f0-382f-4cc1-87fe-09453ef878d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344d5fc2-a8ae-4261-86e0-f1542c59f29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "68d65c14-7aa5-47fa-aff7-4311207e1fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4f4eb5-4bd2-41b8-85a1-ebdf73902552",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539b2246-c468-4014-b6b4-ba86f4b977b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c45b88-b3d0-4e84-8a8e-be513733cba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5099ad-98cb-4338-8545-336cdf46662b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3525eb-a45f-430f-9e8d-7b3fe060ac43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e097f7bd-5ae3-4221-861e-83c5527067d5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846fd576-1b51-4355-b35a-932112c5efcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1ce075-8cb6-43c1-bb96-62908336250a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b63449-7814-44fe-8af8-da5149eab1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b626371f-a26e-4bb1-95b4-49392209c49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981bd0ec-c6af-48fb-878a-1bacf0a997a7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb88fdd-1fcc-48e2-896f-39b12be6846e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e26836-0db9-4e45-aa8d-f546b5cffb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e63520f-2fd2-4fdc-b5e3-16fd81beb963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "673120c4-80c1-4316-9e44-f932894e6808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe498a14-2af0-41f7-b96d-09061ebf909c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51551094-56b3-447e-9b77-c0f99bf402f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9537f79-2b6e-41d8-8c3f-c0fe6f53aebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d09f51e-2247-4b78-8e0f-52654b98fd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61933076-9a4d-4014-a3a9-76854640593f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b26824-13f1-48dd-98af-4fcc2f11e69c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83000a50-2959-437e-9a65-6c5e5ef844de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13088e43-b286-4310-9124-5e48d9b389d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ce5588-9abf-477d-ad59-6316f55b01f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9097f2-8b7f-4a3f-81b9-11d96c64e354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8ff897-ef7c-49f3-8889-7c66f80505cb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a28b99-d5e6-400b-8fe3-49a288f9942f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af99dda5-ec52-425b-888f-16de1a085819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f5b501-7d1f-4665-bd32-53e6ce7c2051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "692c2e2c-bfa6-4eb5-8bd7-68ec2651ddd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c0ec4d-34a6-4ece-b1dc-f371ee5480bd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf410dc6-0a80-4345-a7d7-5282a39b88fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa8acb6-e5b6-4aa7-9476-b0d9e57b4c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cd76ae-e92d-4c7d-bd34-c5fd020965d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7262f9bf-058c-47f9-ae04-713f93f3bb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd5cf32-fd5a-4536-9691-e466c78407b8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05123e1d-91eb-4c86-a789-063de5f8143d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6cb7133-2075-4fb9-8f11-5270ab81acf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d1d319-5421-4795-af07-5f5fb45f8ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "41bc2761-70c6-40e2-823c-092a699f3bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9b1b91-6f05-4f15-962d-c7f08a261b5f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948cca3f-ff12-43f1-bf24-d07d95c30677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591ced58-cd82-4f35-85a9-f7d9b830e0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3004b9e7-e8f4-4297-99bb-6d0e1879847f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "37131df1-63bc-4b37-aff7-f47cb4a679b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f554c04-a1ff-47f9-bed0-6317d251e8b0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fc690a-026d-4393-8fb0-4112a41cb60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59601c38-73f9-484c-821d-1c71e39f62e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f81dc9-3252-4710-aa20-406f17b7a367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc53e84-df93-4392-8e64-4068aaaab312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6b6ae5-ce5e-4f66-9cee-423b03afcf88",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fb03a0-7816-4bfe-bca2-45c0415b3c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33237576-895f-4f09-83dd-22b13ddf226e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b480d6c-b745-47b4-87d6-317ae6522893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abe49845-9724-479c-9664-1bc22badada4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d9559f-495d-44c6-9c6d-92a519b2df8f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b16e36-6401-475c-9832-b68de06cbc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83009b1d-4fe9-483c-bc26-f4b1e9aea3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e50fc4-c6dc-419e-8f28-b309c8c098b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a651276-0543-4651-aed8-95d20cbb4470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bd9b20-9b0d-48a9-9142-c2aa8ed5c74d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9880acb-9044-4c3f-b41a-df2dcc1dee30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e41d80ca-4a1a-41b0-9cb7-46e6b20e808c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81fdf7b-ff94-4d71-b3b7-e6078048daeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f78a3b-7eb0-45a8-b1bd-49f8189e06c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773bb95a-a72e-474d-937c-23b9cd36fe9b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f85aa07-2b5e-4db4-bc8f-cd147238f57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d43c927-11ae-448c-b7a2-1f04fb0109ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e096ffb-0e10-4dd7-9ab8-3195a36f5c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71ffc5e7-a23e-4f9e-a8b0-36146bc2d0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734612ff-9bee-4e2a-91c2-ebc3f7e53a78",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfaf90ea-2f51-487d-9d0f-d99bed8a666f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fb79f1-79b6-425e-8305-5cc088994561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e955f7d5-1cea-4281-bdbd-9dd658a54c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0305f33f-4f81-4049-9ac4-37e087833602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c437538-b9c3-41d1-8e5b-1df5774f6fed",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9af456-563f-447a-90fd-bd235d44ea33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fb59b3-c6b9-4d4d-94fc-ef3741a05dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c00ca71-399f-4344-a9cd-8471a8d91414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b9110a7-129d-417c-aecf-b3d4c437704e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8485ea4c-f87f-4e1f-b391-846740c45153",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bee3bb-db47-4ee5-9bcb-8c861c238163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb1b5d1-06ae-44a6-8bb5-adfc2f691d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3bfd78-59e5-475c-bf19-e5726bf8d601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d86a21fd-6cb5-4082-9328-5b2886f78cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd84cfe-3331-4ef7-994c-fb0e2e1cb066",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1ce9cd-3656-412d-885a-bfed5cab5889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084fdeb0-be9c-4213-b399-b1462c5e972e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb9b5eb-0a03-44e4-866d-61e3877bb756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3137540-606d-48a6-84ff-097edcc8ac8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c7440b-f77a-40a6-b88e-889f05cff767",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703128b9-ac8e-4f41-b783-218a111722ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b14a2c-d67c-4cfe-b1b5-80faf76532fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28f447d-29e5-4466-9a5c-67b05a3ed00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eba0949d-1274-44d3-8aec-798b6bff91d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38714457-6565-4744-bd4b-2793ad85e5a1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa46f1ce-dfc5-44de-a6a7-16c647c46657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d950fed-5a10-4f1e-8900-0fe0d2e437bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1cc49c-aaec-458d-b3e6-137d16eebb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a80541-341b-43a8-bb04-4ebcc65291f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62eb054c-44dc-4b13-8cec-09c686268fc7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eda6245-b466-453d-a5b4-31ef9a2925a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce74e6f3-4241-4fd3-85d9-fa3a313c951b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7938bae5-3ca9-47d0-a8ea-ec435b0a12b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea530c0-f807-4f0b-9bc1-889284d57539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c16ea02-0a82-4c19-b934-c638c6244da3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc2fa9c-15c7-4186-a9a6-cf20cdd78238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5ec73e-4134-418f-8bb7-bb05b8b48fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6019b85f-21ed-4b79-80e1-b85e48578690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37f05950-fffe-4dc9-98f9-801835fb68aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736b37c1-1bcd-4863-aac9-d450e3b85d9c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96984ac9-5f5b-4b3e-962a-26368e6e45a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a83241e-0c09-4869-aeda-7853d9edbbe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659dd310-f644-4b7c-a864-2f0fbbf6c702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70fe54dc-b1c4-4fe2-802a-0c9ad9cecd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "736c748d-b1b5-4c92-81c8-03a65e4ed4cd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbff536-0036-4869-a65f-bf37d8577f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4411e290-0225-4d6a-b1db-7e2e1ef9034a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400b12a7-ec01-4e47-91de-753ae972cc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eea4510-dbe8-494e-9648-045c27082b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3629d426-b9a3-4636-a103-d8571172ddad",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe744c61-734d-43c2-a606-b2174b1a3810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9766bd-ede2-42ea-8cb1-7bc5ad69775a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bf65e2-916f-4020-b421-daa53f428306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97678df5-2f1f-40ad-9d70-69b06135214c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c71839-b900-4ba0-958c-f0c7dde97d40",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87487e58-be3d-4ad5-8dc3-e47789de6524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf305ca6-d823-4986-9985-dd87e848ede1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d91d05-8b68-4cb7-a68b-586e997fcdcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9a02e2-da52-41f9-985d-dc7327e2cfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17513929-0f94-4a33-8b2a-7f0eb695da2b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec19c45b-e969-4ca9-b4d2-c19c9e4820fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02435b25-f870-49f3-a827-6b9598e216b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b30422a-f75c-4b23-8216-daaa65b70591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "67fbade6-e8ec-4193-8b78-6e89f874d163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0da8923-eeba-4eed-8ffb-4b193022df55",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958bc26a-e183-4503-b9aa-d90ce843a824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8cd9a9-1f1a-420f-b6c3-730bb6a093a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77507b5f-88cc-45aa-a1f6-5669f70f8498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "984cf771-32b4-4e33-84a0-bd839ef64761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56474452-4bb5-44f2-99af-efc54f26e5cd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12f92f5-f8b3-4a3d-995f-61dc64d0bc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184b93f0-c292-4a6a-a8f8-b62fe0ca9300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e54268-7b11-4d11-a013-1b53ef741547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1855eb9b-01f3-4696-be93-c0b232a0679f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbeafadf-cb76-41c0-b5a7-0df4647eebee",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6317d179-6ee4-46a3-98e5-2977be0cf06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b571c5c6-598f-422b-8ab4-b652ef7f4c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9656dcb6-4824-47c9-a7e4-e525d3b7c750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3ec880-c216-4c54-9071-88850b390989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed5c382e-d958-46dd-90bd-6e743c8a079c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df916c0e-7ebe-4e37-b34e-95b2190010fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2f48ca-30a0-4c7d-86b0-d79c0d4e5c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998e41af-3635-47c5-8dbc-1c7be97de947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "012f137d-e7c1-47c0-9c6a-94cef0f4ea8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ca79e1-e42b-4bef-858f-357f1fb457ae",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b1a1f5-049d-49d2-bebb-83b44860dd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "74d12939-2e9d-4a9e-abec-01e93c58941f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da93c80c-1199-447e-9bca-16b8a2ae2a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fa0e2b-97eb-4988-a4af-8ffcd86b0893"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b43ff860-5eb2-4056-a8d9-7033daa3f2be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c373f52-a76a-47ba-a623-4963c707529a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8741d5b-da0e-4099-90ce-97fa40db11d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8b1c6b0-3a60-4a21-b02f-3ca56d9bacdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c45b083-8895-4593-9c8f-df487de12d1b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "45c316c8-626a-4985-9d83-2d1837df2509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d811faf7-6e8f-4ed4-a677-733e891f8e14",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34aadce-f9d3-403a-9c39-8c4ef09df2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36c5f3ab-7774-4c83-aedb-968086341920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1386725c-4fd5-4faf-896d-0340998e2f03",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b19d319c-4bbf-494b-914a-9fc8a06c6f76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9d58692-4348-4869-bccd-ea407f0d81b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbf5ec96-b32c-4cbd-8359-b275920bd07a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5373700d-9e24-47cf-b460-60129c047b7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf2c063c-1d05-4ff2-91c4-f0095cc690e5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1693f5fa-3dab-4864-a89b-d86e9cb4dd6d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ebd4a62-108c-4660-bf30-00db5633f419"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0cb674ca-73ed-4484-8567-a91076e0a51f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e6d1bfd-2c3e-4925-a314-8ac329e08091"
                }
              }
            ]
          },
          {
            "id": "c7e43c7e-5ffd-47b1-8b27-ded17868289b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ad9336b5-df90-4819-b11c-6bb8197fa882",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86a406b3-1294-445f-ac36-323df9135cff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34d110b6-3a40-40c3-80eb-f2a1b660f44c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3290a9bc-6f0d-47e6-a458-33621f5825e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1b0fe221-20e8-4e7e-b011-32aeafe09574"
                    }
                  }
                ]
              },
              {
                "id": "a57bbb7c-d0f5-4955-b9a5-318a95cc8c3e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "082156a3-d802-4552-8ff1-f14cae6c1c99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "156b0ff3-88dc-4c52-9485-635160b11452"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5bcb767-4775-4abe-b59a-c3b29aed93b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86d39043-7c0c-4901-af0b-0be35006207d"
                    }
                  }
                ]
              },
              {
                "id": "e92def97-b24a-4368-9929-d4fb5af6578c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e399eb69-2826-4916-a3e9-8665d0d9d167",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "167d82b1-da76-4fba-9dce-1fa2040eebe8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "828055b6-1a1f-429a-9e62-e3dc02be6b5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "091c1f75-f403-4a91-b524-f8006e8b0358"
                    }
                  }
                ]
              },
              {
                "id": "f2083456-5b4c-4678-86ec-e0dff507ac87",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0fb44b9-c041-424c-8214-1fc34eaef754",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b1ef904-2ce1-4a37-b1f6-bab5d0d8c27a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e13598c-59f1-445c-9834-21e8c7a5e180",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "13028efc-e89f-4f54-9a74-935ff723e32c"
                    }
                  }
                ]
              },
              {
                "id": "c59205c5-0acf-4458-b3ac-72ba2c05a7da",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b6e2cd8-2c43-43b5-8bc3-92b23cf4205e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83e6601b-2e3e-4db3-9b23-576a03940dcd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c48ec4d2-d478-4092-be3e-661536a96b4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aca8aa0b-c70e-43a3-97c5-546854a48676"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73e6a219-51c7-41b9-b121-a99722c1c0aa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "105c13ed-83d9-45d3-8268-f4af75a82296"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b766b878-e7cc-4a85-bc07-c1bba3307ad2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf9c900c-d52a-4bf2-b177-b9f7516eb683"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74668836-6890-46c0-ba87-cfe56d79f591",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "837cf776-506d-43d2-8f67-9cfad91aaf98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d33ca14-4f06-4db0-afab-af4a60392b30",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "542a2c10-7a79-4929-aa14-788a07c647ae"
            }
          }
        ]
      },
      {
        "id": "a0126973-d0fd-41ca-adc6-40ffb4439cd4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bc32099f-9047-4839-ab8a-cfc54a34e1d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54beac8e-9cca-4e2c-baa5-d322d17c3611",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fb0228dd-4288-4ece-823a-9dc100ccccfd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d4fadb-8581-4a36-b7f3-10f1f00e634b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610c463d-7a27-4d7f-aba0-5c1da022a5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c7b60b-5a15-4a63-98ac-7160bc61be19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "118084a9-db83-488a-8282-d48e717f9a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa51b319-5c1e-4732-bae1-176b628f1c7a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e4d3a8-39dc-4c53-a708-f7816c48f1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a072f558-f1a8-4bb1-a35e-b0377261f92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92cb658-479f-4811-805a-56a74ffbe93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "75e16d02-3f0a-47e6-a24e-5c258b2b670d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a648e96-6a03-49bd-8544-9df550c6f6dd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc219a3-5429-4135-9da3-95202cb48a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8d2314-af8b-4910-bac4-401132e4e684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0f5cbd-9942-4184-8b58-53dfe10affaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff69c47f-2d57-4a33-965f-701ce408410f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417a34f3-5c33-43fd-a35d-3ee9c783f608",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ada96c-3c8c-4df7-8588-1c7513b63142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144692bb-6c24-45ca-9ac7-232c32230991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8351f7a4-b8e2-4795-9268-87b12794ec4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1271250-4ed9-43a9-89af-6c152f65fd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dabaed3-673a-470c-9b93-69d1daea589e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02394322-3d9a-4458-9ee2-c9386ca18fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d61e4fe-1f76-413c-a877-1ccd355a0c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253e64a4-3dfe-477c-8717-8c26ab9f0e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a393286-50d9-4b24-8d83-0e3e26832d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd340bd-2205-417d-9d76-15c4def8cc90",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd3f83a-af00-4900-b504-82bc43a23303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668976d9-9391-4d49-b8de-b401daa58bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56184c4e-ea17-484d-8823-6afb2e46fcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d6e61d-19b8-401b-9050-b790db4c101f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e24eea-421d-4089-bf38-4deb44aa13ce",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c59bdd-3733-4294-8e1c-3c263f798688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5230cf-5b41-498f-b144-9fd1bfd61c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ce3130-ad87-4260-bc83-32655b6994a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "720389d3-0850-481a-a7a9-8dc009fba6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714e57a2-a7dc-4fb7-8406-8f903d991f74",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b80f51f-9b78-41a8-907e-4e6b88d1eb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e355d6e-912a-4a89-b882-b6009636007d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763892a8-70d5-4ca4-88ea-567fc2e7bcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26f0bcbf-a110-43e7-9380-75b2c979b377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8441f69b-642a-4dad-827e-659feb30a17b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6624b74e-0dd2-44bc-b227-e1cba3495ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e638ba-a306-42dc-9e91-bf7d0589f8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f426e53-ab93-4449-bace-45a4f0d12e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b62640a3-0f8a-40bf-9128-084e09f92395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454450fc-df6e-493e-a2df-1d155301df50",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9fd339-d2b6-4092-837f-060de59c28c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f56a12-8ff1-4f53-90f6-d209cd6f43b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f31fae1-e36e-4fa9-b862-906d77522993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddd0135-ff34-4e57-98eb-01c1b4764aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4250c505-0a49-43ec-b899-f40973819cb7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249f39ac-3287-444d-9819-069448afaf53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880eb682-77b9-47dc-bbb0-9a9ea69716b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85a63b0-98cf-41f6-b02a-c1aa933a5f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2408e368-8e0c-495f-b065-235eab9db6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2995ad95-5438-4625-ae7a-0b19522f8d43",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0933143-9f3d-4fc0-a818-bff784d169ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd95fa9f-8e9b-4745-a5ad-f8b6b2988c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44f1827-69aa-4cbc-a341-30cfe859e4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3c0c9b-b29a-47d9-ba92-f21b701d157e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949a5ee1-7b1b-4348-9f3c-45e98951403b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec200af-f71b-4b7b-9012-f90b52c5a400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c2b5540-ead8-43cd-97be-a9709517a02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876d5965-5b0e-4164-904e-677ae34b3813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "277b0dd3-e60a-4200-ba42-359c556d2bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d66fd0-6223-4b0b-b31e-8785a57d1fd2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a89b9d3-60d4-4b44-abe9-e71ac8ba369c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f66132-93c8-4934-b92d-cc81fd3def86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ef4cee-88a6-47e2-9b0b-4ae97211a1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a926e96-489f-4197-bdc1-d776b2e4fb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9757e37a-97ad-4a26-a7f0-512a7b2ffa19",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73159558-f865-4d2a-a623-8dfa2fa4af92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef6453c-4573-4472-a84d-bb107a84ec4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e352210-8c64-4d41-8285-dd8fed2598b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e782ca0-1804-4324-86c4-f21365f3319f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e26f0ec-5ffa-4d58-b7c6-02dc18534b4a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0912b4-02f7-4e0c-9df9-dd6a667b7a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0bc908-f603-45dc-83f0-484086e12781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5433f2ab-701e-4836-b546-d0b179c10424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e85ecda-4bf9-450d-b3f5-e639c44e4450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b564f1da-1ed5-47db-a2f0-7ded16cf059e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbc23b8-e4b1-4836-9593-8fb1d3069e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392e9752-7708-471f-987b-d96e4dff21e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d9e0f0-bbaa-4318-9cab-59d48b4f3d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4387c135-ddf5-4383-b228-fa0dfdcd48b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0645e92-cef2-4fcb-987d-35be4ef73aaa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6ecdcd-9eea-470b-a06f-83e7ca60737a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbda5ea-b069-4e9b-b6dd-acea194dcfb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85276301-0831-4ab5-a70d-a4f2f244833c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "663372be-75fa-445c-9454-9f7511cd70a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6587e9-c9ef-4531-8f0f-3a86bd8613b2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324eaaa9-90e6-4baf-8e2c-33aaeed8a532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59c240e-bf98-428b-bb97-9686bf7dd398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4203bea-319b-4c24-bbf7-e895e816b1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82909be5-0e10-4eab-9e2a-d4ce247a8fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89b8f8d-9ff5-4015-afa9-df558085d0d9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef300e4f-1bc7-423e-a10c-0ae0f5f92720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bc08e4-a0ba-4756-a675-2e373fc10cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e781c2e-e751-4d17-9913-336094f36119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b736280-9511-45ea-85bc-39542b944e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86dde780-fffd-4b71-8ea6-b90aa6b8af6a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449db973-b44e-4c09-962a-84136f97a62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952351c4-5a7e-4d27-a166-563624f8ea3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e80f87a-db1f-4b9f-96a1-2e4d297fe4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3173e363-00d6-4473-8967-5f828dd8a9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac014bc-3313-4a7b-9e8b-e744f1aada21",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46a321b-fb19-480e-91d2-cfbc32622968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e9a610-0622-4bac-ba7f-99b6137e89ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3b8277-ba8e-4642-96e6-40cbcdd3ae6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5633958-25c7-4283-862a-afda8cee697a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdd5430-7ae6-469d-9f0a-2a090f37ffbc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e486c5f2-ebb3-4b3a-bc7f-761f1e73d20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237e786a-e63b-4f83-8b33-86f26e7098ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958025b5-ff7d-4af3-ac8b-0b6efe04afcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04aa3ef7-a1d3-41d9-8462-da4a9ace761f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1283e0c-c1f2-4b0c-b4ff-0dea09471c9c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29d89ef-358d-4e31-a750-4a48ab124d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426716d2-5383-447d-9abd-72c26e01ea9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c03a42-878c-4a36-8d3b-07607dbf054c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92de9c57-c053-4217-94a0-f8ca1615214c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ad3711-d26b-4dde-bace-2aa4cefef65e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e46e14f-5ba2-41d9-af37-32c5bd902c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3978bf6e-66fe-4a43-9383-a5e5b88c89b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e762d1-6285-404e-bc82-b71112e9fbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f403b0f-96ae-40c2-be4c-ff2ed873c000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469977b3-733d-4d99-9048-dfbfa920db2e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bc0684-bea6-4ce1-8f7a-3dfc2b5f53fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eae7a28-9f98-4440-b173-1a27fd97c6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8daae93-4177-49bf-be75-e21ec17eb220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6f434b-ea8c-4f97-ad18-12e9c9aaab05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279dd12e-0f1e-46bb-b8c9-f0a91d56056a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e1f153-0a2e-497f-8d4a-45cebc9a5df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c83f05-8bde-4ccd-9576-632667d1aaad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d50ac0-c4d2-4f73-881b-83fc3e695b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a74b362-6b87-4d3b-87d0-0ffe5735c204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4382a2-151f-43d8-9382-c44c79a7ff18",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151e9c85-5625-4550-bc83-9bbd5dd3d804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d5f31a-21b2-472d-8bd6-8dc6c7929f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b35e4b-441c-464d-8cad-92d9601b4b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7999cc3c-32ec-4e0d-a1ec-3453f7650261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af6aeea-b76a-4851-965b-886924653a43",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0fd7ac-27d8-48f2-8b27-158cfe2075a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f1a8f0-f3d4-4d50-8f96-4fafbfbc13e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09da598c-445a-4ded-a167-6f8f9bc30577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e79fa4bb-b2ff-47e9-a6c3-53aed26f5ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c848f9e1-9d14-4de6-a6c9-89c8545d85df",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c84d55-32fa-4e52-bdb3-2a3c6a3250da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1faa6d-9c33-4b8b-8e54-a23d4063c65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca2fcf8-d4d0-47c1-8037-0a1ccf9145a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d83a2f7-130e-4a09-95be-0e69fbbbe4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aecd039d-276b-4460-b6ed-1f7832baf5ce",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987ee50e-c58f-40d6-91f3-3f0d335400a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a66fed-c622-4a30-989b-4b3e3f8e836d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4999d307-9a15-4876-b848-cc53cb62681c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6bb3d2c-e238-4a51-ae9e-ebf0b5ad032d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ca69c8-bb41-44a6-9735-1cc193f1994e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54cbdba-0406-4961-a5d7-055e6db2a1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aefe3f1-1961-4d6c-b162-b663871ab50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a681b9f-a227-4d33-b441-38b51e96f337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be01dec3-6614-4c2b-baca-5750873fed64"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6bf2fa1b-e42a-41f8-a04f-bb4cd18b699f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1146b91e-9084-4986-b5e1-3e8b9ff92dcb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60e20eb-a941-4f55-8dcc-8268d0225fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8edb61e3-aee5-4848-9144-f9b58bb91d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c61e6d-551c-4d1b-9153-a3882cba2ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2ef1b11-1498-4617-943e-fc31a189af52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2562a3cb-bfcc-4cf2-8b24-414cf3a85113",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666a455c-8b2b-4061-9abc-930083262cdd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "f161bb28-acdf-4052-ad9c-6fb50630e75e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce6cafd-a704-4916-8f92-28e402f6ee71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d29c1dc-914d-4d63-b086-6bc48483f305"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb8ecae0-64f4-4656-bcad-c105228f4450",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51fc756a-92e0-40c8-86d8-b930aba20307"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cf7ded7-f0df-4e84-92b9-1030881ab5d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "327dc68f-5ea4-41f6-9c2c-288365bbcdff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "761786d8-0b94-42d9-9e97-58e97d47479c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0acb0e09-92c8-4337-b288-f75c317e50aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ccb082d5-4133-451a-be10-be3fbd57d6a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "198b7ab5-38dc-4a8b-93a8-a30b341b7773"
            }
          }
        ]
      },
      {
        "id": "34275c1d-bb4f-4732-8a6d-b54dc6a96fb1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bb3db981-c385-4447-9634-9bbbb9b77864",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f52ffc44-318c-47d0-9325-7f7509feacd5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "83583ae0-0ce5-41e9-aa30-7e4ea73745df",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3d9177-4073-4e81-9972-58a5fea6413e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80869ab6-e1a9-49df-9e7d-1e25173d33d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe99d2fc-052a-42d7-9d71-5e7927b18d59",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc5c681-7831-413b-8ce8-ea38288f0961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a609230f-5790-4379-9716-db0963342ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3acaa9-6568-441d-abc9-db9008be454b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97480318-5964-4e84-b460-e7e54fb14900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498649dd-1eac-4ce9-8937-c42699e22d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77e3795-baf3-4d44-82d4-b2cb48924aef",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f915e0-5d52-4455-a66e-7ec501e0d600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c5118e-faa4-4449-9217-f67746394014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1a5f66-ccc1-42cb-9247-0afb96b441d5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f2782a-9f30-4d6e-80b8-a87c2aa284df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383fcdcf-3f41-4063-8790-5d045a465155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb98056-496a-434b-a849-93f3219e919d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae718e82-7739-4bd1-8176-5e8c959a07ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c06d95-4fa5-43da-bea6-511a74470e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af30dcb4-cd20-4236-8f3f-f1feaced4822",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c255f0c3-d61c-4d79-bbeb-790d3254df2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbda47d0-460a-443b-91b3-39816e0474ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a39c768-bc2d-43e6-be07-9d9f9f72f0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36217908-ab09-46a7-8bbd-25b8e6c0b996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e504ed-66c1-49d9-a49c-1fff89e66c8f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1576d74-a7b5-4da5-8df6-24a97c41a259",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "466f8b53-130d-4cf8-a2de-67571cd1bfa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557a7ff9-e8e1-4f5b-b49f-3f9e232a1a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e7a1c7-441b-4ba1-9c86-6db59666090e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff79a795-0afb-48a3-a715-b95e5c7c8e09",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093d2e89-4b8e-425c-8b67-da6f998ca0bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb3eb875-3bde-40b8-8d0d-287489a3ff0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bba767-c947-409b-bee4-08f2ff0c71fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d34cb92-9702-4793-8344-64b57b7b1a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a258e5d0-06dd-4a4b-9dce-7851b6e3dfed",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fb165c-1a94-4bba-8666-ebea1a3e69d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de044c59-fd8d-48d1-8fdb-bcddcd6b529e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "933b3270-8dd4-4c49-94aa-3d6cfc382e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05221dbf-a3b2-40d8-a0ac-3bdd74ce0c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90075d5-3fb7-4bf7-acbd-811a7a44966e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763edd38-1b5d-4e11-b6ce-92b84862c078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee33c090-2203-4712-a48e-e02e4ec82f0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb85998a-1a9f-48f7-a2b3-4a3391418e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89c3712-14a0-4ccb-810f-b0fb03ae93e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c5798f-bbaf-441d-b820-5f8bf44848c9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736493f7-e6dc-4a7d-80b2-d995cbd27213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde0b600-c14a-4c6f-991b-65c475dd55ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f618e08-7359-4dc1-a8b2-00054583097f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa705d6-3eac-4672-8c17-e03671733c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205eda0f-a4a9-4d33-8b78-198cd29b8a6a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05ecaa6-afd7-4186-952d-36d3d8635a05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b6a0ebb-684d-4308-ae1c-f736076708af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669b6bfd-5545-4fe3-b730-852959504e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f89f5a-5ea8-435b-acfa-347e7879e3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56f2397-0e5d-4880-ae84-08729b6b670a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e2172c-6ef7-470c-b41f-0ef7c6b90e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "581b4555-f4bd-43e0-87db-e1fb6d69b004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a8ffcdf-011f-4d8f-8ee5-76ece6838b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0bf0029-5b7a-411a-8fa1-2cc7a5ca76b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac27df34-008c-422d-a612-37887a61b1fe",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c21c0da-6eae-4c26-96fb-bf8a6c6eedd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31572709-0bf8-421c-8312-79f4786cb36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f141fcd5-5ece-456c-a5c8-fcf05e83eaf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45214b79-78f1-459c-bf16-6844cd8be70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0fcacf-81f5-457b-b9b2-1f5fc2ba3472",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9158279-dd91-4a26-9361-19589fbd4cca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "786d9c17-3d25-4ebb-a151-649cd1087683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950c2319-bd27-41ba-9e1f-dc04c94b68a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e8bd3b-235e-4906-be15-17d0adbab024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cfd6e9-c097-4735-aebe-010b7f053e20",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6598f8-a570-4b73-9e2c-8e76da1b1aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedb0bf9-f00c-423b-bc7a-c11e57246a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ce6ac2-6068-46e2-998a-30b4307ca814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76a1d52-c418-463f-8c9a-a0469c2203cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa75deb-52a4-4c51-8b57-9b76d122e900",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e31bc2-01de-4ae6-b859-7a71600995fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9131a23a-7b1b-4c7b-bf7d-30b5536a16a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9149859-6008-4c00-8823-979e60e8ec81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081538a9-644f-4415-b375-b802d5e50396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c30775-1901-40ad-8058-b0d78a87a754",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d727343-9255-45d6-8809-f289e2379fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88c6188-5180-4377-b02a-51d63de78276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f88c1f-4eeb-431a-a404-dc456252c32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826d76b0-6b65-4e07-90c2-972e8be85254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e2a461-3b18-4058-93c2-fef6a485e8f7",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d53f4a-d557-4549-aa2d-322d552566c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58dd5c0f-e839-4301-b2e2-e3e93a846cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b1cd2e-cf0c-404a-8ae6-2eafd7893c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36024f38-4daf-48b1-8e6e-32c3bbe60531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1fd275b-d6ae-402e-b1dd-096e0b229439",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938ed0a5-6ef6-464a-9bec-2336dfe25f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e0e10c-b43e-4f64-ac58-0ce8c4b8d705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b220c1c-436d-4e56-ae3a-31e1f51b66c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6713b3fb-74e5-4a2c-bcf3-fb980177301a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63830015-2d17-4f1e-9278-78b3b7978389",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10bd5e0-3a17-438e-9beb-3b4434b9d897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4442cbdc-a1a1-48a5-b780-2105ae1adc20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3f34d7-c5a2-4d87-a9d5-93823eb03cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81541ed0-24ca-4862-8495-62cd7bf0c355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773d7d9e-da43-4c14-95e1-af5729f85c29",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c08d57a-fa26-4ac0-9b67-da18ebeeb85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff44c47c-df64-4923-8fc7-82dc4fb2d97e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "543b8f76-d356-4367-bf14-860035bc743e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2bbffd7-954d-4dec-af47-43b62c7b246c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56147a0e-fd5e-4cb6-b4d8-b5985cdd4294",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5b6637-37ec-45c9-8421-a5a7bb494003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b2dd98-bfa0-4b77-b9fb-9f1368eb1b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747fbb82-3a2a-4138-bdbe-8a2440a1330e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28937d8-5c37-48f0-9d69-5deefc79e46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bc78ef-0d02-4409-8635-48a45c4b94ea",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e8a501-bc9a-40a7-ac97-7d763a8c4864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13cc3aad-8e08-48e1-8845-64c7eb447d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c97641-22d4-4aaf-85f7-5b2c23ed3991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb271854-4bed-45be-8fd3-9d751d658892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b307701-120e-45cc-85ac-bb9a0e9fabdd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2624b343-04c2-4ab9-b071-a9dac18507eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e87c7622-8477-4f25-9779-6039fd57375f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e69ef4-d4e2-4282-8ab4-8c317457f324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23fd4a12-245f-4f65-8d55-0267363485b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8caa58-ad92-48ec-a7c5-7c861490bfe7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693aaa28-1be9-49f2-8492-75f51de8a042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c40505f1-710a-4fa7-8b2c-d42ef1f25e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6bf6ea3-4ff2-4ab7-b5bc-2021beb966d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec634a7-1eee-48c8-a724-f04ee27666a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5e128d-ce50-4d17-adde-ce4e6fe3eaad",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce545dc-9f0c-4c1b-9e60-c0fd53ea38c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ca3f1a5-ec4f-4cbd-a6c4-53beb3714495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b276b98a-564e-4e2a-ab36-666e29c66603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27130ce3-92cd-410f-a8a8-ffa90b6e759d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3935b749-10be-4e67-8f71-177fc3f3713e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d349afb-5b89-4440-a4c0-a08b50fd797d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7999c9a3-c6c5-48ee-ba69-2ad464cbd2ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee194263-16dc-4081-9bf1-b28903a4b1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06cd10c8-6925-4d91-9550-a3e2d0cf9533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894da470-9dae-4933-8612-49ec868751af",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4397bf-3a4a-4977-87b0-0ac2f392601a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daae03a7-766f-447d-87ab-c2be38ebb808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e79a353-14a7-4811-b615-06b1c65e4971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87434023-1b13-4c70-acc6-e7e8db63c487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd82f08-6b0d-4cb0-9a40-e350c761a01c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698e5132-28ef-4cc5-a2e5-8c3592f7db55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f66cb5a-e48b-461d-be7a-b95d52240cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0300afea-43cf-4d63-a3a0-a5faacf836e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5e784e-bf77-4272-8bbc-d822f299521e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3907198-34a1-46e2-a64d-7fcd4531813c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c76eb7-3356-480f-baef-c0efab2c68ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f19d80c5-a01c-4ab8-864e-2485d17aa0a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5e06e6-a993-4cf8-b734-98a3de0759f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e650c08c-e84b-4a55-be19-55f1db3ad165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e709d31-5bd0-43ed-8de7-d9bbeeb24a57",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0250aef-feb0-407f-804a-92f03cbee438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed33985b-b60f-424d-9761-f9aeec5ab87e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faee4456-ac64-4687-8cdc-29025ccf7350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695609ae-6a0e-4f82-87cf-8c5a8c60d950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c270344-ead3-4085-8927-2f71d53dea60",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32326b89-e049-488c-af51-e837b87a2c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7d614c2-9772-4fd0-91a6-fff55cd876eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a57e4bd-45f1-4af4-9c8f-ea3b260bf3ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8b2ff8-2416-443c-986c-e58b7647eb28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ced120-4720-4fbb-ac15-b48fe1691a29",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295ad730-ffb2-4172-b386-f12a8bea631c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8ec7b6e-82fa-4273-a4e4-006296d79304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30393144-13f1-41fb-8282-c4070eaf3ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7dec794-10aa-43e8-b462-06848dbf7146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d5e847-5410-45d2-b2f1-2c53e619dc2b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eedd9a6-04be-4a97-b9f2-bab2c8ab85a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782d8d69-21f3-4aa2-836c-4545e6a00ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2124ef6c-608d-4ed4-9267-ddfec52a13d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c09b09a-1745-4549-b8b7-e4101b86bdda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2deaef6-23f4-4f15-8734-7bbb101a24d3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8526d63d-49c7-443c-b3e1-72e6cbb412ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3159d595-d6fe-4e00-883c-6ed39f89d831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc2f8dd-fe7e-41ed-96a0-70e8d6d882b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160cddba-a418-4300-a8b1-4fcd98e6b72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e636aee7-edb9-46ca-88d9-c54c5dc80d14",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd385ed1-2579-44f5-82b5-cf72cfc06c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc2e88a-d4d1-49b8-9038-8d00b596ec3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9248b3-49ae-41da-9e58-120f5105d20e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1eb598-7f8c-4879-aa46-8c641908e5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7c5c20-56d4-4b49-b09a-ec9ebd96e98b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ad3973-e503-48b0-a53c-ec24c6880357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e5937f-dc81-4f66-8496-49fe2bc4c1f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e1a950-156b-41a1-ab5f-ca394c41d83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d0baaf-5f58-458b-9077-a55d911f7565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc9ebb9-bc3f-40cf-8c5a-b3e304469ea6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ef9553-6684-4458-b8c6-fe4a02512b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f614e18e-aa8d-4441-a714-cfd4c96137ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f599738-17c8-4e56-a6f7-b604fadfda0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ebbfe6-1ed7-473a-b0d3-6cba6cbec96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e592c7-487e-4156-9eb5-039f7293e555",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c4e9ed-72d5-4b0b-8ead-e90a0e6c90a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e64dbf2-adc9-4fa1-971e-f49070c6edb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bfef95-6f4c-46cd-abfe-535a52bc6d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae94a5b-f830-43e4-a925-bd47e2e58f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30951de-0062-401e-919d-cc763d1a2d9d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135b177e-949e-4296-af2e-c29ceb34bbb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b0b24b-a075-4f93-8e69-30623b0d6029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfedff3-4f74-4e7b-ad34-ef9291c9cd66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928264fe-8988-44fd-b2a5-4b9dd07af9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e90cd1-eed9-4ffc-aeca-79754f8b3fd8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a14224-31b9-4105-95c6-65e387d51a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb1d0b9-b100-46f2-8705-551eaac4b5f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2ac02d-741e-4c23-961b-0d7b953a5cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4222e05-faba-4d29-b1a4-ead4e8331dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12393818-65ca-414d-9262-3ba889bb6c06",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e98a35-f50b-4c61-b778-9e55a52d4adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b37e735-74a9-44fb-bc48-85fb03533633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d94449e-2c9e-45c8-bc62-39d6ba574b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d870540a-265f-41ef-aa48-b68cdea3747c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f44ba2-eb6c-477f-9655-656cadd70343",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71155e39-6fdc-4e91-96ca-a82f0275693c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a009100-a47e-4ef9-8277-860cd6578a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb4825a-ada5-431f-b890-22a108b863c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4218d2fb-332f-4987-97c9-ca747a875ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4937872-3219-4a47-9413-c3503e3efb2d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dcc74c-f1b6-4fcc-a1d7-2f49960e3d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62bb5632-ef52-43a6-b9a4-8a74b1cd3c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0fd3bb-61ca-4f96-be96-ec5267db5da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8e33ea-335b-441e-aa15-9cf6ed3308dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84880dc-af5f-4bb6-88c4-c809aafe17c1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7b399d-8cb2-4dee-95e9-0f70ddba057d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbcd1609-6520-4f9e-be0f-84c349ea1aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abc299b-685f-4b95-b8cb-6641cf9010f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ad5453-20b8-473f-a437-32c980e1ab46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df330e32-7ac5-480d-ba6c-f33877d5e7df",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe4df14-1d1b-4c0b-b411-ea1d9788febb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f490881d-ac32-4142-ba6b-1f5a87e0b7c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3061b166-dbce-4d7e-9896-4ce9644a5f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "304d5a89-5112-4fc4-ae49-e95f3ccb87a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd6ae2a-3918-4eba-aac4-9afdd6c09152",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f35723b-3fa9-43f7-ac13-8ec53d641f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38cf0cb-f491-4ddf-bd54-a73ccf6df88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0878550e-78be-4ae4-b3df-3651641fef3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3769451b-c362-4dae-9ec4-e8e2f3ccb44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efe3569-9c58-42ec-8b67-ca6301733349",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a658b32-620b-458e-b14d-900e377ff962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b99108-3fa0-4233-bb55-4611310b416b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89df5880-e60d-4792-b27f-af8a122d9f6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3fa4b9e-7234-4529-b7ce-603322ece944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23162d37-6ffb-4066-889b-f573517c69d3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e6a723-be6a-4a21-aa91-e7018085be39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0701661c-cca1-4420-8f0c-71952a5690eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf671c4-f5c7-4663-8191-a22ee5405e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585bb5e9-14b7-4eb4-9e0b-77987125b3ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c41adae-b11f-4d37-ae26-dc8f795180cd",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ded8e9-f5fb-408e-9602-72f4f62388bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678312b9-be1f-4d14-a6aa-0f13c8587742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb0d282-064a-4763-ba65-6603b61cbf38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eddc7b7b-6192-4765-8156-e314dfab7d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a6ae71-f40d-4e53-8b2c-dea9aeb0d340",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadf67de-4d49-4470-97aa-b9ec89d83dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34992d5c-ddd6-4c64-a792-0ac1cfb8edeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1055d7fd-249b-4a5b-8a37-e9dede6f488f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7949ebb-5b2e-4497-b0ef-701954935082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b93f980-56ba-49c3-a135-71f93c9b59d6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d7e6d6-0312-478f-98bf-632893fc8da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b8f4b2-fa38-4f8d-b8bb-d0416f3c130a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8756427-039b-45cc-9920-61dd5ee19f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2b3db20-ec7d-4a01-888b-53e35be793ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ffe572-400e-4cb7-afe1-3114aed18c21",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d872b53f-80d6-4074-a19f-c7c1f8f6c58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f0bb96-0dfb-4dd5-9625-4127e7e21889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4f60e9-f1c3-4268-af09-ec2c7122f479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a24779a-e3fc-4cad-9c32-1e8cafc96f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d375bfb9-040c-4a98-97ee-472200b8579d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56294a2-cea9-43cb-bc3e-2e30ed767a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fcb8ab2-87ff-4629-8b07-8dd995598a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7909a3b3-0a3f-4f88-83d7-db87aa4b142b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce91e14-3324-4982-a23b-1220156d5746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d18a62f-b053-45a7-b2c1-b90b7e8df084",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a05b236-0fb9-4f6a-bcb8-78060793499b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5969b99-01c5-4a9f-9ba2-e68eb2b16f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c6a04a-24e5-4999-a6a5-b0450b020726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349794e1-65d0-4184-9ca3-c9e952835147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead4db94-5041-45c2-ad30-401d2cbeb81f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09a8f41-27bc-4b4b-ae08-3c14fb13ca1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6969c1-51db-4242-b712-ad44105c7e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888c7b28-dfaf-468b-afa2-81be4a58ea0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e629a43-b825-430c-8faf-2bf39b305941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d664d1-07db-4d0d-84e0-bb641ca856d0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e90b5aa-67ad-4eb2-a52c-cf08f7d18e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75508d0b-c879-4575-a660-3a44c5f9c77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeef8988-4128-4bf3-b23b-7ac87d0526c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c105f3-b1b5-4f67-aec2-e225ae30524a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dae6295-8b76-4c5c-b2b6-9bdbc5bf9802",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d91a62-d5a8-45e6-9d52-318b10746f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176423e0-039f-40c2-b2ae-0bc4ffd52f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5733fdfb-60ed-45d2-b56c-a6976f94541a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a717e0a-146b-4700-8084-faefab5d6b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148eed3c-89d7-4cca-989f-833c3e47f805",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1151da-d54d-4212-b547-4c8b97448c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f2309c-d2d1-45c0-b9dc-399ea807dfd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af9e89b-4600-46fa-8997-0995fe13892b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1775a3ab-a32c-4e0d-83c0-c0dff4f3dbe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b667449f-9a0a-4be7-aaa0-a7274756d7ef",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3358cf29-01b3-40c9-a925-06e326483817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e251701-9338-4cb5-a914-5cf0a6d132b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c78fb4-fcd6-499c-a334-d237e467169e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee19bdeb-8bc2-4705-8677-2a6e8ee55e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144cffbe-b544-42db-b3f9-d16caa904f11",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c188f460-c419-412a-afb0-efd9db445054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e583bc-dc6b-49fd-9e52-be8557671dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8ab91b-6bc4-4ff1-9d0e-c133dbd6181f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0140c1-bb20-446d-aaa8-26eb486b047b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc8d9f7-33c4-4ac0-8b38-1c5e4c71d0c4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d344b796-f10e-4713-9b89-3bd9c2930c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "346d7f45-b1d5-4fef-b23a-560915cf55e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a7adda-00aa-4aa4-90a4-9209ad225c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a596bd5-ecac-4a2c-b5e1-b6dc6e6e535d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e00933-4e71-4703-87ac-f232577ca475",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8e4629-152e-495f-8027-9e37d3f794dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77419dc4-168b-4fcf-88eb-d6e59c427bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bfeb34-3665-4893-a04f-a5ac4654b1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d80c66-530c-4234-9cc0-defeb3094a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a782ffb-70f6-45f7-b565-61d6072b13a0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c5b0b1-19a5-4f69-bc27-73b9372dffa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6048fa3a-f93c-4cb0-8ca5-6d95932e4cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8ba801-9dcf-4b74-9880-2b66facbfec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27905d10-6fb3-4482-ab4f-52aafbe7e623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ae5800-4eb1-4bb9-8a00-d5ba5bd229f1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f02072-d955-4c31-9d51-9f807923761f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1280b432-20b7-48c0-8015-a27dec39d892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76dca8b-41e4-4dab-a7ba-7a288e42bac2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28842fca-6276-48bf-aae6-8129b3a29830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aaa11b7-11ba-4ec9-a352-23b5753b196d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5c6f58-9b0c-47d5-a34c-a2cf2bb37155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aedbc8f9-d773-462c-b5b8-91e9642401fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d770b74-da4f-4681-9149-f1bed614314a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1b85ca-30a1-4331-8f78-54a6fd6828b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2daa9faf-169d-46fc-a07c-4a8d239d7e62",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2651dad9-ccc1-4869-b65f-c773885ed616",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01336814-6609-4ae4-8e12-3a216c3ed3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2be5f02-4a8e-4faa-8630-d341c069f37a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b667526-4aae-4da7-b5c0-dceeca3641e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790ab265-83a3-4ed4-b9d0-56e816feee91",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850c205c-972b-4019-9248-73e8d3afa9d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd18d1e3-44f7-4e52-befd-e480bb55254e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6710a59e-e39b-4663-a00b-5ba66486e6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e512a3e-4aac-4cac-b975-f4b513544e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f9dfee-7817-438f-a343-7dd05ea4cf40",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59871bb9-148f-474f-bfa3-0731b4a4660f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d58c005-0241-4c56-93fe-b63f13117dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c28ba7-ad13-4beb-bb37-c157c801e3fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a461db-ead9-4cfd-81f5-e4eb194070d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955f1a69-db93-4580-8a1b-9bc354c39315",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9736b75-38db-46ea-9134-5b36bda7bcca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b70ede8-8104-47ac-9e73-ba3f2385c1bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd97810-6f4f-475e-b687-96f47bfe99c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0a955c-8214-419b-9a94-220b484e9080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4c57c8-c483-4fe1-8fbc-cc7cabaeb6e7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a1ab4c-6f17-4625-a9db-398a27feb848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95655c0b-6c76-41c6-897b-79b408e4b1cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5d75a5-1c42-4c29-8640-c1f9707e0176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6593afba-9967-4119-80b8-7682ad7cd165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23b2938-c7dc-42df-bf04-d7e4ddc04b4b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e36466f-8560-4160-800b-80f8ce26103d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7faf2c0-2e09-48f0-976e-506414d9595b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe78984-ee5f-446a-8cc2-a9e4bc553a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7263ae-c088-483f-b9ed-a93f8ad084b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6aadd87-e3e7-43c8-917f-0b1d81ea8493",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ebf6f1-dea5-4bc9-abb2-fb54afb7f8f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd6ed3fb-b516-4955-b85a-4ed13b9b7163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4a6455-828e-4b4c-bb88-ff13c6ef07e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "882957df-d69f-4666-b8fb-965674e201a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe0417b-71e0-4444-8fe3-c37779013bbe",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37925649-704f-497b-906f-8f8f2fcbab2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d8d53d2-34b7-44fd-9893-f55ca461c3b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4d814d-7e4e-407c-ab85-06b2631689ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004e4981-5e57-4ba0-872a-e46544c59ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b08c7d-f12b-468c-ab83-1f21bda6ed7a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6e0048-747a-4176-b954-85d4a97049a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1309983-148b-4512-8371-348749592fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a1fbcc-4cf0-4ad3-857d-3a840939b949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64942e4-2e42-4e9a-b43f-4333bb62eba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4fdd12-6857-4925-a3c1-4fc1090a542b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769b05ba-302a-4904-8f2d-8dfe94f84679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "844152b9-5764-4536-a52e-47ccfa8a413b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c62fa03-73c2-40bc-b6fd-0d976f45ff73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0a681b-d83f-4167-9e45-4d612a297e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffaa406-46e7-4fd7-9438-ac190a14d9b2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d90d3f-0fc5-4a91-908a-84f258586bef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24e351d4-da59-4037-b8f4-ba6cf91e5d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa4b8dc-577a-4067-a648-96f0a602424a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5519bc8d-ee5a-4d4c-b5b6-3ea88083b170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e13ae75-ac06-462f-85c9-a34eae66f84e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bfb171-54cc-422c-ad6b-1d4d13f8d68e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e76f5ed6-b29a-4ff6-a8d9-00b7ed033073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b61b6d-34ca-4422-b2b1-2121fbec3cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28340284-c6a9-4026-8771-95ec069a95f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a6b82a-c69b-414a-bfc0-ede906de7266",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6a95ec-a12c-4580-b2a4-d0d9a1b9deb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c95aa818-827c-4cec-8c4d-334813251cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93ad218-fbec-402e-b0cb-a6a9530587d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b1302b-bad7-4627-a95a-da8e573f504d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9036b953-fa34-4ff0-b074-aed8242dc568",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58bcb3b-8a5f-4727-8f30-f12cfb034ce0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd1e2528-5607-43df-8eaf-0caf28a4e85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b80e78-b342-4504-ace4-ea8724a1d286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4f8194-792a-40b5-af7f-dd6b99a80f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225429fe-e0ec-4719-9089-0d4ec9c4a893",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d51219-8619-4c5e-a182-a0cd18250b1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd24df9d-db72-4c29-88b5-dc4157791d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb04562-59d3-4796-b593-599e262f9f57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b1e2a4b-af3f-4c26-89ac-54e5c5cf0e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa1ac9e-9b6e-4847-945f-146bad721b29",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535af49c-c6f6-4390-8156-acf43ec6e037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ed7570e-2442-478d-884d-70e22c813d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2047a531-73ff-408a-b03e-33da369a8a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a197472-3fb7-498d-b846-546ef2bd7851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e884dd-42b2-422d-83d1-cdfe4e16bc3a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82df0628-8980-46da-bd36-1be42c796e3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e880471-a8a5-466a-8c80-4f5e613112cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7410a31-c77d-4697-a10d-f90b299420ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa405e0-9b3f-4d46-ac7a-b860496c0b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c99601-cfa2-40cb-a9c0-30c77d566f67",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b615f72-714c-4f25-bb12-fc88e378857d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51151b9e-6180-4b00-830e-387911e10440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61d0c2e-d4d2-479f-ac65-0922d8b0ea23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28440599-37ff-445f-9973-eeb511ce4e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33cd61a5-a798-478a-937b-1e79abb947f5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34a63f9-db55-45e1-8da4-95eee06a58a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13fb03bc-b28d-44f9-87c3-235c76aaaa5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd75a1c-f223-4a57-a02c-c86fe0209256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c2f397-2160-4602-b37d-6b573052e732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eba9bf7-1f51-4a66-90d3-d6c91800a0d6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e42907-670d-4e1e-91f5-4e42adfed213",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bff00fa-bb26-4ebd-8f5c-89ca281257c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04099683-2ada-469f-bafc-a89147ec27a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b947ac8-69c0-4bcf-a883-47fc469a1b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0990053-22f6-48b3-8655-97da9557eb94",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af05b54e-fd88-423e-bbb2-9d4d1dc6a74f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df944d5e-15a0-4205-a9b0-54ced12a161e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11af2dfb-1fa2-4b1a-aac4-fa2f699fe11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3a2f88-f4f8-4e5c-8f07-7abdbf03281a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cc97e3-ad5e-44e7-8b66-15e073df33b9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892688af-b712-4557-80d4-4f9b491ee187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e4f4bd8-9194-49eb-b01b-ba2f9d41b562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9475a9-4bd2-4489-86bf-a2d22fbd15dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9a1bb2-d85b-4b75-8ba8-59539fbdbe53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be3d3ff-ab35-45cb-9395-d47178403ffe",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eff13b5-8d5f-4616-b3a5-77ac4fbc6708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50af00ed-ab5d-41e2-8c6a-c30c792bb732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c53f79e-0e24-4035-9e78-d347154a5f4a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514d0dbd-9303-4db6-8ae7-639f75ca2182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e51d6c7-37ac-4297-ae83-15138fc0eaaf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a326d2-1946-4943-a1c2-2356bc7ffa99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8c10e72-2788-4a8e-8a09-20fe107a75bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe0d0c4-90c2-4021-974c-b804b0ad04e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a2263b-55e5-49f2-9f6b-0e1a63edca53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b886997-93b7-44a8-8420-b29336c87493",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25588166-b5a7-4c0b-8cbe-ea147021bc60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d668286-cb80-4060-8ddc-55cca20fd051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d58f387-d7eb-46b9-8edb-eca5938b7910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2086437-338f-498e-908f-6e7dba1ef401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9ab826-f526-47ff-9d68-c46ed29a0f20",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519355aa-c24a-4abf-93e1-ab88fd12c789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b0dc222-f7a0-47c9-a022-0dd80647609d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4103240c-3899-49d4-aaa4-d65a1cb0cf49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b87ca3f-1d8c-469c-9b89-f2b9987e6ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3129948-3dbd-41ac-af73-e419e1fed244",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309a928f-0e5d-4f1e-8226-52afd27abc25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e2357cd-577e-4729-b2da-419ec7cb964d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01e0268-87be-45b9-8032-5ce6dced571b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023d16dc-c554-40ed-a5ea-84f2f08f0f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18ce5bf-063f-4ad1-b29f-55f88fe6f716",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f76f60-14f1-4a2f-8c1f-1667575f80a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae99e59-318a-4a53-99d3-631086020a28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56b6db0-eb75-4778-8557-daf21a5c7dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d5bfc4-994d-4380-a3df-cfdbe0308a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c2d8c5-248a-4d29-8b3e-45e35de2d0c1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82132fd-0dac-487e-a0b4-6264b151743f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37bc4492-15d5-48a7-90fe-8a557a032d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc97f89e-988d-474b-b88c-17331184cdec",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4ee302-2ef8-4b9c-b125-f83f3deb0fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3b82ca-1068-471e-95be-c36559bde1c9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c571fb1a-0658-4add-b775-a8b5994adb52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d91a896-0014-4c48-9d22-916024eac823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0eb303-53da-4e7c-a2cc-51e01998977d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9cc75c7-f416-4f35-92da-f7ea7f448002"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9ccbef7-72a8-4f89-9465-09a755c21638",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de6605bc-199b-47ac-805b-a1563f978535"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1df72a84-4d53-4789-8912-d34fd9d5895f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ffe0dc07-4640-4505-a648-87cc81d0f9d9"
                    }
                  }
                ]
              },
              {
                "id": "95f37b0e-dfcb-4a8a-8ae5-42aa672f336c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc73dfe5-10b5-4c17-9737-067ab5b5142a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e74f7a6-8c85-4c2e-975d-667e66d9a9c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "75c7c840-03f0-4e31-8097-3b913d8f8831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9662becf-94b7-43d3-b8ce-9b33403888e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d1ed92b-6caa-48ef-9708-19b7294fbaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e3c538-f4b5-4e7a-9f30-bf2056dcf101",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6081137f-52e0-4a34-abd8-7abb0f81dd07",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "012cf8b2-2a16-40a2-b692-21662763d1c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0509ac34-d9b0-419c-a627-fcda4e8115b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ccae401-8631-4149-978e-468c9b809f29"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afbb6d53-6060-488f-aed4-387e7a5b1988",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b66fe4a-bc0e-4bc2-9369-630f93d2cf69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38c510c1-7e3a-4d46-94e6-bfa73c6ddeb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "743bb9d6-9965-4bba-9fc2-ca3737bb513c"
                    }
                  }
                ]
              },
              {
                "id": "0597f59b-a787-4470-a88f-f838520baa17",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "95cc8cf6-b6c4-4b2b-b942-6c460ef99116",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dd62ae-1f9d-491b-a2eb-760b8df4753f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "eb8f71de-5e48-4c4c-bd7c-81f2948bdfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710a6dac-9ad0-44af-9669-5692e2545744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6bc4f4-b645-472b-a64f-33364f8eee85"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fa61f219-a103-41cd-9d5a-5143a816cf43",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0d353703-6de1-4a94-afd2-70992969cc41",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a9157b2-729c-449a-b47a-8e4670b05506",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "93ed78a3-5087-4288-9029-a57718b37427"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0f2edf2-516f-483f-9206-a21fc375fbec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa4e9289-514b-4cdb-8a20-f609cd8f6679"
                    }
                  }
                ]
              },
              {
                "id": "e062af29-920d-4d06-bdc4-1b5347fe1415",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ba93e14-032e-4235-8370-204265b638d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6734c843-847b-4a6a-8dc4-2f0a4785a2f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39ac5961-d7f1-40d5-9eb5-29015fc22348",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93fbbf6d-cb2f-4524-97cf-7a1ec2b5ecec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "507a59ca-e559-4d5d-a8ae-dfdfe1516e09",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e867feba-f402-4169-b33d-6f835fb47772"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34448b57-970a-4804-b23b-e969600f0e37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54c24e68-d4ca-409c-90b6-d82974cf5082"
            }
          }
        ]
      },
      {
        "id": "e58a1136-600a-4cc4-9862-ee296ac9bef4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6b7f38a7-9e5e-40c5-85ba-7ce5f4fb9c7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7abf3d9-51a1-46ac-98d7-a8e8c0e659c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b262b22-04b4-49d2-b1a6-1887453416a3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e390f65e-5553-441d-9f72-d399ac5d5445",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "15b3f7f7-51e0-44f7-8814-6b7378fcfadb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "560f70f1-d977-43a6-9bc8-1ce9f202add3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4418ae1-3662-4dde-9540-7cb732f9e889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7cee60-ef96-42af-b7dc-5067712c3a75",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c1df02-a24e-466c-a6f5-047db9327bdf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fe3925f8-7eb8-4f88-ac74-759a6e1e23e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4084e931-8330-490a-88c6-140bb2999c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a51a89be-0582-49d4-85cc-46f8e3f3d86f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e315038f-cad0-4a95-8a44-9a0447b964c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7863f37-7245-43f5-9763-7550fcddcf1e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ede384f-2884-4216-ab8d-2516889c6e29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a146a4d-2129-49b2-9630-e67153a6b2c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c52e7a7-b5d6-4634-96b9-73e7d119a6f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "aa0b29ff-e71d-44cd-bae4-c16bb3753990"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81bd4051-e650-422a-bc6a-8ca09a22fb51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f30289ce-e9b1-4eac-af35-ff98aaa77c1d"
            }
          }
        ]
      },
      {
        "id": "e4094d0d-74f0-4dbc-8caa-b92e9a7f467b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1622f3c2-e406-4f7a-af7e-a102f3275ed1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da087323-7225-4f03-9d5f-9e1297cefc3e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98df983d-7854-40d0-96dd-e7e4554accdc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6dd01c-1815-4409-8ebb-4ec3d1fa427a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c18937a0-e019-4acd-a670-5c74265a88bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f6f7ae-e229-4a9e-b623-d766d69dd7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2373b3a-4939-4860-a51a-2b576712eeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd467ab-f89a-4f98-8df9-25a03ee64d74",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b988fd0-4f57-4a7d-aa48-075fa1afed0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9bdf00cf-a336-43f8-a80c-09df56bff835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737bfd49-836d-4eb1-85a2-3895b33e87cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7630e76-a1e3-40ab-99ca-9600144c1e26"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b20048e-768c-426a-98b3-edba0b2a82b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b5e363a-bed1-46db-8733-5d238e259180"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "751d440d-0a2e-4fe9-88d7-8bff5091df01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fbfe51e-1d9a-4b50-9dbb-706fd279b2d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7113318-0a6f-41a7-94d3-33ec20e2e5b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b2213588-be68-4de7-b902-fd823e2adb90"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58348824-177e-4f22-a6cc-2ec4aa7b0466",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6302228f-059f-4285-9a1f-cdcdd813900d"
            }
          }
        ]
      },
      {
        "id": "0cdfd19f-cefa-41a9-a618-cddee8185418",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "93878e3f-d180-47c7-b8f3-ada4720b3124",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8459563-5ffa-4033-a0ad-64195f6a1247",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c0027cc-80ca-4f42-9812-64c7f89fcb36",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a9ec3f-33b6-4262-9b34-a65a0fe56e2f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3a9c0685-c9f3-4466-b10d-3c352faacd20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424022ed-4d76-42e1-b329-2975e5604779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74cb3867-1f3f-41e5-a697-ada45c6ca372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea242eb9-54fb-429b-8ce0-3b243dd44d6e",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f03b33-7c23-4b92-8a59-8bdd71ae4175",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d757f9b7-0f86-420a-b02b-524936746b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1f36bd-b620-4e31-8587-eb9e11c9b622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0da2aa79-5038-4d6a-90fb-263a3dc9ccd5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9ace2d9-58e5-4c03-a531-71d23a1f9062",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09e2d8f3-b19a-48d9-8e2e-0c409e37c638"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad3c8edf-73e6-439d-ab5a-7fec5ae6dd24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "902c336f-6d4a-49b9-b107-ed0f46820564"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "707cb9e3-d0d6-43a2-9a5a-7c4b445b149f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8f25e682-d2b4-47de-97f6-8e263ec4e8ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e29f0d4-1a15-4134-bea4-d5ca7fc42dce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a282d47-2139-464d-9b14-575992dadd3c"
            }
          }
        ]
      },
      {
        "id": "850d9837-2c41-4cc4-b57d-e82dd758f3d2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "284a848d-a1b7-49cf-96e7-084c0b492d14",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce769b21-dd6f-4712-8772-9ee3ca633af7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e9bd5f81-7cda-45a3-bc0a-f7863b63c8e8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c4c253a-25d1-4d1a-8e67-39c5091f22d9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d721ca78-ecff-406a-8cda-9bb46e2ba66d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 28
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 624.6450381679389,
      "responseMin": 21,
      "responseMax": 5146,
      "responseSd": 677.0667821103112,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1675903178975,
      "completed": 1675903353146
    },
    "executions": [
      {
        "id": "c4bf9a1a-56af-4dd2-b277-b802b575c686",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5c23286d-a732-4dd9-b364-7501ebfe5e27",
          "httpRequestId": "2d867d9b-0e1b-4834-8438-cfb28dcae183"
        },
        "item": {
          "id": "c4bf9a1a-56af-4dd2-b277-b802b575c686",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ae82fd77-1658-40c3-ad44-f260f2c65008",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 0
        }
      },
      {
        "id": "ee129e40-b6ce-4ee7-922d-b14f6ce84728",
        "cursor": {
          "ref": "f95972eb-a939-4387-9ee9-56e2b23ddb73",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aa2fac76-9a1b-45af-9273-9fa165ca2065"
        },
        "item": {
          "id": "ee129e40-b6ce-4ee7-922d-b14f6ce84728",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b3c885d8-864f-41e0-ba36-32dba76437a2",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "0387c5ab-6e30-4ce9-ad6c-1f085b1d3757",
        "cursor": {
          "ref": "3dc74802-87c8-40cd-aeaa-a347b4cfc9b5",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "27413806-c6d9-4c62-b708-c51b08f1c12f"
        },
        "item": {
          "id": "0387c5ab-6e30-4ce9-ad6c-1f085b1d3757",
          "name": "did_json"
        },
        "response": {
          "id": "f1ffbe94-46fc-43f2-8639-85b18f205340",
          "status": "OK",
          "code": 200,
          "responseTime": 1418,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a70500d-af32-4303-9e64-906c4f555d8c",
        "cursor": {
          "ref": "7d06c136-0099-4d88-9ee0-adab653a8349",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "32ee9026-3e3e-468d-a8be-7bad0662606a"
        },
        "item": {
          "id": "4a70500d-af32-4303-9e64-906c4f555d8c",
          "name": "did:invalid"
        },
        "response": {
          "id": "2af7ec0c-f5b4-4d85-a3b8-57ac71863b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 953,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a70500d-af32-4303-9e64-906c4f555d8c",
        "cursor": {
          "ref": "7d06c136-0099-4d88-9ee0-adab653a8349",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "32ee9026-3e3e-468d-a8be-7bad0662606a"
        },
        "item": {
          "id": "4a70500d-af32-4303-9e64-906c4f555d8c",
          "name": "did:invalid"
        },
        "response": {
          "id": "2af7ec0c-f5b4-4d85-a3b8-57ac71863b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 953,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331e733a-8732-420e-95cc-bf754f225016",
        "cursor": {
          "ref": "602ec31d-da3d-437f-b2b4-0076678cf6cd",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6c381e13-28e3-40c5-8e38-195fed5d7eb1"
        },
        "item": {
          "id": "331e733a-8732-420e-95cc-bf754f225016",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2a94e185-cbe2-4c31-a328-df86da0ac71a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 632,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63dacee-0569-4878-957b-2390193aa24d",
        "cursor": {
          "ref": "938a1320-8d3f-412a-98e5-64acd6170f2c",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d3f32fc5-232d-48fc-aada-9dcbf913784c"
        },
        "item": {
          "id": "c63dacee-0569-4878-957b-2390193aa24d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2cb8989a-d946-476d-b730-f0ee7001268c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 785,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d485428b-79b4-4d0f-8909-f803332a9494",
        "cursor": {
          "ref": "baa98575-d274-4fc7-8aaf-b67930435780",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9453377f-a7e7-44df-a6c7-6905b777de86"
        },
        "item": {
          "id": "d485428b-79b4-4d0f-8909-f803332a9494",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ad18297c-61ce-4376-b3f1-e078c5e147f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63b887e-458b-49e7-a70f-b57384cd7801",
        "cursor": {
          "ref": "575ff01a-2bc8-425f-8667-c5bdee449ff5",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "72591bd7-c9ab-4f70-a9be-275a46d63155"
        },
        "item": {
          "id": "d63b887e-458b-49e7-a70f-b57384cd7801",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "cefbdee0-d3db-44ba-bada-0181ded6bed2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 613,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63b887e-458b-49e7-a70f-b57384cd7801",
        "cursor": {
          "ref": "575ff01a-2bc8-425f-8667-c5bdee449ff5",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "72591bd7-c9ab-4f70-a9be-275a46d63155"
        },
        "item": {
          "id": "d63b887e-458b-49e7-a70f-b57384cd7801",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "cefbdee0-d3db-44ba-bada-0181ded6bed2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 613,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ca3730-52d6-4c16-ae39-ea521ed49d2c",
        "cursor": {
          "ref": "4e8d6b6c-732a-48fc-8ba2-ea6487394207",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "da5d3a1c-7169-430b-b0f5-af9434ba7449"
        },
        "item": {
          "id": "19ca3730-52d6-4c16-ae39-ea521ed49d2c",
          "name": "identifiers"
        },
        "response": {
          "id": "586ff83c-b284-40f5-9dee-e0753b48d8a2",
          "status": "OK",
          "code": 200,
          "responseTime": 1128,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10407124-37a8-4bad-9ac4-3832d99d34c6",
        "cursor": {
          "ref": "dd4abd61-e861-4964-8537-4df6463cbc58",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "023fcd5b-cf9a-4b81-ba0d-46987a0c064c"
        },
        "item": {
          "id": "10407124-37a8-4bad-9ac4-3832d99d34c6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "50610231-6606-4dc1-9a70-8388f1766c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10407124-37a8-4bad-9ac4-3832d99d34c6",
        "cursor": {
          "ref": "dd4abd61-e861-4964-8537-4df6463cbc58",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "023fcd5b-cf9a-4b81-ba0d-46987a0c064c"
        },
        "item": {
          "id": "10407124-37a8-4bad-9ac4-3832d99d34c6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "50610231-6606-4dc1-9a70-8388f1766c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e09f3b-b2df-40e0-8293-70ff224be443",
        "cursor": {
          "ref": "2f84fe9d-1120-4772-92f9-153fd6a8a09f",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cfbdbb95-9b58-4ce8-a448-0e81f2113e5c"
        },
        "item": {
          "id": "93e09f3b-b2df-40e0-8293-70ff224be443",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "565f2598-0c45-42c7-aa59-6dced699332b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6580a711-7492-4cd0-b827-83a7c3f927f1",
        "cursor": {
          "ref": "70c68fde-3ae5-4eab-b9b5-47a0f72658ad",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c66c711c-f2e2-4e3c-933c-d2dec6d21edf"
        },
        "item": {
          "id": "6580a711-7492-4cd0-b827-83a7c3f927f1",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "e6c8219f-3991-4617-a329-d47b5fc57587",
          "status": "Created",
          "code": 201,
          "responseTime": 2467,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "e1a61959-4cc6-4658-ac54-4b7936d14d6d",
        "cursor": {
          "ref": "ca962b9f-7c23-497e-8cc3-467f7e67d7f4",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "21ca2063-7d2a-49da-b426-d07bb3b68560"
        },
        "item": {
          "id": "e1a61959-4cc6-4658-ac54-4b7936d14d6d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c8c2802a-81ee-417a-95a6-e0573b1c7b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b084173-4502-43f3-b6fe-1b03e026bc00",
        "cursor": {
          "ref": "6d885827-8e58-4985-9bf8-eaf88688858f",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "342e23c8-5517-4818-9778-fbcd9d5b4573"
        },
        "item": {
          "id": "4b084173-4502-43f3-b6fe-1b03e026bc00",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d2ecf288-4578-4eff-9afb-2fde0fcbb848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1114
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889e7d2a-c18d-4e1f-acde-94a4aefa2e45",
        "cursor": {
          "ref": "db94ea84-9ea1-4bf0-acf3-734460a023f9",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0ce26130-e13d-47c9-bff0-329f485de4ce"
        },
        "item": {
          "id": "889e7d2a-c18d-4e1f-acde-94a4aefa2e45",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c97fbccd-ce5a-49ba-96f4-4dd8e66d02e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11df206-50f4-42fb-a5d3-e25943f144e5",
        "cursor": {
          "ref": "b2f20b36-77be-4c78-8de3-f4019fc0961b",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bee59a6d-e64a-4696-bd85-4a624b084c4b"
        },
        "item": {
          "id": "c11df206-50f4-42fb-a5d3-e25943f144e5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "32218521-5c9b-434f-a8d1-5f99cbdfe028",
          "status": "Created",
          "code": 201,
          "responseTime": 2397,
          "responseSize": 723
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:16)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:16)"
            }
          }
        ]
      },
      {
        "id": "a6905d06-24a5-4666-9827-afa1441f33d5",
        "cursor": {
          "ref": "7aed1411-b47f-4b64-a366-ca26b29b416e",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "34ec53c8-3d10-4b72-9732-0da7ab1333eb"
        },
        "item": {
          "id": "a6905d06-24a5-4666-9827-afa1441f33d5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ac8d9e6c-5878-44ae-acf1-e4ba557d4c75",
          "status": "Created",
          "code": 201,
          "responseTime": 2505,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:17)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:17)"
            }
          }
        ]
      },
      {
        "id": "80dc6776-3340-42cb-966f-9be8dc935b56",
        "cursor": {
          "ref": "27fbe954-5a82-4857-8d7c-bd24e68c7a35",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4a0c36e7-3a13-47b1-96c0-593dc9dd5c7a"
        },
        "item": {
          "id": "80dc6776-3340-42cb-966f-9be8dc935b56",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ca932e56-64aa-4e16-b837-d1b0f8c76251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a88866-c5e9-4777-9c6e-b471aed0bf3c",
        "cursor": {
          "ref": "ed6f3446-3021-4487-8fe8-0b85dfe29134",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "aabfce24-83bc-42d9-a4ba-b2fab8367bc6"
        },
        "item": {
          "id": "f2a88866-c5e9-4777-9c6e-b471aed0bf3c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8101dba2-2d3b-42b7-92dc-45ccb26ec42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4122e75-ac32-499b-bff4-561eb0f20334",
        "cursor": {
          "ref": "ed4d1c9b-be31-452b-94b0-1432723671ef",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0b150077-ff76-468a-b9b3-c03f749598d1"
        },
        "item": {
          "id": "a4122e75-ac32-499b-bff4-561eb0f20334",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a203e302-cbed-432b-a18f-5fb94572b2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c58b0d4-0f51-43cd-b369-855299ae7544",
        "cursor": {
          "ref": "67a65d7f-a1ee-4f38-bf75-b952878e4cdc",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ac641ab1-91e0-4d33-a226-44e6b74694ce"
        },
        "item": {
          "id": "3c58b0d4-0f51-43cd-b369-855299ae7544",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4c8ec92c-aac6-429a-a04b-bdf7c9b679e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1542
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796c1b21-086b-4ce2-bd5b-6f1e370e3657",
        "cursor": {
          "ref": "3c7e386c-c34a-4769-9bf5-d1d0613f7b04",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "575bb16e-e878-4b57-8f88-eb347670d5cd"
        },
        "item": {
          "id": "796c1b21-086b-4ce2-bd5b-6f1e370e3657",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "87ee78f9-d478-44a5-b664-1dfa8b1eff89",
          "status": "Created",
          "code": 201,
          "responseTime": 2602,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "395778b8-420c-463c-a57b-3188de4b795e",
        "cursor": {
          "ref": "ea4552c3-63af-4540-b2ed-3eca52625c49",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3ee7d088-a166-4d3d-925b-c3e6a9bff976"
        },
        "item": {
          "id": "395778b8-420c-463c-a57b-3188de4b795e",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "b87f65e7-91e7-4a63-b814-9d3db8aa73df",
          "status": "Created",
          "code": 201,
          "responseTime": 5146,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "c8d69b9e-3391-4c70-838f-088a1756015b",
        "cursor": {
          "ref": "f11e06f6-e383-4f34-90ef-b7e096b5b2ef",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "35cb716f-6b7a-4bab-9461-f754041f85d4"
        },
        "item": {
          "id": "c8d69b9e-3391-4c70-838f-088a1756015b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "db8e2a92-7a8f-43d9-b16b-fa2e33aeb854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cbed75-b9c9-4f96-a212-f87cf6cfdaec",
        "cursor": {
          "ref": "460388c5-2536-42f7-b2a3-e1ace9823db1",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fddc744c-b193-4a74-8da1-fc6cb53f8668"
        },
        "item": {
          "id": "a4cbed75-b9c9-4f96-a212-f87cf6cfdaec",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f9f4fdf7-dc93-404b-968f-789e7feb177c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d661e147-4c04-4975-9791-34f9aa2b33f4",
        "cursor": {
          "ref": "8b1a1598-e695-48a7-9281-c0600d050d91",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5fbb0cb7-3739-42ef-ac8e-67df13f039c9"
        },
        "item": {
          "id": "d661e147-4c04-4975-9791-34f9aa2b33f4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "41a9b2bd-a5a4-49c4-9819-e197599390da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf6a50f-cf7f-45c2-a153-07f4dfe814c9",
        "cursor": {
          "ref": "cf07025b-d78e-4b85-90f7-fa1615e273fc",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7bc943b1-7503-489a-82c6-654333a91851"
        },
        "item": {
          "id": "1bf6a50f-cf7f-45c2-a153-07f4dfe814c9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e1b98d9f-22d4-4af4-9ad6-e7fdf0fb5469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ab4b58-ccd1-4cd4-97f9-8f7dc4cb6e20",
        "cursor": {
          "ref": "7cbce31f-4288-4ad1-8a43-ae23ad22e387",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9487ec16-606d-4de1-a35c-a13cca2f0ad5"
        },
        "item": {
          "id": "90ab4b58-ccd1-4cd4-97f9-8f7dc4cb6e20",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "97dfeec5-b0b8-4223-8495-16c461f74c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4616ae-1992-4171-8d46-219ecb705b60",
        "cursor": {
          "ref": "eb451f3f-96d0-470f-992a-b6776b0bd369",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2dc32a4a-e0bf-4ee8-acd6-f7e2d6d57644"
        },
        "item": {
          "id": "8b4616ae-1992-4171-8d46-219ecb705b60",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d6eca965-738e-4cf1-8b16-4c4f3f7c07dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b45c2d-66fc-41e6-8cd3-403b2f0b9ddd",
        "cursor": {
          "ref": "fd04928c-525d-490f-a455-a122d552c892",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "119fde62-c7c6-4372-a093-f47f8d8886b5"
        },
        "item": {
          "id": "42b45c2d-66fc-41e6-8cd3-403b2f0b9ddd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "461da07d-5ddb-4144-881d-936170e600fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641923fc-9ab7-45f5-927c-fdcab00ee8b4",
        "cursor": {
          "ref": "0f41d58f-38a1-4f77-8002-dea1bfc19a40",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d2160991-30c4-4e13-a662-cd5df51d0a22"
        },
        "item": {
          "id": "641923fc-9ab7-45f5-927c-fdcab00ee8b4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "00e1a185-ebd0-4fb8-b5f9-3f3165752a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b5a0a3-c82d-40f4-ae35-a64735e75e61",
        "cursor": {
          "ref": "565f2ada-9743-4979-90ff-29f26b584ab3",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1e24cb5d-c8fd-4cdc-ae63-3a334aa0050e"
        },
        "item": {
          "id": "e5b5a0a3-c82d-40f4-ae35-a64735e75e61",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bfca6c5b-69ce-4568-8664-56af3a444637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ba3df0-05ec-4567-83c0-304f17a0a62b",
        "cursor": {
          "ref": "e477f42b-3b61-4e44-981a-aeb347110883",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9effe39b-317a-46f3-a7f6-1aebc676b0c9"
        },
        "item": {
          "id": "a4ba3df0-05ec-4567-83c0-304f17a0a62b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4633455c-cdf8-42df-8e07-8224329b617e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38aabb3-70c8-4411-a9b5-72c61109db46",
        "cursor": {
          "ref": "7d409c63-cfb5-47ee-a54c-270e20be0e76",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "95bc7f87-27f5-4b08-92f6-09cd8d71b8fa"
        },
        "item": {
          "id": "e38aabb3-70c8-4411-a9b5-72c61109db46",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9bfde4ab-a39a-4c08-8cbf-0620c7348eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7a671b-2a89-42ff-8ac9-ac822c13a97b",
        "cursor": {
          "ref": "808d2cfc-0fd2-4dd0-8989-133c0d6e17d2",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0217d451-eddb-43e0-8e87-b76d7527d722"
        },
        "item": {
          "id": "8c7a671b-2a89-42ff-8ac9-ac822c13a97b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "eddab2e3-c47b-4a7f-b4d0-d4019fc778ac",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1893,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "d8d1acc6-8614-482c-b282-92919f015868",
        "cursor": {
          "ref": "3b35727e-c5c9-41d2-b552-ea0997d85003",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "23b1bc61-d8af-40a2-9791-0d0adcca8acd"
        },
        "item": {
          "id": "d8d1acc6-8614-482c-b282-92919f015868",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f4268b7c-c258-4ca1-9445-97a3ab8a20b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb02c7cf-e142-4a1a-b8ed-e9765c8a880f",
        "cursor": {
          "ref": "e3ce3c27-0b83-4a4c-a30c-5defe6d1b109",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "106bb6f6-ad59-43b7-8efc-263c1bdf4696"
        },
        "item": {
          "id": "eb02c7cf-e142-4a1a-b8ed-e9765c8a880f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "473d3461-5f06-4c50-8b38-4cf13fd34947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217c7d5c-3469-4eb9-b5fc-f456b20b7f95",
        "cursor": {
          "ref": "cb429672-0380-4283-ae69-08fd611d9c53",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "30cba2df-9d3a-48b8-b504-abd8437fbbef"
        },
        "item": {
          "id": "217c7d5c-3469-4eb9-b5fc-f456b20b7f95",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e6024dc4-ebeb-4690-945b-4782d9653298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6293d1c0-3903-4489-b1b8-bf62b7ce9d5c",
        "cursor": {
          "ref": "26d99497-b02d-4044-ab81-52cedf7e9679",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "520c0a3c-fe11-468d-a9c7-473d660b8c03"
        },
        "item": {
          "id": "6293d1c0-3903-4489-b1b8-bf62b7ce9d5c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a08b8f39-0ec5-4a43-b6c4-bbbb627db0c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 823,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fbb8c4-8aa0-499d-b0ae-0aa70aad1448",
        "cursor": {
          "ref": "a26cea87-e6f6-4d5b-b1c6-78cfec699561",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bbc6eebd-eacf-44fb-ae8f-fd1ca0094ca3"
        },
        "item": {
          "id": "92fbb8c4-8aa0-499d-b0ae-0aa70aad1448",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fd9d5708-687d-46ec-81d2-8a311506bcbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6efda94-0478-4bb5-b1a9-2937e2d73f88",
        "cursor": {
          "ref": "15260dac-1d9b-44be-99a4-3544ce197840",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bc80dff2-1f93-43e0-8a2c-f636321410c4"
        },
        "item": {
          "id": "a6efda94-0478-4bb5-b1a9-2937e2d73f88",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6d5f5178-53af-4d80-b409-d5f524ec7021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 876,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201fe06b-219f-48d9-8a61-380befc33c21",
        "cursor": {
          "ref": "04d9f2bd-f84c-47c7-a64d-059ac177f4b3",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c3a50edb-b0d4-4c88-89d9-8122aa27dea8"
        },
        "item": {
          "id": "201fe06b-219f-48d9-8a61-380befc33c21",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "822a008e-0767-4c97-89d5-aa73b343b518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77b71c0-2094-4c10-873c-84f82f9897de",
        "cursor": {
          "ref": "3d1e7570-315c-49f6-837a-e622b57b04c8",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5849918d-aca5-40ee-a507-e8f5916d2efb"
        },
        "item": {
          "id": "e77b71c0-2094-4c10-873c-84f82f9897de",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d33186e9-9244-4483-bffc-6f17f5f9c2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdee1f9-66e2-4d90-bf1d-32f9ccf09800",
        "cursor": {
          "ref": "e38a20c4-4bac-4ebc-9ffb-f746efb78901",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6f1cb80c-4126-45e8-aca3-28132c27aa9a"
        },
        "item": {
          "id": "dbdee1f9-66e2-4d90-bf1d-32f9ccf09800",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "29e88faf-e694-46f4-a3f7-b3d0e1b2f2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b381ec16-65d1-439d-be57-22bba9aa1d7d",
        "cursor": {
          "ref": "ac00ca1c-58d6-4bf9-8a93-858d68fa8f44",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "eeca4dbe-27e5-4fb5-a778-c2d0b3c38bb0"
        },
        "item": {
          "id": "b381ec16-65d1-439d-be57-22bba9aa1d7d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b86fad29-9239-4c11-ac2b-3dcc00322de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cd1cdc-3981-4280-9020-3db8f2998ec2",
        "cursor": {
          "ref": "4f52c620-3e97-4972-b591-a69092e6d12a",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4648ef26-bdc0-4818-84bc-17e1e6910f44"
        },
        "item": {
          "id": "23cd1cdc-3981-4280-9020-3db8f2998ec2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6002d3c0-7293-42c6-8cfa-1dac5fa39693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89075f66-5b33-4f9d-83db-fb4c91aa0044",
        "cursor": {
          "ref": "22c9647f-a01e-4db6-8765-fbda6cf27200",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1c16e8bd-3eec-428d-afbd-da552d2d12f7"
        },
        "item": {
          "id": "89075f66-5b33-4f9d-83db-fb4c91aa0044",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "74b308ed-a5b4-4844-831f-7695abfec521",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 601,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80a3a95-21d6-45f2-a1e3-b80f78480658",
        "cursor": {
          "ref": "49470df5-b7ce-4894-a307-6fe8ffd7ec33",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7db01742-891b-4b96-af9b-fab100b62bfd"
        },
        "item": {
          "id": "b80a3a95-21d6-45f2-a1e3-b80f78480658",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "936f0576-32b0-4f2e-a63f-bb582ba600bc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 566,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "3a436a7a-e151-422c-81ff-ed15ffdac98b",
        "cursor": {
          "ref": "d4092e13-b10e-4115-910b-6170d43b7b50",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7224bf2f-d729-42db-b60d-33078f195a7b"
        },
        "item": {
          "id": "3a436a7a-e151-422c-81ff-ed15ffdac98b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "004e36bb-e5fb-4331-8cb8-885c67206bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e12fee-28e0-43a4-b8d9-1be21dbd8dbc",
        "cursor": {
          "ref": "bf84d491-098e-45b6-a62d-c3549223628e",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a82b1377-d1ec-4772-87a8-4071de08ad26"
        },
        "item": {
          "id": "09e12fee-28e0-43a4-b8d9-1be21dbd8dbc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ee87f0a2-3c13-451e-998f-738b8e23fb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795ebc8a-aee8-4304-8d0f-755061d3f69f",
        "cursor": {
          "ref": "fba33bbd-69c8-4884-9807-9ee2d361a7d1",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b762619a-d875-4459-82fe-5b00199ad044"
        },
        "item": {
          "id": "795ebc8a-aee8-4304-8d0f-755061d3f69f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9e90cf79-de05-4055-80fd-88d818052f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e497bf-7e88-4d36-9484-48f2a1472416",
        "cursor": {
          "ref": "55eb8deb-b756-46a1-bac6-da0a9022342e",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "be1ea1a2-2273-426a-86fe-15d58ebb2ccf"
        },
        "item": {
          "id": "62e497bf-7e88-4d36-9484-48f2a1472416",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0b9af2aa-6fdb-4148-86c5-b9cc899467b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a581d02-c418-4a67-a11d-e8b44d8bc6e2",
        "cursor": {
          "ref": "75c555d9-4162-4a41-8045-d88cc8a0df19",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0cfe8e44-8dfb-44c3-9c12-ee56c85b3dba"
        },
        "item": {
          "id": "0a581d02-c418-4a67-a11d-e8b44d8bc6e2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b27b122b-9e14-46b4-84a1-79ca1c0a21bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a065636-d6b1-4f8c-8dac-fff82e3653f1",
        "cursor": {
          "ref": "eaeb46d1-5e81-4c8e-8ab0-dd642d414c6a",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "779c65b7-4837-4589-bd5f-2cfe7c35c579"
        },
        "item": {
          "id": "1a065636-d6b1-4f8c-8dac-fff82e3653f1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "debe8474-8b02-40f2-8f2b-34db63d85036",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 588,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfca398d-c589-4156-b0c5-acde78dd4f6b",
        "cursor": {
          "ref": "0a0c652b-73cf-4a6c-b529-7d33327e5cf4",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bf4e0123-f0e5-43fc-89b2-a73e7cb11d1f"
        },
        "item": {
          "id": "cfca398d-c589-4156-b0c5-acde78dd4f6b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8ec7102a-d897-40f4-98a6-b9255574dc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19845e86-4fe7-4f9a-a23f-958d3efbe295",
        "cursor": {
          "ref": "17fa6350-e08c-4fa2-a082-e50dd25dc848",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4a74360c-1f65-4c6e-8820-a3f8e6d1a212"
        },
        "item": {
          "id": "19845e86-4fe7-4f9a-a23f-958d3efbe295",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f3db6e3f-5d55-4f0e-b029-50ec46c5bd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e45eb25-a44c-43c8-97e2-33c98ab54948",
        "cursor": {
          "ref": "23f1e678-66bc-4de5-b9e8-67593066d9f5",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ddf5cc3b-f935-40ec-bf61-aa155e8dd806"
        },
        "item": {
          "id": "5e45eb25-a44c-43c8-97e2-33c98ab54948",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "950123a9-41c0-449d-9105-948975671dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef840f33-6e9f-47d7-931c-730bf403b976",
        "cursor": {
          "ref": "32c1df7c-f2d9-4f27-a3cf-b81f9467f2ab",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b035512c-f030-4299-9d4c-c2d79e8ff4c4"
        },
        "item": {
          "id": "ef840f33-6e9f-47d7-931c-730bf403b976",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f2596494-bb6e-4b32-a4a0-7b05f4654c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1b1f29-14de-45ca-9640-809640d7d2c8",
        "cursor": {
          "ref": "3e1a092c-a31a-4c1f-ac71-dd5b8fc57b75",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "833bdd30-56cb-4664-b5bd-ab1ac587bd24"
        },
        "item": {
          "id": "8a1b1f29-14de-45ca-9640-809640d7d2c8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4a994111-1bd9-4c04-8038-8945c493df9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1c9126-3f7c-47fd-9ceb-73eceb24018a",
        "cursor": {
          "ref": "43d4f3e5-d95f-4d3d-95e8-e0ffe7867538",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "55e31e6c-de48-49fa-96d1-143deaff86c7"
        },
        "item": {
          "id": "db1c9126-3f7c-47fd-9ceb-73eceb24018a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5abe83cc-a8da-41d4-ae65-33521cde5b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409fa301-e1ca-4318-91ac-f891d58bb098",
        "cursor": {
          "ref": "b4b85446-5067-4357-a3f3-3205498587a7",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "76523a7c-8af7-43d2-9dff-e5518fca34e4"
        },
        "item": {
          "id": "409fa301-e1ca-4318-91ac-f891d58bb098",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "aa29a441-9381-44a4-b52e-81335bc2db2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af029b5e-0fc3-4f2c-aeae-f77c84c28f18",
        "cursor": {
          "ref": "e2a873f3-d7eb-44ea-a979-bb5659b9e17a",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ad221224-63a5-4f32-a7d8-2ea5c9d1e783"
        },
        "item": {
          "id": "af029b5e-0fc3-4f2c-aeae-f77c84c28f18",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cacc5580-b090-449c-9bec-c56f68c3e22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62408ab8-a3cf-41dc-ab9e-8761cd270dfb",
        "cursor": {
          "ref": "aa63b705-1147-4061-b535-57a00227e90e",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6560a449-48bd-406e-90a8-9b7c5c9d4d2c"
        },
        "item": {
          "id": "62408ab8-a3cf-41dc-ab9e-8761cd270dfb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "90d41a6f-e0cb-45b3-a560-2a16170b9f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55bb768-0fc1-42fe-83fa-4f53ea245b06",
        "cursor": {
          "ref": "002ce6a6-eec2-4edc-adec-ea2018b6d16f",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4288aa3a-937e-4bf2-a3e4-8eb564f40cae"
        },
        "item": {
          "id": "c55bb768-0fc1-42fe-83fa-4f53ea245b06",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f25290af-00d4-4eaf-9a72-e3fd5518e145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e035ee-28df-4b8b-ae54-314866608773",
        "cursor": {
          "ref": "a6ec913f-0538-4d52-ac67-42469203fea9",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fce3a29c-cbbc-4c55-986c-c8ce3330beba"
        },
        "item": {
          "id": "a4e035ee-28df-4b8b-ae54-314866608773",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a59cbe25-0669-41ba-a52f-ff6afa439895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b136c8-9119-4d00-8258-b11f918d2748",
        "cursor": {
          "ref": "30ac4b99-9f96-4c0f-b1c7-58591a8737f9",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7331b34c-6915-4b54-8d23-0b55cffb2706"
        },
        "item": {
          "id": "f7b136c8-9119-4d00-8258-b11f918d2748",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "63575596-78f0-4da7-a7ae-0f776d963da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 812,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97bccdd-e937-40ad-ac15-a35bd0514440",
        "cursor": {
          "ref": "6ca82238-e32c-4564-831a-3e4b7efec32a",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "266ae324-70bd-4833-aadd-59c13fc5f069"
        },
        "item": {
          "id": "a97bccdd-e937-40ad-ac15-a35bd0514440",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dca140c2-6d44-4773-abfe-35f7359b7861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3071a7-43f8-484f-879b-bd216c7e1602",
        "cursor": {
          "ref": "9b831c79-a4ef-4fda-9b40-663dff875619",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "beb6ecf6-3f5a-41b7-827e-f1527dd27580"
        },
        "item": {
          "id": "da3071a7-43f8-484f-879b-bd216c7e1602",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "32d4fc92-60b5-41af-911b-f681cfd5d424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45acb9cd-8323-44b0-8968-8b8ab5b1e59c",
        "cursor": {
          "ref": "337bcc53-6661-47a6-bdcd-4e9e268d4601",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e777522c-94a9-403f-8bf3-a28da404e6ab"
        },
        "item": {
          "id": "45acb9cd-8323-44b0-8968-8b8ab5b1e59c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "19323990-60f1-4b07-8698-660ab7217d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775df032-bcaf-4551-a22a-1279d87ffb31",
        "cursor": {
          "ref": "8546e95d-04cd-4bcb-9f51-da47a08f943b",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e6308574-9814-43ec-815a-97b81c7d6582"
        },
        "item": {
          "id": "775df032-bcaf-4551-a22a-1279d87ffb31",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "493e36d6-010f-4878-be6a-9f8593d5d1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d488542f-4aa3-4ff9-8f62-41c131aa52b8",
        "cursor": {
          "ref": "2daa69a7-f589-4f82-bb75-6aa045f7c171",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "348f23d7-ad93-4a51-b4af-ab5f38c2df63"
        },
        "item": {
          "id": "d488542f-4aa3-4ff9-8f62-41c131aa52b8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ef3a05c4-cde8-4304-bd92-c1b2e00c3e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4f4eb5-4bd2-41b8-85a1-ebdf73902552",
        "cursor": {
          "ref": "c2113eca-5f25-4b3f-a9bd-fbe839f63556",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1a991b95-cc10-45e2-ab8a-9ed70348621e"
        },
        "item": {
          "id": "3c4f4eb5-4bd2-41b8-85a1-ebdf73902552",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fccd4a4b-42e5-4143-9ab6-52d7f9b92ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e097f7bd-5ae3-4221-861e-83c5527067d5",
        "cursor": {
          "ref": "7911d0d9-2e78-4e79-a7d8-4279b6691dee",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4c8420f7-48c2-48d6-ab86-c3e9d8f7fd9f"
        },
        "item": {
          "id": "e097f7bd-5ae3-4221-861e-83c5527067d5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a9ee6b1c-4300-4b5d-b4f3-05027eab6f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981bd0ec-c6af-48fb-878a-1bacf0a997a7",
        "cursor": {
          "ref": "96a6c8fb-e5f2-4ac5-8416-6be308a1cd18",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "eef336fb-0b2c-4665-8e17-d712a7a38ddc"
        },
        "item": {
          "id": "981bd0ec-c6af-48fb-878a-1bacf0a997a7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "364fe1f3-19ed-435d-8a24-ce6900a38b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe498a14-2af0-41f7-b96d-09061ebf909c",
        "cursor": {
          "ref": "8d34759c-2ed2-47e5-9883-d63934e1cdee",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "12fa24c1-fe94-4f7f-8281-f2f4b471d4bf"
        },
        "item": {
          "id": "fe498a14-2af0-41f7-b96d-09061ebf909c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6b175bf7-fa99-472d-a40a-42fcfac13d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b26824-13f1-48dd-98af-4fcc2f11e69c",
        "cursor": {
          "ref": "de5a91ab-0ff6-4530-ba09-059fcf67832c",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c2e990c2-6f76-48fe-b701-caaee7807685"
        },
        "item": {
          "id": "80b26824-13f1-48dd-98af-4fcc2f11e69c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3138fd05-37d5-4ce5-b945-73d673496775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8ff897-ef7c-49f3-8889-7c66f80505cb",
        "cursor": {
          "ref": "0d52fa91-4792-4976-9e04-2ba49367d30a",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "fd3d3e01-1183-46ea-ab51-99c1db2bb899"
        },
        "item": {
          "id": "ca8ff897-ef7c-49f3-8889-7c66f80505cb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "387a5f01-147d-4055-88b2-45ea04277367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c0ec4d-34a6-4ece-b1dc-f371ee5480bd",
        "cursor": {
          "ref": "144a64c4-c758-4b35-9466-fd60892c77b5",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "069b6691-637f-4703-ae39-fdee7f273a07"
        },
        "item": {
          "id": "26c0ec4d-34a6-4ece-b1dc-f371ee5480bd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "70b74d9b-25af-45ed-9987-65599d5db817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd5cf32-fd5a-4536-9691-e466c78407b8",
        "cursor": {
          "ref": "a9d8b48d-f109-4faf-b0aa-62010e38fb5d",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fb6a584b-5900-4d8b-8c7e-42f8223b1bdc"
        },
        "item": {
          "id": "fdd5cf32-fd5a-4536-9691-e466c78407b8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2582dff0-7e8d-4f51-86b6-257d2aa661cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9b1b91-6f05-4f15-962d-c7f08a261b5f",
        "cursor": {
          "ref": "3320646e-7b56-4bc6-9e98-44b7a6d01550",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c11372d7-fc8f-4230-b4c2-34051749696d"
        },
        "item": {
          "id": "7e9b1b91-6f05-4f15-962d-c7f08a261b5f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d2a9a549-828d-4c53-a3b2-a2ece9094885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f554c04-a1ff-47f9-bed0-6317d251e8b0",
        "cursor": {
          "ref": "58b6f618-f9f1-41c0-9ef4-643dd6414c1a",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "82f2dde8-c88d-402e-a5f5-29c306db8f1b"
        },
        "item": {
          "id": "1f554c04-a1ff-47f9-bed0-6317d251e8b0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cddb205b-44c0-4597-a32e-f80d2571756c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6b6ae5-ce5e-4f66-9cee-423b03afcf88",
        "cursor": {
          "ref": "404f03ea-0d9f-4236-8621-daa6e4194b80",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4d7ce568-7ca7-4d79-a86c-f7631471a2e0"
        },
        "item": {
          "id": "9a6b6ae5-ce5e-4f66-9cee-423b03afcf88",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "449a4dc9-5b73-49c1-acee-de6667a426e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d9559f-495d-44c6-9c6d-92a519b2df8f",
        "cursor": {
          "ref": "c83f1813-66ec-4b02-a03c-e30d190dd89c",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "67f0486b-f145-4622-a1c9-38a581e17c50"
        },
        "item": {
          "id": "52d9559f-495d-44c6-9c6d-92a519b2df8f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "28f981aa-c393-49ee-b0c5-b97bf9b825f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bd9b20-9b0d-48a9-9142-c2aa8ed5c74d",
        "cursor": {
          "ref": "8b2dadcf-69d5-42ed-b731-88470eb2f339",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "04ac6306-eedb-4306-9703-4052a4bafbea"
        },
        "item": {
          "id": "d0bd9b20-9b0d-48a9-9142-c2aa8ed5c74d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c564e3e0-28f6-4c85-a506-a122f336cb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773bb95a-a72e-474d-937c-23b9cd36fe9b",
        "cursor": {
          "ref": "3014be56-c7b8-40fe-b979-41828e7df1b9",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "22168e56-63c9-44a9-af25-02cb3abc7246"
        },
        "item": {
          "id": "773bb95a-a72e-474d-937c-23b9cd36fe9b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f015fa51-2f97-4574-98d4-5c82aea32d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734612ff-9bee-4e2a-91c2-ebc3f7e53a78",
        "cursor": {
          "ref": "80585042-9e51-4e3f-bf15-cbc012fbe652",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3a2fbfac-2d33-49ea-baf1-200af20582a6"
        },
        "item": {
          "id": "734612ff-9bee-4e2a-91c2-ebc3f7e53a78",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ab9f2091-77c0-46e9-971d-bee543bd9fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c437538-b9c3-41d1-8e5b-1df5774f6fed",
        "cursor": {
          "ref": "72112b4f-8adc-400d-83e8-5b2541e5d4c8",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "54593952-748b-441c-9a67-4f410a6f9970"
        },
        "item": {
          "id": "4c437538-b9c3-41d1-8e5b-1df5774f6fed",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bb494952-ad21-45bf-a100-0f7f11d76ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8485ea4c-f87f-4e1f-b391-846740c45153",
        "cursor": {
          "ref": "3aa89126-6744-4e6c-9c6d-71a276a4f026",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ec71bdeb-9543-4f32-b16c-1e6cdb2fb907"
        },
        "item": {
          "id": "8485ea4c-f87f-4e1f-b391-846740c45153",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0b415ea4-968a-4102-baed-08ce5b0ec28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd84cfe-3331-4ef7-994c-fb0e2e1cb066",
        "cursor": {
          "ref": "67a97c44-dda3-44c1-8537-cbb6a834ac15",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9b339587-cdf8-43bf-abe1-33a438be29f6"
        },
        "item": {
          "id": "5dd84cfe-3331-4ef7-994c-fb0e2e1cb066",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c77cddcb-1f2b-4c8e-8cba-4eb43fcbfe5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c7440b-f77a-40a6-b88e-889f05cff767",
        "cursor": {
          "ref": "44eb6ba2-2d97-4b67-af9c-60c530d9d5da",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "92495296-52f9-4183-9702-24da49f3eb4b"
        },
        "item": {
          "id": "b2c7440b-f77a-40a6-b88e-889f05cff767",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f3263238-ed77-42a0-8ef6-ddfc414835c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38714457-6565-4744-bd4b-2793ad85e5a1",
        "cursor": {
          "ref": "9fe47540-f422-419a-99fc-06a3d8cc0a93",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5ed6f325-7874-4984-bae2-0da2439e0534"
        },
        "item": {
          "id": "38714457-6565-4744-bd4b-2793ad85e5a1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1ef33207-3b46-4288-b72d-7dfcff491336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62eb054c-44dc-4b13-8cec-09c686268fc7",
        "cursor": {
          "ref": "679ba200-6be2-4c68-8975-ca4f6160e80e",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b3e0712d-51ed-47d0-bdaf-4b95e23a32ea"
        },
        "item": {
          "id": "62eb054c-44dc-4b13-8cec-09c686268fc7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7a5b0083-b55f-447e-a531-a621e00e59c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c16ea02-0a82-4c19-b934-c638c6244da3",
        "cursor": {
          "ref": "d6b17ab5-46a3-45b8-9e3c-5c4c2c2f0c0e",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "620cca67-e2bf-47a5-bd31-bdd1a5ad1723"
        },
        "item": {
          "id": "3c16ea02-0a82-4c19-b934-c638c6244da3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "855fa886-20c0-4455-8cb5-c741ba1cb0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 829,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736b37c1-1bcd-4863-aac9-d450e3b85d9c",
        "cursor": {
          "ref": "b36182ec-0e38-4b82-843d-88a0cde86ff9",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7c423545-16af-4d8e-bbfa-ac8baf37a078"
        },
        "item": {
          "id": "736b37c1-1bcd-4863-aac9-d450e3b85d9c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1f2ad17c-d62d-4837-8f49-b60638fa0aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "736c748d-b1b5-4c92-81c8-03a65e4ed4cd",
        "cursor": {
          "ref": "b4dcacdc-8c21-4c7f-8795-b11fbd3f86f9",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2d5890ea-89ff-42a9-936e-80c76c953bc2"
        },
        "item": {
          "id": "736c748d-b1b5-4c92-81c8-03a65e4ed4cd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9f2bae0d-7f05-467b-87d4-9cd6e78cd122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3629d426-b9a3-4636-a103-d8571172ddad",
        "cursor": {
          "ref": "63decbfa-0919-4ec2-a1c6-216ab409c789",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b2f61133-d2f4-48b8-8c00-28d1f1f9421b"
        },
        "item": {
          "id": "3629d426-b9a3-4636-a103-d8571172ddad",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f948d902-0082-4d40-9769-a6a3b3c33697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c71839-b900-4ba0-958c-f0c7dde97d40",
        "cursor": {
          "ref": "86c71607-0777-4db5-abff-d9e5629814c1",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d366d975-e4f1-4bc5-8016-b2820ae5cbc9"
        },
        "item": {
          "id": "06c71839-b900-4ba0-958c-f0c7dde97d40",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "63e282d3-450f-4d1f-9fb2-1039e6a2466a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17513929-0f94-4a33-8b2a-7f0eb695da2b",
        "cursor": {
          "ref": "9b03e06a-72b4-4f3c-9918-d97ff1102581",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a44cd8de-b464-44c4-976d-d24e5b0c372a"
        },
        "item": {
          "id": "17513929-0f94-4a33-8b2a-7f0eb695da2b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8818d1d3-7dec-4972-a85b-4e57a2caca60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0da8923-eeba-4eed-8ffb-4b193022df55",
        "cursor": {
          "ref": "d4e01288-5b13-4044-8fc4-f408c6383f67",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7b72ceb1-26b3-4950-b02a-99f341707e45"
        },
        "item": {
          "id": "d0da8923-eeba-4eed-8ffb-4b193022df55",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "22ca95dd-7ad9-4d97-a3b0-53a55a25a4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56474452-4bb5-44f2-99af-efc54f26e5cd",
        "cursor": {
          "ref": "c28062d8-859f-438d-9618-632477a0820c",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "53bbd0ef-773d-4d27-a5a7-b5c557d59907"
        },
        "item": {
          "id": "56474452-4bb5-44f2-99af-efc54f26e5cd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "25c095f8-1098-4e77-85ed-508101d23f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbeafadf-cb76-41c0-b5a7-0df4647eebee",
        "cursor": {
          "ref": "263383b6-9aac-4404-8380-bdb1946f4748",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d9c08a4e-e5e5-4348-abf2-2a584ff7d38f"
        },
        "item": {
          "id": "cbeafadf-cb76-41c0-b5a7-0df4647eebee",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a2af410e-ee1f-4bc4-852c-69375dfeb7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed5c382e-d958-46dd-90bd-6e743c8a079c",
        "cursor": {
          "ref": "675d8793-9f38-4b19-b0f5-5ef84f432415",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3b84ace3-e7f4-4ef6-a9f7-834309717afd"
        },
        "item": {
          "id": "ed5c382e-d958-46dd-90bd-6e743c8a079c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7dca6995-73ae-442c-9f88-0d3e212eff5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ca79e1-e42b-4bef-858f-357f1fb457ae",
        "cursor": {
          "ref": "a2d23b62-f4f7-4ad7-845f-f6ac12e023cf",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5463925a-8ce9-41c1-8592-365d1ba331cc"
        },
        "item": {
          "id": "c9ca79e1-e42b-4bef-858f-357f1fb457ae",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a4b9e233-bf15-4c7d-a4eb-c28f90a541a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c373f52-a76a-47ba-a623-4963c707529a",
        "cursor": {
          "ref": "c35ab0b6-8d26-49da-b4fc-4c10d0a2b33d",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "017863bb-acc0-41b4-ae34-6f26c10f18c4"
        },
        "item": {
          "id": "2c373f52-a76a-47ba-a623-4963c707529a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c3660235-f0a8-48e2-b625-9dc0b2755525",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d811faf7-6e8f-4ed4-a677-733e891f8e14",
        "cursor": {
          "ref": "70b0d7cc-cf0a-4d60-ace5-88f5006bc833",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8344962f-2b36-4003-a341-8a2161ace387"
        },
        "item": {
          "id": "d811faf7-6e8f-4ed4-a677-733e891f8e14",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "02552087-d886-4f2c-b476-b1a23c4d7cc2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 562,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9336b5-df90-4819-b11c-6bb8197fa882",
        "cursor": {
          "ref": "50a5f47c-9e78-481f-8e6b-01ae66ed9b63",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5ae569dd-d42c-451b-8e42-a52a81f69488"
        },
        "item": {
          "id": "ad9336b5-df90-4819-b11c-6bb8197fa882",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cf155f04-7aa0-47bc-8ecc-8ba60daea2c1",
          "status": "Created",
          "code": 201,
          "responseTime": 4385,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57bbb7c-d0f5-4955-b9a5-318a95cc8c3e",
        "cursor": {
          "ref": "65a1550f-6133-444e-a515-86b1f1f542c7",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "041e3373-8b2c-4ec4-9643-1d359f4090b8"
        },
        "item": {
          "id": "a57bbb7c-d0f5-4955-b9a5-318a95cc8c3e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "824107cf-52d6-4fa8-ac0a-4d4804a9ff1e",
          "status": "Created",
          "code": 201,
          "responseTime": 4673,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92def97-b24a-4368-9929-d4fb5af6578c",
        "cursor": {
          "ref": "4ce40d96-ba70-4c8a-bc33-cdcb336c3184",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "29484f87-374f-4f37-9ecc-d7767d6c99ca"
        },
        "item": {
          "id": "e92def97-b24a-4368-9929-d4fb5af6578c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d28a3c84-e7c0-4dd7-8093-c3ab43c0de22",
          "status": "Created",
          "code": 201,
          "responseTime": 3874,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2083456-5b4c-4678-86ec-e0dff507ac87",
        "cursor": {
          "ref": "74b8e2f6-487f-4101-a295-6dac82c39b32",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ab252339-cf5b-4e50-a3f7-84b9681379a9"
        },
        "item": {
          "id": "f2083456-5b4c-4678-86ec-e0dff507ac87",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d86435aa-118d-44fc-ae3e-8cce59a35bf9",
          "status": "Created",
          "code": 201,
          "responseTime": 3789,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59205c5-0acf-4458-b3ac-72ba2c05a7da",
        "cursor": {
          "ref": "153db09c-8633-4c1e-8ebd-c2921364a044",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "314c5e74-fea1-4f68-aa3e-9f23937eab8d"
        },
        "item": {
          "id": "c59205c5-0acf-4458-b3ac-72ba2c05a7da",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9dd80dcf-77c3-49e7-a383-0198b8dc6a3e",
          "status": "Created",
          "code": 201,
          "responseTime": 4475,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0228dd-4288-4ece-823a-9dc100ccccfd",
        "cursor": {
          "ref": "95cd9610-60db-44cd-95da-8438f72274b7",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "310230d5-8e42-4f96-81c9-6b93156de191"
        },
        "item": {
          "id": "fb0228dd-4288-4ece-823a-9dc100ccccfd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5c9cdba9-5667-4e92-8065-277907ff66cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0228dd-4288-4ece-823a-9dc100ccccfd",
        "cursor": {
          "ref": "95cd9610-60db-44cd-95da-8438f72274b7",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "310230d5-8e42-4f96-81c9-6b93156de191"
        },
        "item": {
          "id": "fb0228dd-4288-4ece-823a-9dc100ccccfd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5c9cdba9-5667-4e92-8065-277907ff66cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa51b319-5c1e-4732-bae1-176b628f1c7a",
        "cursor": {
          "ref": "448f2636-1ab0-464f-b002-5fdaa0bdbe8f",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "caaf1136-9e24-43fa-957f-5672883399ae"
        },
        "item": {
          "id": "fa51b319-5c1e-4732-bae1-176b628f1c7a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "62dbc054-a456-4ce5-bfd6-2add6519c1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a648e96-6a03-49bd-8544-9df550c6f6dd",
        "cursor": {
          "ref": "6f72adff-86c9-497a-b2e4-e17d0547438b",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7bef861e-826d-483d-9872-af5ada1b24d3"
        },
        "item": {
          "id": "4a648e96-6a03-49bd-8544-9df550c6f6dd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4d2d5f87-4659-4872-b7d5-9eb59af36aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417a34f3-5c33-43fd-a35d-3ee9c783f608",
        "cursor": {
          "ref": "76b48e15-6d09-40a9-92ac-a16a344ee3af",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "14098aa8-5b74-4445-8553-759235e35460"
        },
        "item": {
          "id": "417a34f3-5c33-43fd-a35d-3ee9c783f608",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "df60b6ac-2600-4348-b23e-ac9cd2387897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dabaed3-673a-470c-9b93-69d1daea589e",
        "cursor": {
          "ref": "212fab4e-c9fa-4f72-ba79-c6de4c78cae4",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "796b054d-d448-4eab-bc59-5171734f05cc"
        },
        "item": {
          "id": "9dabaed3-673a-470c-9b93-69d1daea589e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b6ec67c1-d937-42cd-bd28-b6c05f1c8a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd340bd-2205-417d-9d76-15c4def8cc90",
        "cursor": {
          "ref": "6397593d-dc59-4667-9fc8-a9fb078d66ab",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "e3abdbf1-0463-4831-bdd9-81df26c11502"
        },
        "item": {
          "id": "efd340bd-2205-417d-9d76-15c4def8cc90",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "403c6061-593d-419e-a631-d1bb655dd1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e24eea-421d-4089-bf38-4deb44aa13ce",
        "cursor": {
          "ref": "4072e807-2c1d-4407-8e32-e3a359ed9d72",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cbdd9cc8-d4ef-4682-9e53-45e3e3d2af6f"
        },
        "item": {
          "id": "62e24eea-421d-4089-bf38-4deb44aa13ce",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "be72be03-f211-4b7f-8c1d-f8b57dc8713d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714e57a2-a7dc-4fb7-8406-8f903d991f74",
        "cursor": {
          "ref": "57126bf8-f9cb-4722-a13e-79d3994dcc50",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "eec8cfc5-ea5c-4232-accb-237e1dc043d5"
        },
        "item": {
          "id": "714e57a2-a7dc-4fb7-8406-8f903d991f74",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "83372887-7432-48da-b857-74d26e9b701d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8441f69b-642a-4dad-827e-659feb30a17b",
        "cursor": {
          "ref": "c6f3118d-d246-49c6-9ac6-a6262d0a093c",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5a00d231-8fb0-42d0-baa3-8689942c477b"
        },
        "item": {
          "id": "8441f69b-642a-4dad-827e-659feb30a17b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "90ac4dd5-98c3-4ceb-82d7-ab4736e2adff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454450fc-df6e-493e-a2df-1d155301df50",
        "cursor": {
          "ref": "a4d8adb9-bd1a-4a44-b411-d5a4978b7c4b",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "05b90a78-4d3a-4b65-8491-765e53764188"
        },
        "item": {
          "id": "454450fc-df6e-493e-a2df-1d155301df50",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a83b58b8-0784-4795-a7d1-9d9d9ee75dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4250c505-0a49-43ec-b899-f40973819cb7",
        "cursor": {
          "ref": "fc92d768-315c-4571-9807-f6af82cddbe5",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "efe6e84b-4a44-4307-8fe9-93fa9d6381be"
        },
        "item": {
          "id": "4250c505-0a49-43ec-b899-f40973819cb7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "55805786-4cc2-45d3-ad3e-0087c083244f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2995ad95-5438-4625-ae7a-0b19522f8d43",
        "cursor": {
          "ref": "b9322967-054f-4d68-bf81-7eea0a9323fc",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bfa8d0de-7bf4-40be-803b-0b596e37987a"
        },
        "item": {
          "id": "2995ad95-5438-4625-ae7a-0b19522f8d43",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2f9612c7-9712-4396-86b2-455e7064456d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949a5ee1-7b1b-4348-9f3c-45e98951403b",
        "cursor": {
          "ref": "5ddf0c2d-57c4-464f-985d-06830478d09e",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7bc27751-745b-4475-9bbb-c9c053c1326d"
        },
        "item": {
          "id": "949a5ee1-7b1b-4348-9f3c-45e98951403b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "69f05720-f7fa-4ef0-8839-d2d28783b710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d66fd0-6223-4b0b-b31e-8785a57d1fd2",
        "cursor": {
          "ref": "4f963a19-ab7e-4314-99d8-662de25a1854",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bbddc271-aff4-47f8-97fb-2a39d1aa286c"
        },
        "item": {
          "id": "a4d66fd0-6223-4b0b-b31e-8785a57d1fd2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "467de937-9c29-4404-9332-b17f628b5506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9757e37a-97ad-4a26-a7f0-512a7b2ffa19",
        "cursor": {
          "ref": "2f173e85-12de-4108-86a3-5b060b8e8ae2",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5f6c4079-b24f-4c52-8863-201a45f2e86b"
        },
        "item": {
          "id": "9757e37a-97ad-4a26-a7f0-512a7b2ffa19",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "86f969b5-0516-4704-8671-dc030dd1c23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e26f0ec-5ffa-4d58-b7c6-02dc18534b4a",
        "cursor": {
          "ref": "1a7357e1-4dfd-4f11-adb0-db16f299f90e",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b202e11b-daad-4886-94b4-191acf53256d"
        },
        "item": {
          "id": "7e26f0ec-5ffa-4d58-b7c6-02dc18534b4a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2a8e3ff4-af23-4a3a-bb41-666d08f3ca10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b564f1da-1ed5-47db-a2f0-7ded16cf059e",
        "cursor": {
          "ref": "d94f1069-66e2-44d1-a417-0abfd9b2bab1",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "62afe20a-9472-40ba-9c43-8083e10696fa"
        },
        "item": {
          "id": "b564f1da-1ed5-47db-a2f0-7ded16cf059e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fa383e85-cafb-4deb-b97d-19a575d80201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0645e92-cef2-4fcb-987d-35be4ef73aaa",
        "cursor": {
          "ref": "7eba2f31-25c7-4bf0-be26-ee1cd19ef62e",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8a518346-772a-44c2-be8a-4de6eaed3c47"
        },
        "item": {
          "id": "f0645e92-cef2-4fcb-987d-35be4ef73aaa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d275a332-299b-4098-8a3e-c40ee6ef3e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6587e9-c9ef-4531-8f0f-3a86bd8613b2",
        "cursor": {
          "ref": "4eac09bd-a73e-445d-bceb-46cb3cf647b3",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "136f104e-1bd4-4115-98a9-2e639f4d79c0"
        },
        "item": {
          "id": "8e6587e9-c9ef-4531-8f0f-3a86bd8613b2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6583c831-5c89-430c-a0ba-e629246c226c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89b8f8d-9ff5-4015-afa9-df558085d0d9",
        "cursor": {
          "ref": "fd1831c3-465e-4752-8a39-961ed64c7171",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8c7d3574-13c6-4249-bece-4537fdfb4dc8"
        },
        "item": {
          "id": "f89b8f8d-9ff5-4015-afa9-df558085d0d9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "35d31e56-ad53-4bfc-b5d9-b12b6eaf095f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dde780-fffd-4b71-8ea6-b90aa6b8af6a",
        "cursor": {
          "ref": "d2bec59b-21fc-4411-85c4-f392b4663a45",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7d9dcb03-6eaa-4d72-b1fc-998a9044f422"
        },
        "item": {
          "id": "86dde780-fffd-4b71-8ea6-b90aa6b8af6a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "76bb5d42-f5c1-4c4b-9f45-f9e17601245a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac014bc-3313-4a7b-9e8b-e744f1aada21",
        "cursor": {
          "ref": "79a8244b-e410-4490-9cdc-c7d64941aaf3",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d293c5d7-32ce-4979-be52-403494023859"
        },
        "item": {
          "id": "5ac014bc-3313-4a7b-9e8b-e744f1aada21",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f87316ef-fdc6-451c-8385-fd2f0f93635f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdd5430-7ae6-469d-9f0a-2a090f37ffbc",
        "cursor": {
          "ref": "88d40603-acf8-4864-885c-5d5733b76a1f",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4bf1e3d7-cc72-4892-aebb-e717f891b24c"
        },
        "item": {
          "id": "7bdd5430-7ae6-469d-9f0a-2a090f37ffbc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2d49486f-aeac-407f-bac6-00b0a87089bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1283e0c-c1f2-4b0c-b4ff-0dea09471c9c",
        "cursor": {
          "ref": "315c0705-d562-4658-bbca-10704932df4c",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3aa3b388-9622-4859-9d0a-25a94847292b"
        },
        "item": {
          "id": "b1283e0c-c1f2-4b0c-b4ff-0dea09471c9c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2b7c5157-3e6b-4b9a-a814-ca6dedeb0395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ad3711-d26b-4dde-bace-2aa4cefef65e",
        "cursor": {
          "ref": "cc884c5c-202c-4a70-a227-d47181773234",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bc44740b-3a5a-405c-85fd-a3d15a295e36"
        },
        "item": {
          "id": "81ad3711-d26b-4dde-bace-2aa4cefef65e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fcc617dc-d481-4366-8ab9-91f095828fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469977b3-733d-4d99-9048-dfbfa920db2e",
        "cursor": {
          "ref": "18f0646e-3b95-4f0a-8570-7f0b7c2f796f",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "763d7a8e-5b63-49af-ad99-8f5672b80d22"
        },
        "item": {
          "id": "469977b3-733d-4d99-9048-dfbfa920db2e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a94b0eed-4dff-4aae-8b1a-1f2b64f2aaa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279dd12e-0f1e-46bb-b8c9-f0a91d56056a",
        "cursor": {
          "ref": "43932cd6-4bf2-4f87-860a-752c5a28ab9f",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "32a12c38-07b9-48df-ad24-7fa7d2529cb6"
        },
        "item": {
          "id": "279dd12e-0f1e-46bb-b8c9-f0a91d56056a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "93e9cd00-15bf-4ca1-8600-1cc28a87e19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4382a2-151f-43d8-9382-c44c79a7ff18",
        "cursor": {
          "ref": "d2c3a59e-db5f-4103-881e-03179575aa97",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6ff7238f-76a3-47bb-a82c-f56333c92d3d"
        },
        "item": {
          "id": "bc4382a2-151f-43d8-9382-c44c79a7ff18",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "31fafb3b-9204-45e8-9ac5-073628f453b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af6aeea-b76a-4851-965b-886924653a43",
        "cursor": {
          "ref": "fa18a426-ca17-4ed8-a556-9f07612cced6",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8d0a73e3-a098-4a63-9b57-cf293a3253a5"
        },
        "item": {
          "id": "6af6aeea-b76a-4851-965b-886924653a43",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4c9e8994-36d3-42b9-bff6-990f633f03ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c848f9e1-9d14-4de6-a6c9-89c8545d85df",
        "cursor": {
          "ref": "2b15256d-6688-4f75-8890-124c320c373e",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bbb0db05-6385-4d30-baca-10a576dd9680"
        },
        "item": {
          "id": "c848f9e1-9d14-4de6-a6c9-89c8545d85df",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0746bf53-a4e5-436d-9eb3-7c9c07ba6332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aecd039d-276b-4460-b6ed-1f7832baf5ce",
        "cursor": {
          "ref": "668beed3-0d58-45e5-9f43-f7aa54351ba0",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c89d4219-4a21-43d3-aea0-243db55592a4"
        },
        "item": {
          "id": "aecd039d-276b-4460-b6ed-1f7832baf5ce",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1a372143-b396-4ff8-a8ee-bee07e935e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ca69c8-bb41-44a6-9735-1cc193f1994e",
        "cursor": {
          "ref": "b347f52c-931a-4237-b03c-2c6fecebb1f2",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "99c11737-17b5-48aa-915c-209f526a2e81"
        },
        "item": {
          "id": "89ca69c8-bb41-44a6-9735-1cc193f1994e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5e29950b-0f0f-4d86-9b49-4dabffcfe790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1146b91e-9084-4986-b5e1-3e8b9ff92dcb",
        "cursor": {
          "ref": "f48f5379-a8a5-456e-9b3c-b945d5b81f41",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8ee318a6-437d-42df-bd64-4abdc4c17b41"
        },
        "item": {
          "id": "1146b91e-9084-4986-b5e1-3e8b9ff92dcb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a8c2f7b4-89d8-4b43-939a-726f76597bbf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2562a3cb-bfcc-4cf2-8b24-414cf3a85113",
        "cursor": {
          "ref": "810b5d20-7061-48de-9109-ab0c44aebd83",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "76271cf3-ac36-41f6-b6e9-10c94e7b6cc0"
        },
        "item": {
          "id": "2562a3cb-bfcc-4cf2-8b24-414cf3a85113",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "90e80de1-0684-4c9f-8b9d-35e942c2602d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 522,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83583ae0-0ce5-41e9-aa30-7e4ea73745df",
        "cursor": {
          "ref": "f66460a3-8661-483a-b52a-fb6f1d9a50b2",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d54bb7a5-9101-4fa4-aaa3-6b5be4176bf8"
        },
        "item": {
          "id": "83583ae0-0ce5-41e9-aa30-7e4ea73745df",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e8ebc2b1-63b5-461b-89c8-69319125ab52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83583ae0-0ce5-41e9-aa30-7e4ea73745df",
        "cursor": {
          "ref": "f66460a3-8661-483a-b52a-fb6f1d9a50b2",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d54bb7a5-9101-4fa4-aaa3-6b5be4176bf8"
        },
        "item": {
          "id": "83583ae0-0ce5-41e9-aa30-7e4ea73745df",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e8ebc2b1-63b5-461b-89c8-69319125ab52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe99d2fc-052a-42d7-9d71-5e7927b18d59",
        "cursor": {
          "ref": "cc9a280b-fd1a-48cc-9204-36ad42604623",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "eb9653f3-943e-4512-a047-d324ee123b1c"
        },
        "item": {
          "id": "fe99d2fc-052a-42d7-9d71-5e7927b18d59",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "87deee2a-3c93-45f1-9898-50c57e25e6d7",
          "status": "OK",
          "code": 200,
          "responseTime": 308,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "fb3acaa9-6568-441d-abc9-db9008be454b",
        "cursor": {
          "ref": "c04544c0-0348-41c4-89a8-6de6487ab14a",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "da1f7c6b-80ca-458a-a863-0a79f64bbb1d"
        },
        "item": {
          "id": "fb3acaa9-6568-441d-abc9-db9008be454b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1094bcfd-e475-4284-b51d-d5b37c3f6b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77e3795-baf3-4d44-82d4-b2cb48924aef",
        "cursor": {
          "ref": "bd29e58e-c449-4f3e-9077-83fb03b16f70",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "61273dea-65bb-45c4-ac48-d83eb760b611"
        },
        "item": {
          "id": "f77e3795-baf3-4d44-82d4-b2cb48924aef",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "75862d94-3675-4b42-872b-2d9174c9872c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1a5f66-ccc1-42cb-9247-0afb96b441d5",
        "cursor": {
          "ref": "364f392e-b7a1-4630-9575-0c20e981769e",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "946e900d-5a33-48f8-bfae-ba89cf9ebfbe"
        },
        "item": {
          "id": "fd1a5f66-ccc1-42cb-9247-0afb96b441d5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "606f9d76-086a-4b21-a210-3ee512ce8a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb98056-496a-434b-a849-93f3219e919d",
        "cursor": {
          "ref": "047c64f3-85d9-4b30-abf4-d94a1e902471",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fd4c1eb2-da5f-41d8-98e1-40c3e6ebb512"
        },
        "item": {
          "id": "edb98056-496a-434b-a849-93f3219e919d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b80cadeb-45fa-4c7f-982e-acc8684f4d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af30dcb4-cd20-4236-8f3f-f1feaced4822",
        "cursor": {
          "ref": "c9a864ef-2145-4caf-b25e-c83cd463b958",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "863fb4a7-92ce-4341-8354-0f3f0646a667"
        },
        "item": {
          "id": "af30dcb4-cd20-4236-8f3f-f1feaced4822",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ba663229-aeec-414b-90ee-1def4b432816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e504ed-66c1-49d9-a49c-1fff89e66c8f",
        "cursor": {
          "ref": "773713db-4e1b-42db-81f6-c96691a7d278",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7e288e4f-25b1-451a-8334-2723ffb228dc"
        },
        "item": {
          "id": "11e504ed-66c1-49d9-a49c-1fff89e66c8f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6306e455-f9ba-4481-a3a4-3b46ce425582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff79a795-0afb-48a3-a715-b95e5c7c8e09",
        "cursor": {
          "ref": "16557507-6cdc-4f58-8e90-3bc4f01a2030",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "bd4d888a-98cb-46f2-8831-5e74981a876b"
        },
        "item": {
          "id": "ff79a795-0afb-48a3-a715-b95e5c7c8e09",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a1acd85b-0d56-47d7-984f-b73b4762f69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 2009
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a258e5d0-06dd-4a4b-9dce-7851b6e3dfed",
        "cursor": {
          "ref": "003126e4-673b-4046-9abf-bf2e8f59eda9",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "520a3f23-8a44-4b06-9d5d-c8cc0a14f632"
        },
        "item": {
          "id": "a258e5d0-06dd-4a4b-9dce-7851b6e3dfed",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d13f492a-8822-4d0d-a54a-e3580bddd280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 2010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90075d5-3fb7-4bf7-acbd-811a7a44966e",
        "cursor": {
          "ref": "28c78c9c-c4bf-4003-af56-28a7f2c1f3fb",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "da39b9a0-54e4-47dc-b3f5-08e6b1885fd6"
        },
        "item": {
          "id": "c90075d5-3fb7-4bf7-acbd-811a7a44966e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f3326cff-bcff-4c7b-b783-5dcdf3e6a132",
          "status": "OK",
          "code": 200,
          "responseTime": 632,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:155)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:155)"
            }
          }
        ]
      },
      {
        "id": "29c5798f-bbaf-441d-b820-5f8bf44848c9",
        "cursor": {
          "ref": "2f2fd7c3-54d1-446d-8170-97369f3cff0f",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2493a776-f6e2-48f1-83a7-1a932f73c23f"
        },
        "item": {
          "id": "29c5798f-bbaf-441d-b820-5f8bf44848c9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "78836843-7b09-4cb2-a9c4-d6cf156a0233",
          "status": "OK",
          "code": 200,
          "responseTime": 740,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:156)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:156)"
            }
          }
        ]
      },
      {
        "id": "205eda0f-a4a9-4d33-8b78-198cd29b8a6a",
        "cursor": {
          "ref": "2d5c70f6-7379-4e74-8f59-6f23068f2da0",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4075426f-19d2-4909-82f0-5311a311c037"
        },
        "item": {
          "id": "205eda0f-a4a9-4d33-8b78-198cd29b8a6a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e291eee6-4003-4cbb-90f6-2f3b2787c143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 2466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56f2397-0e5d-4880-ae84-08729b6b670a",
        "cursor": {
          "ref": "95c463e6-ba48-4416-b9c0-1fd36422602f",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "464c59f2-0011-461e-ba63-048d7bf33b5e"
        },
        "item": {
          "id": "f56f2397-0e5d-4880-ae84-08729b6b670a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "6714c066-d91d-4256-af73-d3794ec6b2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac27df34-008c-422d-a612-37887a61b1fe",
        "cursor": {
          "ref": "e9b9c877-dff5-4ec8-af89-df45d79f1959",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3109ab2e-0dcd-49d1-9a12-78b9f2a3612c"
        },
        "item": {
          "id": "ac27df34-008c-422d-a612-37887a61b1fe",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4c2146a4-8326-44d1-be52-ad7ded131f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 2455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0fcacf-81f5-457b-b9b2-1f5fc2ba3472",
        "cursor": {
          "ref": "971970b9-1584-43e6-9c01-1ce3207f865e",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1ca7d009-5f53-4ea7-ab60-596cfcf0e6ac"
        },
        "item": {
          "id": "4f0fcacf-81f5-457b-b9b2-1f5fc2ba3472",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0994d810-3000-4e3d-a48f-09fd7bd5a527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 2456
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cfd6e9-c097-4735-aebe-010b7f053e20",
        "cursor": {
          "ref": "c9263d82-f68e-4fe9-bd1c-1ab1982f0412",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e2afa623-edb3-483a-915e-ef6ea0b8c052"
        },
        "item": {
          "id": "49cfd6e9-c097-4735-aebe-010b7f053e20",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "34fa81ee-b365-457e-a669-5d6696725841",
          "status": "OK",
          "code": 200,
          "responseTime": 574,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:161)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:161)"
            }
          }
        ]
      },
      {
        "id": "2aa75deb-52a4-4c51-8b57-9b76d122e900",
        "cursor": {
          "ref": "05bdb3f0-3731-461f-b151-ed7f3ef9e721",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6af183b3-a4a5-4787-bfc1-be94b87ff1e3"
        },
        "item": {
          "id": "2aa75deb-52a4-4c51-8b57-9b76d122e900",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "05621c08-4ac9-4018-9851-d8ea1db399ee",
          "status": "OK",
          "code": 200,
          "responseTime": 1699,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "05c30775-1901-40ad-8058-b0d78a87a754",
        "cursor": {
          "ref": "1b21a461-d833-4d15-8e60-477db7d3debd",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c3487dda-fa2c-44c1-8dd7-3e19ef1ad83f"
        },
        "item": {
          "id": "05c30775-1901-40ad-8058-b0d78a87a754",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5690c812-9f97-4a6d-970c-2e3365d92fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e2a461-3b18-4058-93c2-fef6a485e8f7",
        "cursor": {
          "ref": "b2d13cdd-22da-4c27-90ec-cb9837832618",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "14678186-888a-4834-9aad-a7e715ad8089"
        },
        "item": {
          "id": "15e2a461-3b18-4058-93c2-fef6a485e8f7",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e0fcc1c9-c212-490e-9f22-77f6409d8902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fd275b-d6ae-402e-b1dd-096e0b229439",
        "cursor": {
          "ref": "a3f14c9e-7a6d-43cc-9ac2-950683bc2e5a",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3cafe24d-1a10-4ea4-8097-13d71c833f1c"
        },
        "item": {
          "id": "c1fd275b-d6ae-402e-b1dd-096e0b229439",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "66bd9eef-f327-4177-bade-e36d779738e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63830015-2d17-4f1e-9278-78b3b7978389",
        "cursor": {
          "ref": "911436c3-ca9a-4e44-a7db-514b68526ffb",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5b4cb5ac-3f49-4788-8255-9230e92684f1"
        },
        "item": {
          "id": "63830015-2d17-4f1e-9278-78b3b7978389",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3b5599b7-bfc6-439d-b6a1-178cecd1cb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773d7d9e-da43-4c14-95e1-af5729f85c29",
        "cursor": {
          "ref": "8e8b4b21-9b95-4a3a-8616-8aac488fca89",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "84463780-fa71-4d74-a438-16501c7a6ff8"
        },
        "item": {
          "id": "773d7d9e-da43-4c14-95e1-af5729f85c29",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "62c985d9-785b-427d-a9f0-4e0a121e46ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56147a0e-fd5e-4cb6-b4d8-b5985cdd4294",
        "cursor": {
          "ref": "6e8468c8-e2aa-4e73-b63b-8afd130c0f49",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "68e85b97-1d1e-4d08-8903-112049dc367d"
        },
        "item": {
          "id": "56147a0e-fd5e-4cb6-b4d8-b5985cdd4294",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f1d8dbe6-8bc7-41a2-bde5-5fdb0a8c7886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bc78ef-0d02-4409-8635-48a45c4b94ea",
        "cursor": {
          "ref": "d81f4fc2-b860-4116-b453-5dbb4b0110ac",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "da2bf452-1ca9-4552-a089-774664022346"
        },
        "item": {
          "id": "24bc78ef-0d02-4409-8635-48a45c4b94ea",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2aa21cf2-7c66-4d14-bc33-0511aaaa5f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b307701-120e-45cc-85ac-bb9a0e9fabdd",
        "cursor": {
          "ref": "81f58218-373c-4e12-b742-92773caa3508",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "38f05868-ce6a-46e3-a941-4b59801237e7"
        },
        "item": {
          "id": "1b307701-120e-45cc-85ac-bb9a0e9fabdd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a110a072-f254-4fb5-ab4a-f1a5aabe07fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8caa58-ad92-48ec-a7c5-7c861490bfe7",
        "cursor": {
          "ref": "6680519a-75e0-44fb-aee7-33ceccbbe93b",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f4784d61-ab63-468e-b784-a054df773381"
        },
        "item": {
          "id": "8f8caa58-ad92-48ec-a7c5-7c861490bfe7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e9e1bd85-f7be-4c68-85cf-1c93a0d4f7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5e128d-ce50-4d17-adde-ce4e6fe3eaad",
        "cursor": {
          "ref": "c0cb8581-55a7-4437-a19b-5f1a8704f069",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8129e816-f4c3-480c-a298-713ea1e1008c"
        },
        "item": {
          "id": "8c5e128d-ce50-4d17-adde-ce4e6fe3eaad",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "32abfc87-93f5-4703-bf48-965c9f53da76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3935b749-10be-4e67-8f71-177fc3f3713e",
        "cursor": {
          "ref": "09ade4b3-5205-4dd4-8206-1c3fa6200578",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0eccc83a-de9b-45c7-8715-11f3b694957c"
        },
        "item": {
          "id": "3935b749-10be-4e67-8f71-177fc3f3713e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "35214d4c-e731-4670-9fcc-e9376f3c1a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894da470-9dae-4933-8612-49ec868751af",
        "cursor": {
          "ref": "a5bbcb09-c379-4f41-92f8-cfb0b6b9d71b",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f274c219-2fa3-456d-b89d-1d8956b11bdb"
        },
        "item": {
          "id": "894da470-9dae-4933-8612-49ec868751af",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c9558b54-281c-443a-a288-86714f32571c",
          "status": "OK",
          "code": 200,
          "responseTime": 310,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "cbd82f08-6b0d-4cb0-9a40-e350c761a01c",
        "cursor": {
          "ref": "3c1971ae-b070-4f4a-8b64-ab417ea0d031",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7cb1bcef-f7e7-4df4-b48f-8f4f7740385d"
        },
        "item": {
          "id": "cbd82f08-6b0d-4cb0-9a40-e350c761a01c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "72ccd75b-f09d-482b-adf4-87e4c957dad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3907198-34a1-46e2-a64d-7fcd4531813c",
        "cursor": {
          "ref": "652428df-2ccd-4abe-ac53-e837f1ecd87b",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c2ffdbd5-6a87-464f-965c-baeb1112f8c9"
        },
        "item": {
          "id": "b3907198-34a1-46e2-a64d-7fcd4531813c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "efc44d2a-3bb9-4b22-a943-72f8a07f6522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e709d31-5bd0-43ed-8de7-d9bbeeb24a57",
        "cursor": {
          "ref": "cf91fa88-7efb-4a87-adfb-80f141bb58be",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "784ec35e-1aca-4c2f-95dd-ef797334bdfd"
        },
        "item": {
          "id": "3e709d31-5bd0-43ed-8de7-d9bbeeb24a57",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d87080e8-6154-47be-a6ce-0726acecb23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c270344-ead3-4085-8927-2f71d53dea60",
        "cursor": {
          "ref": "fa1834c4-7802-428c-a51d-5118f915c634",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e1efc6ff-1d40-44e2-86e6-e5d89c9c8cd7"
        },
        "item": {
          "id": "6c270344-ead3-4085-8927-2f71d53dea60",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "92e09458-516a-4140-94b8-4117391e4ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ced120-4720-4fbb-ac15-b48fe1691a29",
        "cursor": {
          "ref": "7b121d4d-ac9d-48d1-a7d3-8d1a1d66f072",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b5cdb9a0-419e-4460-8714-053a4dc5a79d"
        },
        "item": {
          "id": "c2ced120-4720-4fbb-ac15-b48fe1691a29",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1ef59095-6b62-4b99-a1d1-aeba3a222ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d5e847-5410-45d2-b2f1-2c53e619dc2b",
        "cursor": {
          "ref": "271b4aee-38b4-440b-8447-1cf4c5da0768",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e7473534-878f-458e-b495-7a723e339b8b"
        },
        "item": {
          "id": "e2d5e847-5410-45d2-b2f1-2c53e619dc2b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6fe71278-715e-450a-974e-6a40f027793f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2deaef6-23f4-4f15-8734-7bbb101a24d3",
        "cursor": {
          "ref": "7d799bbb-16ab-4582-9a71-c84593acfcbc",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2f8d20b7-2256-4d0d-851b-568a43aa351e"
        },
        "item": {
          "id": "b2deaef6-23f4-4f15-8734-7bbb101a24d3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c2c642e5-e3bf-4614-ae71-cd051a350d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e636aee7-edb9-46ca-88d9-c54c5dc80d14",
        "cursor": {
          "ref": "b72091fc-8bf9-4c5b-9435-319163e96af8",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "eeb0d7bf-8ed5-4b93-8620-905354f4eb3a"
        },
        "item": {
          "id": "e636aee7-edb9-46ca-88d9-c54c5dc80d14",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0aaa99a8-880f-4679-8094-3099a6f52975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7c5c20-56d4-4b49-b09a-ec9ebd96e98b",
        "cursor": {
          "ref": "d0022536-1a34-4c73-860b-a1a17e0f384c",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "31548175-889f-4379-9a35-4e0e561a9b02"
        },
        "item": {
          "id": "5e7c5c20-56d4-4b49-b09a-ec9ebd96e98b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a738d263-e8d1-4aa4-a14f-a5082964f36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc9ebb9-bc3f-40cf-8c5a-b3e304469ea6",
        "cursor": {
          "ref": "92ee63f5-407b-4921-8983-19b98f3390b4",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "63402f81-0f14-4b3b-8389-7aa5f043430c"
        },
        "item": {
          "id": "2fc9ebb9-bc3f-40cf-8c5a-b3e304469ea6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4ba72b9c-30ea-4bda-b7e3-eb98e773ed0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e592c7-487e-4156-9eb5-039f7293e555",
        "cursor": {
          "ref": "2ab973cf-91f2-4292-819a-f33d8279348b",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8ff2660c-3ba4-471b-8630-fd078084d5f7"
        },
        "item": {
          "id": "36e592c7-487e-4156-9eb5-039f7293e555",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0958d671-4284-4868-aa45-4046a7479848",
          "status": "OK",
          "code": 200,
          "responseTime": 322,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "b30951de-0062-401e-919d-cc763d1a2d9d",
        "cursor": {
          "ref": "156338f0-a6ad-4f99-b292-c08bce2dbf8d",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2aad4be9-eda0-4783-965a-3b1aa48e2420"
        },
        "item": {
          "id": "b30951de-0062-401e-919d-cc763d1a2d9d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2a9e5660-e364-412a-9eb1-99d4e6eb8826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e90cd1-eed9-4ffc-aeca-79754f8b3fd8",
        "cursor": {
          "ref": "7452c503-0f80-4226-b31c-68d6c634f601",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0006dc11-eb99-4d93-af2f-7db758ef2cff"
        },
        "item": {
          "id": "c6e90cd1-eed9-4ffc-aeca-79754f8b3fd8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6dbbfa96-4206-49bf-b889-ee8f33a9d1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12393818-65ca-414d-9262-3ba889bb6c06",
        "cursor": {
          "ref": "73534917-29e5-4c11-b089-c9979d92247f",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9bfd225d-3ba0-4bb3-98b2-4516204ba2ce"
        },
        "item": {
          "id": "12393818-65ca-414d-9262-3ba889bb6c06",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "375af417-3681-4ce0-8218-08c88b810470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f44ba2-eb6c-477f-9655-656cadd70343",
        "cursor": {
          "ref": "572f98b5-fc7f-4bfc-835e-d1d1eda68128",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "53b4cd0f-2d6b-466a-b4cf-03ea1857e0cb"
        },
        "item": {
          "id": "a0f44ba2-eb6c-477f-9655-656cadd70343",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3d4970b9-8ca0-4216-aa8e-b8b0c328725c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4937872-3219-4a47-9413-c3503e3efb2d",
        "cursor": {
          "ref": "6b219154-b7e5-4ac6-9d5c-bf8d8b079cc5",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "53ab663d-901c-410a-9f9d-5339a53b30df"
        },
        "item": {
          "id": "f4937872-3219-4a47-9413-c3503e3efb2d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1feb1b23-fc0b-4767-b253-1be0bc649cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84880dc-af5f-4bb6-88c4-c809aafe17c1",
        "cursor": {
          "ref": "cfbb29d3-8863-4fb8-9125-0cee26961414",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "10a13e81-5377-4b55-9ffb-e575ddb9fc85"
        },
        "item": {
          "id": "c84880dc-af5f-4bb6-88c4-c809aafe17c1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b7aa887b-b990-4ace-9458-511f4dc130e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df330e32-7ac5-480d-ba6c-f33877d5e7df",
        "cursor": {
          "ref": "2219e645-dc08-4c4a-9bd9-3634e9010933",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "acba4dd6-c35b-4e35-91d4-a8dcec414733"
        },
        "item": {
          "id": "df330e32-7ac5-480d-ba6c-f33877d5e7df",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "01620d3e-d6b9-4280-bb0f-86d3147ed95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd6ae2a-3918-4eba-aac4-9afdd6c09152",
        "cursor": {
          "ref": "50906e1c-bebe-46e9-b9d6-d24a614a7645",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8e2aaf6c-9bcf-4c24-9d66-8d665c042943"
        },
        "item": {
          "id": "2cd6ae2a-3918-4eba-aac4-9afdd6c09152",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8c61f04f-9c46-4e3f-8ba8-db062208a63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efe3569-9c58-42ec-8b67-ca6301733349",
        "cursor": {
          "ref": "e50456af-27d8-418c-9e20-ef124a354e2b",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "46744759-3b24-4e17-83d1-53260be4a92c"
        },
        "item": {
          "id": "4efe3569-9c58-42ec-8b67-ca6301733349",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bf91053b-0558-4f71-97ec-312bf3cdfb0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23162d37-6ffb-4066-889b-f573517c69d3",
        "cursor": {
          "ref": "98255e3a-4c0b-4c19-8f8f-e852dbbbd001",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2e6bc40e-e584-4d65-b81a-f7fb3e8c1682"
        },
        "item": {
          "id": "23162d37-6ffb-4066-889b-f573517c69d3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7acdab26-55ce-4d67-8518-af525c1aa410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c41adae-b11f-4d37-ae26-dc8f795180cd",
        "cursor": {
          "ref": "09d5fca1-296b-4e51-be93-3b7109ca150f",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8ccba38b-0581-4c31-96bc-820fdb025264"
        },
        "item": {
          "id": "5c41adae-b11f-4d37-ae26-dc8f795180cd",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a30ac9e0-b415-442d-a050-4b11f3c2ab22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a6ae71-f40d-4e53-8b2c-dea9aeb0d340",
        "cursor": {
          "ref": "b11af0d1-2b1b-42bf-9aeb-bf9507aba08e",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0143d7e5-cde1-485d-9a82-11d86dfa72ec"
        },
        "item": {
          "id": "f1a6ae71-f40d-4e53-8b2c-dea9aeb0d340",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f8039ccc-e59c-4e00-be9a-4a1543ca9a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b93f980-56ba-49c3-a135-71f93c9b59d6",
        "cursor": {
          "ref": "44c8f62b-f73f-46db-b0c7-2d760c682b49",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6c58bf65-353a-4954-b4e3-210accc25de4"
        },
        "item": {
          "id": "5b93f980-56ba-49c3-a135-71f93c9b59d6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "62d858f4-6823-47fc-b60f-e73f4216aa92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ffe572-400e-4cb7-afe1-3114aed18c21",
        "cursor": {
          "ref": "fd566924-4d34-40fa-8cee-8157d476da85",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "caba719d-d5b9-493b-94ee-d9f10582d69e"
        },
        "item": {
          "id": "83ffe572-400e-4cb7-afe1-3114aed18c21",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "04f5e833-41bd-42b3-9b55-57cfb3178984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d375bfb9-040c-4a98-97ee-472200b8579d",
        "cursor": {
          "ref": "6a358f7b-ba34-4263-8b90-1ba457b30025",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9b9c84ac-a951-4a39-9cbb-201dc1bcb73c"
        },
        "item": {
          "id": "d375bfb9-040c-4a98-97ee-472200b8579d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c2a80dee-7321-4c5a-8356-ad5ed63bdaea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d18a62f-b053-45a7-b2c1-b90b7e8df084",
        "cursor": {
          "ref": "dcfcf683-b1f9-4ce7-8ebd-b4e35b080ced",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f45cfed0-445c-4387-b685-381f596393cb"
        },
        "item": {
          "id": "0d18a62f-b053-45a7-b2c1-b90b7e8df084",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "89170178-49ba-46e9-aa1f-7d53c35af96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 876,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead4db94-5041-45c2-ad30-401d2cbeb81f",
        "cursor": {
          "ref": "cbfeb440-a7a9-4419-9eee-d59953c75362",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bb58ff78-d047-4580-8f66-869000c3d129"
        },
        "item": {
          "id": "ead4db94-5041-45c2-ad30-401d2cbeb81f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c0df0a55-9e06-44cc-9f25-280b526af46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d664d1-07db-4d0d-84e0-bb641ca856d0",
        "cursor": {
          "ref": "98c70c91-6a76-4982-ab14-cd44eac3d665",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "be605774-a3f3-4236-935b-513f35d51e39"
        },
        "item": {
          "id": "f7d664d1-07db-4d0d-84e0-bb641ca856d0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "74a11bdb-ad5f-4a5e-b6dc-e974c30ace2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1089,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dae6295-8b76-4c5c-b2b6-9bdbc5bf9802",
        "cursor": {
          "ref": "b0a7a524-1992-4907-8746-7536ae7c5372",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b2ac4abf-c08a-4e8d-9a13-0aa299c8785c"
        },
        "item": {
          "id": "6dae6295-8b76-4c5c-b2b6-9bdbc5bf9802",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a509d589-a261-4bf3-afd7-a87c1148ae6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148eed3c-89d7-4cca-989f-833c3e47f805",
        "cursor": {
          "ref": "f4c670ba-a17d-43ce-b2d1-5b29c3dab2de",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e5d2de56-492f-4674-9c4f-5e66c2e28350"
        },
        "item": {
          "id": "148eed3c-89d7-4cca-989f-833c3e47f805",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e59135ef-95ea-4368-9f16-2dbb8ca52443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b667449f-9a0a-4be7-aaa0-a7274756d7ef",
        "cursor": {
          "ref": "30d5e140-8ad9-4c7e-a9bd-5e0f422a4848",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "21da12c2-cdbe-4027-bf12-69624ca1e308"
        },
        "item": {
          "id": "b667449f-9a0a-4be7-aaa0-a7274756d7ef",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3e8244a3-3791-4c10-80fc-9497d0f27b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 990,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144cffbe-b544-42db-b3f9-d16caa904f11",
        "cursor": {
          "ref": "5a753507-8cea-427f-83c8-b9fb46b564d4",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8fda283f-3755-499b-901e-ea56e2113107"
        },
        "item": {
          "id": "144cffbe-b544-42db-b3f9-d16caa904f11",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9ed2f8bd-38fa-4b88-8bd1-358db9a43ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc8d9f7-33c4-4ac0-8b38-1c5e4c71d0c4",
        "cursor": {
          "ref": "f932c312-5195-44a9-a8f8-c0f1410abc1f",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "594d15b0-0234-499a-998c-91a84dc17368"
        },
        "item": {
          "id": "7bc8d9f7-33c4-4ac0-8b38-1c5e4c71d0c4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d2ada489-bde0-42b7-9cb8-934cd78d5fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e00933-4e71-4703-87ac-f232577ca475",
        "cursor": {
          "ref": "314a5d30-12db-4b91-8c0d-61d998555bfe",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "cad3c377-937d-47fa-856a-4dae4bcfdbcf"
        },
        "item": {
          "id": "05e00933-4e71-4703-87ac-f232577ca475",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "40a84720-5f30-41ce-9240-4979b992253f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a782ffb-70f6-45f7-b565-61d6072b13a0",
        "cursor": {
          "ref": "e6435470-f7af-482c-a40a-f88ddde948e8",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3e3b4fc8-18d0-4947-ab61-27b7cfe1f1ef"
        },
        "item": {
          "id": "7a782ffb-70f6-45f7-b565-61d6072b13a0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2c5fa123-a08b-426a-93f7-cd0769d673d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ae5800-4eb1-4bb9-8a00-d5ba5bd229f1",
        "cursor": {
          "ref": "dccfe25f-5ba0-48e8-a6c7-df7d045f870a",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b013d8cd-c045-4fec-bff5-9e18bd655c24"
        },
        "item": {
          "id": "b3ae5800-4eb1-4bb9-8a00-d5ba5bd229f1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "069fe9d2-c64b-42c1-b23a-c8e8838c72dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aaa11b7-11ba-4ec9-a352-23b5753b196d",
        "cursor": {
          "ref": "f07cab69-c5c2-4153-b95d-7f3946685b8c",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e8d82208-9f42-479f-8854-7ce447e6fb8d"
        },
        "item": {
          "id": "3aaa11b7-11ba-4ec9-a352-23b5753b196d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9f4aab69-e443-47d2-8d4b-4f4f87216890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2daa9faf-169d-46fc-a07c-4a8d239d7e62",
        "cursor": {
          "ref": "e77dac54-c0c6-48b2-ac58-ecbe53bc885d",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "76591601-ac8f-43e1-8c40-c3751a049154"
        },
        "item": {
          "id": "2daa9faf-169d-46fc-a07c-4a8d239d7e62",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bb01c4dd-47f7-4f5f-8c64-420285b4b827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790ab265-83a3-4ed4-b9d0-56e816feee91",
        "cursor": {
          "ref": "b31eb73c-0721-42b2-b365-86923b3e9fad",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "11c75308-9893-40fc-9977-1ddfd16ba891"
        },
        "item": {
          "id": "790ab265-83a3-4ed4-b9d0-56e816feee91",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "973fd232-67c4-46d3-939e-53c689b54cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f9dfee-7817-438f-a343-7dd05ea4cf40",
        "cursor": {
          "ref": "cdf9e892-e272-4fe6-85ba-3133390f5a98",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6c21228f-df9d-4dd3-a0ec-354217a61d09"
        },
        "item": {
          "id": "e8f9dfee-7817-438f-a343-7dd05ea4cf40",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b8c4abf7-4015-4d9e-881e-611255c2b640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955f1a69-db93-4580-8a1b-9bc354c39315",
        "cursor": {
          "ref": "c1f37aad-13cd-4ddc-a151-93e4a92a0317",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8ca1df33-e509-4d77-a9bd-2674dccc81cd"
        },
        "item": {
          "id": "955f1a69-db93-4580-8a1b-9bc354c39315",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bd766b59-f7ee-4643-a7ff-1e6ee78359b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4c57c8-c483-4fe1-8fbc-cc7cabaeb6e7",
        "cursor": {
          "ref": "3fb221c2-b3f7-4fdd-8372-ece4d0c97d6a",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "38119704-6af3-48cb-8a60-9bd120235645"
        },
        "item": {
          "id": "af4c57c8-c483-4fe1-8fbc-cc7cabaeb6e7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7e125366-78b9-4d25-a039-263ac9cb7e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23b2938-c7dc-42df-bf04-d7e4ddc04b4b",
        "cursor": {
          "ref": "8482d190-eb87-42f1-b70f-ce2e267bc4fa",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ddf06ac9-ca37-4c39-b42d-cd9cbb8ca5a4"
        },
        "item": {
          "id": "f23b2938-c7dc-42df-bf04-d7e4ddc04b4b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "42b06f2d-e8a2-416a-8e1b-377011db00ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6aadd87-e3e7-43c8-917f-0b1d81ea8493",
        "cursor": {
          "ref": "431413d3-491f-445f-8b0d-492bb23b3c8b",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5af8bfff-6a74-418f-ab27-53cdc860ff2e"
        },
        "item": {
          "id": "b6aadd87-e3e7-43c8-917f-0b1d81ea8493",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "18327423-ebf0-4ef5-bcc3-5433a2ba3f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe0417b-71e0-4444-8fe3-c37779013bbe",
        "cursor": {
          "ref": "b2e43790-07b4-4b73-9b65-1f604a9d13bb",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "80306c9b-e1f7-4d93-83db-c1a40026b8c5"
        },
        "item": {
          "id": "bbe0417b-71e0-4444-8fe3-c37779013bbe",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7713030f-bd23-4990-bf0a-f027169fc9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b08c7d-f12b-468c-ab83-1f21bda6ed7a",
        "cursor": {
          "ref": "eb6abeef-87ad-4386-9d48-a1bed250b49e",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "39351b83-58ff-4722-b428-4f7392dca982"
        },
        "item": {
          "id": "f4b08c7d-f12b-468c-ab83-1f21bda6ed7a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c3e3f5c6-aa0c-4740-970f-df083a3a11df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4fdd12-6857-4925-a3c1-4fc1090a542b",
        "cursor": {
          "ref": "6ef58163-e2ed-4cd3-bcaf-be1887069317",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f360a1a4-a97b-4cd1-94b4-fc3a553472c9"
        },
        "item": {
          "id": "ef4fdd12-6857-4925-a3c1-4fc1090a542b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "20824429-5278-43a7-8d85-1b6325470101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffaa406-46e7-4fd7-9438-ac190a14d9b2",
        "cursor": {
          "ref": "51e39956-6b4f-43df-b2d7-473a4ca080d9",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7c068dfb-5e26-4fa2-97d1-aec91b387918"
        },
        "item": {
          "id": "5ffaa406-46e7-4fd7-9438-ac190a14d9b2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "87ba4f49-f0c5-4407-9e4c-f358d81d996b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e13ae75-ac06-462f-85c9-a34eae66f84e",
        "cursor": {
          "ref": "0d8fa28c-a111-4c1e-940d-d6c295eb04d5",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4e7547ea-feaf-4504-95dc-eaf1ee106606"
        },
        "item": {
          "id": "3e13ae75-ac06-462f-85c9-a34eae66f84e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "eac561f6-cd7f-4839-96a5-004b91145de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a6b82a-c69b-414a-bfc0-ede906de7266",
        "cursor": {
          "ref": "8d4e138a-554f-4e2e-839e-2d2ef56c0fcb",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b7078161-bb72-449b-a027-6d8ec58f0125"
        },
        "item": {
          "id": "90a6b82a-c69b-414a-bfc0-ede906de7266",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2de05cb3-6a14-4cbb-a550-51cb1ac9e425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9036b953-fa34-4ff0-b074-aed8242dc568",
        "cursor": {
          "ref": "2b4e7339-4ed7-4017-ab2f-721077c2668a",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d80c3d67-0478-4884-ac3f-064ce28a39ec"
        },
        "item": {
          "id": "9036b953-fa34-4ff0-b074-aed8242dc568",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5d630870-2811-4800-9d79-7789af1f944c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225429fe-e0ec-4719-9089-0d4ec9c4a893",
        "cursor": {
          "ref": "757b9726-6d9d-464d-a5d4-cccbf0dbbdfe",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "630eb78f-d7b6-4827-a7af-7c972f26ef9f"
        },
        "item": {
          "id": "225429fe-e0ec-4719-9089-0d4ec9c4a893",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6d09bb3a-99af-4d2d-b5df-ba50f62d1648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa1ac9e-9b6e-4847-945f-146bad721b29",
        "cursor": {
          "ref": "b9d5f895-f79e-40a3-ad91-f7c3fd3dc84a",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f1ce7784-abd3-4369-8c52-ecbbc3379a6f"
        },
        "item": {
          "id": "0aa1ac9e-9b6e-4847-945f-146bad721b29",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e7c31822-5c3c-4f95-a70b-9631274b4138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e884dd-42b2-422d-83d1-cdfe4e16bc3a",
        "cursor": {
          "ref": "f744e62c-5f37-42ff-8967-b456e45a528b",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "eb440ac2-91c9-491b-b23b-edaacce7baa9"
        },
        "item": {
          "id": "c9e884dd-42b2-422d-83d1-cdfe4e16bc3a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3d43ce61-a033-4616-8f56-72599515b145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c99601-cfa2-40cb-a9c0-30c77d566f67",
        "cursor": {
          "ref": "6ac5cb2f-f82d-452f-9d08-c18356a0ff29",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2cf5fba2-cfb1-4d2b-a075-9698151a89b3"
        },
        "item": {
          "id": "65c99601-cfa2-40cb-a9c0-30c77d566f67",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "686f7488-41e7-4232-b6b1-5d42603eb703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33cd61a5-a798-478a-937b-1e79abb947f5",
        "cursor": {
          "ref": "adadbc96-e3e2-4ecc-88c2-db12c3c2dac7",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a613383c-96b8-420c-a8dd-cfdea87cc107"
        },
        "item": {
          "id": "33cd61a5-a798-478a-937b-1e79abb947f5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f5b4cf5b-b3f0-48eb-b712-dcaa19572b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eba9bf7-1f51-4a66-90d3-d6c91800a0d6",
        "cursor": {
          "ref": "760dad5d-bdb5-4747-b93c-112fcd9e776b",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "84aa3e23-41ec-4466-bc23-74caed0d9b2b"
        },
        "item": {
          "id": "8eba9bf7-1f51-4a66-90d3-d6c91800a0d6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8c00b81b-91bc-45b1-b6c3-1bf3588ec1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0990053-22f6-48b3-8655-97da9557eb94",
        "cursor": {
          "ref": "ff2674f0-370a-425b-b10c-1e11677352c2",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6405e9e0-2ef4-4b33-953d-16f2ec74155b"
        },
        "item": {
          "id": "b0990053-22f6-48b3-8655-97da9557eb94",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7dcbbfeb-8349-4dbb-b38f-bb4fe8af4682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cc97e3-ad5e-44e7-8b66-15e073df33b9",
        "cursor": {
          "ref": "e2c32d2e-62b6-4605-a1a3-4ea83b7a9307",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "12de2ddc-00bb-4e4e-80c3-26e7651e82c8"
        },
        "item": {
          "id": "32cc97e3-ad5e-44e7-8b66-15e073df33b9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c9935915-c7ae-4e13-bb7d-96a7576beb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be3d3ff-ab35-45cb-9395-d47178403ffe",
        "cursor": {
          "ref": "0b08a64b-6c8b-44c2-8270-aa90db8b4384",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f0deea0b-687a-4be6-828e-c1f3643d7363"
        },
        "item": {
          "id": "5be3d3ff-ab35-45cb-9395-d47178403ffe",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "66ddc908-7d54-4e93-aa8d-11b0bbbd9a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e51d6c7-37ac-4297-ae83-15138fc0eaaf",
        "cursor": {
          "ref": "d784f1fc-3dbb-43f8-9b68-2b03429bcf20",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "feda9931-8899-4137-ac45-c5136f5a3178"
        },
        "item": {
          "id": "0e51d6c7-37ac-4297-ae83-15138fc0eaaf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "39446412-368d-4601-8175-be76963f566a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b886997-93b7-44a8-8420-b29336c87493",
        "cursor": {
          "ref": "b579b98d-5a5c-4c14-a810-4cb619538b22",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "72c447de-c8eb-4636-b826-656fefecba2e"
        },
        "item": {
          "id": "9b886997-93b7-44a8-8420-b29336c87493",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9758b303-22a5-4499-860e-102f9498680f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9ab826-f526-47ff-9d68-c46ed29a0f20",
        "cursor": {
          "ref": "09d7bade-b4fb-4d24-aa94-5cf647814320",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b07dabd7-4e11-4841-b150-c9d0f838d601"
        },
        "item": {
          "id": "0c9ab826-f526-47ff-9d68-c46ed29a0f20",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "298e70a5-3c29-4460-a191-b212960b1bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3129948-3dbd-41ac-af73-e419e1fed244",
        "cursor": {
          "ref": "88fb0bff-b800-40ab-9fc8-c5d0359a486d",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1a2a17a6-ff70-45b7-a8d5-a9d5852d5e29"
        },
        "item": {
          "id": "d3129948-3dbd-41ac-af73-e419e1fed244",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "060e887d-aaa5-40e1-9c8e-c4498790a40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18ce5bf-063f-4ad1-b29f-55f88fe6f716",
        "cursor": {
          "ref": "0d26f8ff-a19a-418a-a6cf-252070e9b446",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8c876ab7-22a8-48f3-9bc3-71d9bd3c6546"
        },
        "item": {
          "id": "d18ce5bf-063f-4ad1-b29f-55f88fe6f716",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5ed2934a-16b4-4aee-8e1e-1332ce0ca5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c2d8c5-248a-4d29-8b3e-45e35de2d0c1",
        "cursor": {
          "ref": "83214940-7994-4912-a7fa-4a8636b82f8e",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5e37e1bc-567a-4884-abb7-a09da5fdfba1"
        },
        "item": {
          "id": "16c2d8c5-248a-4d29-8b3e-45e35de2d0c1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3872b5e6-e6c8-480c-aa7c-80bbd775475c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3b82ca-1068-471e-95be-c36559bde1c9",
        "cursor": {
          "ref": "beec4369-a88a-4353-8897-dbdcb21c7dc3",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "93d99962-33a1-4de0-a3b5-7abfe4ce2608"
        },
        "item": {
          "id": "ed3b82ca-1068-471e-95be-c36559bde1c9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f6f8a41e-c49c-48b1-b549-ea18a0758354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc73dfe5-10b5-4c17-9737-067ab5b5142a",
        "cursor": {
          "ref": "7a86c5df-a1f7-4014-8d4b-61d6bbd7cfa6",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "375ebcef-648e-4cac-b3f8-b2dca4669704"
        },
        "item": {
          "id": "dc73dfe5-10b5-4c17-9737-067ab5b5142a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d55de65b-8c7b-4c07-a21d-db54edbe18b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e3c538-f4b5-4e7a-9f30-bf2056dcf101",
        "cursor": {
          "ref": "15944cd7-c11e-4abf-89c9-3126c1bff707",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c829c704-f6d4-47d8-a9da-ba99cec96eca"
        },
        "item": {
          "id": "08e3c538-f4b5-4e7a-9f30-bf2056dcf101",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e670eae0-b44f-42f8-9dac-5eaaac0046a5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 308,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cc8cf6-b6c4-4b2b-b942-6c460ef99116",
        "cursor": {
          "ref": "b3b87959-4548-4118-adb8-ca05d801cff0",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6ab44411-a90c-49db-b684-002aea9640f5"
        },
        "item": {
          "id": "95cc8cf6-b6c4-4b2b-b942-6c460ef99116",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "357381fe-b410-4f5d-997a-4978aa91218a",
          "status": "OK",
          "code": 200,
          "responseTime": 340,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d353703-6de1-4a94-afd2-70992969cc41",
        "cursor": {
          "ref": "d287ae9c-5eba-4f3b-8edf-745195f03ae2",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e9606782-8999-4ad8-a0fc-0f2eb06be53c"
        },
        "item": {
          "id": "0d353703-6de1-4a94-afd2-70992969cc41",
          "name": "credentials_verify"
        },
        "response": {
          "id": "804251b3-2eb9-455e-8eae-0bbba2b2b72b",
          "status": "OK",
          "code": 200,
          "responseTime": 2003,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e062af29-920d-4d06-bdc4-1b5347fe1415",
        "cursor": {
          "ref": "eaf6a50a-d2a7-4f72-9fd3-0a2a5c480bbe",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6390cc69-89dc-4298-bf98-c0bf52b1a567"
        },
        "item": {
          "id": "e062af29-920d-4d06-bdc4-1b5347fe1415",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "39c43945-1a0d-472b-9cbd-e15bf70906d9",
          "status": "OK",
          "code": 200,
          "responseTime": 1721,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b262b22-04b4-49d2-b1a6-1887453416a3",
        "cursor": {
          "ref": "89f005dc-5621-43db-aef5-c8337cbe3098",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ddfad1da-4f8d-4c69-9d47-c0a50be945a5"
        },
        "item": {
          "id": "4b262b22-04b4-49d2-b1a6-1887453416a3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4aa46700-7bc0-43b7-9e24-3c9dbd6b7fae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b262b22-04b4-49d2-b1a6-1887453416a3",
        "cursor": {
          "ref": "89f005dc-5621-43db-aef5-c8337cbe3098",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ddfad1da-4f8d-4c69-9d47-c0a50be945a5"
        },
        "item": {
          "id": "4b262b22-04b4-49d2-b1a6-1887453416a3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4aa46700-7bc0-43b7-9e24-3c9dbd6b7fae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b262b22-04b4-49d2-b1a6-1887453416a3",
        "cursor": {
          "ref": "89f005dc-5621-43db-aef5-c8337cbe3098",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ddfad1da-4f8d-4c69-9d47-c0a50be945a5"
        },
        "item": {
          "id": "4b262b22-04b4-49d2-b1a6-1887453416a3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4aa46700-7bc0-43b7-9e24-3c9dbd6b7fae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7cee60-ef96-42af-b7dc-5067712c3a75",
        "cursor": {
          "ref": "4471b1ff-fec0-420b-b3ca-77e89412c608",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "046cf79b-627c-4d06-bbe4-e351e9cb576c"
        },
        "item": {
          "id": "0d7cee60-ef96-42af-b7dc-5067712c3a75",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "4c2081eb-fcfb-4b38-8277-5726584c6667",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 288,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98df983d-7854-40d0-96dd-e7e4554accdc",
        "cursor": {
          "ref": "bff8d002-ae95-41f6-a603-5bbe1521f6ea",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7073d04d-762d-4326-baa1-a5b304e44174"
        },
        "item": {
          "id": "98df983d-7854-40d0-96dd-e7e4554accdc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "32cc3ed2-d44a-4b3d-9ff1-630962268cab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98df983d-7854-40d0-96dd-e7e4554accdc",
        "cursor": {
          "ref": "bff8d002-ae95-41f6-a603-5bbe1521f6ea",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7073d04d-762d-4326-baa1-a5b304e44174"
        },
        "item": {
          "id": "98df983d-7854-40d0-96dd-e7e4554accdc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "32cc3ed2-d44a-4b3d-9ff1-630962268cab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd467ab-f89a-4f98-8df9-25a03ee64d74",
        "cursor": {
          "ref": "1e5cf533-7607-4cdb-aee9-a3f0829c52e7",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ffa5b3a8-a389-4650-9879-f4e4b0177651"
        },
        "item": {
          "id": "0bd467ab-f89a-4f98-8df9-25a03ee64d74",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0b47ba26-be4d-4fa0-a600-ec412de72181",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 518,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0027cc-80ca-4f42-9812-64c7f89fcb36",
        "cursor": {
          "ref": "e8f87180-88cd-45ba-846c-0327d1dc74d4",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f6bb8423-037f-4a23-a78f-2f89ebde4823"
        },
        "item": {
          "id": "3c0027cc-80ca-4f42-9812-64c7f89fcb36",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "976b8378-46c1-45fe-943a-9a0156023fe9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0027cc-80ca-4f42-9812-64c7f89fcb36",
        "cursor": {
          "ref": "e8f87180-88cd-45ba-846c-0327d1dc74d4",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f6bb8423-037f-4a23-a78f-2f89ebde4823"
        },
        "item": {
          "id": "3c0027cc-80ca-4f42-9812-64c7f89fcb36",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "976b8378-46c1-45fe-943a-9a0156023fe9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea242eb9-54fb-429b-8ce0-3b243dd44d6e",
        "cursor": {
          "ref": "ce18f1d6-419e-437c-a48c-176f5cec6106",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b938d7e7-dbbb-4de6-a4e8-6d37b5892779"
        },
        "item": {
          "id": "ea242eb9-54fb-429b-8ce0-3b243dd44d6e",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "6f26b557-1469-4b80-9ef7-b421238c0d2e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 520,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}