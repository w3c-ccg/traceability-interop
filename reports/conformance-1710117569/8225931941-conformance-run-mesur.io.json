{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "37f85191-aa22-45dc-b463-ab1270975cdf",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8e3e9bae-8d20-48a7-9ccb-93711b9f730c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2ea3065c-015b-44a8-9c85-4e9e03f85ec8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "069c140f-15c3-4f72-a222-f05eb8de56ef"
                }
              }
            ]
          },
          {
            "id": "c8a2b8d1-a92a-4cce-83a8-32ec6d499869",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6670c05-e956-48a8-a5d1-55f812969dfe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e1590d85-f7a1-4884-ba02-faee26cd6d05"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "99eb73ff-8fac-45a2-b1e3-5bc6c994d148",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "06988d1a-bcff-46b9-a622-c1c2c1950f2a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f4067f9-21c8-4d2f-949d-a8ce6d302a50",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8d58e0f-7a79-4f02-bea1-d36b974e2bbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ae97e86-2ad1-46ad-9522-1fdb2afc94cc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae777c23-ea2f-4f1c-b2ac-827d5bc40459",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d750d43-a846-453f-9c81-a36469d7b650"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "95abbff7-6d12-4018-baca-93b419806387",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f8755403-a80c-41c7-8c97-5ee14ca8101d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f157e71e-4d20-47a0-9e4f-9a6ba3c400ba",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "46abfec4-5e1c-444b-b909-d6a1dc2c7bee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dde51b2c-bdbd-4c0b-ab40-1a86fa70b70e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac857b92-a1ff-4604-8d97-fe9456f3aef5"
            }
          }
        ]
      },
      {
        "id": "cb308d69-4e64-44cf-b4c2-47f08590f548",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9bceccb1-9704-47b3-85de-272db8d008ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f47d77ff-c811-4919-a5c4-5e4723c9e8b3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "af51e113-361c-496c-8907-56a6bf9ec95e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c184a6d2-a01c-4f3b-847a-d882c34a0534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b0a7d55-4f35-4f75-8613-aafafa707700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b053cf72-c3e9-484b-981b-0a9369178bac",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c8c35d-1f57-4ba6-ac15-14720e523445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8057a46-9115-4324-9a1a-77e9674ca8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d52764f-489f-4260-ae47-0b1f1eba8baf",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0e780e-d7e3-4131-b384-2bfa2897a0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8619df03-7b4a-4ebe-abed-2c59047dd2ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "92920285-abed-4457-9b23-e46225e0c57d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55357489-24a3-43aa-9f7f-ff42171dbdcc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6394a696-c6bc-405b-9f15-f2c803105dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "826266d1-8921-494f-9b9e-59ec2251a61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33b97ff-416c-45a1-bb21-48b526c63cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d7ea18-3b02-496b-958e-000e08899b02"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "78fc2c94-900c-4d61-8ffb-efc5ba0537b8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "75909f76-c906-4801-97c8-02df4a02220e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac6e0227-ff8d-4da2-a160-61c7486130d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b129d7a3-16e1-4818-80a2-3288a0f2d107"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d27cc5c-8f1c-48d6-aae6-3069279c9ea6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "01a3212d-a390-4033-91b2-3dd207847281"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f443210-2296-4231-8c33-6bc0e9db13cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8fb2a4c3-b243-4a53-a7d0-6a119f8687d3"
            }
          }
        ]
      },
      {
        "id": "1b18752f-441b-46da-97d2-242dea73f998",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d19d69a9-8f6a-4178-83e2-40deeda7e49d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "556a9016-5f27-497b-ad2d-a1a67e04cbd3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f60ac1a0-2361-439e-98a9-036239522516",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7801d42d-f00e-4206-9405-ea595fb0454d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b2afc7-d326-41ab-af2c-54f09001ce03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ca28d3-6e2e-43a4-b519-d06fa44976f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06dd540c-2fac-46cc-a0cc-7b90b040a25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3abb574f-ad9b-49f9-a43a-928275e73a71",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81318d6-b99c-40e6-a636-735fbd2c6f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c9991a-2013-4497-ab74-147313321f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9768660c-b514-47fd-8ed9-833cfdbec5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f71b6bd-8518-49b3-afe9-acbbd65669b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202a4bb0-db83-4206-8058-370fa9d65475",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb820de2-9876-48b8-a6df-aab99175588e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28fd5d9d-943c-42a8-a56f-950bfbbe1b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27098ea-75c0-4747-8b99-16347d7c557f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "345fd616-0739-4d49-9217-de0f75bbd184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c967ed-9294-4622-a665-bffd1ac3c878",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d55c8a-6cef-4c3c-b999-8ed03dbda1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e350a8-2368-4c42-a584-30da9e7ff9e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123e8b15-ed8d-48d7-98c1-a7f5cb9502d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af98e709-5516-4bd0-a375-a6048c99df92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ddc3f7-4bff-461c-9067-1346655a21b6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781b0db0-a4ca-4ce8-a72b-fa47d7dd9744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da1cc6a-19b9-47be-881d-e5ca1166450b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70d06e9-2ef9-467f-a5c8-d2f23e2f4801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "425bf9f3-0ee8-4a7a-b520-c6d568039cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8f2a1b-6d1f-4b70-ac79-5f763472e086",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6394a386-dde8-4a2a-a058-97a0d6da75e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65955f8-cb96-4f0d-aa97-b5f87ae045c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076270f8-97f5-41ad-becf-f49acb2ce453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d341a211-80b7-4cc8-89f9-40df5ce99693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f284f47-9258-4a92-9ea3-66be502dede2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87415307-2078-45e1-be7f-ab9919f139a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9093b5-82c1-4d90-8fe8-ee1a4787201e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b58790-5803-4df0-8972-52aba144a68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9d721db-c605-4e64-a696-6f9da8c9757a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56ee987-af28-4712-be06-5a1c12cc3985",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f75fb0c-64ec-49d2-9e8c-2bc72561e8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85af329d-96bd-43cb-bd51-054832f3335d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32e8221-72f7-4599-a3c5-5ac2e93321df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee16441a-84ea-4856-8e10-d63305278a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e087ae8b-0755-434e-9721-2420fbb4f33e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b88fb86-47fe-4422-a64a-2de29fc40975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecad1021-cebb-4a4e-ace9-773a2c638490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7474a7f3-5963-4e7e-a509-6148be2ce85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30bd7c81-3d39-4d12-9fe2-45268e0efcb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec3aa60-81a4-4d01-9f49-a5c21327bff7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173e7270-24df-48d3-bb26-1415b7a64af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6779f4-7484-4703-9381-d4481ae54d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01feddae-612c-4fc7-8192-5c44ca4fdb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cc9ffab-a965-4c61-bfef-597699668abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663fdb86-2678-480d-b101-17ac00b79710",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c8f627-98d5-44b8-9ab5-4f23e9465ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a2dda2-383e-4f8d-bd5c-f28571cfdb6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d241cd-6723-4774-84c8-cd08c806b4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dc4e2f5-5181-4254-a471-089c1c956dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa427e4e-6e47-4799-8c18-07f29d8cc96b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17eb0607-35b9-4c23-bff4-2966f83655ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9517fd-1cce-44cd-beac-c2601e17ed84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653d1f84-cd89-4733-a8e4-57c55efa1808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd2ea316-cf22-408e-84ca-3b22f2959930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8679ae-ae30-4d1c-89bd-c3b6276e5cd1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3224fdf-ec07-419a-85e5-d6f766b7b254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085fea64-040a-44f6-b9b4-12826305fcf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d66396-bf46-457b-9413-85583e7f3dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "164533cd-d1b8-4ae7-9726-7df5b1fdb02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bb03a8-b1f1-4556-a6be-1ffa445dd7b2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc49e42-678b-4a78-ada3-6076b19b3171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efde71f0-6550-4983-9edd-ff92d6042755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cede84-6362-4a61-a43a-3d81fcf112e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f07c6e0c-3a7d-49f7-b200-80dd3675c8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccb1e16-d89e-435d-9798-28f961346356",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d52d390-fca7-4c3e-9ad5-5066bf219b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2d73f4-92c0-40a9-a4eb-45936828f5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af178b8-439f-4b89-ae12-3622f7771ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7766566-db06-4071-965d-a16fcd8c3ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcdebc3-a04d-4143-8970-4318309cedae",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5649c3f3-96c9-43ad-93c8-d963025bfb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0249cd01-6988-4bac-b1e5-a466ee5f372b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353b35b8-863b-47a2-afd8-fa7921ebe6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53a60823-80a1-41af-bede-4ba649cfe6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea62218-17f1-4a15-b18c-c6cb0fe69f9e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1143f70-f01c-4370-af65-0cc33a60c656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eabdec77-cc34-429d-831c-e169193f4505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbd9d03-7343-4fa8-ba90-74247942aaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "470a303c-50a7-485c-a0ae-2fb502530ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073b427a-987a-4ad5-8826-5f415f611e09",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9b79e9-ab0f-456d-a36c-4119b023d6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953cecc9-bf4b-4507-8670-2c9d2505804d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e310808-f52c-4a5b-b4a8-f17811a2a1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed978a2b-dc93-42b4-abf4-0d0b5dfc9512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19710aab-d468-4885-a2a6-87a98a1068ab",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831e9202-53eb-4a12-8768-51da559f4b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90587175-bc98-4be4-a1f0-e2ed6e958e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b583c4-fe3b-4535-b235-947ad977dd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b15a8ea-7018-452b-ae64-19c381c63c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb7c280-28af-40cf-ab0d-3a74e347ba1f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73189be5-7260-413d-985c-266ee57fdae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea349cc0-ef1e-48a7-8eaf-cf48b47c1867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be934beb-aca5-4d1c-8dbe-5108972f7b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cae325f0-9b54-492e-a3bb-e64b72ba6044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccf7e00-2523-41eb-bdc0-a141356b7599",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271f2ccc-52c0-49b6-8902-7ab0cefb1769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f932dc23-238d-406c-89c0-1016d30a38fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47c88c8-873d-4395-8659-ad3824fd40f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6177d1fe-7bb5-473f-b7dd-da560d847cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4b0703-0604-476b-bb56-e645b8945f51",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b4cc0c-6245-41b1-8bb1-59256f28fd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b589e55-dff9-4c00-bea3-7a8e3156164e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebd22a6-0fda-451e-9935-0f5191bf4666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2296219-cbca-40eb-8ba8-bc76dba75c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10914b45-c5b9-4b3f-8e3a-600bf7cdc3f1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7eae6bb-d1fe-4f9d-a288-0bde0cd883f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "722df170-c757-48e5-bf61-4263914428e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4616b9a-b18f-4a3d-a6c0-1d19608f29f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e4ebce-1cbf-49e0-b4e4-99327862b12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fc1e23-b6f2-4b02-8736-f77aaf7c62b5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6465d35-15e3-44c8-9e29-a0ff25a41842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de879852-cfe2-42d1-98fd-17efd2314f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca3c297-70e9-4ef7-99bf-55512c644f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "877bb351-42b5-4efd-b0cd-270aabef7081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf866e61-2ac1-4d9f-8448-ed6a95663841",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5523f0b-4a84-4b8b-bbf2-077c718c1b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762db5bb-4e43-4ac2-9787-555f5e6bfc55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f178868-8ac3-4b6b-9194-d3da40779278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "474c6c5a-18b3-4d41-aa37-de5a3454d369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c97ed7-b62b-4160-a1f3-4e826fb64110",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f47e1c-12b0-435c-946a-59ff61d6c515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98abe265-1995-4658-b760-983ca9c036d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57719dc3-9a88-4292-af61-2e833a2431bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba118b9d-16ca-4f06-a140-271a1486fc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890261c5-2981-4cfb-8fa1-d734dc83ac33",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a600318d-d3dd-4b88-a5ca-6404d9b9a768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cde19a-0802-420c-b008-60104586a211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec2d074-f835-47f4-96df-ec39fb128622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cfa2aaa-bed4-4a51-a903-edebdecec5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d772bd-4b22-49bf-8e5a-48502a1316c7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c60a0d-575e-4427-a1ea-ed7c114eb2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979f89df-c923-4c61-b27d-bd1a3322c5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d44611-3222-4397-baa6-cf3f609fa8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5971da4-c8df-4bd0-9585-23e2adc44428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6860e01a-71ac-4053-8986-52a8c1ebfbec",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd9837e-8f40-47a0-b846-1f25cce9ad49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9fd40b-697f-4d07-9a13-780986ce3460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ead5f1-ddc7-4383-8801-7916cf4103d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd84da4e-f3f3-4c27-9893-8a3a6c1d7f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db29ee9b-b469-4d5d-a553-a32c134c826f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd85d8c-394c-4134-9017-f14039672970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a06868-d298-43ff-8129-1421a6b947d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20221470-9da9-4a5c-a162-af770ef64fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe95919e-8b2f-4823-a9c0-ea4765d305a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66c9d3b-8c62-4177-9434-8bbf00ab2c50",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63830ba7-f19d-4c3f-a9b8-0cbbb1ad41b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "126d052c-52d7-4473-93bb-7b3114da15ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b36ffc-4f2a-4afd-8cab-0e060446367a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e75a835f-0d44-4ba1-913f-7c51bfc73154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d99b0a-415c-4313-ad28-b2f0fba4bd3c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc32c278-2871-4128-a261-93e95f5c8814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945207d6-faa7-4f30-9322-fafb506759ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359ea4a3-9536-4694-9dcc-7fc0bef8da94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f11e4247-c439-4690-9b5a-41f45f4fcae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a975aa-260e-42d1-ab2d-bc6d99f2904b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa01e00-2954-4de4-94ed-0cfc58d0ecd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f72cb5-d209-4b8a-af6e-38dee2bbb6ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715b8738-3d62-485f-869c-6ab98d7a3e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c365a3c7-b2d1-48c7-a32c-98f5507fa9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925b9c05-d936-45e8-b2a3-eccfae76a33b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c9b117-1ca6-4d4b-9c6d-db43d95824ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89d771b-f81b-4cc9-a7a3-a52eedb6ea2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74dd1d8e-c5da-4e08-8014-3c25275a03d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4a1aaa-c688-4d0b-ad72-58cb0bc20680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69aa64b0-b2e5-4729-b9d2-d9b6a10402d4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4975d09-a7ed-45fd-87c0-4932e5c31084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00dec744-cfba-4991-b52a-8571a12018f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7547b5c5-3328-4066-93a1-7ffffeba068e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3f6778-ee66-4b1a-b84b-6e49d8529fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01ba23f-4903-4813-ae8e-1bb742c04975",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c8bd9a-4cfe-4ca1-ac36-d28ad7107b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5bea5f2e-1fdf-40e2-94a7-f4b391bdf4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391599dd-e700-4dca-b631-a8d836a473bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9574927-8b67-4773-8b3f-2a99e81fcc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57182ad8-6748-48c9-a8d7-d9f49571ff59",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fa5dd0-23d9-4e68-b9c3-9706eb44213d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4f6b90-fcd6-4131-9ea4-df9da05a0a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3db314-33a5-408d-9d59-d47ba169c614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e54fe9f2-41d8-4b4e-8a00-0a3ad4836376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d244be2-9559-48ca-aee6-dadc69840438",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d95c2d3-bbb1-4dfc-bea4-14d9e347395b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c4c799-3840-4f53-80ad-c80451b2ed6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb05b38-a0f4-44b1-8751-371625daf046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb583a64-8762-41f1-8760-c60bac3de9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5e7734-069a-43b9-8633-212a9a65411b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02aa9db4-6c93-4065-8136-7282c8d54dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77300fd8-6f49-4a10-87d2-db15a3b12481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd54127b-3c2e-470a-9130-d81448d520e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "27908917-620b-4670-a6c0-728209971942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2adf182-4960-4df2-9bec-4ce03ffebec3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740ebab0-d7e7-48b8-ac12-b7debb75da31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a2a929-cd99-4fd7-b191-13042cb8ca8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd498638-862b-4052-879e-226b21865851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7efd176d-b3b7-44b0-8b01-48af24262402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd75793-4a14-4c03-b950-aa21e0c65f7f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff459f6-c89f-4234-910d-b4f31451fd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce4314b1-6b14-4c25-810f-959f73e00799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b520606b-8d22-48b9-a624-3d00fbf2b68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "03d6963d-d702-439d-bbe0-c23902affdc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329ca579-b703-45e9-b701-56ededcccff2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee15c2c-e961-45a6-8ee4-dbfb5a0fc153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ff5375-0e4e-42f1-bb8e-bc061b47b02d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02c87c8-771a-4695-a030-dc96a0242baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "18eb3e41-5200-44a8-bb3a-baf46ec0f4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4338df3-b788-4351-b0ad-b06faa732114",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc673ab-6d16-4626-b370-5c6890fda4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93558a55-8a06-46b2-8ec6-b92b5fd69fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947eb712-8b71-471d-b5d3-4037a6884647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6db8a58-c744-471b-a8df-eaff7ebfe631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6928fccd-a7be-4643-9d6a-50b195b39056",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1457d3c0-d741-4d71-adf2-59598fa4dbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab997e37-7922-4bdd-80b4-fc0293164876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afca18cd-033f-4de3-94ad-eeb9b7b101be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd6b7d5-82fa-4748-b225-b2521c84b146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bce066b-2b1d-4e21-a8a1-5e0a77f71152",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b3603d-4e25-496b-a8b8-2fda1c73953d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52267b9e-d585-4d6c-842c-ed35ac58c436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c96955-4b8e-4f69-a816-6cc6fd23b106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d099a68e-b05d-4990-91c9-3747c78d3dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b63191-7e73-4bdb-836a-16b225521091",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54206939-2b20-438d-94f3-aab69f31517c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e6588c-d85f-4a9a-a54f-4fa3389b0ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49becc13-2b1e-4adc-80f4-3e9ce5888826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b55e2105-49ac-47fb-a08f-c5c4366a093f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7067c900-499b-4c31-950c-876d528438d3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c28b87e-e9f8-4b87-9c80-ebd43ed6f26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc5950a-e00c-4366-aa6f-988e9f8d62cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be760f93-d0af-472d-bc3f-5f67c034e11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c87de01-13e4-4ae3-a0c5-c3ae57d3338f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55504a1e-b2fe-4e2f-aa87-37044b802a35",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a7b39e-b171-4eea-b148-68341227f408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e85cfd-decf-481b-9a9a-47160c2b7d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9add39-d78c-40a4-b547-03f792d4bb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43ed36f4-2216-48aa-8f40-59b99ee6aec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e624f28-a91c-431e-8265-b109d2b0c25d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7add2bab-7aff-47e4-b05b-fab216451208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42429129-057a-40b9-a9a7-b7fb0e5cef46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4aeb00-e9f2-4da9-bb07-90a8ddb5d95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d31f0a00-c3f6-4bd7-bd2a-2a8f39557051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473f9e1b-e0fa-43ca-8cdd-7443b97e3125",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78daaf33-0579-499b-8629-4c09b11561fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9553cd7-b7f8-4d49-bf46-d0dd79c6aaf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba809ecb-fcdd-452e-af19-34e3881103c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a226a8ba-03c2-4e0e-98c8-3ce0b47f41c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8215ffb9-67cd-4907-964f-68c30d0b3cf5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f005e9ea-5cba-44c0-9f7b-0771afd716f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c1bda7-158f-43be-93fe-d4f0f05edfb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dd2e0d-3b2a-4300-a4a0-c399ade6dd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ef3b46-b8a2-4755-9b22-2b90b2d82f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8012e5b8-928b-4076-8a8f-2290f0c66d9a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ba0909-ff63-47fa-942c-06c52d3ae6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7359a82f-e984-45b6-99fb-c6d4725403db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac79ee3d-7e0f-4692-8970-92f2b6c72bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8898854-e790-4d0a-a8fc-73c0cb35526b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04960cb9-33d8-44b0-868b-40cc0c401cdb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943f326e-eccf-44e4-9c4e-92283f0f15e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a37279-2c18-4e4f-a29e-a320f5989970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019371eb-8b0c-47a8-af30-489ed4f426bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f25e34e9-b575-4a52-98c7-b1327c4ad3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463b8ef3-28dd-40b4-8093-72d99baf388f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4414d3ac-7d34-4de3-b931-0aa09ed5732e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d586662-007d-4340-afb1-8c516889f7d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518d1f6e-e7df-4b6f-81fd-70ed8b829f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b868a05c-3580-43d8-a594-213b58f78274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b1b220-ba62-470c-bfae-29f7a23df9a7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fda7098-d598-4178-b175-813ff937162d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25c9144-fa14-4390-ad62-ba90861d552c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8196ad28-db00-4139-8fec-209b4342af26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a095b01-cb10-4b2e-9a51-bf49d42c572f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35106aac-f552-4b38-9765-2ee5d90a5ecb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6eb411-830b-43a2-a332-e1fe12f02d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798226b9-05f1-4ebf-b0e8-583b950112fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a659a9a2-97b7-475c-b50f-8aee87693c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fef640c1-624a-407b-8c45-e49836bedc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a66adf-8034-4de0-a5c6-ad7e4fb3682d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc40eed-c929-4605-8c40-3e30388150c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c10ee6-157f-4c22-9ead-1fcc397b9662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4aa0f3-4d1b-45bc-8761-f4decf439c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "37f9087f-00e4-42e1-b2d1-b66ab25f87e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3dd873-863d-45b3-8f4c-256dedc65b72",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51f87e4-de04-4947-bcfe-099fc1324ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0510586d-6c3a-4329-9a6b-49e8d376a62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f5952b-ed18-4523-97fc-b116c78539e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8e4627-f12f-4fd9-9f4c-c15464c77b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8ab4a3-a9ab-4184-8a7d-26c08b05c285",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516bc498-b09e-4e7e-8859-b0ccb479c8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6bb948-db11-4961-9140-0440595d250b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367ef41a-474e-4969-8e89-309d1190193a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1196ff81-2a20-488b-a8e1-b1a6e57a38e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc7e57a-72af-49a9-bf71-f3e4e8eeef24",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338bb772-7c74-4519-928e-e3c48b8cc40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e64dd5-a918-43f7-a6f2-c3f44f0a536c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd337bf-e7fc-463f-94f3-1fe14bc9cbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c210376b-e900-4bc9-9e49-3f714ac9c5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858ff240-b6a4-4d74-a5a8-976640ebbe85",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a2fdde-ad20-4e29-9d54-0e7c4b8706ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c323e9c-6df7-412e-8a10-2511f2ce3d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d24fcb8-6199-4237-982f-e5b6e4b6aef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb2e333-e04e-4a45-b0c6-8e80213c3c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e958d4-6460-47a8-9c75-a4d3656eaf60",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150a964b-9514-45f5-a621-f06b65bb9a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16ed636-1749-45e9-acfd-fbd69dcd1474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ebe295-bac2-41b5-8208-97514c43f4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e3221d-2190-467c-b6b5-837d11fa356c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25dbed83-e2ec-4946-a98e-983d547b4e78",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb5bbce-e48f-40ad-a180-fe5c5c397467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f2983d-4018-4b68-801b-7836a95edbb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f76371-b808-4508-8c49-543b0dae3eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "efbf4838-0ecf-4394-8121-702b13604c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7aaae97-8952-483f-96c8-91cc45d531a7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08e3bcb-df66-40a1-b972-20659821d1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8255404-a394-4c7c-98c7-9ee4dd9ca420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719220ee-7d7a-4b52-aeb0-a9dfd8a0bd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee1cb0b-fcb3-4a74-b1c4-2c45e97bf98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71ccb80-44ba-4261-bcb7-48bd3319cc27",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0038d7a8-30eb-403f-9904-79dc70f558d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9347567c-62eb-43cb-8082-9c25a042c20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90955507-1607-40f7-9e49-6dc62f09635a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1aeaf10-1730-49bf-a2d4-4d6b9cd4083f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6472ce91-4e6f-41e4-947d-13e188d368aa",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07f6cf5-7bb9-4ecf-9ca8-7f32c3997f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8074f4c8-65b8-4e8c-9a7b-a6ffabe444f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ff693a-d055-4fa6-97e9-058af62f46e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee724667-7293-4522-8c48-6c115c4f8534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c1f5db-e9fe-48a8-b09e-f015d93f56c2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c366919-b6e4-4d91-92b4-336524b82051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c723c3da-6b0b-4e58-b7fb-f56a03ade014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72565df4-ac40-461c-a1c7-226089e68aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc89a39a-e4c8-43da-8889-3ab3c171ac87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7100a8e-06c2-47f7-8b34-e8ae51cb64ec",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f1a86b-ae37-4b09-9221-c26aba94a0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1736c94-ef25-4d84-b05b-fa92dbac273c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18e5320-eddd-447c-8258-9cda55864e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "74a387b3-f62d-4f51-aa61-f5fe8dbe394b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d77d6b-77bc-4a0a-9f7d-f344470e2628",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b52422-acb2-4920-9013-b8558520ef72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39858f85-7a0f-47a7-95c9-b50e9cb7fe77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab42f671-112e-4524-b62a-e3d3b2fe5393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ef2038-2801-44fc-a9c1-638bcb1ccf6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a319ff9-891e-42c3-89a7-e2cb0c5ced38",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34091b43-21c9-4d6a-a89a-69ad701add13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54c8ee0-345c-4b96-be51-c48fd4ff7b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba8eedf-2d8b-407c-9bac-4ffeb23b668e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90361d05-fa7a-4dcd-a3bd-cdbc9c167c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8b17f0-f172-4820-9e88-cc8c3c1e5472",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b045a9-d650-4a73-91fa-2c00a25aabdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9822516e-9f7c-4490-847c-3d95568b8ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a4c97a-bcd0-40ac-a3ee-4c0a31e09403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "809dd3a4-4ef0-458d-9c55-a9fe2b771757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e47c18e-b543-42d3-beae-7d9608991ccf",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dc4d4c-ac01-4156-9c3c-c3a448a12d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6690ac-da6f-4ef8-9a9c-c9ae89ffebfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8576a53-af86-4759-827b-f27e797fafb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e95b0cbe-4e30-420e-9f67-dfef7cdcf6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6f644b-7fee-4008-a3bb-356c628ca04a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53aa47cd-1045-4968-bae7-64264c3d91a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4433e861-da39-4f50-8ff3-433a7c64f0b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091f91b3-c997-4e08-9e4e-e3765f71798a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "762adb4d-6374-47ff-a85b-aba78e43c54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213240fe-7734-451b-90d7-a98389f9419c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e90a18-c992-446f-9e5c-3ba1106629b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fb3592-a4df-4347-8ad1-a6b4db79cdfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a150e71b-a06f-457d-8d7d-9d7fea5f2dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f97bae18-821c-4b46-b786-044f6725d808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4e81f7-9fa2-4ff9-8058-474764deaba6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87625d6-4306-43b4-824d-829c31b8ac2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bdf12bf-9c6e-4eea-8214-0e3f7ee7a2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b28bea-174b-48e1-b561-f0da3722995e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3b3aba-0cda-4a4f-85b2-0b16385e2373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22490c01-038d-4746-8b36-8cefc1347194",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b043e99-bb97-4d52-b966-aeca3277cfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ed1367-be80-4590-ab60-d1e90d672820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36468d6-bde4-46a8-9d27-c1d89672d692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15ff4ead-a837-474a-a3f4-2b3c4f71bd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7692410-e73c-427e-9ff2-40f4b0c2928b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d13e63-2123-47f8-bba6-90c9ab2aecc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb0e64b-1840-40c8-b649-c2151c67273f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9550af31-9ca2-480b-8269-4527ff2a2211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f528b84-b159-49f2-9cf2-5f97b60895b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e847d7d2-544d-4efa-9491-69f3387b0299",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9869874d-98a6-4f26-ad0a-3d2eb225c446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8706cc0b-2c21-45a4-bac8-e4ab3772340a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10a44e6-539a-4f3d-a103-b3a5d7f86663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76c470d4-bef6-4a2d-a9f4-9e8f5855a2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b2d1b4-44ad-4e8a-827a-3c9ec056b69c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3ff68d-c439-4018-897a-f61547e2150e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3905b521-e173-4803-a134-b63ef07f1410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c4f3ab-7117-47bd-aea4-960131d736e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b282b3d0-00ed-4211-85a0-dccd6e050795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d4c20d-f1e0-4ed7-b797-d0b7df53b2c6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e48545c-62fd-497c-9a8d-a7e09e3a018b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2abb573a-e26a-496d-bb2b-414c6fdfb571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f8c7b2-638e-40a4-962e-9941be58b1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58a2f926-8899-4c75-9387-655dd6a23a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701c227d-af16-4eed-acf7-7923770ac8f0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5602c7-3a30-479b-a672-1b451f7e1326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e410630-1c4d-431f-98eb-e5fa9d331971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52674ab6-a570-4cf0-a9ca-f1432fd95131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5980ae-f7b1-4a67-9ddd-b375f781fbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9504d426-363d-4300-bb8b-0f3208c13dff",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7219855-f4dc-4afc-8a5b-451efa08a52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8c7f31-95b0-4277-aaad-9329121dc684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b3e57c-d746-4539-999a-c5e94406f6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3f396b-1c9e-4962-a656-4ed1466c77af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4824102-1179-464e-ac76-912fe08a5913",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39edb5d4-1219-4304-96f9-220c3c3e173e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366ab6d7-9db8-4396-8b8a-457a723042bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd503110-0438-435e-b793-68dc9760d7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc3a214-7e15-4f40-80c5-55dc2c37daac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05700cd0-2d2b-4bf4-b46b-39133021e75a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ed94f8-1598-44c5-aa99-f363e4e9112b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de223f09-1dd9-41fd-ad42-fa487a6f3a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e391437-d2af-4b5e-83b5-4d34ecdea6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c3a5a7-aebc-460c-9945-ec55af1515c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f7cfea-8564-421d-82cf-22610ff14bd6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f6f686-b988-424e-8528-50554ebf2f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b785f1-afef-4d34-a061-6f8e40eacf57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff9ede5-1975-4e0d-a7d9-502eeff60e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "caa74305-4cb3-4eb3-97be-c5e1129ac17a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b273a3b0-477c-489f-aa5b-2b0c82aae74d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3b0e2b-b415-4a85-9e51-8ac330abef29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef489c2e-085f-4d3f-aeef-960d96751a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c65c44-c7e4-4e28-969a-df98da3be8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0c2dba-ef51-493a-b983-a934495d7bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda18e1d-554c-45f4-8737-5f3d914e7bfa",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485fc5db-ee0e-4050-9fd9-ef336368106f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd17f08-7a59-4f2d-9b6b-f2ab0ad8ed4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23845033-ee4e-4e81-b849-d65aa667c83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c044a001-7d9a-4d17-8f44-8d7b188acd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfee716b-23aa-4825-8e6f-02f752cd66d6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d4514d-eecb-4980-8bb6-150ac3dd4f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c71b6f-5671-44bf-bd7b-23aa170584c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad29e1f9-c60b-42ce-8715-c8e3bb4c4cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2369057-6753-482b-a26d-d287da966cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7454c9f-6d3a-4f99-9f30-8da84369d0ee",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe8f98b-0d3c-4111-b977-630f66eccb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568e4483-d9ba-4135-af33-764294db0681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12989e2b-96f5-4d81-8d4d-6ab62f5b834d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "895a1627-415e-423e-8296-20358fae2fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5abb059-152b-47d3-8e71-a0c68700857f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc52d0d-9624-4a87-a9cb-2c801973b8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f784411-fa20-425e-b243-78a234dd3b6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59ac05a-44a3-45a5-92bf-8bd4dc660cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "90cc03fe-0c76-426b-9d5f-a68ccdbc238a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fce82c-1213-4e26-89b2-e6d22c98762a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1e9c0e-05ad-4f5d-a8fa-f72ddeb93e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a787bf6-468c-43a3-966b-b844bd17dcc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5e7cae-24a7-4562-9529-7e292b89cf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "907b69f0-ea7b-4cc6-98a4-07bd2dbecc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d478b698-10d8-4bcf-b99a-1002e90cb3ac",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefe83ad-7dd0-4c66-9bba-a75c064c9bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ed51595f-88fb-4f1d-be2c-69ae161ba5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca8ed12-a381-4d3b-9e10-66447cbb4011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "24653676-725c-4399-97c3-33be71b44334"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e5512a6b-6faa-42ef-8744-71072a474670",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00e7dbfd-06ab-4024-b71b-20376f97528a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0f62d4-bea6-4f99-93f8-00b1381d202a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c523341c-a144-4b44-b7e3-c51b8f59d6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a4138e-9129-4128-9625-a620635156d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4792a2cb-c6e6-40e9-a185-1a08bbf778c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a8c3a2c-1ed7-4344-857c-d67549620498",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45a00629-5676-4fe3-8cfb-2e1057edd72d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76d8323a-7fb3-4486-84ae-a891785eb886",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a62a9b0-4790-400b-9f4a-ecdb85a97bff"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9cd4197c-00bf-4dd8-a0ba-8b8e3a6c4349",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64273a97-1e05-4890-8d84-88ab63cb598e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b392efd9-f323-4de2-8e4e-b3a7e19b2f22",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c32d6bf-75cc-4f4b-a093-334e7e75c00c"
                }
              }
            ]
          },
          {
            "id": "0af079cb-4657-4809-bb0c-948cec3935ab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60dc92a0-036d-4cb0-b06f-20434c95cd95",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "679ead4f-0bb4-42af-adb5-8fad328f985d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140dd226-2318-4717-86d4-2af8bf7fb13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "38c50ef0-eb9f-4224-a774-c3595347278a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf80ca61-5058-45b0-ab26-0ebc659069e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781783d3-25e3-45af-b5dc-da0bbf97e361"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a707b024-284f-408e-9854-e1b2c241b3e3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6e7fb41-93ec-46a7-bc37-291699f9a74b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d4d4d1b-f663-4fd8-9880-a5e3d856b14f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32b0006e-92cd-4cd9-ad39-ac82596d87ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "af4a4e32-3849-4d75-ae05-342b8d784146"
                    }
                  }
                ]
              },
              {
                "id": "dc5b495e-8422-4980-b435-1ce85b6d56b7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa3f28e5-769f-4675-b403-b67ca6037017",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd335bbc-584d-4e16-960c-ab79bce2a91d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbc6dc90-a024-49a4-b3b3-20bd41a20f24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ed18e7cf-a4c5-427c-b1d1-30b7548228ea"
                    }
                  }
                ]
              },
              {
                "id": "b52b7cf9-7f23-4f67-8a66-79e99a035a7d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be64384c-3a21-48e1-9d0c-521fd41af938",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e899f18a-26cc-4b69-a140-206a45b0b01e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec058cfc-a21c-49cb-8bd1-bec79b442a5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "927ae32b-a068-444c-aa64-5d6580246b15"
                    }
                  }
                ]
              },
              {
                "id": "f050a498-8526-4ff3-8453-42757a841c40",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41319f93-d63f-4feb-b78f-6ecf85413dcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "845ceed6-4c02-4bd3-b7be-9deec81d9dec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8912f11-054e-4881-9fb6-c9dccd6be024",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3bdfee75-ce93-414a-a097-f05bf2dd9dde"
                    }
                  }
                ]
              },
              {
                "id": "527d91da-5dff-409f-a611-838e6eb94fb5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bb26231-a5ed-47ef-9801-b6fbef7c98d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4266bf3-f3fd-466e-a4da-833d5045fba1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef42e9db-4752-44af-b790-44e996d5dfd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5061761b-bef6-48e1-b189-73617a2b7451"
                    }
                  }
                ]
              },
              {
                "id": "2364d886-34fa-489d-aa18-cbaa38eb7e6c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f37ec7eb-f08f-4a82-9ef6-cac3e3668c85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3c350ee5-3f06-4ef3-9ed9-99225556909f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afec706d-316d-4ecb-949a-45cc813e2ffd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3ac2f994-df31-478e-a0fb-0f8ec0fb2de0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ff5bd3a-ce0b-4ff3-87f2-18028e9ddf59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e592bd0b-ba80-4506-a408-7931a6b0b2ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f1c7a0d8-a81b-40c4-a3bd-f389163a8424",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd17372d-43af-4324-ab1d-c19b32f1f225"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b4c7887-2890-456e-9067-f42a5ad3c229",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f01325e2-be80-4e99-8f16-1a47e08a8485"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "837af5b0-7aef-411a-a1ee-67d0ebc5b651",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8f6efac-aecd-48fc-b615-b0b51119b164"
            }
          }
        ]
      },
      {
        "id": "cdc181d6-697e-4b18-bccd-7cea6fd096a4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b0699cc4-73bc-4af8-b0d8-b321517544c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82bae53f-cf8a-4a34-abc9-5d4651a21564",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d656d91a-7b6e-4ee6-b82c-aff7011c8c3f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09154520-057e-4746-8b01-9ab8ddc50dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a989967d-add3-4a8f-a361-8ae93752257e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e30111-443d-4225-a149-fce499b04e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1198be-1aca-4555-985d-f46546ae0b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4cd1a9-aee3-43df-89b7-3367d3dad106",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c901ab-a812-42ca-8db4-b13e209e739a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9682708-56be-41bf-ab1c-566882ec4f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3270ef-c53a-4e58-a628-a3b50db9113a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "205fa7a2-b185-4094-8e10-760035ab4896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9b84d7-3016-4fdc-aa7b-b4b90278b925",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bb48bb-c8ab-4776-8c00-f1278892c84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca46a2e3-6d9a-4020-a38b-5d576d59eb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b33fad-c222-40b7-ae96-f207289c29e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea030ef-7754-4e16-9d61-d7e982ee95a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c958c00-3090-4657-b015-64c18f608469",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4ac10f-d35b-41de-a4a6-f47e98d00e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b678657b-059d-402b-a5f5-68dae9b1e1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198899f4-5668-4f3e-9a36-ac68bc2ceaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "961a4378-d1c1-4a91-8d32-80c6b88eed1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc27a082-1f23-4df7-8752-b2c81dbd51ed",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d738c7-1bea-468b-9efa-f3603115ee52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841dac67-5320-4212-b669-efb2d3c8351f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfcae63-e5a0-4287-a817-a3971a22bba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd49d59-cd0c-4f8e-b5e2-e38ea2c6208e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a5bc3a-5c26-4adf-865c-d52b3a1804ce",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522bf10e-02e2-4932-aabf-ca06ac5d70a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a0ba64-2c0b-476f-b88f-83998c99a7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f1a3c2-1d2d-471a-ac62-f6e9ce60e5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c32787d2-c413-4fb2-9ec9-76178484ffe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51817d77-4823-4eec-ac69-df85d1b2023b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddf1d2e-c330-43be-8bac-ef49fd27417f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e76528-0311-4703-a16b-381cd3f4832c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ec98d4-715f-44f0-b1bb-af5c66e2115e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5be51e27-8f86-49d3-9ed5-05d2296489c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c660c3fa-1db5-4bf4-9ed4-b93362a843a1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec4b98b-b349-49dc-bdf0-1a97d8fc5055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d0fa1e-b28e-4c61-bf29-9316c7240a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db2ca95a-9e6b-40ec-a26b-04a42e42b28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1dfcf5a-ed0b-4b00-9531-dd647fb8006e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01266d29-8fee-49e5-914e-10973b10b706",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bb04d2-8d15-4713-9418-047c79c101ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784c80d0-2ac1-4f1e-b936-842f9535146e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f444a99-294c-4970-ad08-9de871e78db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f22f5531-235d-48ab-a6ab-b0bc2e8edde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d86c1ee-4948-4289-be2f-cce1f2045fed",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9511fb11-2501-4044-9ded-969cf57e7ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f333f8e-d0a0-45ce-aa7e-701a83041f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f19e56-3596-4e46-8068-c6a6b4553277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "924dfa90-b70e-4143-a75f-c1c462269d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19b69c9-237e-4e69-bd82-7f074f938ae0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b60283e-49f3-4911-b5f3-194c11e0c78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9ea678-ce83-4937-ba37-282700100ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1384e12-5b25-44c4-85ea-4a1ee97117d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "445653a8-4b00-429b-ab75-359204119d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d741f2-adc2-4b82-a58f-4cf6a061069e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ff1f2f-b9d5-46ab-b819-2ba84542feb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab303be2-baae-4c07-a4df-fe8e60357c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd1f0df-0d66-440a-8a0d-7a7d918d1cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c620a55c-0250-45eb-8a6b-c0d1e0a0ddfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5967b209-667a-4201-b536-06c893d7251c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a95178b-ef89-4e1a-86a9-c8fcd8b3cc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2137e74f-dfaa-4538-b864-96dc850dd770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d2f471-993d-4019-be2a-2984a2e50a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d452cf5c-4b30-4a77-ba04-5520360e748d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd279f8-dfc0-4e46-b0a1-6e3d13e20325",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a432429d-6c8a-48c5-bcea-0c03dd6466d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9b710b-b06b-41fd-ba07-7d0b905c548d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b582aea5-3863-47f7-bee4-2234bc096185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf4be04-515e-4c51-882d-ed697020bc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331602da-1545-4312-b75a-e69ad3c7486d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8ee27b-9ae1-4edd-bbbc-688fd27a5911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19af2d09-d470-435a-8e2d-e3c19bdf8955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ee94af-0e0d-4a19-85be-9d522a716468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb5d409-42b6-4ba8-b04d-72c9d4f010b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3d43ad-7c5c-49c2-b1b9-2d604d73fe2f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2b139a-0b52-435a-8402-07105620c4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d23bde-17a6-499b-b695-5ceaab44b59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0161096d-d4b2-459d-b3c4-26f433aa70e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed0c898-f3cc-46ae-92ff-c42af045860a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad6a704-46dc-48fd-82cd-fe3533455185",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737032ea-0e89-4cd3-98a5-8fc7b9cb3966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8f91d6-ca1b-496f-a177-c25dbc3b23c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7ac278-ff0c-4771-aafc-ee8a50a0dcd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4010cb2-495b-4a32-96e6-288e48768a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90f2430-df8d-426c-850b-ed3fd8fd0f28",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a7bb3e-3ce8-45b5-bd8e-96ad0963c913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1aa8ec2-213c-40f4-9080-feb9eeb29887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dccccf2-8038-49cc-96a1-67bf97aebc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c246063-550c-46f4-884e-4fc800d5ffbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e463956-73cc-4b91-8431-d20fcdd34d2f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cdf295-c634-4f0a-9236-4032bb05abc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c322b1-aeb6-487a-b372-d8841d65e9bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d62780-de38-4c5a-bdec-f6cef7cca2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c143fd00-c74c-41e0-8326-500264bab6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3158e23-8c5c-496c-81cf-2a1d9c11da1e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f56507-0887-4b1f-a8f6-79511748a3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b16861e-7eeb-46cb-86b1-50a29b0b11ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819b7d47-f9f9-4bae-9696-e1a8cedc9520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5249065-f684-4ab4-a70c-6257cb1e9db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620a6ea8-40aa-4861-8468-633bdf9d3e61",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d39096-45bb-472b-acb8-451b851c3802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4779ffed-8dc6-4918-ac66-db1d9c19f981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59809bd2-1427-4f54-aaff-52c210f6bdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56208c83-a0ca-429b-a92f-600b4f37faff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd571175-64f9-4cda-8842-92b6c61791cd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f57768-b2a7-47af-9b01-448d99282b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f6f5b8-482b-486c-bd4a-bc03f9132fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0036b2bb-8b20-4d42-bc0c-15860f2a6277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "352d80d4-4a60-4bac-b806-3fcef301aa2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca14c59-6e5c-47e2-b7ff-6a9319fdb1b1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450c59fc-c09e-4f2c-87ae-c9db112f04c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c529ecea-a556-4eb9-84cf-c11d2b5fe5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c128f414-8c5a-4da9-be48-088243c527bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc5bed5-f791-4026-93e8-379cca5914f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc685cd-13d2-458d-8e64-fb7621832be6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e40951-40c5-4607-90b2-f2057bd600f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0146e733-e6b5-40c4-8329-d2bb4446f7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99356e45-8b29-4ad3-9062-f98afa8350a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e3c2dd3-4536-41c9-95e2-7ef78f82a5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9913e8e5-f9d0-462b-aee9-9f7ca56193ed",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47a3a26-4cc6-4e8a-9def-76b9cf396803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08fbd937-e7d0-465d-8e84-8370da1034ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e212965d-7fd3-4477-9786-06eda1ae614c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab23183-cdfc-462e-ba1b-712235499580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b62663-2401-4646-bca3-c605f7d46b4a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013b4fc0-3a1b-488f-9ff6-38e8b492a60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb352df-615c-4238-8383-d188a29da7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f30e4f5-977e-4b8f-bcd1-884343c1d44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f107f3-471c-4267-b756-e31369c571e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337ddcf3-6308-4427-8c8b-2081f87f5eeb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2d76d5-40ca-49b6-894b-837c687c8b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3566b502-5c8e-481c-9d03-1fe8c5472ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0bf4e6-371c-496c-84cc-b65fee7dfa70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96e24034-d96d-452e-b851-ff17bec24861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7f769e-468b-4740-94f5-097e5f357b19",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d21fdfc-5288-4c24-a447-3670a46ed1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9128d5-6219-46f0-b721-479a5cb36211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5002a0-f257-4a79-b50c-4bcb12cf27ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "596e2404-b5a9-4b55-bbdf-7e4782a79413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05051290-06e3-4436-ad50-58ccf6d49365",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0faa66d9-a269-4e38-ac3f-c0f9b3fce370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006287c4-6659-4c11-8ffb-2bf46cf8f6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a653317d-faac-4df0-922b-5f0a2fdad74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7b631e-a7d4-426d-81a4-2a383d59a4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52410ea-6b10-4d79-a94b-d2c707e9c313",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ce40f2-0a4b-405d-84a1-221a65b811d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd62dcc1-8ef6-4b5a-ac46-92a411b7d074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e168e3-8cc9-4f96-badd-73825a295bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b06e6e0-d832-4a92-ac4e-00c2a26e4678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8612ea4-f954-48ee-9a13-5beb6c6ec9b0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace9f1ec-d7f2-4254-a52b-b799e2cdf890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf3b1bd-372d-4488-b7ef-152fbf213e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df86271-7d7f-4544-8672-e65744a1cb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6803e353-3b08-4ae9-ac60-53211e132bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0818b8d4-b08e-4c11-a28b-a19943f5e30d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6528ef78-759a-417b-9e57-7ad95de980b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f9ab7ec-5449-47e2-a8e2-3d487daee00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f1a289-f4b5-49a0-b1a8-2e26897a10d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a500713-3082-4e1e-8add-02db698a3a13"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dd77d308-ef4f-4289-a460-2434498dbacd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c35c61d4-6af6-4456-8667-46a351b452a9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af5b122-17ea-4723-a2cc-89e5ce137792",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5062b797-6158-4695-ae99-b11d0eac9c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "265a3771-efa2-47f5-9ae1-1bf7b73c1eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1ce0dc6-7f91-436a-b611-a288bb26d77f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "360e80d6-7092-40cd-8217-55fbb567e3eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e7ce9d3-1a4b-497a-9681-f8899e9928eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1507e49-485e-42b3-8d1e-000ace9a2070",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e424dd6-ac14-4125-9080-dcfc18aad978"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03da9daf-e17d-4b5f-95e1-58a7d887d833",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e25161f8-c223-49b0-9af6-251696129795"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8f6b744-e280-4b8f-8232-24649c25eb57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4652aa63-17bb-4b6a-8960-87fe5b7c0be3"
            }
          }
        ]
      },
      {
        "id": "d911d016-e9d7-4349-abd5-a5d58e84072e",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "01d85122-a762-4711-98b2-1a3e64cb9154",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d075c76b-0488-43d0-b616-6e5f7648c806",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "007d8afe-bab7-41d6-adfc-2eedde98ecff",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896ad635-8134-4df2-8783-a8c1ecc35854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42b343c-ef9b-4f6d-a117-3b40aa01d6bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce98dfd5-94b2-49bd-8650-9f3a0b666dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "652ab565-e426-477d-bcad-db1d29ee8779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586f2eed-280f-4516-921b-57fde3e93532",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946a2e3a-9c08-4566-9885-5503d41c8d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f59912bb-6d04-4ce8-a834-ebcecfdf2bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737fb075-9753-4541-9faf-a36d96b29529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7eead8-5e20-4de9-91d7-e2ceffe68410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0264c7-e0d5-4070-90da-da748ef6cf15",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5eeaef6-dc1b-4493-9b13-a8c73e1c97cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b634a39e-fe2c-4968-a743-9fffe86c0e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad23b64-eccd-4bb8-b29c-04e78d76edac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4e64ce-d3b8-4876-ae81-5419515c1864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f162c8-f2df-493c-a91a-ee815d12097d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8b415a-02fa-4946-8752-efe61c071baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5eb125d-7499-4694-9f11-9b86f8594fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0d3a42-e8f1-418f-8be1-30069c967c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a59fe2e-1ff5-4a15-9bbb-f16849af9389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7122f6d-069f-44fd-a580-313856fc8d2a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21154063-36b7-4019-8d58-04bac14bec72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba56d35f-d1e5-4206-a6b2-929709e5b989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df13d903-eca6-4734-bc14-67ace8d22113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "baabc081-ba90-4b66-be0f-586be4e39fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01fcfb0-96b1-44af-a956-e53209fee3ac",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ddf90d-d2e2-4833-9029-5fefaaa87342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a022ae10-997d-44ec-83db-4c559d831e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd05f82-bdc7-490a-a4a1-2c1f5d335dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7b848c-c586-4647-89de-ec138ee8984c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0751be0-bfba-40ef-a711-58bd1f25141e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5777704-5ec2-44be-9471-a9c3235c7aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f80b1d2-db1a-4a00-a9cc-cfc839e5dfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d9ccba-7ca1-4b24-920a-ca4276f85d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8802fe-a1d4-4e73-b337-f2615d55cb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9618ee3e-58b6-49f8-baae-c87d19c9aa86",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99d4d75-eef4-4536-bacb-e0f2103096fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc47d81-4ea7-4196-b7e4-0694ad688e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e76628f-d66f-4f68-a3a5-65d93a47c856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "102135f3-64be-477a-b56e-fd94b96a6e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9ec518-98eb-4af9-ad4b-1037c1efd8f0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dda43bf-6b5c-4770-896f-d921a7920391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a520a03f-9e6c-4db1-9af1-e61953a8904f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7044c03f-01c2-4fca-92aa-7a291c502512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce59d21-9cd4-41c1-b199-4e9f4d389ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f45397-cc01-4912-95f2-7060aeace597",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4165fff0-8c68-425f-9c5f-a55c99d202f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766ad7cb-533d-44c2-8c25-e4f947f9bc08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca77e4b-8019-4fe7-9be8-ca406b41c4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8f3015-9623-45f6-8c93-2f51f92678fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b04993-df60-44fe-bc94-98b2a53484e5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c163af03-f4c1-405c-ad68-a5b081593134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b59f1e4-643d-4e4f-a174-8bec7ecad7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1aa7567-6cea-4931-a5e2-aecafb238c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "803ddf01-678e-4087-833e-be47f758700f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102f10bc-0d9c-4cff-9035-db24985a1751",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a2a8fa-a3be-4129-bca7-338eb47b26a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0b77dd-13e2-43ac-b977-b3e5ee8d2a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfe9766-03c8-4ba3-8663-246645c20550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d8d9b4-19ba-4da2-85d8-4ae21078516b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5620d4d5-4759-4b7f-b743-81753628a0cf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccb71b0-91dd-4d41-9534-2d49396e5dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952e0bfc-4d3b-4136-968f-cc23b8ba433c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f383fe-058f-46e7-ab0c-b5fd54173b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cea75def-5e76-4f85-9627-096359a506f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4003de8d-e816-4188-ad14-39238e67800e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984d50d9-5c8c-4b98-a525-c6094f208e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab98664a-0a94-4665-82e7-95d5f40aa54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c7f4ff-6da0-4ce3-b1d5-f3dfc9886d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e6317b-e7e8-4153-9b8f-34b2f1b6ee1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0eaab38-d462-475a-8e99-a8a72db1f513",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db499747-c676-4994-bb86-654e5bcb6936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9687f5-f4b7-49b7-8c0e-8df2002cfda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7d0306-4a9c-428a-913d-4508fe22295d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3cdad9-9d40-45be-9707-ecf084363a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52980cb0-1fc9-488c-84e4-0c7a4dd4c779",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614db149-80f8-4df5-bb14-b152213b55c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1bef3ec-af33-4d96-98d1-d7044385d5fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef049ff-9cde-4cb6-bce5-0acc75c9981e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f45e6812-687f-4b2d-bb0b-bc334ffa9316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a48adc-35e1-40f5-9f43-5f5b5ee0d4c3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94035415-d36c-4671-8425-2f4c8ff154c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4b6c1a-05f9-4a65-a7f0-45a53f862518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce5cd09-05b0-4597-badc-6d39c298a32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "76ad4811-64f1-403c-8127-c0edc846447e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51eaf66-18a8-4f39-8109-552435e57b1e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dee8c24-dce2-47be-b304-1f5c677e6b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a911dc04-cca5-4d31-8036-e8bb416b4d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d49c66-ab53-4366-8f91-54bdd7629780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1f9039-3874-4ab9-926f-18abe2cbf7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55fb37e-1877-454a-a8de-c3f8fe32f533",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c236ede3-9c02-4b53-876c-a79d0bff6df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10adc269-7609-4d84-a387-041e0f2494f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c930dc-4df9-484e-82cf-8edfd34b62ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f04081-7dc9-4a18-9433-b38fece3e744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9412e8c8-cacb-4489-9ba9-7f85e37b8c68",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b016a2-cc7c-4cea-8904-8d7d9b8753d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0683b432-e395-4e6c-b53c-0070145c2268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d29dba2-7257-4d42-99b9-637d7d5c8c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19db22fe-3f8b-4230-8840-3f9a605a0472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815b8612-4bb5-4dcd-8195-7c6ef6ff923c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11ebf4f-d941-4753-b23d-07fdbcdbb54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0694d9ae-f1a8-4a1a-9257-4d2a0df4674f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97424141-818f-4eba-904e-9fb822ff3b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf01959-9d35-4cd8-805b-fe305b1b195e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a025d35-ea0a-48fa-9635-cd980de5969a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a39eda4-0be1-4414-ad3a-9c7d14bcbc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dd248ea-3193-4d99-857a-b71033ff0aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d7c4de-4af3-43be-871c-66c0cc2e408a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0245e126-3b6e-4310-bf3c-9a129b4b7b8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ea379c-0728-4968-9e25-9f462e5c7a2c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0837f304-da6d-4f7c-b939-db35920a9411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd217a0-8d92-4e49-aa7b-a5d497ca7f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda6d74b-5037-4848-9c88-e5737ffffd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9370a201-f31c-4f3d-ae22-f448aface4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0004660-a1dd-4b33-b26f-8c9d8a13f879",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530fc0ad-a15e-4b2b-ab9c-3a40dbd500d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a25a5a-58c8-4847-95c3-04e99f854cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4f45f6-a5c8-4b0c-93d3-025173dc207c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf10842-46db-482e-a8c6-a25ef1d1520e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c457d7-a0c6-40bb-ad8b-ebb9e3cb0f65",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050c4417-9b90-485a-8b54-5d6652b6c907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5f1e13-e688-461e-aa36-36f7d1087f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e2a24f-a4fe-4dd8-8a76-b23a0e258e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c9d5f8-c760-4a69-96e9-be941c1ecd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e074d7-f42c-446c-add3-966da3c8e173",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36750827-0e40-4dea-ad0c-7f687ad90032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bfca5e2-426d-4104-b365-934a5a4d6d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b86df11-98f4-4f58-be1a-d2593f906c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9f54a9-312f-4cbf-b790-8c1cfd828921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cc8107-ef7b-4f04-b4e1-a4daf8f4dcff",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff52126-1f9c-48c9-89df-d6c5ac0d2594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5073070a-d8e0-472f-94a8-389fa1cbf435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a801e61-260d-405b-a397-b42d85306bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf398aef-b608-406f-baa9-199c2b605660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60d059a-ad84-480e-97d7-8f46f02928cc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0de5131-e0a3-4370-bd03-ab567fed1d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55560966-cae1-42a6-a87a-93da56bb0e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8614e4ac-25c0-49c5-991b-f7129c124438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9f7a70-2659-4d27-8021-af126d9e6877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c42f0fa-6099-4e0c-b832-573d851d9d6e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff5d523-c90c-47b7-9fa1-c450a06fd0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e6b092-7767-4912-8e23-1991e71e1ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a737a27-fdd2-4aed-82e0-f1c8f8f25c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d778d735-f3aa-4816-a174-e3f98be8004f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4a9624-e87c-4e57-a0fa-d70808817b9a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcf0104-7f2a-4bd6-afd5-5c000694bd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf0bdaa-a9b1-477c-93c4-17ff16ee79ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf81ce05-22f7-41a6-882a-147fc3bee911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0df4b4bc-f2a1-499d-80ca-9ab3f4d933fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a425b247-404c-475b-88fd-563b44daa082",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f14e181-b884-4ad0-8f0d-ff8ecf82edcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438cf638-85eb-4dee-935f-c3eedfd6eafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b538fc-1844-4679-8d48-b745f5ec5eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "432ad222-bbf9-4aac-b3c1-c2b7a2bf2701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0f1071-e043-4fce-829b-dc666aaa46ad",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a0ce66-b5f6-413b-8b34-70f18cceee71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62c4d1a-bec2-49fd-8d42-304adc9a27be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a491fb-3f5b-4e54-b3c4-6e44f61d908a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3151d1f-36da-4980-8fde-835cc2ebeafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711ec4c6-965a-4cfd-b96c-d5e9d05094b1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb580af-48dc-4058-9293-5d036621a3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d310b0fe-cf52-4eb0-b505-9f08fb97a321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1650a28-4c7b-44b4-9d70-9509751d6e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40614a94-8b6d-4281-8ea8-6051c6eb8a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94efa30-2e8d-4af5-b176-a5a715013b74",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190dffe5-ea63-4abc-89ab-d6068ba860f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6c1921-27c7-42a8-a573-9d3906fe9d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61b3e65-0a1f-4950-90f2-c48b662d55e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76cad558-b8b3-49fd-b014-2c111bc18bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52d635c-cdac-459b-bf5c-1831fead908a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3f9f13-e60b-4567-82ec-b4a506a54a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a489f85-e3e9-48fd-af06-115cf251548e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1ee83b-47a5-4b0e-ab8f-af40e4496e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc046a3-c087-410f-9047-f179cc200c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36456ffe-835d-44da-971e-8560d0886629",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22277dac-90f7-4d75-bde5-2fc30ebeec16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff75d55-6e3e-4e84-8c56-74b8ce9bf47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7ffdbc-bfdb-430a-995b-15bc5c1f10a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfe3124-d579-4555-9dbc-0110f70ddf4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9905a8d2-2e31-461e-89a7-b2faa020e2ff",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8c08a9-1ba2-4b3b-aa17-e22219af805b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b9d115-3e4c-4ab0-9282-2cbfb6685a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4494ba1d-c7d8-44f7-8bda-1b587ca8511f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "579776e9-1599-4540-ad94-624dcab294ee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e0d4e1f7-f0bd-495c-9211-c407a0c9aeba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9caeb18f-5ab6-422e-b963-0465fb0c9887",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1d329d-1b05-4e3d-8584-a54e056097bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1f3848b3-dd78-42eb-b1cf-b0a5695ea2b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bf5e1d-aa2f-40f3-8aac-64cbf57a6522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c955c3d-9579-40d7-8111-582c887dfbdf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0adb4691-750e-4b78-b7d0-9785ece32c03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e645b700-e163-4b9f-bde6-5ab3d3480ab3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b77b55e-3f82-4a75-8594-da6148bf8f6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63fe6431-91c4-44e0-9eb6-7431e5d4c9e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e67c9d5f-8bb5-4f14-b97a-127a9ffc8b16",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0a06c887-8994-4f42-8656-f77ebd571402"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9103af42-0b10-4acf-aab1-da12bf07fdb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1f3a1ff-6794-49ee-a3c0-5b63e7d661d4"
            }
          }
        ]
      },
      {
        "id": "3b94bc66-dc8f-4665-9214-d78b407cf4b2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d51bc512-2a0c-4cf2-afed-a89f7a9f06e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "737f7e1a-41c4-4889-8f05-ec0d69cad7f8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8f26ce6e-7fe0-41b7-a5bb-9cd7c126ae01",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a176e01-c9b2-4d52-bfd7-5c8a794a6022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f4b399-e65a-4437-a4e2-5a3236363f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea86083-91ec-42f9-b015-01dd4b8b7c61",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb27a4af-22dc-4a96-8c34-2f49b9e147da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0920a938-19d5-4ec2-b0c5-dfb00b841634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac9374d-69fd-48f9-a385-06799195cb5c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df263b2f-0941-49d9-a767-4be61a9a5b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb86186c-6148-4713-8224-0568647acbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9645d2c-fa6c-4add-ae39-d9ef670e69ba",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a9aeaa-a0fa-4a98-94c4-b541023ccd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5417af7c-50af-48f6-a026-43118730d871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89c109f-4c21-41bc-813b-b15bb3a7992a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0946d742-bf4d-471b-9fcf-b8114d84b636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c9891f-7dc9-46ee-9c7d-a1d475853dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf36221c-7a88-4fc6-b166-479220150bff",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411f83a7-edee-4266-808b-09b06eb1504c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943aa772-60a6-41a6-a620-25f4cf503e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b59e784-0d03-487c-a97d-c2809fa128f7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1e05c9-a677-4079-9181-4045473a0c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daea1db7-3771-4b4e-905b-75a704ea50fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c03a0e-61cc-4422-8175-f3b14169e2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462791c5-991a-40e3-9c23-719acd830745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209e7673-09c4-4291-a4db-f741c8c1c329",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d947a33-813a-45c4-b03a-7383c201a910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "903fbda1-5d0e-45cd-b63b-da4c4693559d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f33298-6b9d-479a-ab6b-abe71d1c138c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bebb61-99fa-4429-9948-c50a2cd3dbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36edaa3d-9f9c-48ba-b69d-d4b31a6fe3fd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05335d9-2258-4119-a53f-d5bdf4ddfe83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe345aa-a091-4a7a-9fc8-cefe4f01b9f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71060c06-26f6-4535-a4c3-677791f52b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3b27be-9016-4e55-a392-a639f51b66c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089d6b1d-8d79-4780-a743-e1123fb498c4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4b86a7-1af2-45db-a23f-96fb079d5fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ca11c1b-9969-4a30-811a-43f6a9687b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a27678-bb8b-436f-9b0b-e7514f17703e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e302dc9d-d95c-400e-84f8-8610880a64f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c691e342-6247-45c7-a22e-a7dea9b52889",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c4e744-dc02-4572-b215-1036a10b77ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ef6898-a5b1-47d7-a68a-207dab9041e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380c46e9-6a40-437c-b058-c2d89711dac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f568b9-de95-41f5-a780-e4489cdbf466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4250e6-b343-47c2-aa4b-a314d20ebd4a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba78c28-2e7e-4503-930d-3e74cbc375fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f178b4-0439-4e39-bc8a-9ba3343d303a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee9d9fd-3b22-4df8-8620-bbf68a05f5cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9f1b7e-f2de-4fb9-abd6-a9500d2cd33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead0668d-a7c7-437a-9be8-fd71553595f2",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8cc022-fa6d-4396-9b49-bbc8a0c51605",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cbe0d2b-6c0a-4db2-822c-a74f6d474912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb977dd1-cac9-46fd-a274-1b16038f52e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcfccb19-bff2-4417-bbe9-105a4cc88928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90db98e1-526b-412e-8d77-e6959519b10c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84146321-10d6-4403-8ecb-96f2daea4e48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f98d42c-ea5f-4443-a1e0-5cfa81d7ba64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fab7d8a-4f01-469c-8469-c72ef3954499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa2a09be-7193-473a-9515-2d9d1833c889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf786fe5-3028-48ba-9cd1-7f3c60aab394",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234384fe-faec-4c3b-8be6-1b1228f72261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2431e8f-f25d-4297-89d6-ef094872e29a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27562faf-dae5-42dc-aaa0-fe2939b91652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d4f5a3-2928-41c6-b702-e6d56661581d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288d0b1d-8122-46ba-b274-cd720a32b5e7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76919502-2710-4743-9974-dd6666d8274b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2383455-399b-4f2f-9ddd-328fdb8c5651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f7a456-0fd5-44fc-9ffb-3e40b736cdce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f333d09-e5bf-4c83-a2e7-ea5ab9fa0b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5876cf-b633-4b37-9a10-d50453330019",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6788e433-8c48-42b4-8ef0-ad612cea2d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8b5985-89c4-4082-bb48-d3dd257710b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ae5b34-8519-4eed-a088-7fd8eaec1e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077f8211-36b8-4ea1-aab6-d87d34282650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78307e41-1bab-41c2-9005-70a520ab138f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac90647a-cbad-4500-a344-6a80bcb56d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9d45b4-441d-4999-af20-01095c3e64dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4873c92f-1dad-45f7-a757-1720a67171a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d818e6d-1f20-47c2-a0c0-8d761eb7b5cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1d4050-49f6-4601-896f-31b7dcb70c4e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabdfe6f-5462-4d0e-a118-a1e8d22ad901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a7d4ca-2a3b-43bd-a731-32ab3c40ab9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6b7c2b-3eeb-4bc7-89c8-bfd22a9c4c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df5e842-0b5b-4e6c-b8d2-9ad9bd8fe361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a4ac56-191b-4aaf-9d87-9e3916622e66",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c90d7d-ed5e-4f0f-97b2-1269d19e8df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054996ff-3f8b-4b82-b849-3798681662fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bdc133-8f52-4372-a0d8-0f97d40ee331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5bc8286-03e2-41a0-938e-9278777ab7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fc76ab-574a-46f2-988c-365de9f54923",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04aef24c-f626-4320-a418-6deaf104110a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1661e2f9-84c6-4bb2-91f4-5bad783c9799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "867d1652-8ff3-4aff-a8cb-d14728de646c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333a0f15-486f-4452-be55-b5e1504677f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28b00dc-14f4-475f-9832-28a03689e034",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b8b06f-98f7-45f2-918c-88b99752016f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ce0d36-41aa-4f6e-8b5a-25bb97816dfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda50a02-c416-4f31-8530-591da79da894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f87c57-41b5-4be3-9699-dd41b6ca032d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d2fcc1-c3e2-42c4-9850-ef384759434a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1f41e5-3775-4e5c-a32d-9cfc1ebe7ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b3909f-0186-4f4b-8ea3-5d1f9ee50823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b74b9b-fe94-4189-9d60-3f382c3f16a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5528bbaf-5fba-446f-8157-cea2ed7089eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed78db63-8e51-456d-aed3-5dfb1b3078aa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3c0a82-5138-4d8e-9ac0-4affd6ab7301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39efb9fe-b28d-4937-a792-3937ce595116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4234f29f-cebc-44c1-ad64-779bdf9da6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b347d1d-188e-48de-9af8-5ffb1d6bcad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2211cf95-b901-476b-ae40-bad3da80d89d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded9c700-082a-4d91-a460-9f5e8b47c436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "376757c5-0571-460c-80a8-59350c7e87b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb78e78-b992-4709-893f-aae274f89a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a529b91f-79da-40ea-923d-a152315ba885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea80fb77-b799-484f-bf0b-6b40f7fba57e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e182d04-eaac-41ae-aa4a-3a14dc9be72c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d95c1a3c-837e-4533-9dd2-5bb780ab6794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e0197e-fead-4bf3-9eb5-86ee1d674fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cc80775-c64d-4f29-8362-287d28941369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c406955-908c-45a9-90fc-48cbc127a971",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c482e7e-173a-43ae-b150-c1848f5275a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dc0f4cd-fac6-4346-8a6e-3bd9f3f4a01f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2f98be-d651-46d2-9d0e-abfe5879e33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729fb5cd-8641-4fd2-b3c8-56e4c9e7013e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30454dbe-faf2-4bed-8e21-121a4fe0d053",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3a19a0-9c85-4daf-a244-7a3e2d253a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c43e95b-f7e5-4a0b-9712-0adde2923329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a6d5e6-2012-4d62-8e3b-6999768c9b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860fc961-af3c-40aa-a4ec-4acbb6c44bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1652b106-70b4-44b0-b6f6-9046298c2444",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151c5d82-bf0a-4b90-a477-e58d9e0c8dae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d75f7ee-118a-4afc-8517-35eea312e26f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa63fdc-212a-409c-851e-c240d6a5a8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42acb37-28ba-43d5-813c-dad19120c2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c388af-799d-4641-8611-4c8c6d8c94fd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf90512-de98-4ad1-b89e-a209b9a14efa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85af3026-7a3e-4f23-91fd-90c1495f0434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40b38d4-fd47-4197-abed-6d1385f6419c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc2f08b-c316-4049-8bf5-4d1b577a1e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f832630-4d6d-4d89-8c09-6d42c134bbd4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a2b3c9-1860-4c2a-bc72-2b18fdc974b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "551376a7-7aca-489b-89d3-c4a07c84d791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08789e8-2bca-461f-b959-7d6605dd84b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425747fe-b183-4b96-b9fc-fa5ac74701d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1107cdd6-2a1a-4c19-a4b5-5c1b79e344bf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c45d18-71ad-45d4-bb4b-c75248a66844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c37b67ef-9886-431e-9b4c-ecb5b685bc89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fdab21-4b6b-4070-8740-ecc7b1b0b59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6717e85-84ab-4713-8e9a-95d7d4168d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ef54d3-9e67-41f9-adcf-576fbb7c104c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351587c9-07e7-4b36-8660-84b8c979f725",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d87f4b6-bc09-4fbb-9ba6-e1d2a70488e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b370ca0-46f8-48a6-884b-aa461fb89cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a1ad63d-76da-430f-95e1-682768153ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e87faad-1da0-4c16-8069-7955f7779d9d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89f75f0-bab5-4552-84ea-6c05f3baf3b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db806e20-bf7e-419f-9e94-819ab172f05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf03dec4-ddbd-4551-9206-2b8f00707f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe598a7-73bb-4d4d-8303-2bf7ace6faa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a362e1ba-24a4-467f-88a2-e58a32583086",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e8762c-6087-4b4d-bb95-b327bbde7250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a56ba9-b9f6-49a1-b17a-93f01bc49620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f3436e-2aea-4743-abeb-4c5d16730f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d5726a-cce0-44d8-9616-5f4bcf9e8a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14905c6-d75b-4559-ac36-c970ba2a8b59",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982a1120-4f4f-420b-b0db-204abb7c6cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa0d2ed-a7bc-43c8-9878-6d3b24fcdea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5805d9ad-42d2-4769-856a-669472114dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a9261e-161f-484c-af4c-0ea500bea35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4371f186-cd49-41c5-b743-57dbd4921d8d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccabcb71-4c33-4196-ad19-f67b1e6ae5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99023cf3-c5d5-4ed3-9869-fe50ae426c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390e36b0-6153-4bff-9461-f1af32298bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8361fa70-32f5-4bca-a6ee-efc288d473d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81af5127-b634-4c66-b59c-34ea18bf18ab",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95623c2-b843-432e-9449-cdc650d8e336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7cac7c-2de0-4761-8598-5bd5cb21e01f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214ea922-9a7b-4b8e-868f-a3032a959ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12900ad6-395b-487f-8e6d-5bb50d4a70bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbceb13-dbd2-403d-a2e4-9f2231123e74",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f039b1d-9b66-449b-afcc-977ffba6d94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d8fc54-bbc8-4857-b6c6-a5394a5374d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d02018-b590-4bf6-a22d-fdb79d4e946f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630fea48-caa6-4da4-b927-5106d94560c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4eecb1-f8a0-4cc4-b96b-29507bded469",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05884c12-e1b4-48a3-a5bc-39490765c3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f585dcf-18f5-429f-9294-6d387b8c8505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233bc3cd-7bac-4c04-9e4b-5bdaeffebacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d53c69a-6d23-4c5c-a485-e7bef380b4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ead4532-96cc-4862-a74f-e5a91768fc0d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685c6440-17dc-4f7d-99d7-c969378215b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9894a127-d4a6-4077-97e5-1a7fee6bcbc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82de4daa-7e9a-4f68-9511-3ca106331c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f3eb52-955f-4343-adbf-80b7962d3cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2c5b9b-517b-4745-ac5c-172571327fe9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86335169-da63-4183-8852-96051d3fea63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac818da-a959-4ba2-b5a3-6e69280ff17c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "946031ea-caad-4a98-bcb6-abde34a07840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee67b9b-3771-4783-ac0d-bc099ad2518f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9479c93-ebb0-48b0-8452-09b4a12c39c0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b000103-6c4b-4356-881d-5322f27c3c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd0ab42-e0e5-4c12-8627-2556988cb089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c788a1-4358-437a-8d50-80972d88ed3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62460024-a205-4517-8443-7c0bd8c53b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9155982b-5599-48db-ab80-24214a553ef5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46537a35-8927-45a4-a2e9-d035f219f83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c15935-91d1-42c4-ae19-f4e18847408c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9f432f-1a52-4d0a-a77e-99bf56516c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8b4ce1-269f-4f11-b84d-32537ea2aa1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8a180d-1a8f-4b64-95d4-dacce0ef723d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf23622-07c3-4991-acb5-64ba3d205ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d178413d-682d-458c-a6d9-487812b6368a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d820fd-5cd3-4ed6-b864-05c97f45cf19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231495a0-2d12-4ddd-abc0-1b8fe0c86116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be35d9f2-ae9b-452f-af05-71b2583c2347",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41abfe0-5e75-48cf-a20c-4dd65e61b885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67484f52-83cd-4b02-ba3d-36c72043457a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2402aeb-0bea-4f79-a0ac-388d181fd10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432d87f9-2204-48ef-8cab-9184c596fe1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60e8349-f831-46a8-a379-341586fc14ab",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a40327-6177-47b2-bb52-7d25eabd49ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32d513d-30ca-4443-8fc8-78142479986f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e98911-56a6-4c3a-8cfb-ce43c9eb3b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe1e626-1838-4aef-9534-8ed386a4720b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654c3996-2e13-4ede-947a-48187bd4b513",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2398063-3923-468b-9e46-6fc45f1a8d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db53c86f-e0af-4e4b-a158-0ab032282001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dc6d56-43ce-4ba5-af59-fa29f4f201b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982b3c4f-e1c5-4713-9ddd-f335f27a41f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff130dc5-dadf-4bfa-89cb-d7a083a727c0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d13f346-62f9-41ae-8548-834b00b48694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcfef807-f44c-4d3d-9cc9-3c165143f6c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e75714-aa8a-4c84-bb4e-d0763bc4590a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1868bd-717e-43b2-96ec-8852cbc65e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6962c5a9-b7ed-4e94-8e10-40fae16e87fb",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62edeb78-d1f6-486f-a08f-1bd2998136a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea45b8f-8235-475a-99b5-52b74df6cc2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "745ff2af-bf23-44b6-905f-431d76a4891c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6dd3587-45d0-4f6f-9cb9-9af50320d8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b1b690-3054-44ca-b5c3-e19feea146f8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fa0bef-0167-415a-9ac2-7b31c38e32cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8c0a4b-e267-42ed-9335-bf5c76b5d175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbbb134-54a1-4239-9b6e-53474a386ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0bf8c68-169f-4a03-8ac9-d2e4df9b21a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078f17ac-f642-48f7-aec5-47c8073ae4b9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ccadf9-1932-41e9-b2e0-7a25e52ee07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73380ce-8794-41ad-bee8-dda5c1df6a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc71d6f3-9c1c-4003-9d35-9da3a1b10e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe0dad0-2dbf-4554-bae2-183686a47515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc33026e-4ae1-46d6-b69c-9fe89d7d252c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8489e8-75fe-43fd-b0e1-268b92c43fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170b2945-6ae5-49bd-bd85-79cf10d24d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce02017-1e94-44bd-a850-e83ff91ba67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cecc8a7-7c71-4526-abbd-b892a846a0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cc0a31-23cc-4feb-aef3-405f4f774e60",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b15f4a9-08fb-41c8-ac75-083caa9c1e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc77be5-bc22-402c-a04a-0df774718f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8d0413-4259-495f-a16d-f1ea7a02ad0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d153d144-aa89-479a-a665-6fea7546d30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a55080-5167-45e1-97fa-186078ed7c45",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048b98b6-46aa-476c-996d-aea00dda5a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86703e33-bc1e-4e02-a7be-79482f819b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1660ca64-23c9-4c41-8a87-2bf4a3c4eb3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597705df-282a-4e04-9fa1-aba6fd35777f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2eda8b-00ed-4955-9b19-d0ec4ef01602",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56b2178-5b1e-47db-87e6-27f57e013511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0998e5-44ca-48ec-847c-2fbace45a9e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b644de21-fab3-4683-81fa-334371a0c3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4082330d-70a0-472d-9cd1-a1ed17cf9cec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1d3a46-4163-4c37-94eb-9a01ba2f81f8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87421a8b-31b7-4c31-bf9b-513a80c296d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0308c845-287e-4f30-82d4-66a7a8dae61d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067f0a53-ea60-48f6-8edb-59bc1c875320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9a71e8-f9b2-47ae-aae6-34fad9cd9f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c2603a-b29f-4a27-b911-3fe5df88fef9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4927bb6-c312-4878-8bbf-3709ad262c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1ebaa4-1008-408b-a6d1-72b9d883ab6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6569f03c-da19-4f43-982a-8ac1729bddfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cda509-ebcf-4ba2-9f58-ac9ec25c4437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a40a806-521b-4cbb-a595-c86137cb6fae",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e30678-b7b8-410c-a674-83368695ab63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd0e180-15c6-4854-a3b3-8e8f59d2fc42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3fda24-c786-49ce-b37b-2dc537981fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7ad31b-8127-46df-8b09-fea4c94b8e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bfc88f-b58f-4c91-834d-ba1b2812953b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a4e6fd-529f-4368-9fc8-bf3367f3bc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9294b4-514e-4872-9447-7d8d1acf7b25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f8d4c5-3adc-4a4d-8d56-31f953748faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8978805-0f48-486d-bfe4-a06da27bcf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f654dbf2-1730-4454-a744-0563c191e1f5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f55dea-f4ce-404c-9149-09f03e87c5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0768f2c-5202-4c64-812f-559a192b7f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a26dd9-a9f8-4574-8d86-2e83ef62d3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4fa742b-485e-4d8e-a0fe-d089e15868b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf5c403-866f-4cb7-ab29-4b395f0e4dbc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff152f2-ffa0-42db-bafb-2640b19c6ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbaac5c9-3446-45b0-b053-4f4a56b459d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43ed8c4-4367-4503-b342-e29a82b670a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5ebaa8-5d97-4eb0-adeb-7da53fa857e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077467a0-8067-4d00-8500-713a87c3aada",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f04090c-3049-4f4c-8278-d5dbf9e9f33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbc9af7-6a78-4aaf-a21c-bc93790c208c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d92848e-23f1-495b-9a4a-3c4bea5b70c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a343152f-f446-4be7-a325-a34d7dd34062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5ee7e6-bb2e-4b5a-9a39-48ef22f1c7aa",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5e9063-462b-478e-b820-f3226464bb99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9859f43c-1742-4c01-a869-39d6c10c4717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c03690-c4fc-4d69-a5c5-536c27e4393d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac83458-f70b-444d-81b9-e54807f8c593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8bf20a-f299-4f2e-91cb-6edf63b3b55a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ede6d0-b3f3-47ae-9d19-4d9b9574593e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7686c5e2-90d1-4d85-a5ca-d5879991be54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bafff3e-c373-4636-bdfa-871a7f285fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f900d784-ae64-498b-9e0b-dddf8580e119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cd8d19-da0a-4993-b1ef-10c12c7e15fc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe55941-680b-421a-b942-1923e5fd70a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f32d2122-a165-411a-9f87-3e7777d7de1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccfa2a8-19cc-4b95-99b1-8e5750694ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93644e72-54eb-44ee-9af6-6c87e87148e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66aa2203-8e65-4fc4-8704-640751a13b06",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2f0f1f-e937-4120-bc36-821e89ecfd62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7220a0da-9aa2-4f7b-91f3-cfc7ec8bafa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a513c2f-45fd-4050-9865-31405e763fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef445ed0-a251-4cc4-a8bf-6b4988426295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c962fe-2153-4efd-abd4-03c72125af19",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f284c059-c7e0-4cb5-b2f3-c4dbfff1b885",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17d5048e-2c41-488d-8d54-bb7258fe12ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ecaba9-16f8-45a1-8f82-3a4cfaef977f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b844ac-39bf-4a4f-866a-68c4954f97f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356e539b-b4ad-4f0d-b6b9-188cfa49c901",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65ebbc2-0681-47c9-ac50-15efe6012460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e23632f-d75a-4d04-9ece-d0bedd4e5566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe813a3-fdb8-46dd-9d14-cd2af1ed93af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd1db2a-df6b-4d7f-8c2f-233d1aedf2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6b2258-a414-4f34-b792-85314e54e70e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e5c618-2dca-4062-95c3-559a49a61494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "160576b7-f0d6-4bb4-a1ce-8a7b334ac6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbce013b-59f8-4112-b8b9-6227e91839cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4615d930-8d64-44f6-9e35-e482982d66d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e9a690-7497-45b1-8c4d-f9964fb8eb46",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de58087a-6e4f-49ff-abc3-afe0a1d9d725",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13291a45-5acd-4e31-97d4-d6bee8b4ba35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e40013e-cce9-4541-a8da-b370b4a090a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f25a55b-54a8-4f6c-8257-3e2a50b5e6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bff2d3d-39ae-44cc-bb7b-41f71b64e435",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f963ee2-9740-42aa-b807-4a9e21788458",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f411a8-7e19-40f6-8be8-fa1bccfe13ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b001d3-c669-4562-a75c-9e009f459b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d150120a-478e-4bad-bd95-f3eaa88d3741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce0ed97-e280-4947-9ca0-e204a75f3436",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcd6c94-ff93-403b-8e06-990b8cb2afa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdd17c95-6658-4664-9d08-a0c963d8edcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34261d3c-5ea1-42f3-8569-3df7cf94dc9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c450b96-94a4-49a4-8772-c1c350d91afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604b6617-55db-4d46-b0ec-5063d3c33840",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ceb83a7-ec8f-4fab-a2d5-24489aa45c8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36f7eb17-f76a-4490-b166-6ec127f87d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717abd2b-0623-4561-b66b-030d92421b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97874068-8cc4-456c-8ab3-c7b70c283abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460568ce-97b1-45b4-83b4-bc780de7240e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af4b9d3-a72d-45e4-b8fe-873ce5680fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ca6278a-d2b3-40a8-8316-578ae2ba6408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9f0206-5aa5-4c71-bf21-7e24f92a6174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7439433d-d2f4-4631-9400-43a0f5bd059d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6c45eb-46c9-4733-b8a1-cd485fdbf943",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd86b99b-f11e-47d3-8367-413e74ae9859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79c109e0-0acb-4ae0-9ac4-2be28be673a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cf9eaf-5329-4f3c-a9b2-e4501bc697e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46773a1b-e134-401e-832a-d6045835940b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40237248-3620-4fdf-a590-ca3dec23ebd1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d03b84-c419-4136-b6e1-529625e07582",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7af43e4-defb-4035-a3cb-c1a4c4b83f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817fd64a-83e5-43b1-b015-23890ee3d91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4b5e05-9afe-4a27-b674-380b105fd6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112513ca-c7e2-491f-ab23-a0aca043ded9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8488ce6-f3de-4b9b-a7ac-22e9074d502e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e8d3fd3-6bb0-4691-93a5-41b4b1bbac4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ae578f-bcc2-469b-80ee-f12cb3344e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c8a9177-3d6f-440a-88fb-17faf96b8695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f12e03-12f8-4c34-ab80-1233d2f137f6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d752e6fe-39bd-403c-a8e9-806d41f18aea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9402b734-0e9d-4cc4-a991-a5117cca6396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e763ccb1-8fa1-41da-aaa3-793a1b05dbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344b7f31-cf55-4c17-9d24-04817c4e6ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edbb0fc-440b-4cf4-88c7-5af094e17cb7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c334b539-898c-4493-a634-97767f242971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "632ecfa5-b278-4aee-94d9-0913fe7accd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeae2f1e-ec15-494a-934c-6f09a3776628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2ddba0-c721-48a2-ad3a-9c00c9eb831c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a880510a-cf5e-4ae1-83a7-1bc1788d74db",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bac944-d1b9-440f-9f34-7fc2220070f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a3aa878-e86f-4bd2-b701-3ca7ab3965a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "571b0b0a-9a25-42c2-83a2-a385ebb46d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c206ed5d-2a33-4a3d-9962-cdb46eb13ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88649c8-e710-411b-be77-d9c934c5b4c5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78585958-68e0-4d48-946c-5d7b3fe66e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10c9314c-b496-4806-94a0-34fc8265881c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "921f0ba0-cbcd-48ae-ac93-5cb12cdf8508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d681ff74-1c05-4688-bc3d-240164de04b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf688a1-8f09-4e36-b7f6-da525a77b317",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0de89f-29ab-4782-a561-2e348ca9e3bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de2f79ed-4d4a-4fe8-b23f-b4880719fcec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca19941f-0802-4d8b-8b72-76d45f85566e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec9eccc-e9ed-4b39-b0c4-148cdd5d73a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043350ad-08c3-4ece-aed4-2e26d1331dd4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1b1b7d-3e95-46b3-a6c4-a82699aca5ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37d176ed-9ef1-4fb5-ae7f-4adbdf367467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c92484a-0898-4423-a142-fa4018631b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7714bc2-f330-45b4-8df8-55ca36a1a94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9e81e3-33f0-48ff-b504-77f55a4f6d91",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c4ebe5-8bfc-4e31-ac0a-ce65e08d29c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d14cdf0-0bc1-4007-8cb8-7b7463100c1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fd8604-b722-4c9d-ae54-ca5e8e1811a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4020d5-ea65-450c-bc9e-6893eecabbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26eb5858-79f5-4b3b-946a-49c1d948a18c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2eb29ab-0921-4642-ae82-2dc7d151b721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbf8907d-f9cb-4b9b-8e5b-9b0806d7e961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba99ef6-b3de-4472-be2c-9ba515279a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da7c20f-98a8-43d5-b8e2-234fe492194c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89102181-5789-4fc7-881d-e0fe01a502f1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2cb0e0-c63c-4bcd-b36c-dd38d3bd7d58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "203ec9d4-5100-4dfe-9c99-babcd633e7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8537f70d-f5f8-4b12-82bc-90391ad7236e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7608c11f-3971-41ce-8805-3689b500e884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad2f6aa-1119-4b5c-a11c-6e990e39a4ac",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347c13d8-cae2-4e0e-8d69-848179ec3868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0eafe30-abd3-4cca-b034-53a8a763ba41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02013c22-5008-4213-b600-86976c7619ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000e69ce-c6eb-4231-ac8b-e6cffe7298ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84648d9-c2ee-4238-ac80-7aa72403c1c0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f8949c-c996-49e5-a524-9ab764d47512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5682e03f-5658-4c29-8628-005b648f3cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cee0f5-d033-44d2-a2e5-c9b7f05b7baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51268fb-2968-4b40-a940-ee78a81d79f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4391477-13a2-4ab3-9cc2-ef523500123d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0507bd-c5b1-45be-a179-7ae34fb74bd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14cf752f-0f8a-458f-9f55-0cccf933d8bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2a8ec3-8e3d-47c0-9e5c-d9eeb09f605f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104b5b04-fcd0-4225-bc9b-bc6ceab9c7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823aa9ed-f0ae-4b14-85d8-b08911f3b3e4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c57c2a4-8b8f-4950-b3ff-0bc7179fc4d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec2a8bc2-e14f-4ee3-be02-e661d32776a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470f3185-7cde-431a-8b1c-504c4c431f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd676de-1de7-4cbe-a872-78249d62a6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26d4324-b0a7-408f-bdd3-8c809125a5b6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09446083-1b06-49d7-9840-95621665b57f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0851facb-9f46-4caf-b96c-ee70ccca53f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e79110-b267-45c8-8b6d-7336e6bb0495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6d4d62-eff8-41ce-838a-36c0d7446e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068c859a-86b5-4621-8b4d-a93bf1e9caa5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af1ea9d-464a-43e6-975e-d87f19c466f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be1348d7-fb9a-4d31-8cbd-5788f882fb56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91feca76-1179-4da2-be1b-f63a5396a668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2cb3c4-80cf-427d-8202-6b7924217ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db6bcb5-4773-4ef1-beb6-f7f3c6a2dcce",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7251b9-7641-4db6-a2dc-96b14544730b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f03ce111-8843-43b9-af2a-29841e5d25ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03d14f6-7db3-470f-8bc7-3a4d65a4bb65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c525e41b-4ade-4105-967d-b2a8bc05143e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fe5803-7fa6-40eb-a994-4148fa85a8af",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2c30c3-70bf-4a9a-8b40-a4df431841fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa79679e-a982-4db6-9ba0-ca03ca5a25fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9030a1ff-4960-4a28-b562-616884aac434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb14dda-c9aa-417c-8a8d-2ae2fc0dd1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ab5fb4-79b2-42e1-b641-fb9bba31bfac",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725c5f65-2f25-4ca7-8304-87fbdcb1036f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "475c7859-bd2f-4d8d-9602-5dc504253f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1c5fca-15b8-4d3b-b68a-f6c4c69bbb84",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b2b28b-2897-496f-b9d2-b693b003ab85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5fa43ea-fd05-4c9b-b3fd-1a0c285aa33d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804a76b2-1b77-4d80-a35b-fb0011f0cd1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03613462-a258-4b24-93d5-cb6bb18c286a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1111014-7b10-46c4-9e8d-94466893774b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f8167a-d9a2-4485-889d-ec3300f4f96d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06e7f417-4145-4877-8fa5-add06768d075",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "016cd2c6-becf-4ff5-b5ca-59fe593161ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9d213d7-b86e-4f08-adf1-fb1be20c1d9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0cd63425-7d23-47d0-8c42-59a7ccab04a9"
                    }
                  }
                ]
              },
              {
                "id": "77d43fd1-540e-47a9-a72a-8c91938a30ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dac175dd-284d-4635-ae8b-e2aa265c4ce7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76e845d-6ea6-41f6-8eb9-4f6af6ef36ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f7fe6862-b621-4a89-b2a4-c788f7f6bee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41839a0-2fff-4633-b3c0-0c665cebcc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d973080d-e6fc-45a2-9d7b-a46bbf178285"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b5f6687-0b61-45bb-9f99-b61988c519b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa3e6f13-acb1-415c-9e53-6fcd24091e03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "965195d2-d927-4156-b724-3c495be8aade",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a245c3a8-8f98-4a9c-877d-c9589fb3ac31"
                    }
                  }
                ]
              },
              {
                "id": "1f858568-e1b3-489d-ba62-3541c0c9d5d0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5e64ae8a-7323-4270-b687-235d5e48128b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ca911c-9c0e-4766-843f-128c5958ab69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a3489fd1-d786-4c09-a05d-6ec1f98ce592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c0ba03-922e-4d74-9d10-8e0e96dfc09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9baafa16-3e2b-420e-a5c7-598b76767f60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "86a68872-a090-4abc-8b12-ff4c9cc3aecf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d74db831-f0d3-4611-bfc1-8e8d365a4553",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2748d6de-2c9e-46f4-b5f8-444cd6d98cc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3c96f61f-d56d-4905-b6cc-6130cd783a00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e47683e7-c048-461f-a621-96f8ed618c28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b14dea5-117e-42dc-996a-f407f2b53d53"
                    }
                  }
                ]
              },
              {
                "id": "a8326926-4d2c-4287-90ad-f19942b37d04",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d390063e-dcd6-4f2c-b2b0-6979664e8508",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4a250ef9-3831-4c16-ac2f-3207b039043f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b7641ea-0866-4781-a979-cbf76994d15b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e12a0cd6-3bf0-4c41-b0a6-b76b036878f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a5c94e3-6778-4dfd-a2cb-84e10fecd65d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3eba4ad2-4c92-4149-b838-a67c2a193c9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cf762c4-44ff-4945-ad4b-2dfe091dc54a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "191bc337-3647-4ad2-9e99-159840ed5e0c"
            }
          }
        ]
      },
      {
        "id": "904cb4e1-23cf-4035-a318-c53d802788c8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f4a5f60b-803f-4bc0-b8da-7f98c804d083",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53d9429c-9ad5-4338-b0de-812836bcb938",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b97bd9ba-8c96-49af-bcb9-6f37c1cb5aad",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373e890b-5fc7-49c8-96c8-cd196f51533b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c15f64dd-8beb-4b4c-b3f2-1f5f3c206b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66142eb5-dfa4-4b10-952a-2913368182c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b914a99-9f9e-4b61-a5e6-29e5d90057a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3e67d64-508a-455a-b38b-d9aa7dc210e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1343a4d-7946-4517-bd6f-31a8bcf35ee7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e15e30d1-ac49-4471-b825-9867578c15b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0171be9f-f7b9-48ed-9e70-05f77ed08403"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "204f2719-fb26-492b-b07c-f8d31a82ec1e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "58d1411d-b8c2-46fe-943a-71b66f6a7bd4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c0b64b0-c0e9-412a-8bb9-47167a60ae97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9eda6976-03b5-4e53-b8a2-ff683746f78e"
            }
          }
        ]
      },
      {
        "id": "6cda27f5-23e9-444c-a65d-0523dcab023d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "89c41e48-2b97-4d0a-90e3-bcd95a5a1c0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "228fa2ea-9718-495c-9226-6e83876ff403",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e1323a9-b39f-4b36-a074-754bbab82d9f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00705819-2cb0-49e3-ac74-3cd833c94ebb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b907a98-648c-477f-865d-ef1ad9f31e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175401be-34dc-4e88-8ee5-4c8b21b94f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab221b72-fa85-47e8-a4ed-a39348a5586b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6902565-7b28-4e81-bc01-8dbf5fdca61f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "274c7bb6-ffb0-4f79-b649-7df1c349cb88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6916333d-14f6-4924-9b5c-c97590bff208",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d51da24-eddd-4f5e-98aa-87502ef4910f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a9cf81c-433e-4fd3-b416-04cb6427774b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "493fcdd5-516f-4e8d-bc14-8804bede80fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb0a128e-0d3d-48e7-9825-27cab388a693",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0a450d1-b4ac-4905-8188-652312b9e227"
            }
          }
        ]
      },
      {
        "id": "a713223a-8de3-4578-9428-b882a0686cb0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2afd613d-c336-43b1-bedd-764d4aeeae30",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57ac2154-dcc3-47c9-80a2-9c6136ccd98a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ffac46b-6c30-4fdc-b8c6-db4c76783f8f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1e628c-be2b-4389-9a5a-9abfeeadb867",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62716149-47eb-4b05-acd9-ab2364b0c1b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc3070d-41f2-4a98-bf72-b901b296d606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98bff0b3-b1f0-478e-a0b8-06c56ad7570c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47644769-75ca-444e-8fa4-cbd720920166",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "333bae99-6069-4f16-a800-23b432c5423d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce0333c9-21a8-4300-9a11-0ad6d03901cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9aed2a3-ae22-41f5-a349-05c4535bfac9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87f8ec67-770b-4b76-bb5c-8fc9389e560b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e1705f5d-475e-471c-9a20-70fdf753f847"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15f2544b-06aa-4347-8927-5d1da72283a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0199f2e8-9325-4da3-8646-fadc34e543bb"
            }
          }
        ]
      },
      {
        "id": "2a9315e2-a810-4fbf-95e7-e82401ccf1c9",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "498a8d5d-c480-454a-8852-a0a8de13cedd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5221656-75c2-491d-9a94-3969db45a731",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9bccc858-c057-4b4e-bc83-7bbe0ddccc20",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6f44556-2180-4cdb-9783-7044bfe7c068",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c1cc7f0-1668-497c-b75a-738187069c33",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 28.88070175438596,
      "responseMin": 5,
      "responseMax": 329,
      "responseSd": 31.536664480015684,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710117315380,
      "completed": 1710117332435
    },
    "executions": [
      {
        "id": "8e3e9bae-8d20-48a7-9ccb-93711b9f730c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d9c286e0-9337-4cb7-8f5d-5226407550fd",
          "httpRequestId": "4198154e-5bc1-4310-a13e-731d77b71ce9"
        },
        "item": {
          "id": "8e3e9bae-8d20-48a7-9ccb-93711b9f730c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "147fa5d5-1276-493e-abaf-735af3be3bf9",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 0
        }
      },
      {
        "id": "c8a2b8d1-a92a-4cce-83a8-32ec6d499869",
        "cursor": {
          "ref": "34462ed9-eabc-4c46-bd0d-3240b83b415c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3dff3672-49aa-47b5-929f-45d4bf2ebc7a"
        },
        "item": {
          "id": "c8a2b8d1-a92a-4cce-83a8-32ec6d499869",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5b18d842-cada-4f11-a635-3c1f3563cd49",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "5f4067f9-21c8-4d2f-949d-a8ce6d302a50",
        "cursor": {
          "ref": "ccd55d14-7287-47d2-aaf0-c6248b22df06",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "976b5f83-9ce3-4396-ae01-e1ff48ebbf21"
        },
        "item": {
          "id": "5f4067f9-21c8-4d2f-949d-a8ce6d302a50",
          "name": "did_json"
        },
        "response": {
          "id": "a3ee94bd-e9d7-4b77-9ae3-f53bb58b7946",
          "status": "OK",
          "code": 200,
          "responseTime": 232,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af51e113-361c-496c-8907-56a6bf9ec95e",
        "cursor": {
          "ref": "bc8927e6-988c-4e35-92be-40d79cf90dcd",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f9493bee-7a87-450d-b0eb-82ef0c96cc1b"
        },
        "item": {
          "id": "af51e113-361c-496c-8907-56a6bf9ec95e",
          "name": "did:invalid"
        },
        "response": {
          "id": "f7d8a80d-d917-4ca6-abed-1b5ce9c6085c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af51e113-361c-496c-8907-56a6bf9ec95e",
        "cursor": {
          "ref": "bc8927e6-988c-4e35-92be-40d79cf90dcd",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f9493bee-7a87-450d-b0eb-82ef0c96cc1b"
        },
        "item": {
          "id": "af51e113-361c-496c-8907-56a6bf9ec95e",
          "name": "did:invalid"
        },
        "response": {
          "id": "f7d8a80d-d917-4ca6-abed-1b5ce9c6085c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b053cf72-c3e9-484b-981b-0a9369178bac",
        "cursor": {
          "ref": "2f1114c9-107d-48b3-a319-2511f110b501",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "31e5e887-1064-498a-8227-cdba2b62de61"
        },
        "item": {
          "id": "b053cf72-c3e9-484b-981b-0a9369178bac",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4998ab19-6031-4a4d-a199-fbed42309db8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 85,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d52764f-489f-4260-ae47-0b1f1eba8baf",
        "cursor": {
          "ref": "e66d3d58-e343-4030-89f1-3bbeb7d3a200",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b40454ea-d7db-4bb5-9a16-7d3129629ed3"
        },
        "item": {
          "id": "2d52764f-489f-4260-ae47-0b1f1eba8baf",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "35505a51-3379-4d09-a565-1216abbac600",
          "status": "Not Found",
          "code": 404,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55357489-24a3-43aa-9f7f-ff42171dbdcc",
        "cursor": {
          "ref": "f43f14c0-82a9-4966-ae33-ef4b794caae5",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2ddf07d0-f5c6-49fb-8085-6aced444c02a"
        },
        "item": {
          "id": "55357489-24a3-43aa-9f7f-ff42171dbdcc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d2dfe565-15ff-461a-aa39-474f77d6db21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75909f76-c906-4801-97c8-02df4a02220e",
        "cursor": {
          "ref": "7005aa45-418e-4946-a6b1-c220f74b0f84",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "53395400-ec95-48b0-b005-d43ec21292cf"
        },
        "item": {
          "id": "75909f76-c906-4801-97c8-02df4a02220e",
          "name": "identifiers"
        },
        "response": {
          "id": "c4c79038-05c4-4917-9eda-f649ac94e999",
          "status": "OK",
          "code": 200,
          "responseTime": 228,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60ac1a0-2361-439e-98a9-036239522516",
        "cursor": {
          "ref": "c0cb72e6-3651-424b-a9e2-807c79e05299",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f49cc8f4-adc4-4f68-8c53-6cb7543e73fa"
        },
        "item": {
          "id": "f60ac1a0-2361-439e-98a9-036239522516",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d6145023-8fd3-427a-bdc8-970526485469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3abb574f-ad9b-49f9-a43a-928275e73a71",
        "cursor": {
          "ref": "357909a2-029c-4ba5-bc50-b64e1cb6ce67",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2010c5b2-961d-49a2-864c-149de465ef93"
        },
        "item": {
          "id": "3abb574f-ad9b-49f9-a43a-928275e73a71",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "be594709-bb40-4eae-9c7f-49bb1f355907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202a4bb0-db83-4206-8058-370fa9d65475",
        "cursor": {
          "ref": "ead79621-0f03-44b6-b58b-ff0b8447ab0f",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0eb32434-baf7-4104-b21b-9b896ca8ac9d"
        },
        "item": {
          "id": "202a4bb0-db83-4206-8058-370fa9d65475",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4b0fa40a-4a66-4faf-9fe2-113eaed242f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c967ed-9294-4622-a665-bffd1ac3c878",
        "cursor": {
          "ref": "70fbf85b-02d0-4699-9c5c-8b7224770af8",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3fa78e84-1faa-4711-98c5-91cc9afd1c1a"
        },
        "item": {
          "id": "05c967ed-9294-4622-a665-bffd1ac3c878",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3564d170-b24d-481d-a7bf-ce89d25df210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ddc3f7-4bff-461c-9067-1346655a21b6",
        "cursor": {
          "ref": "9f675e84-1499-45bc-958a-895ef57fff7d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "43b04bcb-8ad1-4672-affa-4f76926b8271"
        },
        "item": {
          "id": "82ddc3f7-4bff-461c-9067-1346655a21b6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1771bfd4-4fbb-4207-8c4d-2e6990b4cfaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8f2a1b-6d1f-4b70-ac79-5f763472e086",
        "cursor": {
          "ref": "295d9117-abb5-4e29-9823-6cee6bf0348a",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9a81d3f8-eb05-4013-98fa-db2bf35972da"
        },
        "item": {
          "id": "2b8f2a1b-6d1f-4b70-ac79-5f763472e086",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "645c0cba-63a6-4407-9929-5a4f41513aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f284f47-9258-4a92-9ea3-66be502dede2",
        "cursor": {
          "ref": "324a203b-b870-46c8-b5ac-b1f10838b2ec",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7485fc0e-7724-45d1-99a9-1053ca74a754"
        },
        "item": {
          "id": "3f284f47-9258-4a92-9ea3-66be502dede2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d7a75116-ed98-416b-a526-b197bdbfb514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56ee987-af28-4712-be06-5a1c12cc3985",
        "cursor": {
          "ref": "85cf3881-7748-48e3-be4c-506889aedcc5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "89b9f16a-bd72-45a2-a80a-e1d4ee4af6ab"
        },
        "item": {
          "id": "e56ee987-af28-4712-be06-5a1c12cc3985",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f779e8fe-9d53-49e3-a5e4-c2d6045e2d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e087ae8b-0755-434e-9721-2420fbb4f33e",
        "cursor": {
          "ref": "998d757b-20f0-4542-b75d-7c296bb750ae",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f94708ec-f3c5-41a2-a7fa-2a0531c61893"
        },
        "item": {
          "id": "e087ae8b-0755-434e-9721-2420fbb4f33e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e9ff43e1-75a3-415c-b595-98baf0357361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec3aa60-81a4-4d01-9f49-a5c21327bff7",
        "cursor": {
          "ref": "65356aa9-440d-4eab-b937-0f8c6d872b84",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c840c3ac-0466-4a6f-b9e6-2f2971058514"
        },
        "item": {
          "id": "8ec3aa60-81a4-4d01-9f49-a5c21327bff7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "74160d04-6baa-4b56-91bd-48241d3c8e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663fdb86-2678-480d-b101-17ac00b79710",
        "cursor": {
          "ref": "74c5abd8-1e24-4636-914e-e7a8c9c2cbde",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d4f22e1c-453b-4bc0-bb03-8d26909d18d0"
        },
        "item": {
          "id": "663fdb86-2678-480d-b101-17ac00b79710",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "15d6ef2c-ac7f-467a-bd72-57d4b1edd885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa427e4e-6e47-4799-8c18-07f29d8cc96b",
        "cursor": {
          "ref": "ad4b38eb-6747-4e4d-bd49-cbdd812c304b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6c673588-dd61-4b24-ac2f-01fed951e86b"
        },
        "item": {
          "id": "aa427e4e-6e47-4799-8c18-07f29d8cc96b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cd90c947-d16b-43e1-b151-9a4a9b5e57a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8679ae-ae30-4d1c-89bd-c3b6276e5cd1",
        "cursor": {
          "ref": "19ae5f08-8111-4d9b-bd19-72b241120771",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bd509eab-e291-4cdf-abca-3ab94fa043ed"
        },
        "item": {
          "id": "6a8679ae-ae30-4d1c-89bd-c3b6276e5cd1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4b0696c9-168e-4d60-9347-15fd7a53bc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bb03a8-b1f1-4556-a6be-1ffa445dd7b2",
        "cursor": {
          "ref": "7f313343-a3b5-42de-bc47-cc8df7cfc5dc",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2ae83c43-4e5f-4fe5-9a0e-a7fd2158961f"
        },
        "item": {
          "id": "d5bb03a8-b1f1-4556-a6be-1ffa445dd7b2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b0c09f63-80cf-4364-a8dd-1daa1e1b6438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccb1e16-d89e-435d-9798-28f961346356",
        "cursor": {
          "ref": "656c1245-0a2f-4911-bbb3-68a2578d4541",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f762f8e5-0529-4293-84a7-18db9f19bc6d"
        },
        "item": {
          "id": "8ccb1e16-d89e-435d-9798-28f961346356",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a16da8fc-1726-4263-b397-3aca8d6f3541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcdebc3-a04d-4143-8970-4318309cedae",
        "cursor": {
          "ref": "cb59d6ef-9568-45d4-b0d9-809abaeecd19",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d922c56c-69b3-4e85-952e-c0764f3d9415"
        },
        "item": {
          "id": "4bcdebc3-a04d-4143-8970-4318309cedae",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "67384319-a866-4e87-8b41-4601adbf650c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea62218-17f1-4a15-b18c-c6cb0fe69f9e",
        "cursor": {
          "ref": "428ac465-43d6-4aa1-8e47-aea185577f41",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9fa32f83-2fd0-44dd-8ba1-3db7dcd657a9"
        },
        "item": {
          "id": "3ea62218-17f1-4a15-b18c-c6cb0fe69f9e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4b6ec215-59db-42fa-b086-756d0848d4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073b427a-987a-4ad5-8826-5f415f611e09",
        "cursor": {
          "ref": "f6062adf-492b-44b1-a081-2d7203eecd8b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "734ecd5b-3e0f-4c56-b91e-dcbb2d4a3521"
        },
        "item": {
          "id": "073b427a-987a-4ad5-8826-5f415f611e09",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a5ab00b7-5160-4bbd-a7c1-915e5a803d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19710aab-d468-4885-a2a6-87a98a1068ab",
        "cursor": {
          "ref": "3b6c2e6b-8766-4d79-877b-54116cadd739",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "53c740e8-8e3d-466c-b73e-5145e69ac8d3"
        },
        "item": {
          "id": "19710aab-d468-4885-a2a6-87a98a1068ab",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7c335d13-c5f4-4f91-8096-6e4a509250dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb7c280-28af-40cf-ab0d-3a74e347ba1f",
        "cursor": {
          "ref": "9e85f4ca-874f-48b3-be18-41d62487910f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2b4d9ba1-dcb0-4fba-b468-95a79c859c85"
        },
        "item": {
          "id": "2eb7c280-28af-40cf-ab0d-3a74e347ba1f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8c70983e-172c-4f19-b8e0-eae79673082a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccf7e00-2523-41eb-bdc0-a141356b7599",
        "cursor": {
          "ref": "1bc82671-6386-4d72-b858-c4b9b38f0741",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "82a7cccc-ee2f-4133-9860-edd01314a849"
        },
        "item": {
          "id": "5ccf7e00-2523-41eb-bdc0-a141356b7599",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7d4026b1-f8b2-4f4d-825a-9bd3ac8d0c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4b0703-0604-476b-bb56-e645b8945f51",
        "cursor": {
          "ref": "11eefdb9-e3d9-44ac-a399-60c5eb683746",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a410b4e5-7f63-4d34-a9b9-8a4b5a4ca139"
        },
        "item": {
          "id": "6b4b0703-0604-476b-bb56-e645b8945f51",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8052dde9-098a-4ea5-afcb-3df4539983e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10914b45-c5b9-4b3f-8e3a-600bf7cdc3f1",
        "cursor": {
          "ref": "2c7fe492-3eb0-4934-b8b7-cbba0a608122",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "77e2f328-1a27-43ae-880e-035849ddfcf9"
        },
        "item": {
          "id": "10914b45-c5b9-4b3f-8e3a-600bf7cdc3f1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ba9922ef-8716-4426-b8f5-e51cb664ea9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fc1e23-b6f2-4b02-8736-f77aaf7c62b5",
        "cursor": {
          "ref": "eb39d7b3-f5b7-44b1-93b9-72d7d1ad59d0",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "37fb8d17-a92f-4d4e-b50d-3597f355a462"
        },
        "item": {
          "id": "00fc1e23-b6f2-4b02-8736-f77aaf7c62b5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "731c0a45-efbf-45e7-b53a-1e698bfd2e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf866e61-2ac1-4d9f-8448-ed6a95663841",
        "cursor": {
          "ref": "a5f7a514-5803-4f23-828e-bf8e1985a4ed",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7a34ecc1-7006-4b73-a824-f9bf32956b5d"
        },
        "item": {
          "id": "bf866e61-2ac1-4d9f-8448-ed6a95663841",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "43334915-1afd-4efd-b0ab-8b3f23e34c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c97ed7-b62b-4160-a1f3-4e826fb64110",
        "cursor": {
          "ref": "ecc1f2e5-647e-4bae-b1ef-cbc87b1ae54f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dd3e7ae4-1a98-498d-ab52-f6e50398f24c"
        },
        "item": {
          "id": "51c97ed7-b62b-4160-a1f3-4e826fb64110",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "438f85e9-4ecc-426b-a195-b476ae6b0042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890261c5-2981-4cfb-8fa1-d734dc83ac33",
        "cursor": {
          "ref": "db708d89-5f0e-48c9-af11-07ab2188ecda",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1498cc7e-c30b-4fe4-ad2b-cc8c25fe2ab7"
        },
        "item": {
          "id": "890261c5-2981-4cfb-8fa1-d734dc83ac33",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5ff0022f-a896-4066-ac25-bdb2fe43c6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d772bd-4b22-49bf-8e5a-48502a1316c7",
        "cursor": {
          "ref": "ca84dce2-b04d-487c-8cc1-a2a691563854",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9cbf3be0-83b1-4884-8456-cabf02659172"
        },
        "item": {
          "id": "73d772bd-4b22-49bf-8e5a-48502a1316c7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2af0c439-922d-4bc0-ae33-eca9cf152788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6860e01a-71ac-4053-8986-52a8c1ebfbec",
        "cursor": {
          "ref": "9d06b6da-a34b-41f5-ad56-076b37260329",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d62733eb-c850-48e3-8964-5ac23cfa7ce0"
        },
        "item": {
          "id": "6860e01a-71ac-4053-8986-52a8c1ebfbec",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bd02b07a-24fb-4eea-be1a-db399bc4b17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db29ee9b-b469-4d5d-a553-a32c134c826f",
        "cursor": {
          "ref": "9adf7b6d-dd02-40c3-924f-f21a66dc7138",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "52b19d10-3cea-4dc0-b205-7dc7ff403e8d"
        },
        "item": {
          "id": "db29ee9b-b469-4d5d-a553-a32c134c826f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0f51e3d9-8812-4bca-8c84-eb9de507f4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66c9d3b-8c62-4177-9434-8bbf00ab2c50",
        "cursor": {
          "ref": "c578b53f-fa14-4d32-b0fc-8bdb870ad649",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f1384a9f-5e0d-453f-8441-e420c2c0bfa2"
        },
        "item": {
          "id": "b66c9d3b-8c62-4177-9434-8bbf00ab2c50",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "749c492d-51c1-426f-a4e9-c8b7bc62deb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d99b0a-415c-4313-ad28-b2f0fba4bd3c",
        "cursor": {
          "ref": "2be4b5a7-b262-4c31-ac28-c6ebee084728",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b7c3c0ac-ea08-43c8-9870-fb228091c157"
        },
        "item": {
          "id": "68d99b0a-415c-4313-ad28-b2f0fba4bd3c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "38449223-a4bc-481a-8877-0bae427ebcdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a975aa-260e-42d1-ab2d-bc6d99f2904b",
        "cursor": {
          "ref": "4316ce72-bfb0-4858-a1fe-c4334d3dc482",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "259e65ce-d5d0-4a66-8f8c-0851bfaa2577"
        },
        "item": {
          "id": "83a975aa-260e-42d1-ab2d-bc6d99f2904b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a89186d7-4108-433c-b685-b4049b38aa75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925b9c05-d936-45e8-b2a3-eccfae76a33b",
        "cursor": {
          "ref": "7cc0437d-4207-4c16-a24c-543ebbc051e2",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "44a06909-af9a-4182-9434-4cf2579d5c79"
        },
        "item": {
          "id": "925b9c05-d936-45e8-b2a3-eccfae76a33b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "54164c0f-0d93-467d-adf3-f0cf20ddd002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69aa64b0-b2e5-4729-b9d2-d9b6a10402d4",
        "cursor": {
          "ref": "bbac6d17-28b0-42ce-9b61-e5a81ca4dbd3",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0cbdea0c-b92d-40cb-9437-2c446b0400a7"
        },
        "item": {
          "id": "69aa64b0-b2e5-4729-b9d2-d9b6a10402d4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "96e3f3a3-d2aa-4d48-bd0a-53156bc605f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01ba23f-4903-4813-ae8e-1bb742c04975",
        "cursor": {
          "ref": "b15b3e8c-d915-4557-aac8-3e428c6f1ba4",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3c39591e-5541-4fbe-80d3-1d4709168ced"
        },
        "item": {
          "id": "f01ba23f-4903-4813-ae8e-1bb742c04975",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b3e738ce-4fd4-45f8-8b76-7f0430af12a2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 45,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57182ad8-6748-48c9-a8d7-d9f49571ff59",
        "cursor": {
          "ref": "7d53f3c5-5909-4ac7-8c90-d229ef6f884e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "faf45843-b4fd-413e-a87e-adf1fa6995d6"
        },
        "item": {
          "id": "57182ad8-6748-48c9-a8d7-d9f49571ff59",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cc78fd96-241d-43f3-82cb-f29ddaccf9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d244be2-9559-48ca-aee6-dadc69840438",
        "cursor": {
          "ref": "cfca9fd1-c8cf-49e4-b4bd-71c5f31790ff",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7806fc17-3491-4c83-8c73-631de49ee1b4"
        },
        "item": {
          "id": "6d244be2-9559-48ca-aee6-dadc69840438",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c86dcc15-f68f-4135-b1e4-bfc8fd4377ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5e7734-069a-43b9-8633-212a9a65411b",
        "cursor": {
          "ref": "5273fca1-3c70-4b58-b9f6-71a16468245f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "45172e13-877c-4be5-a636-4de3e31b32c2"
        },
        "item": {
          "id": "4c5e7734-069a-43b9-8633-212a9a65411b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e0c50d1b-444e-4479-936b-286479cb29de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2adf182-4960-4df2-9bec-4ce03ffebec3",
        "cursor": {
          "ref": "919879ba-a387-41cc-b88f-50e501258d10",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5fef562c-20c3-4278-ac9e-4fd798b4f41d"
        },
        "item": {
          "id": "e2adf182-4960-4df2-9bec-4ce03ffebec3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "62852242-0b07-4003-af55-a2e4f6c04822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd75793-4a14-4c03-b950-aa21e0c65f7f",
        "cursor": {
          "ref": "37ba506c-abb6-4696-881f-00eb087fbf3f",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "013cfc39-2575-4bfb-a0e9-f1ee6d31cdda"
        },
        "item": {
          "id": "9bd75793-4a14-4c03-b950-aa21e0c65f7f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4d18fbd7-3b84-4716-bb12-f07e5b817b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329ca579-b703-45e9-b701-56ededcccff2",
        "cursor": {
          "ref": "9e877def-e356-4449-b6db-902a244e07be",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7a5e722a-2fbc-468a-9f2f-63f810e0edb6"
        },
        "item": {
          "id": "329ca579-b703-45e9-b701-56ededcccff2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e83191ba-e0ec-4a42-a51d-34bb8c02f720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4338df3-b788-4351-b0ad-b06faa732114",
        "cursor": {
          "ref": "a8d02271-1f1f-4ad7-a0d1-446bda3f5945",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "867d185e-0892-4160-a949-b91c26ef6293"
        },
        "item": {
          "id": "d4338df3-b788-4351-b0ad-b06faa732114",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6b206691-6566-4e94-9a3a-33be2c935ff1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 36,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6928fccd-a7be-4643-9d6a-50b195b39056",
        "cursor": {
          "ref": "6a18e205-ef25-49f1-b350-2636899f3e1c",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b018a840-cde8-4aa0-8736-edcff3a79fcc"
        },
        "item": {
          "id": "6928fccd-a7be-4643-9d6a-50b195b39056",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5da6d1b3-518b-4a58-9b28-87d84221856b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bce066b-2b1d-4e21-a8a1-5e0a77f71152",
        "cursor": {
          "ref": "12cdb628-6979-4d8b-8d0d-b663497a4ee1",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "bdc7c139-3396-448f-a782-195a0ddc9e0b"
        },
        "item": {
          "id": "8bce066b-2b1d-4e21-a8a1-5e0a77f71152",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4236e42e-8bcd-4f00-a887-46049998b195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b63191-7e73-4bdb-836a-16b225521091",
        "cursor": {
          "ref": "4048fca4-5e5f-4265-981f-170b50f8d47c",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a2157740-15d0-4059-8d10-e5c9e69243e2"
        },
        "item": {
          "id": "08b63191-7e73-4bdb-836a-16b225521091",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7b6e18d8-a0cd-465f-aada-eba8835417ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7067c900-499b-4c31-950c-876d528438d3",
        "cursor": {
          "ref": "161aa5b4-631a-4539-a481-7927f683647b",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "43ba1bc9-ef69-47c2-8502-22d65e6f06ad"
        },
        "item": {
          "id": "7067c900-499b-4c31-950c-876d528438d3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c6f57626-59c3-4857-98af-b525aa051cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55504a1e-b2fe-4e2f-aa87-37044b802a35",
        "cursor": {
          "ref": "bc5eb4e2-fb27-4146-a06b-0b17fbe834fa",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fd09cf46-56e6-472a-a50a-f1b5b5a3cbbf"
        },
        "item": {
          "id": "55504a1e-b2fe-4e2f-aa87-37044b802a35",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e54b4ba8-b540-44c4-bf39-3568d8ed31fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e624f28-a91c-431e-8265-b109d2b0c25d",
        "cursor": {
          "ref": "45007de3-208b-436e-b392-2c828c5aa225",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "45c272fe-27b8-4de6-b96d-21cc6afae813"
        },
        "item": {
          "id": "8e624f28-a91c-431e-8265-b109d2b0c25d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "70d5c3a3-0eaf-43b9-9f4b-d09c662d40a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473f9e1b-e0fa-43ca-8cdd-7443b97e3125",
        "cursor": {
          "ref": "78c270f5-a369-497f-8fe9-e20552e8c29f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d7f068ba-d224-4feb-bbd5-e5bb828f3a64"
        },
        "item": {
          "id": "473f9e1b-e0fa-43ca-8cdd-7443b97e3125",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6c984298-f0de-4edf-8f7b-b4a8fd34c960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8215ffb9-67cd-4907-964f-68c30d0b3cf5",
        "cursor": {
          "ref": "1c75396a-9714-42ff-9060-86c87eb60f4a",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a0061508-cc9e-40c7-ba7c-69c01537856b"
        },
        "item": {
          "id": "8215ffb9-67cd-4907-964f-68c30d0b3cf5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "102c00e3-3ffa-4330-b487-2786a703e104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8012e5b8-928b-4076-8a8f-2290f0c66d9a",
        "cursor": {
          "ref": "30ebe492-69bd-4f8b-b3b5-eebd81db499f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9788588c-5586-4c49-b588-632e773e6c5d"
        },
        "item": {
          "id": "8012e5b8-928b-4076-8a8f-2290f0c66d9a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e228b76f-ac90-4b7a-a0bd-ea0902cff4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04960cb9-33d8-44b0-868b-40cc0c401cdb",
        "cursor": {
          "ref": "9816b70a-bd4b-44c4-90bb-0cd97b6700bd",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0584cc26-83f9-4c80-a889-b4553827e313"
        },
        "item": {
          "id": "04960cb9-33d8-44b0-868b-40cc0c401cdb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fb4c96c4-636d-4b0f-8e98-b45313cff57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463b8ef3-28dd-40b4-8093-72d99baf388f",
        "cursor": {
          "ref": "7bf607db-8a9e-4e02-bd0c-f23ab84f0582",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "afb4005f-7257-492e-96d2-86ba0482cbdc"
        },
        "item": {
          "id": "463b8ef3-28dd-40b4-8093-72d99baf388f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "af33e59a-2eda-4353-b914-5043be7415be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b1b220-ba62-470c-bfae-29f7a23df9a7",
        "cursor": {
          "ref": "031bf0de-30dc-4ae7-a615-4fda721eac15",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2c6f1adf-116c-419d-89cc-5687340cf1ca"
        },
        "item": {
          "id": "c8b1b220-ba62-470c-bfae-29f7a23df9a7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bca4dc8c-0546-4450-b1af-0ae06779f3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35106aac-f552-4b38-9765-2ee5d90a5ecb",
        "cursor": {
          "ref": "6ea926ac-b08c-4c58-9d75-1547e8012113",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "325c1760-f577-4c06-9fef-c808cfc9c897"
        },
        "item": {
          "id": "35106aac-f552-4b38-9765-2ee5d90a5ecb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c033c32d-1161-464b-a895-6fe186d57028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a66adf-8034-4de0-a5c6-ad7e4fb3682d",
        "cursor": {
          "ref": "929381f4-5b75-4225-9d92-bcd0039ad48a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "08c24463-0a27-45be-a05c-09f7b2403685"
        },
        "item": {
          "id": "77a66adf-8034-4de0-a5c6-ad7e4fb3682d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6a5da4e3-f456-4f01-aa59-ee1022107b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3dd873-863d-45b3-8f4c-256dedc65b72",
        "cursor": {
          "ref": "4a075716-5713-46a1-af75-d96ea468c330",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "171268db-0bd5-449c-b744-516686ede97c"
        },
        "item": {
          "id": "da3dd873-863d-45b3-8f4c-256dedc65b72",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "735af736-b556-42bc-8702-67abffd45a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8ab4a3-a9ab-4184-8a7d-26c08b05c285",
        "cursor": {
          "ref": "e25c45f7-40b6-4f37-8e43-b05ae66a40f2",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "34e318b6-ef6f-46b7-8d06-89c0444cfbcd"
        },
        "item": {
          "id": "9b8ab4a3-a9ab-4184-8a7d-26c08b05c285",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3635f102-bfcf-4e81-9b8a-d10bb956eae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc7e57a-72af-49a9-bf71-f3e4e8eeef24",
        "cursor": {
          "ref": "22e8e325-372f-4f4b-95c2-af316826adbc",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c93eb362-10cf-4f99-a2ea-d70860923d51"
        },
        "item": {
          "id": "efc7e57a-72af-49a9-bf71-f3e4e8eeef24",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "83b4c5fa-e86f-43b0-902f-141f5563d2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858ff240-b6a4-4d74-a5a8-976640ebbe85",
        "cursor": {
          "ref": "73f66c77-b286-43f9-9fc3-463bf51e6c66",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a6c55453-2cb6-4a5a-a6f8-5a0830b0b34d"
        },
        "item": {
          "id": "858ff240-b6a4-4d74-a5a8-976640ebbe85",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9dda3c66-ee89-4248-bdc9-ca9ff496d2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e958d4-6460-47a8-9c75-a4d3656eaf60",
        "cursor": {
          "ref": "b3024341-7ff8-4747-a922-aaf7ec5dfd3b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7752501e-7c87-4f76-9a4c-55bac6b55aaf"
        },
        "item": {
          "id": "97e958d4-6460-47a8-9c75-a4d3656eaf60",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "197dc77e-4123-4e1e-b663-e6b9aad6a3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dbed83-e2ec-4946-a98e-983d547b4e78",
        "cursor": {
          "ref": "88c5cadc-cb79-4890-9894-5e8a13b2268c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "82398e5c-2307-43c9-895f-2a88c5f81a81"
        },
        "item": {
          "id": "25dbed83-e2ec-4946-a98e-983d547b4e78",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "98ae9c06-8f94-440e-a76d-2e8301dc2815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7aaae97-8952-483f-96c8-91cc45d531a7",
        "cursor": {
          "ref": "05a03aa3-cb4c-49af-9417-4c0269d8e788",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "df573178-6527-4088-978e-e272e0cc13ef"
        },
        "item": {
          "id": "b7aaae97-8952-483f-96c8-91cc45d531a7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e75307fa-2fd7-4cd1-b927-b74dbe58d6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71ccb80-44ba-4261-bcb7-48bd3319cc27",
        "cursor": {
          "ref": "14cdd2a9-8d3a-46d8-baf1-45ca5520e972",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "811150f2-2c50-4da0-a4c1-21b4e969a4b0"
        },
        "item": {
          "id": "b71ccb80-44ba-4261-bcb7-48bd3319cc27",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5d85db40-4c98-419d-b192-0557d861b05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6472ce91-4e6f-41e4-947d-13e188d368aa",
        "cursor": {
          "ref": "fe7fe2c0-3f3e-4349-9375-3eb0522563cc",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ec100af2-18c2-4952-b37c-4a142bcae866"
        },
        "item": {
          "id": "6472ce91-4e6f-41e4-947d-13e188d368aa",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fe5d8b73-eaa4-4ead-878b-249cfe575cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c1f5db-e9fe-48a8-b09e-f015d93f56c2",
        "cursor": {
          "ref": "8d256815-4cea-47e6-a8dc-bf862af4a733",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "741942c9-b769-495d-81fb-c25de7794ed9"
        },
        "item": {
          "id": "a2c1f5db-e9fe-48a8-b09e-f015d93f56c2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ebcdfe5c-d2e3-4d27-81dc-24445ed7224a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7100a8e-06c2-47f7-8b34-e8ae51cb64ec",
        "cursor": {
          "ref": "d8341f95-8a82-4b93-b08f-48d1f51a1051",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "53fd6036-4a10-467d-9067-50a43c936b37"
        },
        "item": {
          "id": "a7100a8e-06c2-47f7-8b34-e8ae51cb64ec",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9dec01f0-c375-42c1-81f1-c3c950e6a60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d77d6b-77bc-4a0a-9f7d-f344470e2628",
        "cursor": {
          "ref": "6e7ad734-0ffb-4fb1-bd75-9202e54655d7",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "98458e24-84a0-464b-b905-87384d6e7026"
        },
        "item": {
          "id": "a6d77d6b-77bc-4a0a-9f7d-f344470e2628",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8ec5c0ec-7833-4478-bd5f-c554a4de7bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a319ff9-891e-42c3-89a7-e2cb0c5ced38",
        "cursor": {
          "ref": "7a2f3f5a-6d3c-4c2d-92af-94d6ba2917ed",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0478ab36-2371-43a4-b5be-81c778cedbd1"
        },
        "item": {
          "id": "4a319ff9-891e-42c3-89a7-e2cb0c5ced38",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0e8b879b-ca8a-4199-8c87-9ab4cf4f3911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8b17f0-f172-4820-9e88-cc8c3c1e5472",
        "cursor": {
          "ref": "00cfa111-7f13-4c2b-a90a-898ee352ed51",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f301a742-9338-445d-b3b5-40fa028bc676"
        },
        "item": {
          "id": "4d8b17f0-f172-4820-9e88-cc8c3c1e5472",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "156ba9d9-34a3-49b0-beeb-442ec913b491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e47c18e-b543-42d3-beae-7d9608991ccf",
        "cursor": {
          "ref": "9d355f8c-525e-404d-ad87-206003335012",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6eb0df9b-69d1-4988-a21a-b64e73295e2b"
        },
        "item": {
          "id": "1e47c18e-b543-42d3-beae-7d9608991ccf",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0c342a66-1544-4e9c-b193-1e5fd3b960e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6f644b-7fee-4008-a3bb-356c628ca04a",
        "cursor": {
          "ref": "5e3d5211-2caf-44d3-8a46-9e384db22db7",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bb0ec706-a3a2-4c63-8ccd-4cb4a0c0754a"
        },
        "item": {
          "id": "de6f644b-7fee-4008-a3bb-356c628ca04a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c60da784-e4c2-4597-bb80-b02fd0a25a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213240fe-7734-451b-90d7-a98389f9419c",
        "cursor": {
          "ref": "f308bf14-67ca-4094-ace4-dbed9cbfb90e",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "99f274d9-0630-4f79-a88e-33db64c625eb"
        },
        "item": {
          "id": "213240fe-7734-451b-90d7-a98389f9419c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "db8ef574-716d-4b8c-b7bc-e4a3da09a067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4e81f7-9fa2-4ff9-8058-474764deaba6",
        "cursor": {
          "ref": "2d110e35-7171-400c-af2a-0a967a7db679",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b5ab21a3-4e85-4213-848c-3a893fc063a7"
        },
        "item": {
          "id": "5c4e81f7-9fa2-4ff9-8058-474764deaba6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2802fb9d-55ad-4470-ab61-4d56c1ad1f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22490c01-038d-4746-8b36-8cefc1347194",
        "cursor": {
          "ref": "b09e3787-cc19-479c-85e0-17668536f096",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "41484217-1871-4d5a-9998-445bd1f3eaaf"
        },
        "item": {
          "id": "22490c01-038d-4746-8b36-8cefc1347194",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e1e64bff-e47d-4c3b-9049-34b71dc70109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7692410-e73c-427e-9ff2-40f4b0c2928b",
        "cursor": {
          "ref": "9f924e45-17bb-425b-a6b2-2b9efadc5318",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0d9c9489-1d6f-4ab9-a3dc-d48874283b41"
        },
        "item": {
          "id": "f7692410-e73c-427e-9ff2-40f4b0c2928b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c5b9e2ad-85c6-4a13-9272-0c23aab05895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e847d7d2-544d-4efa-9491-69f3387b0299",
        "cursor": {
          "ref": "7bc82b75-bda6-4f78-a282-42408a75f9c8",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c557beda-368e-4a3c-8d42-14db533e533a"
        },
        "item": {
          "id": "e847d7d2-544d-4efa-9491-69f3387b0299",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9fdecd82-1611-4c48-b285-c215f7fe19b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b2d1b4-44ad-4e8a-827a-3c9ec056b69c",
        "cursor": {
          "ref": "5470366a-3e34-46d4-81f2-e26cb6f1e0fc",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4c3add43-15a5-401e-8d31-ee4db412aa58"
        },
        "item": {
          "id": "e6b2d1b4-44ad-4e8a-827a-3c9ec056b69c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b61a6e14-cf4e-4199-b42d-caae604318e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d4c20d-f1e0-4ed7-b797-d0b7df53b2c6",
        "cursor": {
          "ref": "30e2b19c-f19b-4b3c-87d5-3c26a6c723a0",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0081433d-c89f-4b26-b4df-5835cb0e0bb5"
        },
        "item": {
          "id": "37d4c20d-f1e0-4ed7-b797-d0b7df53b2c6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3aa91022-94be-479b-9cf9-e59254e725cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701c227d-af16-4eed-acf7-7923770ac8f0",
        "cursor": {
          "ref": "cd9fca97-743d-4957-802f-64c7ba2368b3",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ba1b7862-1548-4202-9bd4-cf068bc6881e"
        },
        "item": {
          "id": "701c227d-af16-4eed-acf7-7923770ac8f0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "63f83ed6-db4c-4ec7-80ed-1f2c506381e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9504d426-363d-4300-bb8b-0f3208c13dff",
        "cursor": {
          "ref": "b158928b-f3a6-429f-b0b0-c9366ef1d08e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4c320800-43be-4505-b19f-6fee56fa3408"
        },
        "item": {
          "id": "9504d426-363d-4300-bb8b-0f3208c13dff",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b64a63ad-aa69-4090-a0da-2e2dd4d4a9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4824102-1179-464e-ac76-912fe08a5913",
        "cursor": {
          "ref": "3e13001c-dfe0-404f-85ae-1b1fd3b5f096",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9a5da41b-584c-4a9e-aa13-a39db8aebb30"
        },
        "item": {
          "id": "b4824102-1179-464e-ac76-912fe08a5913",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ef6d2d6a-54a7-4c55-ad40-0cb21525237f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05700cd0-2d2b-4bf4-b46b-39133021e75a",
        "cursor": {
          "ref": "5bc19541-8174-4322-a6f7-a36f802f704f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2337ebd8-8ab5-4c09-9c53-e437a6bb09e1"
        },
        "item": {
          "id": "05700cd0-2d2b-4bf4-b46b-39133021e75a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "01563406-6e65-4b11-8073-047883492585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f7cfea-8564-421d-82cf-22610ff14bd6",
        "cursor": {
          "ref": "7ba4ad2f-7d0b-4fa2-927b-4a7fd0d309c8",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d84b00bc-349c-4a54-ae6a-e6d24d62e5d3"
        },
        "item": {
          "id": "78f7cfea-8564-421d-82cf-22610ff14bd6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "02def0e3-cc16-4975-9d26-36c8ad5a9baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b273a3b0-477c-489f-aa5b-2b0c82aae74d",
        "cursor": {
          "ref": "aee239bd-0c3f-4934-9b5d-6cbaec267497",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "532a4360-782a-4630-8f36-17b1dd981029"
        },
        "item": {
          "id": "b273a3b0-477c-489f-aa5b-2b0c82aae74d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "31543cb0-d34d-4508-bd76-0ecc1d81ed4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda18e1d-554c-45f4-8737-5f3d914e7bfa",
        "cursor": {
          "ref": "c70a8204-8f10-4e5c-8715-51fb9fd866bd",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3ab31229-37a6-412d-a79b-595ded88d925"
        },
        "item": {
          "id": "bda18e1d-554c-45f4-8737-5f3d914e7bfa",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "3e4a0c4f-45d2-499f-9806-1a1533b9b766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfee716b-23aa-4825-8e6f-02f752cd66d6",
        "cursor": {
          "ref": "708795a0-73b4-46dc-97f0-12b2b235dc4c",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "abc0827a-5e1a-4eb4-9ea2-66526e6d0641"
        },
        "item": {
          "id": "bfee716b-23aa-4825-8e6f-02f752cd66d6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "40693cb9-521d-4d4e-ae91-7dad38d0067a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7454c9f-6d3a-4f99-9f30-8da84369d0ee",
        "cursor": {
          "ref": "6d8369f4-bacf-41a6-9781-c3b777b16c1d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f0ae61fe-9386-4be8-ad9a-7b84824149fc"
        },
        "item": {
          "id": "c7454c9f-6d3a-4f99-9f30-8da84369d0ee",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d93e8f10-4cdc-4e85-a755-ab79202aa6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5abb059-152b-47d3-8e71-a0c68700857f",
        "cursor": {
          "ref": "274ba0f4-ddfa-471e-b301-edb417d06de1",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "51ddfab0-691f-4ce8-9fa2-f1d0958d1b6b"
        },
        "item": {
          "id": "c5abb059-152b-47d3-8e71-a0c68700857f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7d70e69e-8cf9-436b-82d9-9f4c6810981d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fce82c-1213-4e26-89b2-e6d22c98762a",
        "cursor": {
          "ref": "33e6ada5-20a1-4661-b218-da10b4fa588c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e8963971-2a9b-4074-9c63-20116bf2115f"
        },
        "item": {
          "id": "a0fce82c-1213-4e26-89b2-e6d22c98762a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9b9f04b2-64b5-4485-94f0-804f65cda5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d478b698-10d8-4bcf-b99a-1002e90cb3ac",
        "cursor": {
          "ref": "df4321ad-9e4f-4680-8e71-b91b2a96a58d",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2873cd9a-a3e7-4013-9f50-7585c75ac76f"
        },
        "item": {
          "id": "d478b698-10d8-4bcf-b99a-1002e90cb3ac",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "af23fa3f-c1c6-4d9b-8a7e-15502a75a046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e7dbfd-06ab-4024-b71b-20376f97528a",
        "cursor": {
          "ref": "50236431-dcff-4778-88fd-bca6dd078fce",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "61602d70-f1bc-4f75-9000-4566fa39c0f7"
        },
        "item": {
          "id": "00e7dbfd-06ab-4024-b71b-20376f97528a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "38c21c30-669a-4c5c-acd3-c8947a7eb052",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679ead4f-0bb4-42af-adb5-8fad328f985d",
        "cursor": {
          "ref": "98a27115-7121-4a19-b21d-151912fc1409",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7abcfae9-2737-4685-853b-777dd472b02b"
        },
        "item": {
          "id": "679ead4f-0bb4-42af-adb5-8fad328f985d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f7d499c4-5752-4f37-8334-1134de0a2e18",
          "status": "Created",
          "code": 201,
          "responseTime": 71,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a707b024-284f-408e-9854-e1b2c241b3e3",
        "cursor": {
          "ref": "a9932e48-a9e7-4e09-b64c-8e5778b319e3",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "28350ed5-c0d0-423c-935e-1feaaf6c3025"
        },
        "item": {
          "id": "a707b024-284f-408e-9854-e1b2c241b3e3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ae3ce053-5fef-424a-a534-a99843825420",
          "status": "Created",
          "code": 201,
          "responseTime": 311,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc5b495e-8422-4980-b435-1ce85b6d56b7",
        "cursor": {
          "ref": "860f2475-7e85-4687-a5e6-689925126bb5",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ae076194-5df0-46cf-ab97-7ffac503e559"
        },
        "item": {
          "id": "dc5b495e-8422-4980-b435-1ce85b6d56b7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e19c643d-5987-4988-bd2d-e3cd492aa78e",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52b7cf9-7f23-4f67-8a66-79e99a035a7d",
        "cursor": {
          "ref": "c1f87d45-c0a4-4964-b4d5-ed90dd3b581b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3a528e1a-677b-4260-8f3e-447b5a013f60"
        },
        "item": {
          "id": "b52b7cf9-7f23-4f67-8a66-79e99a035a7d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5f2d0331-6add-4c4f-b385-2cf5dfa2b146",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f050a498-8526-4ff3-8453-42757a841c40",
        "cursor": {
          "ref": "04cf785c-736d-45c5-a277-174f6e24cbf4",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1eef2629-20e9-4037-ae87-ec6f7f4cd790"
        },
        "item": {
          "id": "f050a498-8526-4ff3-8453-42757a841c40",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "22cebfcf-a060-4c12-9e5f-05ec44e34889",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "527d91da-5dff-409f-a611-838e6eb94fb5",
        "cursor": {
          "ref": "21a53744-3e98-47b8-a70c-7c7298db78c7",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d09634ad-2243-4a06-a304-22565de790fa"
        },
        "item": {
          "id": "527d91da-5dff-409f-a611-838e6eb94fb5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "79a1e8ab-f967-4cbe-a10d-b7fb12884a06",
          "status": "Created",
          "code": 201,
          "responseTime": 47,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "2364d886-34fa-489d-aa18-cbaa38eb7e6c",
        "cursor": {
          "ref": "e9a755f4-76d3-4e37-b5de-8cc5aeda9d70",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d24dcd33-f218-42fb-9610-e4981d981961"
        },
        "item": {
          "id": "2364d886-34fa-489d-aa18-cbaa38eb7e6c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3a175718-d241-4f61-a4dd-7f125540eab4",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d656d91a-7b6e-4ee6-b82c-aff7011c8c3f",
        "cursor": {
          "ref": "b1af275e-b0b5-4d1d-868a-084ad87a2bff",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b2a5ac0e-e496-4299-bcb7-3d3aa114dc29"
        },
        "item": {
          "id": "d656d91a-7b6e-4ee6-b82c-aff7011c8c3f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d26d53e7-5d06-4b89-9a81-a777b555c021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4cd1a9-aee3-43df-89b7-3367d3dad106",
        "cursor": {
          "ref": "bcb41c94-8280-4e80-9da0-6c66a6bb6ca7",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fd979e87-693f-4f56-90ef-3d1c0b1ce66e"
        },
        "item": {
          "id": "3c4cd1a9-aee3-43df-89b7-3367d3dad106",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "16071bed-90f9-4060-a643-480f521fae99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9b84d7-3016-4fdc-aa7b-b4b90278b925",
        "cursor": {
          "ref": "66158e12-8ea2-4c27-9a8e-1340d157d83e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a2f73705-9534-42f2-b209-5cf3d4426654"
        },
        "item": {
          "id": "7f9b84d7-3016-4fdc-aa7b-b4b90278b925",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4c891d91-c7ee-457d-8c32-24d435b757d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c958c00-3090-4657-b015-64c18f608469",
        "cursor": {
          "ref": "6341ad12-00dc-43ad-81df-7ffac2a89100",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e1b6a463-f94b-49f2-a7d0-f41a83712354"
        },
        "item": {
          "id": "9c958c00-3090-4657-b015-64c18f608469",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e8c9710b-32f2-4a2d-b267-5def42a49a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc27a082-1f23-4df7-8752-b2c81dbd51ed",
        "cursor": {
          "ref": "1bfba390-7645-4bd0-8377-260f5e0eb786",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d5056b7a-892e-4a1a-96cf-6a6ed9e1696a"
        },
        "item": {
          "id": "dc27a082-1f23-4df7-8752-b2c81dbd51ed",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4b8b5c45-3235-4afe-8bd1-f495344792a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a5bc3a-5c26-4adf-865c-d52b3a1804ce",
        "cursor": {
          "ref": "828800cc-8501-46d7-bc83-1ae81fa4eaeb",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a7ca40a3-2373-47b1-a99d-da725894cdd5"
        },
        "item": {
          "id": "68a5bc3a-5c26-4adf-865c-d52b3a1804ce",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f4c0a64e-5076-4f3a-a0ac-02bf45a7ff60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51817d77-4823-4eec-ac69-df85d1b2023b",
        "cursor": {
          "ref": "17e2dbc3-6722-4af2-a89f-f5e491625909",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "616dd2e3-63e9-452c-a55a-b4c9550d7124"
        },
        "item": {
          "id": "51817d77-4823-4eec-ac69-df85d1b2023b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8a989218-ff83-445d-b182-1c66659af241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c660c3fa-1db5-4bf4-9ed4-b93362a843a1",
        "cursor": {
          "ref": "a9b2de33-3cbb-4c0a-b1e3-930f143cc105",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8c9ecc9f-151f-4e15-9278-034044c9e7a4"
        },
        "item": {
          "id": "c660c3fa-1db5-4bf4-9ed4-b93362a843a1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7bef7bd9-e7d1-4785-a54a-0357536ae03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01266d29-8fee-49e5-914e-10973b10b706",
        "cursor": {
          "ref": "fab3338d-9406-4f68-9623-4dc7cef9d23f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c76d100e-15f6-4e84-8b09-8a6facd6efe9"
        },
        "item": {
          "id": "01266d29-8fee-49e5-914e-10973b10b706",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5c189f83-5918-4387-8f65-b6b3338a0b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d86c1ee-4948-4289-be2f-cce1f2045fed",
        "cursor": {
          "ref": "a37d0555-1af7-4379-a628-e869c8f30441",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5626ec74-65ce-4123-8c7f-fb8fc107767a"
        },
        "item": {
          "id": "8d86c1ee-4948-4289-be2f-cce1f2045fed",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5ad16a73-6368-445a-a287-3a8f95949d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19b69c9-237e-4e69-bd82-7f074f938ae0",
        "cursor": {
          "ref": "495fe5d4-2420-45e3-8292-998be5721459",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "72e60ed6-9c3e-4c86-941d-a52cd6de4073"
        },
        "item": {
          "id": "a19b69c9-237e-4e69-bd82-7f074f938ae0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ca05df23-c520-489e-af18-f62871ba2a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d741f2-adc2-4b82-a58f-4cf6a061069e",
        "cursor": {
          "ref": "de95e8d3-92b5-4952-aee1-cfdda3f8b0bf",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d5fe2690-a829-4944-8b84-2b854a2af7a2"
        },
        "item": {
          "id": "73d741f2-adc2-4b82-a58f-4cf6a061069e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c017c4cf-a95a-4116-969f-79676e326974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5967b209-667a-4201-b536-06c893d7251c",
        "cursor": {
          "ref": "19f13de5-e7f8-4024-bab5-6149f6687ac4",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2294ed42-f5c6-4801-94db-71ddb0a606d9"
        },
        "item": {
          "id": "5967b209-667a-4201-b536-06c893d7251c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ec14c083-7244-457f-b558-918498eb6a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd279f8-dfc0-4e46-b0a1-6e3d13e20325",
        "cursor": {
          "ref": "d845eac5-1949-417e-90df-944d337c8b00",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d9f2f730-b516-4239-9d25-775392cad340"
        },
        "item": {
          "id": "cfd279f8-dfc0-4e46-b0a1-6e3d13e20325",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9b64cb43-b085-438b-a4cb-950be9d90683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331602da-1545-4312-b75a-e69ad3c7486d",
        "cursor": {
          "ref": "8ebb55e0-4777-4ca9-a24e-8c68e40cfbd4",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2fb6c5c9-04c8-40b1-a3ab-db558131a6cf"
        },
        "item": {
          "id": "331602da-1545-4312-b75a-e69ad3c7486d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e6399222-f116-46e6-959a-f59fce9da800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3d43ad-7c5c-49c2-b1b9-2d604d73fe2f",
        "cursor": {
          "ref": "ae7c88cb-2b2f-4979-b9ea-456fd7d63f37",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "7007d388-ab4b-4bc7-9ad6-45c5f2eac206"
        },
        "item": {
          "id": "7a3d43ad-7c5c-49c2-b1b9-2d604d73fe2f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0a3bbd56-626b-4599-a1cf-2296a316df88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad6a704-46dc-48fd-82cd-fe3533455185",
        "cursor": {
          "ref": "275679f0-1b8a-44ab-b9e8-4e56ac97b174",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f90bc114-7527-4116-bda7-2c1991cb34c5"
        },
        "item": {
          "id": "dad6a704-46dc-48fd-82cd-fe3533455185",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "60f0f672-8556-4eba-b4ef-04246e50b040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90f2430-df8d-426c-850b-ed3fd8fd0f28",
        "cursor": {
          "ref": "6dcc68ba-83df-4640-ab36-a4c75b6fd664",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cd4d972d-ec79-4901-832c-84dcc27da420"
        },
        "item": {
          "id": "e90f2430-df8d-426c-850b-ed3fd8fd0f28",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e8c85ff3-c51c-450d-a9c7-5982cd171bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e463956-73cc-4b91-8431-d20fcdd34d2f",
        "cursor": {
          "ref": "21e8dfd0-5d6a-41b4-b1e3-e8bbabbb0192",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f79f4b72-3f5c-4aab-9c3e-1e5bcfc9696b"
        },
        "item": {
          "id": "4e463956-73cc-4b91-8431-d20fcdd34d2f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "41745b11-32d5-4b1e-b031-5e92334903d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3158e23-8c5c-496c-81cf-2a1d9c11da1e",
        "cursor": {
          "ref": "82e2dad4-7e78-4a79-893a-fa21443b712b",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bdb6bf96-a937-496b-bea2-a719d453b76d"
        },
        "item": {
          "id": "f3158e23-8c5c-496c-81cf-2a1d9c11da1e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "81e246cc-c85e-4597-950c-9745cc5950d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620a6ea8-40aa-4861-8468-633bdf9d3e61",
        "cursor": {
          "ref": "9b67af5e-6274-4baf-98d2-243c2c492fc2",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6aea210c-6e08-4fbe-bace-8129e8ecda40"
        },
        "item": {
          "id": "620a6ea8-40aa-4861-8468-633bdf9d3e61",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d8359261-458d-4de6-b132-79b222b49643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd571175-64f9-4cda-8842-92b6c61791cd",
        "cursor": {
          "ref": "927ae5b4-bc8f-4b1c-990e-3b034af48bcd",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "16382c4c-b623-41dc-a4a3-60993927e600"
        },
        "item": {
          "id": "dd571175-64f9-4cda-8842-92b6c61791cd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a272aa6b-60a9-45b5-bf62-ac2f715cc436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca14c59-6e5c-47e2-b7ff-6a9319fdb1b1",
        "cursor": {
          "ref": "35f03474-ab45-4d15-a8f6-e57a8f5713e7",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f04b61d0-5caf-4e13-9ae3-3724359b15af"
        },
        "item": {
          "id": "cca14c59-6e5c-47e2-b7ff-6a9319fdb1b1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2c9583ce-27d7-43a1-9c84-dfa9c71aaf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc685cd-13d2-458d-8e64-fb7621832be6",
        "cursor": {
          "ref": "8b1a7552-34e4-4c65-9c39-116c5a4a8218",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0dd87d27-07ee-47c2-931c-63d868a16af2"
        },
        "item": {
          "id": "9fc685cd-13d2-458d-8e64-fb7621832be6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c152a8d2-2f7a-47b0-8af7-105b4e0cb3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9913e8e5-f9d0-462b-aee9-9f7ca56193ed",
        "cursor": {
          "ref": "1d70a7e4-ce94-495d-8e0d-19d09f80b8fc",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "659de036-ee1a-44e1-8673-c2a74eb765f1"
        },
        "item": {
          "id": "9913e8e5-f9d0-462b-aee9-9f7ca56193ed",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "319473fe-a08b-4ddb-a98c-19aa45159fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b62663-2401-4646-bca3-c605f7d46b4a",
        "cursor": {
          "ref": "1d6d0cfa-aa5e-4896-8a4a-3c68ed249217",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c459c792-e27b-4cad-9907-659a3ade7a46"
        },
        "item": {
          "id": "a0b62663-2401-4646-bca3-c605f7d46b4a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0beb61e2-e53f-4343-8285-2eb3fbe5d2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337ddcf3-6308-4427-8c8b-2081f87f5eeb",
        "cursor": {
          "ref": "8be59ca3-ff3a-4e14-8de0-d25fb30d0c47",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d670f960-5226-483c-a4a5-fd101780f52c"
        },
        "item": {
          "id": "337ddcf3-6308-4427-8c8b-2081f87f5eeb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2e372288-61e5-44ca-a681-0eb6ec42b37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7f769e-468b-4740-94f5-097e5f357b19",
        "cursor": {
          "ref": "b4c2c97a-0a5e-4396-8d42-f80159119975",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fc451883-3c2d-4d89-96b7-8089305f1e41"
        },
        "item": {
          "id": "3a7f769e-468b-4740-94f5-097e5f357b19",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "aa83a417-3341-4f10-b6b2-223516598dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05051290-06e3-4436-ad50-58ccf6d49365",
        "cursor": {
          "ref": "fcf2be63-ea04-418d-abaf-b83e1cfa0d30",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "647d4c47-734d-4f49-96f3-de1b7bea452e"
        },
        "item": {
          "id": "05051290-06e3-4436-ad50-58ccf6d49365",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a51eed5a-04c8-41cf-8a8d-a657e09a3727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52410ea-6b10-4d79-a94b-d2c707e9c313",
        "cursor": {
          "ref": "441afde6-b513-46fe-bfac-bcd2e8c249ed",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ab38a7ec-22b0-414e-8222-aee62ec69522"
        },
        "item": {
          "id": "d52410ea-6b10-4d79-a94b-d2c707e9c313",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0682c96b-336a-4f7e-881b-ff24b54ffdd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8612ea4-f954-48ee-9a13-5beb6c6ec9b0",
        "cursor": {
          "ref": "8272bcaa-e765-4bd2-87c3-5497fc4eca96",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2d9dd759-2488-4fae-b67a-13b71b2be43b"
        },
        "item": {
          "id": "e8612ea4-f954-48ee-9a13-5beb6c6ec9b0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "61f915c4-bd2e-436c-8544-2039bee36391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0818b8d4-b08e-4c11-a28b-a19943f5e30d",
        "cursor": {
          "ref": "cfe4ae81-ac1e-4233-ac48-d74d3271af8c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "88fac735-dd71-4a51-a60a-f19da6e6d781"
        },
        "item": {
          "id": "0818b8d4-b08e-4c11-a28b-a19943f5e30d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2ebd71b7-2a39-448c-b490-3742fd432873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35c61d4-6af6-4456-8667-46a351b452a9",
        "cursor": {
          "ref": "9eedd540-eed7-4bfb-89fe-0bb1cb7ff820",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fedbf7ce-c2db-4b60-b71a-b5c9a9a13520"
        },
        "item": {
          "id": "c35c61d4-6af6-4456-8667-46a351b452a9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "76a083ef-838a-4d45-b4ff-784244d14b7c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007d8afe-bab7-41d6-adfc-2eedde98ecff",
        "cursor": {
          "ref": "fa9af648-0774-4358-a99a-5da46f138949",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "850bd04a-7d90-4a4d-a333-abe32fda9bf7"
        },
        "item": {
          "id": "007d8afe-bab7-41d6-adfc-2eedde98ecff",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "33b4900c-c015-4ec5-9c99-e160ade15e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586f2eed-280f-4516-921b-57fde3e93532",
        "cursor": {
          "ref": "7c35dd6d-7fd7-4f98-b110-f8a1f6d9ea91",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "61ecd172-4ab7-4ce4-a8be-66ece9f20b60"
        },
        "item": {
          "id": "586f2eed-280f-4516-921b-57fde3e93532",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e93b4e98-f0c0-4efc-acc5-2a9433a9853b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0264c7-e0d5-4070-90da-da748ef6cf15",
        "cursor": {
          "ref": "3b96c251-dc66-4226-88c3-140271887245",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d9c157c0-1ec4-46ab-a01d-459814f42bbf"
        },
        "item": {
          "id": "ad0264c7-e0d5-4070-90da-da748ef6cf15",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9a0e96c5-e452-4f08-8057-598c3f806fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f162c8-f2df-493c-a91a-ee815d12097d",
        "cursor": {
          "ref": "b417a549-b96c-4a28-8b3f-d52fd73d71dd",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7d5b5fd9-5817-4a98-98c8-44fd9f2d5568"
        },
        "item": {
          "id": "26f162c8-f2df-493c-a91a-ee815d12097d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fa6a1536-bc67-426f-b7d3-fdf4f257cf80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7122f6d-069f-44fd-a580-313856fc8d2a",
        "cursor": {
          "ref": "a5cbded4-f2df-423b-982c-d671afaa22f2",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "accb6ff1-e449-4d80-8be3-9caf0a60f9c3"
        },
        "item": {
          "id": "c7122f6d-069f-44fd-a580-313856fc8d2a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "62cf9a2e-c6b7-4d55-a59f-a64bd0082e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01fcfb0-96b1-44af-a956-e53209fee3ac",
        "cursor": {
          "ref": "cde5c934-599a-420c-9f53-b7d40ff47993",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "54cbdf55-bd65-4160-9691-b84835b8a39e"
        },
        "item": {
          "id": "d01fcfb0-96b1-44af-a956-e53209fee3ac",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4979a248-49ea-4b6c-b654-6d98b3c1fcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0751be0-bfba-40ef-a711-58bd1f25141e",
        "cursor": {
          "ref": "513ee067-52ef-4b3f-a492-98b076659ee0",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "eb1e0581-288a-4a4c-952c-f7269e992b8e"
        },
        "item": {
          "id": "c0751be0-bfba-40ef-a711-58bd1f25141e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "62fa28cf-4a4d-4b0c-9c4b-3892a4876423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9618ee3e-58b6-49f8-baae-c87d19c9aa86",
        "cursor": {
          "ref": "6b0b0dc2-f2c1-4221-b856-c0be2bfd664a",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "65301206-45e9-4d4d-aaac-e2f25de4bec3"
        },
        "item": {
          "id": "9618ee3e-58b6-49f8-baae-c87d19c9aa86",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c6780452-7939-4f67-a262-dd6a2c4e93ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9ec518-98eb-4af9-ad4b-1037c1efd8f0",
        "cursor": {
          "ref": "764eedf6-87bd-49fb-a5aa-6c2119b16372",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0d5ee646-a57d-4bbe-905e-b7bd91a011b2"
        },
        "item": {
          "id": "aa9ec518-98eb-4af9-ad4b-1037c1efd8f0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d8eaae89-8afb-42bf-a980-026c609880ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f45397-cc01-4912-95f2-7060aeace597",
        "cursor": {
          "ref": "17333cfe-4bf1-4c94-a507-676bd509fc62",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "92ae30ce-e027-4ea2-999f-95824837a42c"
        },
        "item": {
          "id": "e7f45397-cc01-4912-95f2-7060aeace597",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e8ab4adc-4a59-4b25-afc6-cfd4614774d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b04993-df60-44fe-bc94-98b2a53484e5",
        "cursor": {
          "ref": "5193cbf4-9a8f-4c9f-ad4d-d52c8d4b2810",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "eeafa902-c20b-43fc-83d5-3131e7585a63"
        },
        "item": {
          "id": "29b04993-df60-44fe-bc94-98b2a53484e5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "58f57140-8f73-4b8c-9330-97ac7f1c26c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102f10bc-0d9c-4cff-9035-db24985a1751",
        "cursor": {
          "ref": "0a203e03-d6a2-468d-9f87-373bf5fbf22b",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e11cddb2-fb0c-41c4-94d4-f30b71ce75fb"
        },
        "item": {
          "id": "102f10bc-0d9c-4cff-9035-db24985a1751",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2ca22ae0-194f-4d23-a282-6e608fbd76fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5620d4d5-4759-4b7f-b743-81753628a0cf",
        "cursor": {
          "ref": "2a706b1a-ca8c-4e67-904e-2766ad084a8c",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1aa909c9-79b5-4b11-8dfe-02f5e2bc95a0"
        },
        "item": {
          "id": "5620d4d5-4759-4b7f-b743-81753628a0cf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fc4fedde-93e7-4289-8205-5a7e379782a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4003de8d-e816-4188-ad14-39238e67800e",
        "cursor": {
          "ref": "60064ec0-22f3-4697-afd5-c6d670c8fb38",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "21f93e4e-7ce1-49aa-aae8-169343608871"
        },
        "item": {
          "id": "4003de8d-e816-4188-ad14-39238e67800e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e5326016-4241-41b1-af20-a18396ee2762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0eaab38-d462-475a-8e99-a8a72db1f513",
        "cursor": {
          "ref": "e4bc5f47-1a6e-45b7-a4f3-4ec92013c0d1",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3aec5704-2e3c-4048-b0f1-9ad039389c18"
        },
        "item": {
          "id": "b0eaab38-d462-475a-8e99-a8a72db1f513",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "60bb64d8-9220-4d11-9ff5-9613670cdda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52980cb0-1fc9-488c-84e4-0c7a4dd4c779",
        "cursor": {
          "ref": "4ccbccbb-b0dc-4174-a7ab-fdfab64bb18e",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "06c79703-c5e0-4743-a9e9-9ea012a5df5e"
        },
        "item": {
          "id": "52980cb0-1fc9-488c-84e4-0c7a4dd4c779",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "02fe7136-7c1b-4034-a299-293136faf125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a48adc-35e1-40f5-9f43-5f5b5ee0d4c3",
        "cursor": {
          "ref": "b0e13e91-a38f-42f5-8ed9-1fac9e6c253a",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fc76dd38-4669-45ac-9ec5-e034838d5834"
        },
        "item": {
          "id": "45a48adc-35e1-40f5-9f43-5f5b5ee0d4c3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a2ca83b9-1ef5-4ce8-ada7-9465243b0127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51eaf66-18a8-4f39-8109-552435e57b1e",
        "cursor": {
          "ref": "ab95ae81-3d4c-48fa-972b-b56bd3d28dac",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fec0d281-bae7-4bdd-991d-5ae5e0ff84e7"
        },
        "item": {
          "id": "d51eaf66-18a8-4f39-8109-552435e57b1e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "06aaa374-2b3b-481b-a01d-680fa8220f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55fb37e-1877-454a-a8de-c3f8fe32f533",
        "cursor": {
          "ref": "6113f7ba-f649-4f59-ada3-e2f627138da4",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ee8e82e5-077c-4ad2-8e51-e91908e820db"
        },
        "item": {
          "id": "d55fb37e-1877-454a-a8de-c3f8fe32f533",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "84c63b64-5090-495b-8648-a04691421b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9412e8c8-cacb-4489-9ba9-7f85e37b8c68",
        "cursor": {
          "ref": "7ce7c94c-78ab-42b2-9887-99c3cd3b70bb",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5954f730-fea5-4060-bd00-4d3cf4ae3da2"
        },
        "item": {
          "id": "9412e8c8-cacb-4489-9ba9-7f85e37b8c68",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a6a7580a-b895-4d2e-9c25-9728617a1d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815b8612-4bb5-4dcd-8195-7c6ef6ff923c",
        "cursor": {
          "ref": "4752dbbc-cca0-4bbc-8d01-93f7f7170775",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "341f04df-4066-45c1-8d5b-11cb8b5e8558"
        },
        "item": {
          "id": "815b8612-4bb5-4dcd-8195-7c6ef6ff923c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3d939824-4000-4c04-82b8-fae82178ffcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a025d35-ea0a-48fa-9635-cd980de5969a",
        "cursor": {
          "ref": "540e2137-6ed4-4bf8-866a-4c7949691a3c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a640f147-eda3-4971-9814-60c1b76335a3"
        },
        "item": {
          "id": "1a025d35-ea0a-48fa-9635-cd980de5969a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9e5eb84a-0bbd-4fec-bc7a-130b094d4459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ea379c-0728-4968-9e25-9f462e5c7a2c",
        "cursor": {
          "ref": "3234955d-392f-4ca1-bae5-2b6009d42635",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d359d907-3743-4754-9eec-29393831d391"
        },
        "item": {
          "id": "10ea379c-0728-4968-9e25-9f462e5c7a2c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "30d89fe4-8ec3-43e5-bf8e-f1e28059ec73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0004660-a1dd-4b33-b26f-8c9d8a13f879",
        "cursor": {
          "ref": "d5519163-c106-42d7-959e-4d317da29891",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9637a177-059f-434e-b0bf-7827dd2f237b"
        },
        "item": {
          "id": "f0004660-a1dd-4b33-b26f-8c9d8a13f879",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "dcd09e2e-2aa2-4597-a63a-dc0173ff8921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c457d7-a0c6-40bb-ad8b-ebb9e3cb0f65",
        "cursor": {
          "ref": "8e4f1fb5-8129-4787-83c7-1391240b6921",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3d437042-4f47-49d1-bbbb-2ef446e7ed0b"
        },
        "item": {
          "id": "d2c457d7-a0c6-40bb-ad8b-ebb9e3cb0f65",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "851614fa-d18c-4c04-a0ea-4abcc937127e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e074d7-f42c-446c-add3-966da3c8e173",
        "cursor": {
          "ref": "a02efdb4-7534-408d-879d-a51234600186",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b6804402-8e18-41e1-8f61-5ebda8de72c5"
        },
        "item": {
          "id": "57e074d7-f42c-446c-add3-966da3c8e173",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c04d2c5c-ec9f-42fa-80a9-1285f4f3a9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cc8107-ef7b-4f04-b4e1-a4daf8f4dcff",
        "cursor": {
          "ref": "84aad34a-4a4c-4f3a-ab89-40cf0d125fcc",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e5552d8a-2de4-4413-99d3-8a3ee1ea2f46"
        },
        "item": {
          "id": "17cc8107-ef7b-4f04-b4e1-a4daf8f4dcff",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "76ceadeb-1860-451b-8aac-031a80859d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60d059a-ad84-480e-97d7-8f46f02928cc",
        "cursor": {
          "ref": "eb729718-d37f-452a-9d61-a958569bdea7",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3e5d2a01-cf4e-4b03-b940-b9f15c2d6c22"
        },
        "item": {
          "id": "d60d059a-ad84-480e-97d7-8f46f02928cc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2fe026c5-23bf-4349-a435-865a5a5a18e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c42f0fa-6099-4e0c-b832-573d851d9d6e",
        "cursor": {
          "ref": "a881b535-db14-46ae-bce1-bb3003edaa5a",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dd53d367-bf9c-449c-ac44-eaabc1cd039c"
        },
        "item": {
          "id": "1c42f0fa-6099-4e0c-b832-573d851d9d6e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2bcdb72c-2924-4aba-be38-c8e6e1e0f1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4a9624-e87c-4e57-a0fa-d70808817b9a",
        "cursor": {
          "ref": "7b34f184-af5b-4035-b4c8-09da81ff28a5",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1c68123f-3c14-420b-8d03-526130ccad0b"
        },
        "item": {
          "id": "da4a9624-e87c-4e57-a0fa-d70808817b9a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "667a16e2-bbb9-4449-9ccd-1aa7f263e20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a425b247-404c-475b-88fd-563b44daa082",
        "cursor": {
          "ref": "108593fd-d8b2-45cc-95b7-9969542726a3",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bc8cf620-94d1-4fec-9330-7808f1ff0893"
        },
        "item": {
          "id": "a425b247-404c-475b-88fd-563b44daa082",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "025c20dd-0a78-4310-ad95-ab53ae4637bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0f1071-e043-4fce-829b-dc666aaa46ad",
        "cursor": {
          "ref": "82b6fa9d-f86b-43e0-a025-3100408fc6c8",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d9d849e5-3693-47cb-8519-8af8ad7e12a5"
        },
        "item": {
          "id": "5b0f1071-e043-4fce-829b-dc666aaa46ad",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6f53d8df-e32a-469c-901d-ae224f727746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711ec4c6-965a-4cfd-b96c-d5e9d05094b1",
        "cursor": {
          "ref": "f40fb51b-e6cd-4c65-8cc5-8162fe0f11af",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9a37f4d3-e121-42d4-8ffc-9c283dad3819"
        },
        "item": {
          "id": "711ec4c6-965a-4cfd-b96c-d5e9d05094b1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "21dbc855-3569-4d83-ad87-b61c918dd679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94efa30-2e8d-4af5-b176-a5a715013b74",
        "cursor": {
          "ref": "773c3429-46dd-4934-9c45-05762b856773",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9a28ae43-a2c0-4e94-83f0-e83de7849297"
        },
        "item": {
          "id": "f94efa30-2e8d-4af5-b176-a5a715013b74",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b367f1c9-e015-4566-bd64-fd7238869ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52d635c-cdac-459b-bf5c-1831fead908a",
        "cursor": {
          "ref": "2ad43fc8-f45f-4326-b1e7-55deeb106699",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c2194eca-1a91-4658-9fc2-7cfbe10971ab"
        },
        "item": {
          "id": "f52d635c-cdac-459b-bf5c-1831fead908a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b4138072-e857-4493-addc-34ea48d70cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36456ffe-835d-44da-971e-8560d0886629",
        "cursor": {
          "ref": "6af0d185-2618-4255-867e-fdb912a7be29",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a957a4a9-dfcc-44bd-9a89-303f50e1148a"
        },
        "item": {
          "id": "36456ffe-835d-44da-971e-8560d0886629",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f20871a2-f5b5-46b6-a304-34b11a7e5e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9905a8d2-2e31-461e-89a7-b2faa020e2ff",
        "cursor": {
          "ref": "f3da77f5-5edb-45a4-83d3-7c9b661a0b36",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "230ff7aa-a740-40dd-b89f-5730180ce214"
        },
        "item": {
          "id": "9905a8d2-2e31-461e-89a7-b2faa020e2ff",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a587b524-4cb9-455d-8049-2e1d8b228270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9caeb18f-5ab6-422e-b963-0465fb0c9887",
        "cursor": {
          "ref": "11842419-e39c-4ea2-b4d3-dbdfbad9d1fc",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8ed1855d-0e1e-4597-bf41-e9f33e2c72eb"
        },
        "item": {
          "id": "9caeb18f-5ab6-422e-b963-0465fb0c9887",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "860f73e6-7f80-4b8f-8cfd-81c3e5927d99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f26ce6e-7fe0-41b7-a5bb-9cd7c126ae01",
        "cursor": {
          "ref": "e832af54-8bfa-4049-81ad-aa204184d58e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "288e8166-17d9-47ef-a1e0-835f28e42885"
        },
        "item": {
          "id": "8f26ce6e-7fe0-41b7-a5bb-9cd7c126ae01",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "be5d7044-7110-411c-a3ff-e1f47490fed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea86083-91ec-42f9-b015-01dd4b8b7c61",
        "cursor": {
          "ref": "239f49c7-a380-43d4-b0c2-720fb1e9d0f1",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6eb94956-c708-49e9-a227-570c4df0fea4"
        },
        "item": {
          "id": "7ea86083-91ec-42f9-b015-01dd4b8b7c61",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c167dcdd-86b3-4dca-9ed9-eb0fe6e94fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac9374d-69fd-48f9-a385-06799195cb5c",
        "cursor": {
          "ref": "b66f48a5-ef8a-48eb-a97a-f8f4fd3d0fa5",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4f5d427e-3c73-44ca-8fd8-5b7620a54662"
        },
        "item": {
          "id": "3ac9374d-69fd-48f9-a385-06799195cb5c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "877df32b-035d-42b0-b92b-389b7951aa7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9645d2c-fa6c-4add-ae39-d9ef670e69ba",
        "cursor": {
          "ref": "e1da3fdb-83e4-419a-b842-4507baaa4f32",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d1324d29-7f6a-4291-ab5e-e978c20cdc3d"
        },
        "item": {
          "id": "b9645d2c-fa6c-4add-ae39-d9ef670e69ba",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "daa0f568-db3f-46af-ba51-b85c3332b13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89c109f-4c21-41bc-813b-b15bb3a7992a",
        "cursor": {
          "ref": "66020ab0-26c5-4812-8cf5-dc36997049ce",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "35022557-3701-45a6-87f2-720e4f561a55"
        },
        "item": {
          "id": "d89c109f-4c21-41bc-813b-b15bb3a7992a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f7a55676-7d04-4764-832b-1fd80ae2d33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf36221c-7a88-4fc6-b166-479220150bff",
        "cursor": {
          "ref": "c498c06e-8bb4-4b25-9a1c-ec980000d86a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cfd8ce55-4049-415b-a13a-710db6472f5c"
        },
        "item": {
          "id": "cf36221c-7a88-4fc6-b166-479220150bff",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "46f48def-ff0d-401b-a940-0ed22baed135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b59e784-0d03-487c-a97d-c2809fa128f7",
        "cursor": {
          "ref": "40b7f2cc-c5fc-4c93-851f-bec64dcca236",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e7f69765-2c55-4d5c-acbd-31813df9f951"
        },
        "item": {
          "id": "6b59e784-0d03-487c-a97d-c2809fa128f7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "de292fde-dc03-47fa-8558-41bc5c3b5318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209e7673-09c4-4291-a4db-f741c8c1c329",
        "cursor": {
          "ref": "d18883e8-e238-4e8e-8708-9c8290b02030",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fd7f63ad-b4c8-4694-b253-1a8a697f3fdf"
        },
        "item": {
          "id": "209e7673-09c4-4291-a4db-f741c8c1c329",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "704ec9b9-e7a3-449d-b251-6bf1b71573d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36edaa3d-9f9c-48ba-b69d-d4b31a6fe3fd",
        "cursor": {
          "ref": "d9e17c82-3956-4544-af43-ff32d96b4c9a",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b2a6349e-1cfc-4140-ab66-f7d125938c9b"
        },
        "item": {
          "id": "36edaa3d-9f9c-48ba-b69d-d4b31a6fe3fd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6d36bc3f-3cca-4038-af86-3e8ea78d1d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089d6b1d-8d79-4780-a743-e1123fb498c4",
        "cursor": {
          "ref": "0b52a3f1-b32d-4d4a-9f6a-46cdb24b8d8d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6d340c08-3700-4125-9a5a-b95ca891be71"
        },
        "item": {
          "id": "089d6b1d-8d79-4780-a743-e1123fb498c4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "17648059-f7e0-4d7f-90df-8ca65e063f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c691e342-6247-45c7-a22e-a7dea9b52889",
        "cursor": {
          "ref": "f9c866c3-7629-4307-9bda-cdb5df65ecf5",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6ce4dfd6-9485-4e2e-86b3-70b7b5299f80"
        },
        "item": {
          "id": "c691e342-6247-45c7-a22e-a7dea9b52889",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d66fb835-5588-4499-ad90-8d59f6f82702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4250e6-b343-47c2-aa4b-a314d20ebd4a",
        "cursor": {
          "ref": "95ab67df-9cc5-4316-8032-9fe9a051ffe8",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e8eb6faf-4dd5-452e-a8ab-70fe5fed47f4"
        },
        "item": {
          "id": "7d4250e6-b343-47c2-aa4b-a314d20ebd4a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "773872cb-306b-49e6-ab02-4650ca21cf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead0668d-a7c7-437a-9be8-fd71553595f2",
        "cursor": {
          "ref": "0662acfc-fd5a-45f7-8b11-3141638d6600",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2116a5d9-a629-4c32-bd1d-06a56616170c"
        },
        "item": {
          "id": "ead0668d-a7c7-437a-9be8-fd71553595f2",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "85a9278b-6a13-463b-8192-3a1f5642cf18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90db98e1-526b-412e-8d77-e6959519b10c",
        "cursor": {
          "ref": "49d96b08-393e-4f63-b830-191d7b5ea003",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "27c48e84-6aa5-47aa-ba45-7ffca502bb5a"
        },
        "item": {
          "id": "90db98e1-526b-412e-8d77-e6959519b10c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0cd7aab6-7386-4c97-b850-c6abbd4008ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf786fe5-3028-48ba-9cd1-7f3c60aab394",
        "cursor": {
          "ref": "6760a697-2aa2-4365-91e7-7e137ac5ec61",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5ea74338-d232-49df-8b15-a2dc58cb7ace"
        },
        "item": {
          "id": "cf786fe5-3028-48ba-9cd1-7f3c60aab394",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "961b2caf-fbe1-44af-ac55-28d77f805745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288d0b1d-8122-46ba-b274-cd720a32b5e7",
        "cursor": {
          "ref": "f1307b00-46fc-4c64-b0a4-bc7948a6e229",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "219caea5-8986-46a4-b73a-27835640a08c"
        },
        "item": {
          "id": "288d0b1d-8122-46ba-b274-cd720a32b5e7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "90c1359a-2859-49e6-b7d4-4230764c19c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5876cf-b633-4b37-9a10-d50453330019",
        "cursor": {
          "ref": "f411c15e-d3c6-4f4e-9371-588a3fff0d4f",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8959b453-43bf-4143-a20d-bf9bde8b7f0d"
        },
        "item": {
          "id": "fc5876cf-b633-4b37-9a10-d50453330019",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "219d7d01-04d9-44a3-9f28-ea488c85f30b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78307e41-1bab-41c2-9005-70a520ab138f",
        "cursor": {
          "ref": "2d5fde2b-718f-4275-835b-bb768dd6e515",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a33e2d42-3de9-4bca-982f-ffb78eb6a218"
        },
        "item": {
          "id": "78307e41-1bab-41c2-9005-70a520ab138f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "02f06f19-5d24-4b53-9250-50495461546e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1d4050-49f6-4601-896f-31b7dcb70c4e",
        "cursor": {
          "ref": "ae31fb95-eeba-42ed-af30-438135ea5128",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0093cfd6-3e3e-4f74-aecb-f9db6daf80ba"
        },
        "item": {
          "id": "7d1d4050-49f6-4601-896f-31b7dcb70c4e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f698c433-8462-47ae-a2d0-0738209320f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a4ac56-191b-4aaf-9d87-9e3916622e66",
        "cursor": {
          "ref": "4c753bf8-0512-42e1-b3bb-d1b69408a890",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a26bae83-4dd7-42d8-890b-898a8e85c198"
        },
        "item": {
          "id": "c3a4ac56-191b-4aaf-9d87-9e3916622e66",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "58b71ff7-c606-4456-b3c0-15f31d9b90a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fc76ab-574a-46f2-988c-365de9f54923",
        "cursor": {
          "ref": "a4ea17dc-0501-43b5-9056-6a5ac740689c",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2130ca83-8cba-4268-9ca4-f5f46d4a5e99"
        },
        "item": {
          "id": "14fc76ab-574a-46f2-988c-365de9f54923",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0fc8d349-072a-4dca-a0ef-a989955289ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28b00dc-14f4-475f-9832-28a03689e034",
        "cursor": {
          "ref": "c34b351e-a6b9-4483-b239-92df82009aca",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0217715e-eb70-45ab-a030-45f094008818"
        },
        "item": {
          "id": "d28b00dc-14f4-475f-9832-28a03689e034",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "40f83b5b-26ae-42b5-a89d-97a6dcfd9dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d2fcc1-c3e2-42c4-9850-ef384759434a",
        "cursor": {
          "ref": "563d284d-085a-4e57-92cd-befb73a2eab6",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e3ea5958-aa57-4258-8d35-83ef0cb41ea0"
        },
        "item": {
          "id": "45d2fcc1-c3e2-42c4-9850-ef384759434a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d2a537d9-14c5-4db3-8c47-8837223179a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed78db63-8e51-456d-aed3-5dfb1b3078aa",
        "cursor": {
          "ref": "e532e72f-d43c-4db7-b240-cefbd4ae7767",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "494b1e7f-7956-41cb-ae4c-c76ae1c116b8"
        },
        "item": {
          "id": "ed78db63-8e51-456d-aed3-5dfb1b3078aa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bc5f96a0-cbee-4e1e-8bf5-4576510c884b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2211cf95-b901-476b-ae40-bad3da80d89d",
        "cursor": {
          "ref": "ab25a498-9865-4f5a-b15e-65ea81dc2e3f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ed90d0d3-4607-4224-85a0-21ddbb084129"
        },
        "item": {
          "id": "2211cf95-b901-476b-ae40-bad3da80d89d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "324ae588-71b0-45ce-b9c6-28068be4f857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea80fb77-b799-484f-bf0b-6b40f7fba57e",
        "cursor": {
          "ref": "936ba5d9-cd5a-407f-a735-de790f3e09e7",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b488d481-8de2-4c2c-8539-822048562ea4"
        },
        "item": {
          "id": "ea80fb77-b799-484f-bf0b-6b40f7fba57e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9504439e-7e5a-4036-8eb2-82285669bc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c406955-908c-45a9-90fc-48cbc127a971",
        "cursor": {
          "ref": "b3cfcd7b-de26-4e22-b058-2a0d3683ba7b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "58052183-8c46-4a67-8f40-059be9de7d32"
        },
        "item": {
          "id": "9c406955-908c-45a9-90fc-48cbc127a971",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e7c62017-7ee2-43ec-a192-3758077947a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30454dbe-faf2-4bed-8e21-121a4fe0d053",
        "cursor": {
          "ref": "854fb3c2-c2d4-44fa-b5dd-a1d0df30c8d7",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6f5f9fde-bb81-46c5-a5fe-bb2e981bf8ba"
        },
        "item": {
          "id": "30454dbe-faf2-4bed-8e21-121a4fe0d053",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cabcf239-1574-4503-8454-39d0c8bb00d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1652b106-70b4-44b0-b6f6-9046298c2444",
        "cursor": {
          "ref": "84e14364-d22d-4074-a7d2-1c204e455445",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b4f51c96-d20b-4c01-a8d4-a1d57ba11e8f"
        },
        "item": {
          "id": "1652b106-70b4-44b0-b6f6-9046298c2444",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ba551689-409b-40bb-aa93-8acd8857b966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c388af-799d-4641-8611-4c8c6d8c94fd",
        "cursor": {
          "ref": "57cb9df2-f1db-41df-86c8-67e345457e15",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "dafaa2ee-9a65-40d0-b433-2dea2012df06"
        },
        "item": {
          "id": "88c388af-799d-4641-8611-4c8c6d8c94fd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "248ae898-91c3-40d2-8402-bc005763e474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f832630-4d6d-4d89-8c09-6d42c134bbd4",
        "cursor": {
          "ref": "17cf54f2-057e-4796-93f3-6deffc7b8513",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e8c0c1df-20a4-49d7-9c5a-e9df3297190f"
        },
        "item": {
          "id": "6f832630-4d6d-4d89-8c09-6d42c134bbd4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f7d452f5-3781-43e4-92e0-83e861d83be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1107cdd6-2a1a-4c19-a4b5-5c1b79e344bf",
        "cursor": {
          "ref": "bf57f6a7-ad68-45e9-9346-0fbad3830292",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d80e737e-94ee-4f87-be04-46be687a8a7d"
        },
        "item": {
          "id": "1107cdd6-2a1a-4c19-a4b5-5c1b79e344bf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8f03e5b6-7d8c-49f3-bbd9-3afe19cedd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ef54d3-9e67-41f9-adcf-576fbb7c104c",
        "cursor": {
          "ref": "047d43f4-8d2d-4e11-a378-1fb795d57076",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "711b66aa-98ce-4b16-bbdf-b0b41edc1959"
        },
        "item": {
          "id": "e3ef54d3-9e67-41f9-adcf-576fbb7c104c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f0eba99d-de53-4602-bec1-48bd0302b3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e87faad-1da0-4c16-8069-7955f7779d9d",
        "cursor": {
          "ref": "00d16449-6537-4c32-8573-81ad79820aef",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ec59718c-a8d4-4c1c-afee-dc2af1de9a3d"
        },
        "item": {
          "id": "3e87faad-1da0-4c16-8069-7955f7779d9d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "602bb3a8-bf2c-4d4e-bfde-46c94c5a2154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a362e1ba-24a4-467f-88a2-e58a32583086",
        "cursor": {
          "ref": "685c9f94-7449-47ec-a87b-12aacbc01a24",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3dfee755-3cec-45b9-9cc8-1a8305d383bd"
        },
        "item": {
          "id": "a362e1ba-24a4-467f-88a2-e58a32583086",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7cbad779-92a2-492e-8f53-4fbed20db907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14905c6-d75b-4559-ac36-c970ba2a8b59",
        "cursor": {
          "ref": "6e4daa15-1ed6-4668-9f16-56fc4bded8d3",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a2c901ac-f671-474d-806a-13ad8fe368bf"
        },
        "item": {
          "id": "d14905c6-d75b-4559-ac36-c970ba2a8b59",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e2175082-353b-473b-90d6-cb2ed05041f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4371f186-cd49-41c5-b743-57dbd4921d8d",
        "cursor": {
          "ref": "1dee74dc-9916-4d90-9efa-62ba506f49a7",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "736cc235-ca55-41f2-8763-f84188b26ea1"
        },
        "item": {
          "id": "4371f186-cd49-41c5-b743-57dbd4921d8d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "15d4fbc7-5b34-4c9b-ae0f-49a3c5432fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81af5127-b634-4c66-b59c-34ea18bf18ab",
        "cursor": {
          "ref": "420bb3dc-7a26-495c-8d67-1bee6a226a83",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ae8bf473-05de-4ae7-863d-40b9be128a0c"
        },
        "item": {
          "id": "81af5127-b634-4c66-b59c-34ea18bf18ab",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d744fa21-870a-4e80-871f-d6299fcb3261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbceb13-dbd2-403d-a2e4-9f2231123e74",
        "cursor": {
          "ref": "1f88fb36-0619-4e0f-a964-22eb841dedeb",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "01d459d7-2b6e-4b10-b459-6e7aa8042328"
        },
        "item": {
          "id": "6bbceb13-dbd2-403d-a2e4-9f2231123e74",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "433d6822-e50a-48db-bf22-23a8b29124a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4eecb1-f8a0-4cc4-b96b-29507bded469",
        "cursor": {
          "ref": "7ddcb76f-2f10-4c10-b2c8-be0ba9994706",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1579c2bd-5b0f-4358-8956-d01045d3004f"
        },
        "item": {
          "id": "6a4eecb1-f8a0-4cc4-b96b-29507bded469",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c98194a6-9b7c-4828-af41-aae4abec5f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ead4532-96cc-4862-a74f-e5a91768fc0d",
        "cursor": {
          "ref": "4ae6a981-c6d4-4242-b49d-5fe098e32677",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d38ef006-4634-4212-a3be-a2284f9aee8b"
        },
        "item": {
          "id": "4ead4532-96cc-4862-a74f-e5a91768fc0d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "992a1a05-68d0-4075-90ed-83ed0542bb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2c5b9b-517b-4745-ac5c-172571327fe9",
        "cursor": {
          "ref": "35725d69-3af5-4861-a95f-074cfe0bea7f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "520cb18e-79cb-46b3-8fe3-852153f1462e"
        },
        "item": {
          "id": "8a2c5b9b-517b-4745-ac5c-172571327fe9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "535e52f3-af83-4794-854b-362f43befea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9479c93-ebb0-48b0-8452-09b4a12c39c0",
        "cursor": {
          "ref": "2602b72c-f515-4e29-b942-90dc17a23e97",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6e40f594-30bf-4b39-9f8a-6e22c551c79f"
        },
        "item": {
          "id": "a9479c93-ebb0-48b0-8452-09b4a12c39c0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ee33499c-d772-4e01-8516-57950957a5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9155982b-5599-48db-ab80-24214a553ef5",
        "cursor": {
          "ref": "381900ae-94e7-4938-9e60-d53181abc6bb",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4b180d53-8a35-4c80-8215-16613e1314f4"
        },
        "item": {
          "id": "9155982b-5599-48db-ab80-24214a553ef5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "02bd20e0-d9ea-40ff-9ac2-3c30f4250963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8a180d-1a8f-4b64-95d4-dacce0ef723d",
        "cursor": {
          "ref": "9d1b1590-04ff-4ace-a578-e3be641d6c6a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4d1699fb-a4fb-42e4-9764-a6ab28843461"
        },
        "item": {
          "id": "aa8a180d-1a8f-4b64-95d4-dacce0ef723d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "de0b427b-01df-46e4-b094-2ca41c68654b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be35d9f2-ae9b-452f-af05-71b2583c2347",
        "cursor": {
          "ref": "1cfe9b38-8049-463a-96a1-46d487fba151",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b018b0bd-bf0e-4966-856d-37832835a5ae"
        },
        "item": {
          "id": "be35d9f2-ae9b-452f-af05-71b2583c2347",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f22bca17-069a-4670-b87a-6ef9ebaa95e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60e8349-f831-46a8-a379-341586fc14ab",
        "cursor": {
          "ref": "b8ae18ec-2e20-44c4-824d-1de294a61679",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c7d0c73f-ad66-4349-a2b3-4eefa7ebc4af"
        },
        "item": {
          "id": "b60e8349-f831-46a8-a379-341586fc14ab",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c434da05-dbb5-435c-b210-dc41e949231f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654c3996-2e13-4ede-947a-48187bd4b513",
        "cursor": {
          "ref": "7697f0e4-4d0f-4b09-aa5e-7b212028a4a4",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bab1032b-466c-4fb6-a42d-3e2ea488e401"
        },
        "item": {
          "id": "654c3996-2e13-4ede-947a-48187bd4b513",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "db9114e3-befa-4bb7-8627-4c82c563ee9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff130dc5-dadf-4bfa-89cb-d7a083a727c0",
        "cursor": {
          "ref": "85aa44b3-9fd0-49c6-b88c-1f05525e345d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "43ffbe5f-61c8-4a10-b998-478611fa09c9"
        },
        "item": {
          "id": "ff130dc5-dadf-4bfa-89cb-d7a083a727c0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f5f53ea7-d305-4456-89cc-8c9dd6600811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6962c5a9-b7ed-4e94-8e10-40fae16e87fb",
        "cursor": {
          "ref": "bb4dc03b-f76d-422f-89cf-a80d8f450f2c",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "26db8ad5-a0db-4011-91dd-3d0bf12502ec"
        },
        "item": {
          "id": "6962c5a9-b7ed-4e94-8e10-40fae16e87fb",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2a0562ed-b547-42eb-a86a-33ba393b4fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b1b690-3054-44ca-b5c3-e19feea146f8",
        "cursor": {
          "ref": "a630bea5-720b-4aad-b01f-41a0f00dc042",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "51e7daf6-671a-4c06-b995-e78f8a0e5076"
        },
        "item": {
          "id": "f5b1b690-3054-44ca-b5c3-e19feea146f8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "908462d3-e11d-4c77-a742-57b9ddd58fbc",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "078f17ac-f642-48f7-aec5-47c8073ae4b9",
        "cursor": {
          "ref": "4740359d-73f0-4f63-a112-be3397d141f5",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f9c7b181-2f89-4484-9e3f-3571a132372a"
        },
        "item": {
          "id": "078f17ac-f642-48f7-aec5-47c8073ae4b9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ef29f394-5ef6-4489-92d8-059182171be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc33026e-4ae1-46d6-b69c-9fe89d7d252c",
        "cursor": {
          "ref": "11c52ca9-20c8-44d6-a227-dec4cd3ae74e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "165c70f0-156f-4513-a672-919c90a794fc"
        },
        "item": {
          "id": "cc33026e-4ae1-46d6-b69c-9fe89d7d252c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8d06f1f2-90bf-414d-b79d-d76d2f46678c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cc0a31-23cc-4feb-aef3-405f4f774e60",
        "cursor": {
          "ref": "832bba58-d519-4435-8266-1938e2e69eac",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "28837422-62cd-440f-b6b6-bddebb5a22be"
        },
        "item": {
          "id": "c8cc0a31-23cc-4feb-aef3-405f4f774e60",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0d527ce4-c4eb-4aae-a431-fcbc50de6576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a55080-5167-45e1-97fa-186078ed7c45",
        "cursor": {
          "ref": "338528f9-335a-4500-a336-aa258c5a6bf0",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5c16aaf7-47f8-4622-aeb0-591f5fb90384"
        },
        "item": {
          "id": "09a55080-5167-45e1-97fa-186078ed7c45",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "089c9cc8-5f5a-4133-ba71-ac60cc7dfe9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa2eda8b-00ed-4955-9b19-d0ec4ef01602",
        "cursor": {
          "ref": "dde1aade-3755-4c32-a2a0-fc4adce971fa",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0165ce0b-1a86-48c6-8b8e-4c67aa34f9e8"
        },
        "item": {
          "id": "fa2eda8b-00ed-4955-9b19-d0ec4ef01602",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0e76b812-4e01-47f0-a716-6e6ca26e0043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1d3a46-4163-4c37-94eb-9a01ba2f81f8",
        "cursor": {
          "ref": "e4ab4fd4-8d1a-4bb9-af6a-8eddfd8d94fd",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "135b2d8f-431b-4e52-89bb-259c13418ec8"
        },
        "item": {
          "id": "2d1d3a46-4163-4c37-94eb-9a01ba2f81f8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e6a1c6e8-ac63-4ae1-a961-daa7350855bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c2603a-b29f-4a27-b911-3fe5df88fef9",
        "cursor": {
          "ref": "915e3f5a-3401-4536-8615-09b507281afa",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "88c5cdc5-571a-46cb-9c1c-2e899e765f8d"
        },
        "item": {
          "id": "52c2603a-b29f-4a27-b911-3fe5df88fef9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1d0034be-1dfd-4568-bbfa-a3945e859128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a40a806-521b-4cbb-a595-c86137cb6fae",
        "cursor": {
          "ref": "fcf45f1d-c3cc-441d-9eda-baf7c165157e",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "09e7b142-f15b-4eaf-b83f-c4038ddc6597"
        },
        "item": {
          "id": "7a40a806-521b-4cbb-a595-c86137cb6fae",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6a5924d7-a1f0-41e8-94f6-7b13b04afbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bfc88f-b58f-4c91-834d-ba1b2812953b",
        "cursor": {
          "ref": "9405c968-a7d3-427a-9750-6ef243939c90",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fb7585d1-939b-4a6d-b95e-b19ffa59dc21"
        },
        "item": {
          "id": "38bfc88f-b58f-4c91-834d-ba1b2812953b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b1fd4792-6a74-4487-8204-6f684161dee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f654dbf2-1730-4454-a744-0563c191e1f5",
        "cursor": {
          "ref": "de397aac-28ca-4173-84b9-92c785100f1b",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "13751013-2e2b-43e9-9565-ebce606065aa"
        },
        "item": {
          "id": "f654dbf2-1730-4454-a744-0563c191e1f5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c7ca0369-2c5c-408a-89f4-308cc1d19ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf5c403-866f-4cb7-ab29-4b395f0e4dbc",
        "cursor": {
          "ref": "e2d609ad-3982-418b-8950-1565213e034e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7bf611d4-4c10-43ec-a032-74e34bfa1494"
        },
        "item": {
          "id": "cdf5c403-866f-4cb7-ab29-4b395f0e4dbc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "38594656-cd33-4d19-8290-97bd6d6d4f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077467a0-8067-4d00-8500-713a87c3aada",
        "cursor": {
          "ref": "552b348c-e910-407e-9458-502d95047af0",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5b45a579-735c-4779-b1d6-00fd8f0bfa47"
        },
        "item": {
          "id": "077467a0-8067-4d00-8500-713a87c3aada",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1f684fed-96ea-4c06-a4aa-d159594f5541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5ee7e6-bb2e-4b5a-9a39-48ef22f1c7aa",
        "cursor": {
          "ref": "99962c56-eebe-4f18-a9c5-3bbf1dccf12d",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6e87b518-f6bb-4c7f-8f20-6c0afffd4825"
        },
        "item": {
          "id": "9e5ee7e6-bb2e-4b5a-9a39-48ef22f1c7aa",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b509e24b-e661-4732-83cd-4cd8868f23e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8bf20a-f299-4f2e-91cb-6edf63b3b55a",
        "cursor": {
          "ref": "a64cf09e-5a36-40c8-80da-75a6e8501dae",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5ea8455d-2c37-4b5f-9230-aaf983fa3a46"
        },
        "item": {
          "id": "bc8bf20a-f299-4f2e-91cb-6edf63b3b55a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "34f6c90d-418c-4ada-a542-8a49c694d060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cd8d19-da0a-4993-b1ef-10c12c7e15fc",
        "cursor": {
          "ref": "6ad5a508-5227-4ba8-898f-36167822def3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "63430a8f-aabf-4b52-8e97-e2e4e740468c"
        },
        "item": {
          "id": "06cd8d19-da0a-4993-b1ef-10c12c7e15fc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "30897c8b-a011-4c39-b45d-dfe2df1f30d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66aa2203-8e65-4fc4-8704-640751a13b06",
        "cursor": {
          "ref": "d406bb94-6e64-4ff5-aab1-d84bac8f9c71",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ca077a80-5322-4d3e-9347-3f3a4bd3a906"
        },
        "item": {
          "id": "66aa2203-8e65-4fc4-8704-640751a13b06",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "972f130c-5556-4713-bf7d-4c98b0d007fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c962fe-2153-4efd-abd4-03c72125af19",
        "cursor": {
          "ref": "db1a3849-fc1f-4380-9eab-3e8f38cdaf61",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b1bb7d78-ebe2-4b76-a131-6ca92abf638d"
        },
        "item": {
          "id": "d1c962fe-2153-4efd-abd4-03c72125af19",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "38dd50db-261f-4459-b676-060971d384c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356e539b-b4ad-4f0d-b6b9-188cfa49c901",
        "cursor": {
          "ref": "75809094-0f7d-473f-81c7-f57c1e2042d6",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "77c2d966-2d72-4e46-b0b2-2337ae5cc711"
        },
        "item": {
          "id": "356e539b-b4ad-4f0d-b6b9-188cfa49c901",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8a8fa3bf-6198-40cb-9237-fbb87d13d666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6b2258-a414-4f34-b792-85314e54e70e",
        "cursor": {
          "ref": "66923f1e-453f-4292-b778-e48567fac8ab",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "70f51499-83fe-4ce9-b28f-40126a3c0b2d"
        },
        "item": {
          "id": "5d6b2258-a414-4f34-b792-85314e54e70e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "04ef374d-6ca9-4a46-adc1-d073da3b610f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e9a690-7497-45b1-8c4d-f9964fb8eb46",
        "cursor": {
          "ref": "b3effa71-57b4-4a74-ad03-b1c3492c6523",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "056033b0-28bf-4c08-aacc-a8d198ec3978"
        },
        "item": {
          "id": "46e9a690-7497-45b1-8c4d-f9964fb8eb46",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "72d75b22-5ddb-4a2e-b104-96a11cfc9895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bff2d3d-39ae-44cc-bb7b-41f71b64e435",
        "cursor": {
          "ref": "18c7cdb5-5ac4-434a-aa53-ef2768f12a69",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d2c6b3b6-a83b-4049-9cec-e13c74a4b198"
        },
        "item": {
          "id": "7bff2d3d-39ae-44cc-bb7b-41f71b64e435",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bb551a82-3d58-4be1-aa66-a8421bed15a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce0ed97-e280-4947-9ca0-e204a75f3436",
        "cursor": {
          "ref": "244fd09b-5e37-43d2-902b-62d71c6f185a",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "84a16932-a1a1-44db-ab05-94b5c23ac864"
        },
        "item": {
          "id": "1ce0ed97-e280-4947-9ca0-e204a75f3436",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c15c5bf7-be64-4082-8ea3-828c10453690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604b6617-55db-4d46-b0ec-5063d3c33840",
        "cursor": {
          "ref": "172c1f36-4b5c-47ee-9cc5-a45b14e4e3ec",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "bae7d1a3-bae3-4b3b-b2af-8933b990820d"
        },
        "item": {
          "id": "604b6617-55db-4d46-b0ec-5063d3c33840",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f6903dc0-9f9e-46bc-917c-ecaad6af81be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460568ce-97b1-45b4-83b4-bc780de7240e",
        "cursor": {
          "ref": "9809ee7f-62cb-47ae-b2eb-ce55187ab81b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a2788bb2-0fcb-47e1-a9c3-028da2c7764b"
        },
        "item": {
          "id": "460568ce-97b1-45b4-83b4-bc780de7240e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4a794e3c-d3f0-43ed-a079-1b8d39920045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6c45eb-46c9-4733-b8a1-cd485fdbf943",
        "cursor": {
          "ref": "c726d0c7-e821-4ac6-a1ce-d55536944aa3",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d4c1c9b5-268e-418c-982c-23a16f20588c"
        },
        "item": {
          "id": "8e6c45eb-46c9-4733-b8a1-cd485fdbf943",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7a4448cc-bac6-4063-b053-3284cddeb8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40237248-3620-4fdf-a590-ca3dec23ebd1",
        "cursor": {
          "ref": "e080c444-db32-40dd-b5b9-0ff4a7342687",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "62bd4a34-cb48-4840-ada2-9f09538228a7"
        },
        "item": {
          "id": "40237248-3620-4fdf-a590-ca3dec23ebd1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f4209916-9da7-4f43-844a-ddc90469fba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112513ca-c7e2-491f-ab23-a0aca043ded9",
        "cursor": {
          "ref": "20b19ba0-d0c1-48d4-8e84-c4dee8d33d95",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8b820b63-3eaa-49bb-a733-fa8b701710fb"
        },
        "item": {
          "id": "112513ca-c7e2-491f-ab23-a0aca043ded9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "41d0033d-3f32-4814-b43b-00871c6a84bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f12e03-12f8-4c34-ab80-1233d2f137f6",
        "cursor": {
          "ref": "6b028496-779d-484d-b3fb-f3e5cba24dd2",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ec4fd44c-1c8d-4632-aaa3-1cc97c15bb72"
        },
        "item": {
          "id": "e5f12e03-12f8-4c34-ab80-1233d2f137f6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "93e0bf99-5d0c-4f4b-8a0f-8dafdf3e2528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edbb0fc-440b-4cf4-88c7-5af094e17cb7",
        "cursor": {
          "ref": "52011222-37c8-47e7-8799-d68fb0abf4a7",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e106a6bb-2d2d-41ee-9ac0-2a4030ffac59"
        },
        "item": {
          "id": "5edbb0fc-440b-4cf4-88c7-5af094e17cb7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "27ed96a0-8740-4e39-b2a0-8ed3269f114d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a880510a-cf5e-4ae1-83a7-1bc1788d74db",
        "cursor": {
          "ref": "d8c44631-220a-47c2-94d1-eb3caaca8262",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0dc36a45-2cb7-42e1-9199-a0e03d6f9236"
        },
        "item": {
          "id": "a880510a-cf5e-4ae1-83a7-1bc1788d74db",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ec94e123-a969-492c-a8bf-f01734983e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88649c8-e710-411b-be77-d9c934c5b4c5",
        "cursor": {
          "ref": "278c9017-90a0-4cdf-82b9-90ebb3242001",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ee7de441-5527-43f9-9056-deeb2828aac3"
        },
        "item": {
          "id": "a88649c8-e710-411b-be77-d9c934c5b4c5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d1ebc4bf-a144-492d-87a0-30f356eb0423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf688a1-8f09-4e36-b7f6-da525a77b317",
        "cursor": {
          "ref": "911f0675-6fcc-4dc8-a266-e33d6ece4079",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "00c751ac-d9af-4420-b236-f631f59da7ae"
        },
        "item": {
          "id": "faf688a1-8f09-4e36-b7f6-da525a77b317",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "af836a49-2475-499a-91af-20c58214effc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043350ad-08c3-4ece-aed4-2e26d1331dd4",
        "cursor": {
          "ref": "3f3c4e86-6f21-4580-a6b2-bc4603c8123f",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "11a76741-f400-451b-8373-5886c0a8d183"
        },
        "item": {
          "id": "043350ad-08c3-4ece-aed4-2e26d1331dd4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "01d4392c-3f1a-4139-b451-80696850e715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9e81e3-33f0-48ff-b504-77f55a4f6d91",
        "cursor": {
          "ref": "bb77d2d1-3859-471a-85bc-e7308beb3c0e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "643b14d4-27eb-47b5-9431-2dc08f1859a0"
        },
        "item": {
          "id": "ef9e81e3-33f0-48ff-b504-77f55a4f6d91",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "49e3acb3-dab5-414a-82cc-1c21ed328a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26eb5858-79f5-4b3b-946a-49c1d948a18c",
        "cursor": {
          "ref": "131dbd49-b969-467e-83c8-0547725eff7f",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "63c5ff49-d831-4d6d-823a-f72211e79e80"
        },
        "item": {
          "id": "26eb5858-79f5-4b3b-946a-49c1d948a18c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ccc5af7d-c2b8-4e1c-ade4-0a2a25b8929e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89102181-5789-4fc7-881d-e0fe01a502f1",
        "cursor": {
          "ref": "ad369bb0-ed76-4968-869f-44ff3c5d3ff9",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "20fe5a8e-4090-4d95-b4cd-ca103a992f9a"
        },
        "item": {
          "id": "89102181-5789-4fc7-881d-e0fe01a502f1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b6d7ce45-eeb9-44fd-825e-233b9ee0f4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad2f6aa-1119-4b5c-a11c-6e990e39a4ac",
        "cursor": {
          "ref": "f4f77580-de54-4128-ae09-a89c797684fa",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "430a8834-2dda-42d1-9e26-f9a3327d10ad"
        },
        "item": {
          "id": "5ad2f6aa-1119-4b5c-a11c-6e990e39a4ac",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "391cd0dd-a0ff-4291-81a2-9330e5e91cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84648d9-c2ee-4238-ac80-7aa72403c1c0",
        "cursor": {
          "ref": "3bdbb681-9bd6-4026-849d-9812d2940be9",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "127f3cbb-3857-43c3-a425-c48f00a31ad1"
        },
        "item": {
          "id": "c84648d9-c2ee-4238-ac80-7aa72403c1c0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f1cb9d97-b1b1-463c-8e99-07621a34269e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4391477-13a2-4ab3-9cc2-ef523500123d",
        "cursor": {
          "ref": "2231daf4-d7da-450d-a7ec-2e09850a7809",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9c69c52b-e22c-4315-b94a-0a0c0f4ba0ab"
        },
        "item": {
          "id": "f4391477-13a2-4ab3-9cc2-ef523500123d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d63bcae5-c85e-4242-be84-ada9cbd13a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823aa9ed-f0ae-4b14-85d8-b08911f3b3e4",
        "cursor": {
          "ref": "ddf684ae-db34-4413-b8f0-914010376518",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "0b4676b3-4157-44d9-9648-ea7c53574ff9"
        },
        "item": {
          "id": "823aa9ed-f0ae-4b14-85d8-b08911f3b3e4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9985ed5e-52cf-4377-8d97-e82b81c74fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26d4324-b0a7-408f-bdd3-8c809125a5b6",
        "cursor": {
          "ref": "407886a7-f8bd-46cc-9487-ce8e8a873154",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e1d0abc4-8864-40f7-a24c-4df481907bcf"
        },
        "item": {
          "id": "c26d4324-b0a7-408f-bdd3-8c809125a5b6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8f69aaa1-79a9-4976-a25c-a591397282dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068c859a-86b5-4621-8b4d-a93bf1e9caa5",
        "cursor": {
          "ref": "47f40282-1325-4ec9-97ff-dd19032e136b",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d4000359-2450-4608-b928-fb1ebe09a725"
        },
        "item": {
          "id": "068c859a-86b5-4621-8b4d-a93bf1e9caa5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7958c1d0-d6a2-40fb-a47c-bc492321e454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db6bcb5-4773-4ef1-beb6-f7f3c6a2dcce",
        "cursor": {
          "ref": "e40186ea-0073-48e9-9742-624ca3f91364",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "df25e579-2a53-4181-9645-dc856617fd66"
        },
        "item": {
          "id": "5db6bcb5-4773-4ef1-beb6-f7f3c6a2dcce",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c5775d68-d94f-466f-9133-cbaffd867719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fe5803-7fa6-40eb-a994-4148fa85a8af",
        "cursor": {
          "ref": "154d65f6-9779-4097-9bd7-713cafdd68b2",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "83a95344-23e7-4b38-bb4f-13d5a33653c4"
        },
        "item": {
          "id": "d5fe5803-7fa6-40eb-a994-4148fa85a8af",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "089ebf55-b4de-4b2d-a550-4d546f5c1073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ab5fb4-79b2-42e1-b641-fb9bba31bfac",
        "cursor": {
          "ref": "4d5e7fe9-09e6-41c7-85bd-c466c1a83bf8",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a4c433f8-f15e-470f-9ccd-f0339e76e9ec"
        },
        "item": {
          "id": "58ab5fb4-79b2-42e1-b641-fb9bba31bfac",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "78342aeb-d153-4ad5-9faa-31ab8f7b50b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fa43ea-fd05-4c9b-b3fd-1a0c285aa33d",
        "cursor": {
          "ref": "9e619bb5-db1a-4128-84f7-a93237e31ab3",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "e5fce218-a704-419e-b434-4269ffaef4d6"
        },
        "item": {
          "id": "b5fa43ea-fd05-4c9b-b3fd-1a0c285aa33d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f494de93-cee2-4cb5-8453-9d1421bf843b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac175dd-284d-4635-ae8b-e2aa265c4ce7",
        "cursor": {
          "ref": "0edec7b3-937b-4d38-bd6c-a0a66d33f143",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "3dc66b95-5acc-4b24-9a37-ae4df614205e"
        },
        "item": {
          "id": "dac175dd-284d-4635-ae8b-e2aa265c4ce7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "700926a6-2312-4bd8-af70-a7486711377d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e64ae8a-7323-4270-b687-235d5e48128b",
        "cursor": {
          "ref": "b8e9dc3c-5b4c-49ca-9b39-8ed7528a1ca4",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a56079e3-7882-45ec-bc04-59050d6f3283"
        },
        "item": {
          "id": "5e64ae8a-7323-4270-b687-235d5e48128b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "95acab7c-6e37-4259-90d3-4c5022b9d498",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74db831-f0d3-4611-bfc1-8e8d365a4553",
        "cursor": {
          "ref": "bb16c901-16a5-4bfb-b167-9e1f96acb60c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bd828ba8-3e55-4202-a660-3f8fa085cacb"
        },
        "item": {
          "id": "d74db831-f0d3-4611-bfc1-8e8d365a4553",
          "name": "credentials_verify"
        },
        "response": {
          "id": "24a3b9c8-4070-452f-aec2-52d9697f7d8f",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8326926-4d2c-4287-90ad-f19942b37d04",
        "cursor": {
          "ref": "2ffa58e2-723d-449f-8127-bffd6f02cbc4",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "69a51f12-d09c-41c8-b84b-8eeba1f5e057"
        },
        "item": {
          "id": "a8326926-4d2c-4287-90ad-f19942b37d04",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3e9d31c8-82c4-4ca9-9d96-8b2d88d52abc",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97bd9ba-8c96-49af-bcb9-6f37c1cb5aad",
        "cursor": {
          "ref": "4f7ceb76-b741-47d1-8f79-1be9a71f12ef",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "233d6404-7c55-4ee2-9733-8b55a72a84a1"
        },
        "item": {
          "id": "b97bd9ba-8c96-49af-bcb9-6f37c1cb5aad",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "66ba26a2-63f0-4a2e-9bbb-af78a4f3ab49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97bd9ba-8c96-49af-bcb9-6f37c1cb5aad",
        "cursor": {
          "ref": "4f7ceb76-b741-47d1-8f79-1be9a71f12ef",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "233d6404-7c55-4ee2-9733-8b55a72a84a1"
        },
        "item": {
          "id": "b97bd9ba-8c96-49af-bcb9-6f37c1cb5aad",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "66ba26a2-63f0-4a2e-9bbb-af78a4f3ab49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1323a9-b39f-4b36-a074-754bbab82d9f",
        "cursor": {
          "ref": "4354d452-db4d-4861-b380-a569177fe364",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "25439726-8af4-43a8-a083-402a009f947f"
        },
        "item": {
          "id": "5e1323a9-b39f-4b36-a074-754bbab82d9f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7587ff6c-dc67-4901-a529-8cb85cc8537c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffac46b-6c30-4fdc-b8c6-db4c76783f8f",
        "cursor": {
          "ref": "13853ecf-72ee-4ffc-a838-8a157b72f518",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "63cd65c0-a426-4f29-9980-222e450ca3cb"
        },
        "item": {
          "id": "8ffac46b-6c30-4fdc-b8c6-db4c76783f8f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0b76bbb1-625b-4cb0-96b9-38ca9c9a347a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}