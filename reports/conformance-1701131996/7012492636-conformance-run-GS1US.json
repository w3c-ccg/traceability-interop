{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0d1108e8-8427-4bb2-a142-3434e75f664c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6f1f0333-90d4-41ec-ab69-2bf0bdf30dba",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2eaacb3c-daa0-4538-bcdf-4fb534ed36d9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d1e0cc50-639e-4070-b1b7-0e12e3051c3e"
                }
              }
            ]
          },
          {
            "id": "72cc170d-993f-43f8-9f82-22f43fae9db2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "951656db-816b-4d0f-8beb-f14ca97b40f6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "283209c3-9c82-404d-9675-cdba9addf053"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8ed772a5-67d9-4959-8103-bad98fb9a095",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d79d2b78-e304-47f7-889e-003028ae99af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "46817cd8-064a-4560-b5c4-c00eadb7421e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "268e25d6-c390-4b9b-a7ad-8ea6ed97eb0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "366db9e0-1ecb-4134-af81-eb23b16d0fe2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7708605f-eb52-49ac-879f-b5e7052926b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80f79e35-befc-4d51-998a-7879b1a4ce41"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e8333ec8-c459-454e-9fa3-f4cae6ef13a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cfb66f38-6ba5-4317-8b14-c87612b81636"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73242d2e-89dc-411f-9823-f896ff9688ff",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e26ba317-5f82-4174-bb4e-3df0650a2571"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e7aafac-2fee-4e39-a09c-73d9b0f080cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7bb25072-4a75-470a-b0c6-293580ab657c"
            }
          }
        ]
      },
      {
        "id": "5bef24aa-981f-45c7-b514-725ff351b013",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1b5dfd49-671a-4772-9130-d417fd9ab396",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd6d7175-a427-4e99-89ab-6829960ac95e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4bf59a98-4c40-42f3-91f2-74e339242e81",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8f7394-cd8f-49a0-ae4a-1efeac6c38d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cc1b3dc-352a-4484-91b7-93bcf829e760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffd0753-466b-43d9-8baa-8c0607b7f94d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13aade1c-57b2-465a-a107-260d63ee0afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37713420-3762-46ce-a4d2-4c5770968037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55cbc35-9783-4ca4-9189-eefe6da06dde",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa9f5e7-889f-46c8-99b4-a0604e797678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9bca87f-2080-4eff-b0c9-3c2ddde58cb1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9b85b2df-c5a7-44a7-8788-52e6f583c1d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a72da9a3-539f-4220-ae35-968bce7ac35c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2918e1a2-362e-4d8a-ac85-6a1d67c884ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6bc9e2a-e5e5-4056-8e16-7fa97597bd62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1ad605-dafd-47cb-be10-04b4dc8ae29d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c478bc4-ded4-4a71-9f94-054aaf979a35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d810a67a-19e7-48b5-ab62-fee097c9c6cf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe9fcd41-8890-465a-a5b3-ecc25369bb9e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53d49ceb-b7da-4b3b-b080-0069208a1ab5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "abbc79e1-4ba1-4305-ab93-8b919684bb7f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8ab8e62-ec08-4d79-80ee-b35c4144cf20",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "07859abb-e892-430a-a857-8e6aa17a1f53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99f42d37-e0f7-44db-8693-e90b705d176b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a50ae194-12de-4bb9-968d-b4f1324f0423"
            }
          }
        ]
      },
      {
        "id": "46fe6083-8ba1-416c-91d5-e2b8488d08c2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "79baff4d-53d7-4d95-b823-6746a92fc2f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b95bf7d6-1b3c-4946-8f54-f8e9c64a082f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f99e4d18-de58-4439-a9e5-6e95a665a689",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f0357a-75d9-403a-b375-e08b009c466d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29081d2-9382-4633-b8d3-2d08bd125a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42556e2c-8a8c-4372-93ff-879c45ce4a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bf47292-822d-4f7b-8835-6bb8a738890b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec49c29f-03c4-4648-b0b9-c67321739127",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1c1ea6-98ae-4e7a-8d29-62bd5b15bdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967129a1-40c2-4d6e-9bde-ae823a82f4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26dfd69d-78d0-4b32-b696-750cbca63c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e4cee0c-65fd-43bc-b17f-98f4f4a30dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcef463-a7ce-428a-9545-e1beb22880c5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66242dd-3a16-48c2-b819-93321162d687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a9e7f5-fb3b-45c1-bb7f-6032d9a518c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e257cd7c-a981-46ef-8b10-21d5989afa20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "260e883f-eb14-407d-a1c9-fa146320905c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf81b1c-304b-4fc6-9f59-ea8ec764afc1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9d8ad1-44ba-4fcd-95f8-1bfe698c9476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f87a10c-ef5d-43b2-a4c2-12f2209ada16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b4d876-6c0f-49cf-9ac4-519b4a3a215c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd047ccb-74e3-47ec-898b-8919c7cb7e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b23368-eea3-4e38-abed-f5c437e57a20",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b836a8-0b8d-4e02-be6e-84357f4332c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0368ac-2582-4dd4-a044-feca7e4e3b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9a6f1a-a6d2-4827-bc01-abc6aa9fb5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80aa8d89-4a90-414b-8436-ad90a5d509f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d376dd-f48b-49f6-914f-cbbdf0281e5d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bf0c26-7d9c-4741-bfc1-5aec59f1c7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ee2dc0-b41c-4fe0-99dc-a9c36c8f280e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ea75a2-b597-412c-841f-9d5708865e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e9ffe92-47e9-4501-9998-05cd32fca9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42b28e6-a584-4089-89cc-3b7657def378",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cae34c-e88d-4cc7-81a3-784b4a54aded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f9fe24-7c42-43ac-b95c-851de9a9ef02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebec9f6-12ba-443d-8fd9-ee4455b3a087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "463ed51e-c312-4b88-b0fd-5eaeb89ac05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b292fbd3-9a7f-4fa1-b2ba-6fa7b8d22ac2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d26db1-a75f-406a-be6e-a61d656024b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a90ef16-5e02-4b37-ae19-108eac19339f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552a0fe5-e80f-495e-8768-70e18f425488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5029f240-f5c6-46d0-882d-8ae2f0497345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cdffb1-e747-4dfd-ac1f-a592e7bcabc6",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e306f3b8-4cdd-4106-883e-4615dab0cb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597d4bdf-4397-4bbd-ae39-04a3892d4d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230ed01f-e385-4c95-937a-c6a993a7c09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd8426c0-d065-434c-b745-7edfa2cacf32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9367e3d-384c-4490-82c5-be748ab8f916",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae090552-c814-4011-ac0a-af9199f6f955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd071010-d2c8-4484-a1d0-33993d463e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a66f97f-6fdd-4ecb-bf06-06f3853a5603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04b41fcb-a247-4713-985b-1cbe8fe40a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0681bda0-6700-4344-866e-af94cb2a6d1b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17698618-b43a-409c-9a0b-e2c866f395e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b08b6d-fee9-4fc6-83db-57bc7e16a515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196724ad-43cf-4464-99a9-e52ea7ad6ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52032efe-0176-4ee5-922f-285cdec9a021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f26efea-5f3c-401b-a88f-cd31f0cc14e5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ce4e95-276b-4db3-aaa6-31f82182b80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba45a32-1cb0-416f-b985-dddd1457cff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d23c7f-671b-4c83-91d7-3735aace9ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2ace347-40de-4f64-82b7-2db4662a85ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d1bd2d-66d6-46c3-b6fb-56c88c477cfe",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccc012d-673f-4d0e-a4f2-5c42b565155b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7adf80a5-4291-4ce2-b67e-7a0ce90993e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98e8337-e15f-4091-aba9-87f1505274c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c15abb7-8677-41f8-add8-d2f2d2b1a80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed2ed6c-1548-46b5-93d5-96c4c075865a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72ade11-a088-4910-8a51-f9951e0c3c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79963f4b-78fb-4b30-80d5-a93f4691555a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80504bbf-0f7b-4036-83b0-ce74c6a1565f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3b22fa8-dce7-4fd9-88a2-ac0fe3822185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179bc620-945a-494e-913c-fb06e666299c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ff90d0-dbc8-4664-95d3-53059eacdb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd84158-a7e0-475b-8aa7-5e39aaf54a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02557ed1-c519-4a10-ace8-7dc7570b6aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ac3a1b0-0d8b-46d7-b93a-6ccb2c59fb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0682729-fc85-4408-a217-1f83e055d4ca",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0475fa19-6ce0-413e-9235-0486332a618f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b413f30b-8dfb-424c-9b2b-dd8b2f717d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489f3ad1-7919-45ad-824c-5d467dad2e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51ce5913-bfc0-497a-9ed8-e516baddd415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7410d83-6d3e-40fb-b97d-f410fc9909e3",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c90d9db-768d-45c6-aa27-d9aa69105f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898411b4-9964-460d-847a-7ce88d8f70a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ded4fef-44cc-42bc-92a8-90f5ce4d1211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e07c4325-8c23-4a27-a59f-088546335c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dc579e-2a65-4984-aea8-60651a14e1b6",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f0934d-cd7a-4d3d-b3b8-52b76e419ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac867fa-6360-429a-a218-14f2452780d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3852f8e8-9cdf-49ac-8813-3f7533474292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c07afb3e-6e5e-427e-be6b-d71843285f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f93cabe-f710-46f9-a9c1-4a8519f27f28",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649db8e6-65f8-450d-8ce2-97753a05a13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c17b97-f81e-45bd-a9ba-d2fe1e82e40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c538a16-bdc4-4ef7-9549-7c23b5e1e8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90c9a9af-cd17-4a15-aed5-10625960314a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0ba5dc-4bf5-4169-9c2b-b15033795fb6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b622f00b-a201-4813-a5f8-51d95a86e0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f8f67d-1803-4ab1-b6cc-35e7a5ecce87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8aad04-bcd6-482c-8757-c10544ce2c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60b26898-28a5-4af9-b146-4fd1a35b124e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5d0b2b-61fd-476c-84f7-fd0ddb0fc24a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4c2b5b-2c6d-4016-9476-03ad0541a9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56eace7-1e9b-463f-8aa7-6a6836eecc5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c1ad1f-d5c8-4b94-b7a1-4b07d3a8d28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ca687d-ac01-4e93-9e71-1e3157156a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff838841-7762-4d6e-834e-268c50ef3f20",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab603545-d032-4047-bd23-0f7ece5db1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f49d126-81be-4911-b395-78912e486599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd134fc-21e2-4f75-89b9-2b7bb3776c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9efd5f-134d-49c3-ae3e-aa8fb0f31c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31dd06a-b4ca-40e7-ba87-79bedc923366",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5c5e39-8049-4a97-a15a-8fd4eb3602cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f519376-de58-41ec-8626-50aa39ab65d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c9776e-c009-47b1-ae1f-2ae3d5058b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "970822fa-48d9-491b-bd5e-e62b9d5b1263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6cc8ae4-7c6c-4d55-ac71-a11052bfc7b9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f6a981-a1fd-487f-bb4d-9cfb95320970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51315e30-7afb-42a9-8ca9-c9df23187e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecad5489-8904-4490-a4af-771f0dd3eded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "822ec422-8473-43bc-81ad-c8ef0af9b581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c496299-50af-4dba-bc4f-3731c3af0c46",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91231fd-42c6-4dff-b77d-708dd4ece796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef786345-b3ee-4103-bca6-5ae0a6637203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3ce872-a68b-4d70-a3ae-7e747915d92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec41b7f-57c4-41dd-be12-561dac0ac8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9332b1d3-ff9f-4040-9d75-7441f99b807d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e71628a-e4ef-49b0-855d-6f099e65cbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf23d05-b33c-4d77-8cfd-b0373bcb4a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cfb382b-6145-4732-a589-c3030f5d723f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d397ff6-8a1d-42a7-ae18-a3bb3e6be499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763dd14b-57bd-4745-808a-13622e0d4517",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f780391c-791c-4127-b618-8ba32f4cf160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5a282e-5598-4066-b79d-85241cd59dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3424ed1b-b39e-4db4-9075-2dc8f4b26945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f188891-3137-447a-9c68-eb9a3bb064ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3545335-9b8d-4246-a234-f21dfb9a0376",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c63f0e-999d-40ab-a609-8072045f605d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eac1196-340f-4976-9fdf-7d2dbb5ddd91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27b9810-a0cf-49d4-bdf2-291498a6a6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb348795-637e-4ed5-84d6-adf7cf9e4f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76b6d13-eb64-4cc3-9e85-83690bf0812e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4850d9-4289-4994-addc-3167f1c94a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762f7303-e21d-4ebd-98c9-ea3eb3d6ab16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1133db-5a78-470a-935d-a12a857e97e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fda91c5-2576-4b68-8add-2e2e96b0628c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e244a6-4346-447e-9048-0c45853fde8f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d274895-46ea-4c7c-a011-1540ed6c4dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0651a1-974b-4c57-8029-44f6c98462d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14b4da2-4087-41b3-a481-c13d2a87351a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2060f142-39f6-4c71-b610-179e2029cc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43aa9ee-07ff-4fcf-806c-49ac538c8f51",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45834282-c629-4164-8063-c8e0a632dda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1868cf4e-193e-4531-86eb-53c17ef8fc3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33fac7a-d8d0-45e1-8d7a-693c4fa241ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d31ddd3d-4f68-44a4-991c-515b1fecfcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d3a2e0-7ec9-4548-99c0-1f4fb02195fd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d84f8d-f067-4e17-a192-fd120b320ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7860b5-90c3-419d-a6f5-9ff318d4a9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3acf61e-053e-479c-a4c3-009e91a094eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "250a396c-b46c-4d85-8d47-423740ad3734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdffda0-c983-4eb2-8075-06c1d6919897",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d16308-8811-4160-bbd4-856b5c3fe839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc22e7d-029a-413b-9d7f-d9e858b32ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e6111d-d392-4506-aa9a-02caaf0596d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3ff557-b831-4f3f-932c-f0f4ba56d5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c87a179-45de-449b-a46d-82a9df4104e5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f291c912-5f9c-418c-882f-2dce3f0d7123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae23c4e-ca4e-4ddd-87a8-e6189e668256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b24626-1a58-4049-9224-a4d9a52092d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a88a1f3-8e66-45c7-a5df-902b4b3566be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3943e019-5952-49d2-b91d-49fa9aba9aab",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1cd467-5212-4b16-8dee-8d90033dc5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f0dc7a-c885-4e38-a22a-3dfa924b0910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85100fbd-d86e-4864-ba49-a6cb97b03c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b41d7e29-23d0-480d-afe7-6a908dc87dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54e5c13-3daf-4418-bb4d-d06683e70a4e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f15506-d4ab-44d7-bcd5-beaae0de09fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33b6e7b2-3793-4247-bd69-6de9e0fab5fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8942bfc-84c6-474f-89b1-1fbb4d37a937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce8d343-a8fc-4144-827e-3e387d6cc456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dca0975-56c4-4255-a0a8-62c6562f2883",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b573db9-a80a-49a7-a0a8-7ef132c52cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f38734a-74ea-40d6-8357-2b95b3b38289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c493b907-bc05-4445-86cc-36501b476eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60c57ea6-be18-415b-b09f-eb5a1c717256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b73bc7a-d4da-4185-9a45-d9bb232c15cf",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59bd08e-ec76-46f1-b85e-eebda8241ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22aa38e4-3fa1-4e10-80d8-1145f2d4c812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35c85b9-e605-4ece-a954-951e24366b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "098b8ff5-51f4-49c2-a2fe-fd3209a16523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1021dd4f-d187-4d3a-8e6b-148fac63c1ad",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd19083-5c4b-4a96-ab4d-7f76e6ac7734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfd51269-eaa9-4954-99fb-1de1d7e7952c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7b8b2d-8de9-4f95-8e3c-16b4e0b055b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "78ee37df-fcfc-4e99-aed4-9a67d3be3320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ef9043-4c21-4657-81a2-aa3d9c09b973",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4683173b-48af-4751-939e-d2b76346c0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a18f3f-781f-4c27-b76f-de07cd0ccf86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec56588-a942-40e9-8db5-be79ba288ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "982cd521-64f4-4392-b023-9457eae0274b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad59903-33ca-418e-b65d-dd995f555ab8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6873734-a47f-4484-a75a-3ec4d9a5433b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7be015-7fdb-4ce6-8436-d33803c17769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633749cb-7da8-4f8c-bfd1-22aed6bb4aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "938e2ac4-7316-498d-8047-306084e136cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79c5b99-983a-4b38-8923-8710687cd829",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c71c5f-12a3-4bcc-bbf7-a3e04adf340d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990ea111-bc95-4bec-aaa6-a9ab8294abee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea8e86d-e2f8-42e9-bb0e-0b22c7c83707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "94f04202-dab4-462b-8e22-d3a29ec33122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf93bab-89ab-4f68-9da4-9fe8895721b4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6fb7cc-3372-4d3a-8b40-5aa646838b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abfb7c0-6f18-4403-8dcc-84fc3a77c2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9501ff-e84d-4251-b2d5-f1931e153d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f00cdb0a-a48a-4a4e-b790-03a779d6a69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0017297f-2601-4cec-ab45-82112727c6c6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7736b5-54e3-4eaa-9f0d-e6509abc21fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769435f1-c325-45da-8ff8-63f63b79a000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c8b9e4-2d01-413e-8eb8-402296dd2e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "18c3cce8-c0a0-456e-b740-806695b38dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccdd917-6dcf-419f-aab3-a9fc2246d4b1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea9dacb-ac07-423c-a749-3142434eeb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555c577f-1ce6-49da-b6fe-1dcb63ad162d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e499009-d07a-42eb-8646-76b1d0b61ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "229f8343-59a0-448c-8995-db27a1191278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673eb06c-a0ff-42b1-a85f-be20fa4c228e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbf054e-2887-49a4-a24f-aca24e2551e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98ba776-4d02-43f5-a42f-197b14831553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc967454-15b4-48a8-b24c-5736df8ea342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f16a8a6d-64d7-4dc4-9b67-2c78873399ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49a3968-6703-4ed8-af28-73b0f0b4828e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdb99a2-84b4-4851-a764-6b3496b36e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d9a817-4d71-406e-a019-b5b88e45ec8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffb01af-2f89-45ed-823a-18b5a559524e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c3b7df2-c0bf-412c-90f6-3c2a6ea16ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d7d3a4-0762-4965-a3a0-c9134dcd68a8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89df150-5d4f-40d8-baff-72fe1de251c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae95a02-dcbf-4483-911e-1693362e2ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72baf6f1-9444-487a-80c4-19fb7f0913e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1dde0fb-e3bc-4408-9662-1cfde1e9a388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf226c62-f209-4639-a8d5-834918ac2d00",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a2d039-4fb5-4f52-85eb-23cfa0864338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac9947d-5bd6-47b8-bcf8-87b6d0fd12f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e08e1ac-5abb-4202-ab6f-f12a01b7b2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7edcd72-a25a-45e4-ae19-26d43fb03b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3937331-052d-4e52-93a3-e9063576b206",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c040c1-967d-4c22-a4b9-1e8251a88556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b04560-32e5-475d-b6c6-015c04e3770a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f698f04-ee60-4ffb-8458-b3fd73ac93a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b12050-642a-4d2f-8fb6-435832b83c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b96fa9-2d83-4377-a94a-8ac8ee497127",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a467d538-dc83-44e9-8f92-a9c072b72335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7997a2c2-6049-4b20-90f3-f5e7fd90c585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a233212d-b800-4aca-ab74-1f8066320a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6850974d-7ebc-4541-975d-ddbdebd5b203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2399b1-16b8-4d38-a23b-e1c5e362f12a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4870ce94-2329-4ebe-a4fa-f465430c2358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0877af34-4c03-43df-a63b-fcf70479f0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e904ef75-b9f9-473b-afe4-2a6833df758b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a077b3af-00f5-46d0-a621-826e04361d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a9c88e-13f6-4039-bf60-79265c13d610",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f7b50e-72e1-496b-9191-83b302fe965e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d90772a-e13e-49e8-8bbf-ea9919a05efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de542001-898a-47d5-98bc-f4c33db92714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd77b22c-67d6-4a99-8fd2-c3b5b4c58426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d750ae3e-001f-4160-87a7-69f46686e343",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94f7538-fbbc-415d-b409-9d69dac10492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198e22a4-0fd2-4f69-80f8-b9d36b946afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dab56f-25a8-4d50-bfa0-b486c59129b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b20e337b-bad2-4a33-a4b5-7c17f905f292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ba7619-b1b5-4b91-9a2f-42c6df8d11ed",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe5e2e4-74fd-4c3a-9766-9fa03adb6c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8d17ed-dd42-464e-9da1-28d1ea663135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf444b57-388f-411c-8c83-476c6df443dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41d0f403-d9f8-410a-a2ed-39e759f74a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b664f8be-8cdb-4edf-8a5e-ef7c68dfd6d7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae85472f-0bb2-4b4b-a9c8-dd4d138d87f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f41442b-3125-4eac-b178-5240936a2bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb608810-d85a-4b68-80a5-e26cbc0f8b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4375aa-a8bb-4656-8591-5b6e27a3625d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55b3038-e930-4334-87b3-55eb3d7e6914",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa1f2e8-15cc-499f-a90a-cdec63c06e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32b2679-0412-46f0-9d89-102cb870b1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be74872-2599-4ea5-86e6-e94624e7d909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa06bf45-6d01-4eda-9821-5480459f0f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef37f4c7-59de-4116-bb96-f0538bdaf496",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095d34f3-0c28-4f47-af98-70eb5ea32509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e5e32e-ecbb-4c0b-864f-36bf4148e862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ed3cd3-6d81-40fb-8c8e-bf8eb4fdc12a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f18f2010-8b93-4b55-83e3-b6db594f32d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4633e1-aaae-4783-a957-c12440996d5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96887e4-ccc8-4e49-a78c-a6b6b5ac98b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88cc1e1c-7782-4f5c-9e15-b96507939c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb664e5-d6cc-4c4a-be8e-be48185aa047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7810d317-e5f9-4de8-a7dc-3254f6edb646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd103882-3cda-4d08-8a5c-9af68d89b8de",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7241a4e6-1d8a-47a4-ad34-1925346c6cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9885129-0e26-4128-a0b7-c2e13391a02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e989f6cf-1949-4510-8124-98b7f0cad8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f84cde41-444a-4226-866c-2ac0704179f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98096ed5-ccf1-48bf-b7ba-99aabf3168ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603d8f3c-44cf-4d25-9d16-8c964f01714a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed48412-29d5-4c7c-a953-6ea8cc77683c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e14313-03b9-4e04-8809-d97f83951a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd33f08-97f6-4023-a423-407ca82e52e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2dc1bad-a428-4372-92e9-d7c11dc5e2ad",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66acf8bf-c759-4cb6-8cc3-4ff8b8067d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22217264-b1e4-4c1d-a3ba-e6858981e8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ee9de2-73d1-4ce2-b521-955f532d76b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "76cd85c7-0238-4d30-ad55-d9f781f32749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8063e3-88f6-4354-b5b8-5c3d9a5f2000",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7c3958-934a-455b-9bc5-a8286ab747b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d9c922-0289-46c6-b488-bbb79e0cb076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275a76c1-896f-4da6-adb0-8fd95e4947f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9b7569-9075-454f-a36f-de6c46165ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a002994d-7fce-4871-8ebd-7e0b815cfb34",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6763da-0aca-4079-9fdd-f587b51a6e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7280b7-f524-4a15-9874-fbb8ff9d0760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7f0a1c-de99-4909-881a-ef52573aada3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3eeacf-a639-493c-8398-bf94b192adc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2a7a63-e00a-4976-8a0e-6ae3e4e462dc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9034ea-981c-496f-83d3-9ef68253c18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e6dbf2-34ac-40a9-8b33-d6c1219efd57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4767ffa-9d0c-4a4c-af20-efe3688548e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a90b658-2db9-46c7-a8e8-6cdd465c3689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7e42d2-91f9-426b-a1ad-d42431bb0a89",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967c8dd1-fa97-4c1b-bb19-c4c80e2b02f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7bdc9d-f34b-4793-9088-1bf24ce4f3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c754333-9ce7-4ff9-81c1-ffdcc363871c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "681d410a-09b6-4447-8530-a7642cc02bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d4c8ca-f470-46b9-84b1-49f73230f8da",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89427595-d508-4058-a0a4-19839c1e067a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903fe830-c478-40f3-b34f-e36fd3995cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade43d3d-22bc-416f-a1b1-a8d55b0f56dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad42a692-ef25-4975-ae95-1564bbe0db3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddeef707-19ab-48e2-99b0-efd0284564b4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ab2fcc-104f-4158-9b87-4783f58b59a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8ac83f-8221-428f-a098-a26b9e66a28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d543444e-59c4-4cd4-8f75-23ee59a935b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e3b335-3585-4ff0-be2b-a3849663fe43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00da2720-962f-4e83-bea0-0efbcf1fc04b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcacc232-0985-4bd3-9cf1-be7f716122a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b97c189-d0d1-41a6-b549-fdd85edc17e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a6e7c2-8369-45fc-909a-e29f542fd4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c87d10e6-c4dd-4197-8889-2f1c149d1b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e28d457-210d-4abe-80d3-2996e24ef5ed",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3610211d-3b5c-4516-8074-8d1cd10a03b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef568a5-5561-424c-86b0-ace1b2d2745b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c95acb-d498-416b-b738-9097acf41052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e74fb5e-5868-440d-a9fa-31cf446b4d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae7b8f8-a9fe-4f49-9c13-be0c573f21c8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35963fea-0128-40c1-bf9e-136390dd51a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7150fbb4-fccc-4390-8728-3773be6b7ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6603a78a-b11a-4c6e-b5e4-8460ba18e7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15cf0704-9d91-47c7-bbc8-7203ff614629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eea94e4-f3ec-4808-8af6-b23fc1cd6ee4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0b1063-b361-4ef2-8dce-5d06f4f008ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4afc693-0ef2-4fd4-98ff-79b6bcbf7964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163e7492-d867-4cc2-87a5-8a9cb8672958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f06d3f50-9ec4-4277-bf1c-b61e75c670f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2119245e-824b-44ec-ae95-ee56bdcc507b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7973197-afc2-4408-8e64-24deff835851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14defe11-0fbc-40ee-8144-9ca3d0e74c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176004d8-96d4-4ec7-8f7c-8be54b0211ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc66c1aa-ea8a-4205-9679-294a7c963436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceea1972-469b-451a-90d1-a5fea3ca6438",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1ddc5b-3f1b-4c5d-b2ad-9e59d3697cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c91ee5-a215-44d4-bf68-1230e561ad95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024fd8a5-c979-48ad-b1a7-2bf61052689f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "efe82d90-5a4c-45ba-8fa3-cfb6c06e9927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2dac28-189c-4c93-8013-a48e9ab4c47a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c2493b-d8e5-4639-8caa-34dabc6da417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9349ac7a-01f2-4ef9-aad2-eaf5958b8ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f62f338-f1ed-44db-8f66-9d3ab3f2fb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a149fcf-0552-4331-95ae-2e25e9eee888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e35250-43df-4ee5-9512-9da5c740e7c5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c2c523-226c-47fc-8efb-87855dcd07d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff6843c-ac53-4b72-9ad3-aec3ef9e4312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfdefe2-27a4-4c7e-a8c3-6156a00c4ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0db35d-9efb-4dee-b8b9-b77cc5334094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9d29ba-72a9-4db2-80a4-ba9693aaf806",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ef5cb2-309e-430c-817c-caf92f7c2645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bc96af-a2fa-4ba5-bf90-0ac943cfd479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4160908d-61e5-4e44-9d4e-24c1ec0cfe06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c23151a-7f51-4e7b-b370-50835e7f3f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a731fc62-7265-43ff-8a41-7992fdc02854",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ddba80-c4f7-4ad1-aff2-81209d78fc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58076b9-e140-44f4-b82f-a8b20a3ed3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603d3a90-554f-43bd-ad9e-23fed4b64ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "460f2801-747c-4208-848f-274fb76215cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ee4c29-d160-46f0-8e5b-607dfaa6addc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d964036d-c73e-4422-b497-d56c305826b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b18ea1f-ebba-4316-8ef0-724d8d1b7b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da790f2d-b068-4289-9d27-fc5c51f37433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80196496-108a-4961-8e39-a93bc5ffd807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a967049a-3b2f-4dfc-96cd-66cc6ea26c29",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21ab763-1bcb-40c2-bc47-194f65cce9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc15994-a1bf-430c-bbbd-f800bc10e0a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c150fea3-f032-4f0c-b4d2-be228b38e3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0f5d4a-279f-40d5-a16b-d84958790fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b6fac8-debb-4603-96f5-0c20413dc8a1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c0ed4d-9643-4db1-ab40-821e6c3739b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94afa765-198d-48ef-baf9-c7ef01ba8580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5748118-eb7d-4045-9a26-8d29a0ce8fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a37bd29-9dee-4989-9bc6-82772f93d061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a7c8fe-17d6-4908-951a-35760875be31",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a96b28-970c-4e83-b98f-ef6b239e6793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b333203-ecf6-4159-b964-812962046806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277f0870-6ef0-4178-abf2-f033b9c24eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6d9cab-8ed2-43cd-b118-0b9ea2ea975f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d88723d-677e-46d2-a2c3-891ec86f0606",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5bd32e-253f-4877-b88d-581fd7f4e405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29802ce-8141-4f9a-bc07-496899121ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c2da97-24b5-4aa8-883e-88eb57cf8ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7360428-2cfe-402d-9a66-460ebda20353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c801e9c-aee4-4388-94b4-1677eaf4272c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434a8eb6-50b6-4358-a89d-1a721758cd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8b970c-483a-4683-b9c2-9f2d8fcd3419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df185b94-b561-4c47-9095-5346a91d54b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0bf82d-924e-4566-a66e-a6fb892dd30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e224ac18-b5bc-43b2-8393-426d6ed5d5cc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e37892-9e7c-4486-8358-e1f702bbc08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb29600-90f3-4919-99e6-83ccb9cd3023"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3772bcb-50f6-4b47-8886-ccfa72fcf8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7a1de5-09ce-4350-a329-f6c025ed5eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46ef4d1-b347-45dc-b4fe-16a8663b0453",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d1964d-786c-451e-8cde-a42f6e405ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c071395c-08e4-4c1f-8668-c827a2697c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b628396-d9ab-48ca-b7d5-a5740dbf5056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62ffcfe3-26c3-471d-b310-bbae26babc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14dce41-a628-46dd-a7f1-dd72d9aa4fe0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f0016d-e6ea-4a99-b479-6b3acb86ee67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6663b786-aca4-482f-992a-46cd9ef34ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38568220-d3e6-4e96-a828-8aa8fe413471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c04c600b-6681-490a-8497-9211cbc5d55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d30dd37-3da2-4b5b-a829-2f902d11b195",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5fd8c1-46e4-40e7-9d05-28a0c5a0fc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f18c86-9713-448c-aa0b-735392553fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4721ec5-ce2a-4720-88f5-06bfa6275f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2cbdc1-aa05-4226-b4eb-11dc1d79edec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f5189d-537f-4cd3-a44c-9a51679a671b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a639b15-edf2-472d-960f-dd533b880946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de44ea9-80d8-417b-8d03-5585416f6107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df14f030-e8f0-4ff4-bac2-6ee88a66be09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "16ef3db5-d074-4c95-a98b-ced6094922f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ffcfd4-d495-468d-ab99-a4d0c532c6b9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8756818-a38d-4cdb-bc50-a760f4865311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4db70b-2a0c-4244-8ddc-d912736f884b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315e3e44-2ca0-477f-af80-f81895314946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8c5ad5-1cc0-4a07-aa2e-cc72964e5338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee60257-1c65-4266-8e25-d7236a4f8655",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3857a38-2828-4d5a-b4d3-c15d75ecdde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741b6ad3-44bc-4dd5-82ef-1ede7f3d831e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da93382c-5faa-488e-b73a-f9f0704ad713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d305b252-ae5f-4d49-b2c9-ea11cb207c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d830c99a-4505-49f9-86de-3cf29ef66ef6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ce9f78-487e-440a-b90f-b63709a7bc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "956755de-34ed-4f77-a536-606f6bd85318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af84d7c-643a-4f87-96d7-981cf8627815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e16c981-7abe-4ae3-ab9c-957880e87751"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f2d392f4-eb8b-427a-9b7c-f76aa02bf1fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96601b94-dc9e-40bf-89ca-95ce3ab97868",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "253f1a69-1b9f-41f1-acf4-24c64eea7273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5331c7b6-0911-44d3-91b9-dedea28fdf3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141884e1-fffe-4030-ae47-767ad53cf8cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "846c1b80-0309-49cb-907c-09a7cf576e15"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4807ad63-7092-4c6e-bc8b-e41e3df25756",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46658f8c-2a92-4511-bef0-8578ccd92cfb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d77022e-4437-4b62-a886-316497514b3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abbcc644-7fbe-4467-8bf2-ec4b0b3c9bb6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "76723c80-5d80-40e6-88ec-109ee5c6d00c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38f04e78-5c35-42cf-9281-337ed31454cc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9b9c07b8-6cfa-40d5-b1af-f91ba0c66168",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "20e9a85c-cc07-482b-a429-60d766270930"
                }
              }
            ]
          },
          {
            "id": "6b9923f0-9d63-43d6-9f1b-1e10eb8158f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8df8bd3c-d432-4d25-ae10-0da9861412b4",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4bc5a331-b0fb-4010-80ff-997b40a9ba39",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd309a31-000a-4b31-bf32-292046c672d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "78399548-0811-461b-bde7-689ead3963d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be8ec99-1d9b-4e79-8524-c5f161553ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240a7b52-0fc3-491c-bf80-b7b8df8df841"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a0a3b55f-148a-4a56-9a7a-69653a297013",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bff2abc-7966-4147-b544-9b2cc84c504e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea6ca093-73ab-4269-a317-20e338c2cda1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44008754-53e3-413a-9dda-c08b259abaf6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4bbfd06-2755-435a-b8ef-2169039cc01a"
                    }
                  }
                ]
              },
              {
                "id": "f1bbcd3b-b546-4fe7-b26a-d49fb98676bc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af416fc9-ad62-4e68-9f65-3910fd9135b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be1a19b8-556d-4e45-8d59-ab948f255fb7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c20fd30-bd93-4b8d-9b71-3c8bd4650998",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f3da9354-296c-467a-a92c-23c81d92dfe6"
                    }
                  }
                ]
              },
              {
                "id": "82f16f04-74a5-485d-b58c-7d4d0c76288e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbd772db-377b-4f96-83dc-ce0912c3aab7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e31c449-acd2-480a-a5a9-ff419d010243"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5886a451-0ce5-4035-9f82-005b02650142",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c9f8a2e0-73b2-462d-9218-5ac9f4f1ce95"
                    }
                  }
                ]
              },
              {
                "id": "65e77937-30bc-4c60-8bc2-d024f37060b1",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "318e2a05-7831-48f8-b912-aaa2bfb44396",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "092f74c5-60bc-4b82-8ead-6e100b70750c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50d52f7a-ee1a-4955-bca0-a2a38cc0a81f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9794fb9a-dbc2-4e05-80a8-71aad0c81c76"
                    }
                  }
                ]
              },
              {
                "id": "99d3deec-76db-4bc6-886a-be77f7f773b0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d73d5ee2-4948-417c-9ea9-78e6d45c37a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79ffd470-6ff0-4d52-a88d-c383a89d6cbc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de5914e1-da58-483e-a66d-c46b332a848d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6a1e1b63-8db8-48e2-b36a-b171c3cc02be"
                    }
                  }
                ]
              },
              {
                "id": "7d4dedbf-26c5-4fda-ae17-11611b76ff31",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "233a3777-cf92-4923-a57f-2252d6845e9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48e13850-ede8-4a25-9f49-00e7930c9f01"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a62d5b9b-32db-49e2-ac9b-4d202179b4a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4d2942e2-ac02-4820-8d03-61874143b505"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a4912e40-5e28-45f8-99c0-2781cca11832",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "968ec7a3-f119-4121-8efe-791ee68010ae"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a1516cff-e6d8-4b80-bb32-847efa8bfa2e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d9a995d4-2d4e-4435-a98a-514ebe992a4d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35a1aec8-33de-47b0-94b0-a50f8132c17c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3077e081-9c56-48bb-86f2-1b6879047fbc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b44c290-561a-4f7b-9bff-e882e9e7d7c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2bb103aa-24e7-4565-a16d-a7e283153b8a"
            }
          }
        ]
      },
      {
        "id": "c456a029-b15c-4013-a08a-24bfe803d081",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "11e8a8c9-cdd0-4f52-9c05-0cc06b8d0a18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5980d970-5d63-4d42-b04f-c7c47be285a9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c6097e75-69ee-4d24-b05b-21ec38be116d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09379940-f84d-4142-8047-ec6e4d06645f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5be4a1-9806-4acf-aaef-71440111b49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc8442d-1ccd-4f7d-a491-7bb6ddb8940c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6a22fe-128d-47a2-b9f4-ed65105ca5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38271ca-1758-412d-b1d0-a35814e71a3f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64229bfc-963c-4e70-9f66-36616a3bc689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01e88da-ed87-4913-9eee-d653be74b52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae38d09-2825-4008-8b58-faf614e02930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01a186bf-71f1-47f1-ba70-523c5a18d9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ba294a-9a71-4ea6-a938-216b2b090ff2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed3489a-bc82-42b2-bd40-31f78d901020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d260c80-945f-4642-9046-51ba1a4792b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1884f6a2-548a-4417-bbf7-59323dcd0516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb08860f-8580-433e-910a-f3bb4ea6b863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f6f6d3-fac2-4521-b08f-97b796ec5ce7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdab872c-c6d8-4419-981c-950e1b8088ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "151959f1-c409-4e4e-83f6-c3f54f2cec33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a105a28c-4e9f-4e3d-9def-d5f73a259361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "152f9d5e-f1e2-412a-9876-dd99e43bfc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df54c878-138e-449c-a160-db2e5c8106aa",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd127515-6576-4700-8c5f-4e684c507f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f4d1c9-51b6-4ac6-9d2b-6250b5d34c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef8cdf1-5865-4c51-9e09-2b0ec584c006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "357e08c2-8570-480d-9b64-8f128f6978a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fdf5dd-ce32-4acb-af61-c8af6778bab8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54930a34-0e79-4254-878a-d54cd8a4de81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4180fe2b-e097-4c95-88e0-9b47854acf8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf3898d-6405-4001-bdaf-bba8feacfb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15684318-9f6b-4ff6-9a2f-6b636cfd8c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0118773d-424c-474b-9633-bf850bbc3c0b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e7972d-b5f3-4650-a863-30abcbe2a92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17455e86-9cf6-47cc-be3f-2e5d50eaadb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb66a6a9-fb0f-47f2-8299-fdcb0bdb6589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa63630f-7f24-432b-a5f7-1a0972a44476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245ef52e-9ebb-4059-8114-ce4ae8388665",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff17262-86d5-456d-b072-1fa1150e14c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35740acd-9513-4413-82fc-29d75e75d868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be601bf-a216-4a20-b3b9-e66339749022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c80a029-d449-46b1-893d-aef4fb01b7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4996d7-9844-44a5-b857-9f6f157404fb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a302de64-58bd-4799-bc9a-35cb38815a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "478a1e85-b8f8-4842-b5d3-d8fa003ef3b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8943f3-4500-4511-a2ba-34e892dc6257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a70d9433-dabf-4717-9566-deaf8c9656a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbce122a-ed8e-4350-a14e-b135406d2797",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0145e96f-5988-4c36-a222-0c599985915c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523d0a4a-8d87-4e3a-8995-a7f27caab771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6985475d-7e09-4e23-bdee-c0e7998876c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d97d4c5-2851-4c6b-ae08-7a137400eef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333c010a-ab3c-47ec-b76d-0ba9539461c7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bce972-e292-4d97-b142-fe11645ac0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742a7b40-6b4f-413c-9fc6-4acc242eff65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eed62ca-8f7a-4b37-bb43-c135482ba4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6041ce-a083-4f33-80a3-7f4997e81255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c112f9e9-03b3-42ca-baed-ccada472bd64",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cf535b-8129-4927-95b5-e0f961b3b18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec231a4b-36a8-4947-b9d7-38eb64b6d617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c489c376-7b3b-46da-a6ff-ecbfd9861760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c7d6b6-7516-4f9c-a3af-59d03359a8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf41f9a-f8c2-4e15-9f4c-189e033f1009",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b740c05a-784f-4d83-95c6-2e82a85c37f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ad4ddb-4ad8-49f2-83e7-bdc68715cf89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dae856f-5af3-4d63-bd8e-bbc50bfc08d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3348ca6-6611-4ed5-9cb2-6a37c364e0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2d5ad0-94ca-416f-92a1-5bbf973d2a2a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4adce6-619a-46a4-846a-4238de5fb959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07123230-3848-4ccf-ac40-0cee0e4e14c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a74962-7428-436c-9abb-f6c517eb8e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "da05ee3a-c9ba-46fb-9805-4b092861a558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c16ce7-9611-4f56-955c-322d995ae26f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ef0de1-d0d6-4096-93bd-404a830c1c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a735af19-9ca3-4560-94f1-2c47f1db0732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f612a0-fbc1-4749-ad20-d41df12e3d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "885c01fc-d772-4e87-b5e8-ba2c60cae8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a524cfd2-053e-4997-bcdf-f348f93574fa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfae71a-33f8-4da2-9674-c0234f229841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3135a4f5-9f87-4e88-8cb0-44b6e246a9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35eefa9-f2a4-4417-8131-079eec365a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8025d576-a13c-4ea2-aeb5-58438eaf9016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046c1d9d-8d87-40f8-bd3f-34151e440831",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ad49b0-e8e5-4fab-8bfc-a261b3f5abf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b9c576-f2c9-41c1-82cd-90bea34aacbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c45fbf7-75ae-4a0a-a6fb-6c47cc310713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a32941e9-d052-4d72-98c6-6cacdd45a236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de442636-e847-4a9e-ab5c-b039c33abd89",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f20405f-ddb4-431f-8639-f616c9971ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb809877-72ca-450b-9c41-a8b5fbf81590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a705fd9-1f58-4cd2-8d45-321926e1517f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1c2d66-dff0-4f7b-91ab-edede27689b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7132e6bf-f745-45c9-a8e3-b61c0c4e7044",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e477207-4ded-4a79-b22d-7aa3e84dd6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f06114e1-05b3-4718-a814-6cd41a5c57e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8703a8ec-6cdb-49a4-9be7-9662759d3eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f152a65-36b2-47ad-868d-2536675d0b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751623e8-c455-4852-b184-b51ceeb86664",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9e3f2f-5bfb-43b2-8f71-60486fc98695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d894e435-daff-4588-b4db-3ee132d936bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa9862e-f466-422b-a2d7-0d89a19fe577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2948106e-1fc2-4aab-893c-e6a84c038a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3704b73-b62d-4963-93ce-0915aca4419d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0be49d7-7901-448d-8ab6-bf4d7b8d3025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8e439c-1f01-450b-b01e-36d150e16fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e211a0-689e-4067-99af-c500200be3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0922d13-acbc-4cee-b856-07511cdb9c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e1c74b-3938-479f-8ba3-7c61204baaa1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be392bb-bd5f-4ac3-9b39-7e81d20eb83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e475373-36c5-42c3-bdfa-6baa9f660ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf788eb-d968-41c9-a7e2-7204d1070ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6740f2-31d9-4534-a7ce-2a987fa55381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb441f0-3ef6-4a23-8939-a93d0f438f1f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab21c687-e3d9-4d1b-8e48-28a95810c996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97381987-9b92-4dcf-bb3d-d2b90116f751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26735e7b-d1e9-4966-9ad6-2e136501cfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbd13c0-c6e3-4699-9c2c-afe178cc9263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b811ecdc-90c6-434e-87c5-6caf93fcf91f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3545140-3538-4366-ae51-07dd82a7832d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01b3fdf-2b08-4ea0-bec1-9678a6781d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9317ef2b-dbbe-465a-917d-8d4547835b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab182c67-8120-42b6-88c2-81f6a818b7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2184138c-9812-4049-a625-e680bfaaba31",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbb75de-0bde-4cfa-9c57-ae27098805aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a96826-e3a6-40ab-9eb6-ead842ef485a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd139cd-0dbb-46ab-b98b-22f23136bdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad9ceb0-32d4-4227-b5af-23a827170b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbca0863-76f2-4360-89cb-e4a5ac0aa852",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea1460c-c6c3-4a62-a634-4d810ee955b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26443d2f-efe3-464a-bb2a-05550a6228f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf434ef-1cb3-4320-9b8b-438571ef79a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9076367c-b9d8-401f-9b02-9ea725a9d529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850828f9-6828-428e-9ff3-ba4a623dd907",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e69c70-4f21-4fe5-a12b-a5da80838414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885a52d2-b897-465f-8666-6451c013ba3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c333f1d0-3f3c-4eef-88b4-4ce6d2657abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "359bca9f-165d-4d4e-91de-829b253d9d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe18ecd7-9ee8-4d3a-98ac-1a01d53611cc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6ee210-3952-4cbb-b593-7184550fd576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8523fd-86aa-4174-b5b3-0073d0921fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48d0c38-f50d-49ee-bc76-4947821ba873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9127e1e8-437c-4486-b960-073eaed75791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec472690-c1e8-4b78-80a0-65293185ec3c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1836b3-c8f2-4227-837d-65784bea5f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cb9a11-a943-47ea-acfb-b53b825515f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1585df64-1d4d-40d5-82fb-6b48294da1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "848cb34a-d627-4617-9c74-3c19fd47a49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31efac4a-5e26-4efb-8a43-5f8c529d2330",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30afd188-6335-435e-9b63-5bc5067d370c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c25a18-b793-40bf-9778-d435e2e08a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aeaccaf-8a42-4e7a-96e7-a0082a60d2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a81fab-30a9-40e5-9735-9777e77d299c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a6ea4b-929e-4650-ab91-a3d5a9f6760a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969b9a26-e373-4686-a0b0-283b3dc50efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673d9681-19e2-4538-a78f-461f69beb50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b51510f-466d-4f59-8607-c63dddbf2fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e40ca18-a565-485b-b12d-2a6ed9df5d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1466ea5-1fc3-4da9-8e25-091644134b2b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90441bb9-a4ae-4ba9-92f0-2939db0a300e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa0cc50-e1e5-4834-ab50-3fecba08ce29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5ae38e-5476-42dc-96a0-ca22c8dfa2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2957d9-3190-4111-81fa-fe0c40f237af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5db0bae4-46a1-4791-9442-61982165e2d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1b5158a-d320-41e1-96cc-e13b6dddd19e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f56493-0157-4526-8acc-7e902ff1fb0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "47f61018-1504-4944-9f02-ae696e455b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093d27e4-5dad-48a4-a5c6-95309ab321ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0aff1e1-ebd8-40fc-b86b-d2787a313934"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c595f7f6-48a7-4b4e-9f92-23143b20a72d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9fb6d28-8b44-44e4-8b50-d34cb3727447"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e627bb7e-fdc9-40de-b95f-5e0ea1e84693",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bec19e12-f606-4e5f-8333-3a3643a188c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0602853-fb22-45ba-aa8e-0dbecdb21398",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "efdee9c6-532a-454c-a6f1-1e4fb708131b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "585c40c8-4612-4fb2-aac7-a96ae9ea846e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b2633fb-a0a7-4375-8d41-65104a707e6e"
            }
          }
        ]
      },
      {
        "id": "1a818ac2-bb0d-43f7-9010-7f22a18d7b27",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "098133d4-5357-43b2-a734-d18b2e91daea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ab4073f6-a4f1-48b1-ba72-2bb887a98b3a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f5ef6351-dcff-44e0-9122-f49e175a6067",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8434ca76-b88b-46f7-9896-52ae3a1536fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14074c57-aa0a-4926-873a-00baa7639e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a133abe-a06e-43d3-bb02-ef8619f2c057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a168fe7-6d4f-4f07-86ce-d50b010f1065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8315c02f-7b18-45da-bc09-638ff2ee85bc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ad5ea7-d2d3-4d56-b354-a54c9ba947c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9f5e76-3f1e-4521-86ca-0bad87f62e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fd4426-6b06-49ac-b901-881e4414ce0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "538f4574-0550-4757-ab8b-fcf726328d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2148f9a9-8e05-47d3-9c83-ea0cb5201380",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a8b75f-20ea-470b-a529-5b0e771c12f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a9af7e-e589-4fd4-8b3b-051651146832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422aafc4-20c3-4214-8051-4c17491037be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d950a3e-ac8a-49fe-85d7-144f8f331196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581ca857-365e-42c3-b3ce-18d8eea9178a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fb02a5-f9cf-4fbf-9e90-72eddedd234f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e47ace-f301-49c7-be71-406709282f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0d633c-9dd2-46f0-b07e-be4bc3db8cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e950bb9-11e5-43ae-8e03-65d18ab950b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fe687e-d35d-4fec-b243-0e2dedbca0a3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad16849-6e26-4e31-bb21-963d92305511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed1bf02-82d8-49ef-ab7e-8c8ce9711ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edbd9b3-3958-4a0f-b3e1-293a710f23ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a21e5f84-fa5f-46b3-ba65-657cae7d5bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1af3a31-d92e-4f45-b396-0e4b52f403c6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7912dc66-125a-41b7-a6e8-8d011185d143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2256d0-f851-484c-b9ad-853e25599570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aaf2334-b4a3-4c74-b1a6-e113a12f4032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b25d9d-642a-49a2-b1ab-66a329c40532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd49aba4-fbf5-4a1b-9a43-ed006f509e69",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4eb10d-ea0b-4142-82c6-7afcd8142ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e831ce-d690-44df-9c8b-5a3854e69ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b777ee9a-c9d3-492a-8613-fe0a413e358d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f0f666-a00d-4b20-bf04-ccb0bb8293c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10106166-1703-4eaf-9ee4-16b5cc9b222f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0b2ad7-d714-48b6-8e6f-2d9b475b4a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4452875a-2c6c-4d09-9156-5fdaaee4f1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694a2ff0-41de-44fb-96bc-6ab3f5d12fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53f4fdc4-4c9a-405d-bbdb-204dd25de808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a544cd0-bb5d-4b5c-b2b2-a9bd7221b8f1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975b9a63-9ea2-4d5e-804f-2acb43e7b8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98eb13c0-776a-4c3b-868f-c4737007b75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8840586-dcb0-440f-80c6-cbd59ce5a7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc1a13c-82fb-4aa0-b308-0b3412c64c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2b685a-b370-4fa9-b7d2-c7c2741faf59",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469116a9-524f-4bac-a758-8fa6e273fc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469c5419-8e8e-4191-8433-97ef5208e31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a4b6aa-cbc4-482f-bc88-4ba047b2df9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a500d8e-4cb8-4edc-aa15-c4399c08dc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c3b313-60df-4d51-9937-c0e026a32329",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffbe8f7-866a-44d9-9bf2-5174e944c56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f13f3a-684c-4773-ac3a-3dd0706355b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246a097f-1177-4704-a650-a22a63e33e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "88e3e526-1411-49c4-9614-f0d617992e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a3da8f-edee-46ba-97e3-edad971fe1d9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e3b8c8-1702-451e-86eb-c22f1c8175fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a1f296-a428-499b-8161-600bc66c0007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b908d05e-6194-401b-86f0-1e5b6a0a8dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9303788e-1f65-43cd-9688-c64030637930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be9cd9c-44d0-4078-85b8-6e399bbd76d2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1b0583-8e13-466d-bf7e-1651e320a9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449ea631-aaea-4bdb-aea3-31ac61d3bec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa59eee-0668-4cbd-8827-0aeac6674761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "556f823c-9bbd-4c9f-be8e-d5e2b60ddf03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39297e9-fae4-453c-b770-be1eb913783f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c069b60-de51-477d-8cf6-22581cda221d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef52830-d879-440a-8cd0-321bd0f2172f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a618a916-bf4d-4a08-bc76-6c1d0fe45f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e81cbf-6de7-4da6-a4c6-18de54fc8c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725e4306-3394-4aa8-a889-80f968fd50cc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89754c9-f362-4383-a18c-0159168690ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74dd3ff-6e33-48fb-b24a-c3fcd0c88b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf11de22-106c-45af-9d0b-8a1c12ea399e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f8b55db-580c-4c99-9f9f-8bf2fc138764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8744b929-9383-4b63-b2f7-ae00df254a46",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "238efb05-10be-4c91-9b6b-d9a705d5ec91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18f3010-9628-47f7-bdf4-c378815869f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623d4627-464e-45da-ae0f-3e2ce6b51c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "67ae7859-1221-417c-9226-317818622c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888beb90-079d-4118-9045-2c993043db48",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176cdfe4-3814-4e37-afe9-148afa6fbca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628ad8f1-900f-47c0-8b0c-add87ad5f82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0210d267-6df4-4c1c-91e3-7e61c8b17cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbbaecc1-8bf0-40e1-ba3b-78609b38859c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d45250-5a33-4e5f-b294-d1177b387e33",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52a9173-3859-4bc2-8176-afc211142627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83503fdc-2315-4ef0-ba67-299ec1485214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6b52c6-d35f-47fe-9ec1-8ed348beeca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "981098c6-5016-413d-b860-eee1e7228617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f718c3b-e106-45e0-a08b-7381490ed1dc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc51e92c-c0f4-4d93-a410-1de2a416ebfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7a6ada-aa75-4bf2-be89-c0d95c521044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ba7045-a459-4901-b317-89c9459609bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a4b0e2-11e0-4001-8c56-c16b69a33297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411fdc5a-ea06-491a-ae2f-bab6cf59c93a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26951ef-4a29-439e-9220-6884b02493b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a4a72c-88eb-4240-8ab6-1ac234f37c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464c9a92-04ed-44de-a013-a4614755bf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01618878-8b18-4cd9-9008-529970524556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "969402b7-b24b-4299-9bb2-a008a34c9568",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7da685-8c8f-4ea7-83cc-21608b45f66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435526de-d8f9-4ee1-8251-b32d1848f083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419c98b2-354c-44e4-8e0d-5eebe2a26be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2cd79b-13b2-441e-8e45-468cc1d1a897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6148fc-a106-4854-9459-528959a16873",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47e742e-f10f-4c01-962b-cbfa2d307dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b62e0171-ca93-4ef9-843c-e34214f97973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9672e82e-9479-4851-89ca-273578cf7061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "243efe37-8b65-4357-99d3-ea0ae3f5f400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67fba70-3562-40ec-8a8f-1a93cb6cc654",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e4d4a3-c3d5-45db-889e-7c699c144b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05240d0-5815-445d-a8f2-d1a852990f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a571e1-62d0-4619-a742-f015e4ff2d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "621400c3-e5da-4e37-9bcd-52c3148a1d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b468706-cc42-4f6e-b806-23a3619c3f1c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ee3ad4-2bcf-4c42-ab4a-4386751705d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc98539-7583-4113-855d-d963bf80e867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1087b51-1609-4259-abb4-fb54800cab5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b05bf3a-6ad6-4b8d-bf02-cb13de68c192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e948cb6-db3a-4fbc-b5c4-6b6ce52e92ab",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5559f78c-6706-429c-a6c8-51eb57a6b70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0f7810-43ac-4c10-9490-7a10c558ef2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f287c9e6-5906-400d-b907-a411a6e6b7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12e95b1a-72e9-45e9-84f0-38db56c169ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2406d7be-16b8-43dc-a899-c1b8863c4f88",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a465a60c-7399-4ba4-b859-a26d5ed0819c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19670859-0241-4695-a8e9-1cb002cffe8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af2e64e-acaa-4cf9-b9dc-599b3348c897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "965233f3-39bb-44af-8a14-bb803df00947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21b49cb-46d1-42e7-b5f2-f4bbd201044a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d24186a-64b0-446b-a4c5-2c435ac8d6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c479b4-b16c-49f9-a352-3532d4241744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a05e2f-da97-4912-902f-f592b416a539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d80a759-83b1-4b89-933b-c1b2bf47a10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea11ee0b-9665-4bce-b309-4ac8ececb2e2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c57228-fb06-494b-abb7-5e0014a56a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325ca7a3-b72e-48e8-a4de-691f0dd1a5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f493545-7677-4f97-afb2-52ea9c599cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7167ee-7bc0-4d27-9640-9c9b2f668a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41289c4-7998-496c-9d96-14b886472ad2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451bb0a6-7950-490f-9fc9-7498db22dbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e093cdf-fe99-4a72-9a48-6c5975e8e782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760e06cc-b9cf-4ffd-a207-f84da33abc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf8b6d2-5077-4afd-8eaa-821c7ac0dc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411a96d0-c3db-485c-a2af-57f44dc10bbd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6603b57-7e63-4824-90bf-6ebf0b7bb280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0327f608-c165-4e8b-94ac-27332e0dbd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7db6f7-e20a-403b-a849-acd281f23850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a6ce8a-6f6e-45cb-8759-14059513df88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b544837-86bd-4a4f-be2b-3200364a3aeb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514abd1b-e64c-4457-bf18-4aa484749873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55d2d37-3201-417c-a31f-e169bebf3a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4fdf51-f797-4e4a-9058-d47ac46bf773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45b93cd7-cdec-44a0-9af5-1c4f03bbf549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386a744e-331d-4527-97a2-36ef6b9102de",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f29552-f8db-4939-bb03-ba411459779f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e804c2ab-8656-494f-882b-27118c359d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8e806d-e594-43b4-aaec-52cc805a042a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34a289e1-dfcd-4aa9-893f-8106107aeb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198c82e7-9492-4210-ab97-76c9e5789abe",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c124ba40-fd33-4664-83c1-97445fdbfceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1914a818-dc82-4b4c-9b5b-8de8ba0c50fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd080e3-43ef-451a-835a-14bb9d838ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b763c966-8ee3-4412-b81c-2fad3d2b558f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c11cc5-2756-4dda-b82b-f9c4e9e323c5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8171e1-ace2-4299-ba25-5d7a8e22b405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552d78df-ed33-4d52-b31a-b68d22fb42c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c58808-b3df-418d-a752-5d58ef8d71b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a761eadb-a2f5-4bb7-8ca1-191bea7e029d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefe5121-910e-42f6-822c-202d5bcf7329",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e04475-ca77-4e8b-8e07-71772ec56d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afb9cb0-9a8a-41de-b4a0-996168cc9447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162fdd3c-8e96-47db-9234-67fa1c11e498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4eebb64-89cd-4966-81a1-ff618c950935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c68b77d-12ff-48e9-a9d3-1fa918409dcd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0c11fc-8bbe-4ceb-9c39-616dff0a5b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5a9c42-95d2-4b06-b871-184656bea372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1d3418-0a67-42c3-8d23-cfcb913897d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91deb006-16d2-46c2-9f37-862bbd233209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79905ff9-d081-48ca-9f56-f89848342c89",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91d7a60-637c-4aee-8974-882b93183efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b22272-b876-493d-9f56-4a85c5eb8397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97d4d73-34bc-4cdf-9445-4058a0d22f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d522d6-bd52-497a-96d1-14ec20656f26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac037e49-4634-4682-b20b-d17b68b7e053",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "05a600ce-281e-4b3b-81bf-06613525d919",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea1d8c7-f73c-4319-853f-dc731b839966",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d65a3525-90a4-4881-b2df-6eb9b590b3f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e6813d-c1a5-407a-8bbe-e7d797ff8ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb5ef6e8-4c56-4176-9fd2-5e2720d96023"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5ea9192-3bf6-4510-817f-d2fd2632489a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8081cd88-f288-40cc-a1c2-b3da6a010520"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bd9f906-9ffd-4db6-961c-7044ff2c1f35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64cd787d-9ad4-4d88-a7aa-4c028e74f645"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f7a403c-cfbd-4b41-8477-61b7052e1387",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2159d458-bc0e-4be1-bf1d-0f8f2624ffa0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c848b3f-b226-4784-b30e-0d0939eb841d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c62ba972-93ab-405b-bdf9-fed74224011d"
            }
          }
        ]
      },
      {
        "id": "dbe4bee4-478f-46df-bdc2-5e4df1a72e14",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e715e743-fa42-4afa-96f0-3a8342bddd9d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c81e4ae3-23e9-4256-8d96-9dcfce6d4857",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9f2e0004-0a92-4f52-93ae-7f94626da1b7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833a0ea4-e037-49dc-8f8d-a6159e612580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57510601-2281-4226-8077-dc99be5c73a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9dc42e-b42c-404d-82a5-cad7932731b7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56fbf5f1-6863-42c4-be67-9e83cbffb4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d64fe03-7326-4a3b-b92b-42658216db41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdeb546-03ad-4c2e-a13d-df97db1af1dd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9713a13c-40a7-4acd-a0d4-04b92e11a0d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd116b4-9ec0-436f-ac06-e7ea83374c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b5d3e4-105b-4e73-a251-45dc12bc7a5a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f195c5d0-ca42-448b-9835-ffcf98f9d69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb2441f-b925-4fc6-a673-22433e68f5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6aa335d-8ba2-458e-8ae3-f15687654bb8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7434a4f2-8d02-4311-ba26-6c56535526b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8598532a-528e-4d4a-a6a5-0890eb6f27e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d69a92e-dc94-4789-8820-9b2652c50ce1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17296d6-74ea-4492-b545-223b4e671ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fccde00-cf8f-478f-92e4-bbe3f60d3666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acad548-6a03-4022-baad-a274e7684f76",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7063ed55-c084-4a04-a7a4-2c329c890530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b064c0e4-f958-467b-aba1-3c38792e0408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd60cd42-9487-441c-982b-13f4b25e5961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e68430c2-3470-482e-8093-e24221dfb3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779b9a75-35a4-48f9-beb7-6b8d6309e4a8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e055e69a-93a1-4341-b316-a93453418d77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc3f2b7-51f8-46bb-9111-87535b185a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf8c55e-af8c-4473-b949-0a738e3e17e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2ea1e8-c205-4ac5-8782-64a4e7d16ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba73d3c-c83a-4847-8c42-a2b01eaf9db5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd968e9-9965-4e63-b8cb-5abeb527edd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dbd851a-4dfd-44a1-b0b6-76d58245c604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e763ea1c-269f-499b-80d9-b886c890e9a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454c2982-3fb7-4a32-8e89-580a99c94c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d7de74-32a7-43aa-a8d7-5fbd75e10dfd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f492ecfa-606f-4f6b-bd9f-d50c2cee0e55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "574d8d97-9c22-4d56-acc7-1574ab8981b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d79bb5-2f1e-455a-a5b2-0c63788a4a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11568c56-c20d-4c85-ae01-ed1bd278521c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5efe46-a548-4b5b-8dd2-9160336e7506",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a992fe-fba1-4f4f-9812-ab929fb68b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea144adc-5c13-40e8-a6bb-b2d2cd2f88f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b94da3-e2a8-4879-9ce5-0af7c861a549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a51882-f43b-4704-a66c-06b47a7be0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8d62d7-a307-4849-ac28-a48d381c29a6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70e6396-56da-4164-8d01-03bd609b7fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e4c68d-6792-47e3-9c71-c5d0a80d2f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d207e9-225f-4ad0-8202-3613071da65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53441ab6-c2b1-43a3-8438-a9d32a9e81ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d278af5-91b3-44cb-9e43-04760558c442",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27480cbb-2a18-42f2-b4b4-0f29b59c5bcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e5f84bb-f6e7-4952-97cf-175447d90416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da973519-f7e5-48bf-bb34-3c11f79285d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e68e102-bbcc-4efd-8049-a5dda65727c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f184af1-dc3b-4a6f-8c0a-529d5ef41fe5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0bad88-25c7-4426-add6-a19539dead92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4179952-934f-469f-865e-eaed13b73038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6bed3f-622b-48b5-82da-74cb9b378175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdac93ed-57e3-40f1-b192-5d82982ae3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c398118-8de0-474a-a33e-096872832fbb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3508a686-6ba7-47ac-8db2-b72f2dca18b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b1930dc-419b-47ce-a273-0ca88ade8217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9477a0a-1003-4d54-80bd-56bd8cea3a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8211fea-cd16-4c56-bc31-3e479b8525a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2350cabc-200c-4102-9e3d-2d2bfc44d9a9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7faf57-88f3-4719-a89f-7cd8974e867c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb9136db-523f-41c8-9c1e-7a4762f33f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "222dc8b2-eba6-42b6-8ba1-9d6c6ede0b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331ebe07-623a-4f89-bbf5-cbe8423ab7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07058b63-5785-451e-8773-da1e1fd2d4f5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8aab2a-fa3b-4110-a799-a50999f92ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e841eff-4e9d-4b62-b0c0-3c0b7d208067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e06a94a-9c07-4919-890c-a8229fa31e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24451ca5-089f-443e-b908-2b253c470f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca06ee36-b8af-4688-82f2-8baf434eac3a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb283156-d41a-4e7b-ac5d-f285f161956e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9e7a4a-fb9f-4d5d-9307-a1a3765140f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3766f90d-ee15-4546-b0be-3258ed85db03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fc1373-3a7f-4c90-9293-e0077d829531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775a19b3-2505-42de-81b9-84385daa8de1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934da1c4-b225-449c-9298-f14c97fd8885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4efb2d6-2cd3-4f0e-a7b0-650791e495ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b62dfa-7208-4992-b09a-e6a1e6003d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b60be8-1161-44f4-ad40-fb9435f2b4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4688601c-f065-403d-8391-be1be326225e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7143bd51-2c54-4fea-8d52-e3db5e9c7e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14738e83-b228-4a54-a7fb-8a2fd0f03912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d34256-9a7c-4835-a638-8fc0efd8b73d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6e4ef0-c048-4a61-9047-8d60bfe26e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea5156d-2a36-4eb8-9bff-114ae1ed2462",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7626e6e-c129-4be6-80b6-2c70f3c0a408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc418613-b8b6-4777-8d28-3b388bda4706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dc9483-d417-487f-9421-2f08b1b81e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99125066-af1d-4d90-835c-420c750eae05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8f93f8-f30d-4d1e-95d0-da46cb888ff3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec052a2-2eaf-4360-b53e-c6cee242cb18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5548b080-d218-4f63-bfe6-b9af37e0cc6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bdb341-1c8e-4fd7-9e02-9fd7cd4a7445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ad9197-c99e-4f0c-aa31-87ccca9f40dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7923d639-d1bb-4c14-969e-367ac42273e5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7076ce-0455-432c-9861-2657d7451440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e8047f-fe16-40f5-bbca-6d8af4a97975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd300a9-088c-40d1-aa9d-2cf73265bb5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d58223-ae36-4e55-b53d-3c56136ed55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475ddb6b-793e-4bff-92da-b39b6acfd99f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdfbc46-e1ca-4126-aa93-999404c1c582",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5e949a1-d672-4143-8300-430b0c15903b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e727df50-5be3-4cf1-a192-bd1d872cbf25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88c73e3-c754-4348-9382-9921fbfe4cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e2fc74-d768-4661-a1a5-af99dad01852",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b89c0d4-48d1-421e-95c6-17d18ef3dce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "198ba268-cd1b-44fd-b5b4-66a0ac9ada2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6869420b-8b27-458f-8d07-b8413c6aaea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596e61e1-ff88-4ab8-a8b4-327e55fa7a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6896f156-8c6a-43bc-8dc4-9c5c46685359",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e389329-4c0e-4afd-9588-5cf0471863d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4b5f7c5-bda7-4ead-9a7a-3f39ccdbedcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8d97eb-3674-4ab0-aade-1f68908867bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164393af-8a8e-425c-83e7-64f89160fa2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ce16f5-554b-42ff-baa4-b74fcd3f68ac",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6400787c-4d49-40ef-90ac-926b966053c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b94e6d95-8ece-4c24-a195-7dc704af2869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d7aae5-0fb6-4f53-ab1e-0484cdc5638d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c34e442-3b72-4033-a7bc-1e62c40e4a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1cb0ec-10a4-45ab-9fb9-d8b459825379",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d093d61-b52f-4d8b-b8f6-e6213d9ccad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31971a1e-85b8-4b4b-825c-24a63518b70d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77129476-b674-4ba9-abfd-d4ec906bd852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73c3a82-ea49-42d2-8bb5-c4c20d666b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e637a825-abde-4079-b3f5-9f4d555505df",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d15b83a-2391-4584-8eb9-b9c91d3a7639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94e6988e-335e-4783-8140-2075658fcac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c253621f-ec31-4e11-8abf-ee552b850b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d3037f-e379-4e4d-b054-bdeece3e11b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad60bdcd-1d1e-4bfb-883d-91b5492001b1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909f2389-be48-4a4a-ae83-b169f6742a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee944ad3-06cf-4f83-840d-381c625d0257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9de803-ff29-4dd1-9bc6-4c3d6dc4b2a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2073bbb7-2134-4d36-b01c-da5a85e8565e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48bdad7-4b6e-44a2-ad79-56aa860c17ad",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d404ddc-a973-46fd-bbed-8e9ab1143e5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3a541e6-3580-473d-bf39-8be866ec24c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40009a0-0342-415a-adee-a81c10de62f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a5341a-efe6-4849-af95-687be818ce58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86288336-f9d7-4340-bb03-d64951879090",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ca7428-b390-4222-878c-8750f26e3633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a863b61-a1a8-4f91-a805-2c2769863cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae760bd-76dd-453a-9b3b-4609e5d7a19a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b34bcaf-6d7a-4965-b327-fae4387bf959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c48b090-5120-4f56-ae04-923aed10bad7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6506cf69-1019-4c09-999c-aecbc743e341",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7710f436-6647-4813-b187-74d88e976c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba81b206-e7c4-4e52-a5ca-8e95c62a10e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9108577c-e6ba-498f-a3e6-91b65feaa418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421a54e5-2788-4de4-9e59-ebc0d72a5903",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150a8ce0-14d3-46ee-942d-6057299d6544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa23ce2b-c0bc-4742-8b97-9c06d1f74ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f554b2-8f71-4355-8806-6ecb1030679d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c353bc-5572-4037-a591-de2f7858c4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb8f662-a2a5-4f64-a46f-37efa2502337",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dda2d9c-efe4-4fdb-84cb-e05279768f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ef1513-94f4-41df-8a2e-425411c4c26c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e547ae1-61b5-4a55-a576-7edccd6815c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b03eba-48d7-4598-8f70-53cfbbde13ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a40146-3a85-4c60-a73c-6f8842342481",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f18764b-9e78-4ec5-9052-531a2e58f4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc0a423-e736-439f-839e-4c2d529edbb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286e50bd-79e0-40c6-a764-bec65de42132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1420c287-e346-4776-85f4-956409b58a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d5e259-966d-4837-a2b7-ca122c70ff47",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a4741b-aa62-44f3-9d8b-a87423ea99cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79ec551-0aaf-4796-a2ea-f3e0c04316ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13520092-57f1-4ee1-a985-1fffc302a366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d2fbf1-8928-460a-bbe3-d17650046c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91874d94-64e5-44d4-b78a-60f2cdf64834",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d239fbad-ab98-4dcf-8db2-f0d7f94f66fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c41ad3f-f877-40d3-b7d0-78b86a077ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2e5ad5-3fb0-4ef6-aa0b-c8438ed1a89c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15dd3102-74fa-4578-bc77-359c19994801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac3f8ed-2b49-4944-b98b-4c6e47c68cad",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634ead5f-668a-423f-9d83-63effb4a000d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f62571-8176-422d-8642-8eff90a0ef13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb50b19-588d-4763-84f0-2b1a1c81bfbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26280f5d-cb87-4ac5-94df-3b80f956938a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a5f8a5-f01f-4408-9840-18d8d9b033ac",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae6edd8-93dc-4433-bcda-0c02065f0610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dbb984e-dd9f-4859-8eb9-69ff747025a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92705345-c541-4ebd-80ad-ea95081030ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace4d03f-f975-4e4a-b6a0-890ef74c5d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5c2f62-9058-47f9-8742-382bf353aa81",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b458fc4d-274d-494e-b97d-3bc4666b810d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8601cd72-ab3a-4569-a046-92b88c70164e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e73dace-538e-4a39-b84c-07d1dd83a445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d6791b-fdbe-4d0f-b08e-cc21f8fc6ab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af1d352-4032-4ca9-b2fe-2a4ab8c0aa0a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1d972c-37db-4b34-ab75-ba7761dac33e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7b3619-9651-4d32-8647-1a453657e3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e73f28-8476-4532-b8b4-678baf12342e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9dde59-76ad-480e-9228-0c17b61e15aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8967d407-ac0b-4875-8b3b-5217b4ed7ecd",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe53f47-dc7a-42c9-a7bc-d8a08d608a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121a382e-e33a-4ba6-bdab-099f6f64df74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70dc4a45-9d0d-4fb0-9893-dd839a5bce44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc7a70b-ddc6-48fc-bd7a-2b96610020e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa718e1a-dc70-4f2a-a0a4-d84f72f1bcae",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99d40f8-690d-4642-b8f0-c156dc7682c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935feb82-5f7c-42d9-9727-1bb1ffe27efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ee6ee6-fd45-426c-9e99-6aa0003df906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5446c917-2802-4d95-a483-5be2b6a75a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e375392e-59c2-41c0-977a-7d10bb3d7876",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1686b6be-716c-460c-b487-9fae1702d883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7761a725-4608-4712-9b40-6c02cbb8b3c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e04495-abc5-4c60-a936-b641fb370d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290ee0eb-cd8a-424e-b2e2-ffa323ce283d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fe50a4-a053-47fe-ad07-cbdd106ebefb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d0e5cf-491f-4998-bc70-25c022551572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79312ec8-b8c2-422d-9d95-db620ba2685e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "790f0b8d-cea0-4974-bd5b-632112b5ab83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f882ba8-04c4-4003-8eb6-14bc140cb8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703fae0c-2bc5-4629-a112-c8681dfc8fdd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e752915-bfa5-424e-9a3d-715a74f09acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42119454-ee08-46a6-ad76-f3da6e8a2e5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84eb2cc1-054a-4398-b9c8-372715cc0c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c69917-edb9-4af3-aa4d-3ba3c38f24e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27449640-3218-49cb-83b7-65c7a2c6c772",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661dfb60-7c12-47e9-ae39-d1b1c3f7870a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7aaf5d9-9de2-4ac9-a9c4-034fc7826e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e220d701-ab40-415b-bcdc-de0e830f2331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8277dd3f-3549-4657-8d4f-9056b99fe50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac84817a-763c-47a8-afd4-27aec6b1f397",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5498ca33-6432-4e54-b554-24a7b90a6057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd948dc-e643-48c3-94ae-2d6723f9f934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba0b771-fb3e-4433-b141-7ba76714c08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44aa0c3c-d1ae-4304-bb59-4c62ce5d8d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df9d883-27e0-4aab-a507-614c3703fb11",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61d7c91-54f9-4a3e-afe8-d611919a389b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120dd007-fbbb-4571-a026-1fa31a362c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9573755c-2dd2-4e95-a12e-0279703d087b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69d1e0b-dd00-42dd-8219-ecb6320b378a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c299cb99-5665-4b7b-b04d-8f8079ec6e5f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8704d74d-3472-4698-affc-f634f73b1f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4976cfe3-9933-41d8-bc3a-242a09486721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d55448-2a20-48fa-a31b-b1a9d1b8fbcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd939693-c91f-48dd-82cb-ebcb13084eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7479e2-c551-44bd-a3de-14e6ddd401bd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835d01b5-8465-4bcd-9f3d-4ea02a084a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2504e81-7b84-4565-96d4-5e2bbf568bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18c1676-41c9-423c-aa71-ccd62b55e43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b92664-ba08-4bab-a34a-bbc7992261cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c11d7a-597d-4dcc-9268-7a9b1b0a1f49",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd199ef-2368-48c4-b51c-1a170f6f6202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45cb290-0474-4594-917b-b8369831555c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275cb965-9bbb-4f75-bc63-92bf7c2dfc0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b10a2cd-d6c6-4b28-96a9-46648d8255c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffa4453-56bb-4643-81db-270be3da3c9f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9415298b-ff00-47b6-90f7-eeae162dc62d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13dc18c4-a885-469c-9a0c-485d66fdcf14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a448116-14c4-4fd9-a999-df90be7dd635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc6b5d6-7dc6-493e-9d06-2d3562a5af3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390d9df1-0f2e-4b05-af74-1be499899aca",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16757ed-2deb-4d60-a8a9-a27f275e79b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895c06fd-eb21-42f1-8c22-8f69212fc291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950aa0e2-8c2a-4ed5-9ae0-2fea1c8e157c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200af7b0-9848-4361-8a7e-2239ce171277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca447be-b963-4aaa-8d24-206aa2521332",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca63ac06-3dc0-4b26-9d28-17f8ab911662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9943c1e-8402-489e-b04b-5517aac83fda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2388a17-b265-423e-8172-70d1532cb480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bece0072-ab1a-4529-83ac-454efe8f418d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea2d19e-25ac-4703-834e-f4f8b9891706",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c395104b-8e51-4a45-ad0b-1ed053b4d13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a851c13c-72e2-4a22-8af4-a1c6f8b81623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299f9ec7-03fc-4fff-a494-54ea456b02c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9628caba-e058-4f7d-af75-9709d0c53ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea041e7-ca7d-4519-8c01-b223696e61ec",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d170a2c3-d58c-4423-aa37-ff39d6d77612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47644663-833c-43e1-b085-81986b9b194c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c51748e-41bc-4968-b794-848b66d2549a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "103dd794-e7df-4b01-ad3f-8c7180f328a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec4a8d5-1a38-47fa-9724-3a944cb0c849",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15efcf49-b1d1-423b-808d-d39a88aef08e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75745d74-93b0-40b6-82a4-83b04bb4d8c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5626c149-5ef0-45c7-bdd8-fccc3f971b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34948d48-378c-4d80-9693-046b1f865a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cded8de9-daf2-4982-bf17-622541bb8b27",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b678105-ef7e-4b02-90f1-669f9c14abc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce933d7f-b7f9-40d4-8de7-ddff49971664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa1a206-918a-46bc-975d-4da1522432b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a830e0b-e157-4afb-b1ad-fc5a105bff24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f12f85-ddfb-48ea-befa-0bfd43195704",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df41cc5-373f-427d-bcbe-be73f0f51c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0dab33-cf9a-4ef3-bc81-bf91bba4d32f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014b1ee4-0258-42c4-b20e-bc6ee1431a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89fe3d44-3122-41c4-ac2a-6dd4f6ebfc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd77ba7-ce6b-4b2a-93d4-7837fe7e8fa9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd361d26-3c8c-4397-ae9a-c4562dd1b3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e537e15-0ff5-4099-8b1b-c0834a3b00a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9f1ac9-f275-4df4-874d-20834d3ec627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5599a9-a051-4482-bc0a-fba26f485308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456a2487-06dd-473c-847f-a215a0172eff",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5ecfb1-cde9-4bd2-b3be-151846731061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738c649b-114e-4934-aa79-805c625d005f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa492d60-e9a0-444f-928c-0460007e5a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e153987f-7522-41ec-beac-a01366331c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce309c8-ae60-4ed5-9ed8-eae6d1b8f9d4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea87413-668b-4a15-910e-648b074e7fcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e7339d4-55ed-4233-a3a6-92d20a0c9b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0d0d30-a9bd-4a51-bda8-3e0ec303dfc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926d73db-faf4-4f8c-b4cf-febadcded533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8de5b0-d2d8-4f6c-8d3e-86ecb64e3125",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ea09bb-93c8-4d0b-bb99-2117a45d6b97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2de1f146-d02c-4f8b-9d87-7904ed6a6f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35940ad3-8b61-4bf4-8c3b-7073c617a3aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46829f58-85c6-4c3b-8686-e194ef99cdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca8d78d-4dae-4342-9f77-be52fe7eb795",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0b536a-64ab-47e4-b29c-7bf50e5d6f35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98430c0c-842b-4452-a247-e5a294f4c415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6582dcbf-48b1-477a-9ca1-3e088fca54f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e174de2e-c4d7-4962-a21e-2c08a7cbd6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea7ab90-8663-4ad3-b794-bc85af764fb7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c30de7-d631-4548-aed7-77801777d8c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "583a1816-7899-4e13-967b-48ccaffdc74b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d361e9a-c744-41be-99d2-d3f64529a097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e0977b-3008-4a4e-b01f-ead162b5f22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97747a63-c357-4d25-9022-8c3ae8675e9f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198984d4-e88c-4db2-883a-2380003b5311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "260e7fd1-4bf1-4b06-aaa8-2907f410bad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a77d1c-57ea-4145-b773-c2131e337d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e945f4e2-576b-4ccb-acbb-1ce1b743b188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3d766a-20ae-49a3-a22f-60599234ce64",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aac0f09-9bd9-46f4-b390-52f99071ddef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05584a21-1839-4d52-8bc2-720bc55bd1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8aaa75c-efe0-4719-9423-88686e1de724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3244bea-5946-4051-8c70-88696cc79995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae1dc2b-eed0-40a6-94b0-d2d53023291c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d3c00e-a03c-4057-b1d1-de2bb5762e43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51611515-dd48-40fe-b1ee-bab78bc81009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaa0ec8-eb51-440d-b94a-0512c83e189b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8432554-42de-4a43-9f00-73e109aae3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0395c803-40d4-402d-b038-fff3c479992d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2f721e-16c6-4350-a4f0-57f1dcf904a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5735ba56-44b0-428f-aa77-0774954ad5d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c682dac4-f5e2-48ac-b26f-5c1dabbc370c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56fcc7b3-0027-4d69-b66e-f09b6fb5d691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e9efab-f2b2-485b-be55-231d877e7a69",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dc6780-a4d6-47b2-a7a6-78d313d5cca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb90adc5-7918-4bc7-b2ff-a021d19c8859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d011d917-20a9-4199-b032-7d61f9eb023d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8035b1-b6c0-4f75-8bbe-7d366354025f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b46341-2ae1-4fcb-ba08-2a0cd79ffa7e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d24e3e0-d26f-40a0-8a8c-dc549d7a7de2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6ba3075-4770-42ab-b1e8-3a5dfaeb6639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19d5844-a606-4807-b682-404d6e672ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628aafb7-765c-4edb-9d7b-632a629db8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1821d8-bc24-4890-8dcd-9873a5d8b818",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e5c35c-5232-471d-b137-01223523b2af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "909fb28b-b86e-452e-a5e6-1ad2fbe0d662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd200a7-9256-4ad3-a1d2-8e111d0acb3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8815da6-647d-436f-a572-7e9589edc842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c38a83-ddc2-49ea-b0d3-2786e8ed2eb5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c27de56-46d3-4efd-a40c-c20a47adaab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d94e7f62-5ece-447d-8701-5124494ca124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c240be-314a-4ef6-8f62-d4dd3f40aa96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f89937-9d59-4cf8-b229-cd0e611f06bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc19fa09-04ed-4735-885d-56c726abc055",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d57fec-4c5f-4b55-8d6c-dd6e29eef74b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f465c2f-33ec-439f-83a4-12bed2866026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a13dda-150d-4548-9281-78846b7d9eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85490ba9-e774-4487-a71c-524c7b782cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19003d6-ed4b-4c46-9b5a-f7a8a3db13fc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a8df81-11f9-4e52-aa5f-0307cd75f9a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ab779c-128d-45d2-9ba4-40f93d2f4c94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a39dac5-1e30-43b9-9e3b-2484ad5ee7be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d1b7098-f39e-40aa-b6a6-daa483f52d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c898bc8c-4999-4144-952e-74668e3ef68c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33196e68-d564-4145-af6e-4f0faaea12cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46702766-8d24-4275-a197-dae6af0eca77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee193e95-6759-412f-943b-bd3d1b597d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02d773e-8145-4e23-b3aa-fbf37642f857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7832f023-f8fe-4fe4-92bc-7279a7a4430b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd60e874-dfe0-4eea-8166-ae0cbc0a2f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f93b894-2728-4897-a349-e900f6e5a8b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e879c24-afba-4322-b76b-4efb3ba2da3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf679a5-dd97-4c96-b76b-90bb9905c9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053b27e8-f5ad-46fa-a1c8-2f5df83fe298",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0317a1ea-4a3a-4e52-b50b-f57bc73a8da0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a762ba9e-54f2-4929-8d93-9fe30e0b81b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35e2849-500c-46ad-8087-f6bed4e6549d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d53bd5-0a36-4808-9419-017c455e0288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939b33cb-d92a-475b-aa7b-f415b64cd111",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e72289a-58cc-41aa-8b9b-7be4c74646a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "031171ea-4f4c-4e0c-afac-c69a4d607446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a7d01d-5827-4b40-a4af-7df901310b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eba492a-17b2-4d4b-bc17-4c43cf911bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2beb59c-4ed5-427b-8456-98d2b48763de",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518b7d8e-72b7-464f-b2ed-4e6f7d35a706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12865b6b-d0de-4ffb-a023-bdea43c4f0f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52430191-7c62-4a6d-9b1e-ca67801f3def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df311bd-92e7-4daf-8909-3dc5bf02f1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a842c2c-e3b5-4a9d-8dba-3098f6bccd34",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cc4395-7f74-41d9-ab74-644c12a9b52b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd48d9b-b31d-40fc-9b6f-834c14fe1546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8e01cd-3ce8-42ca-9b6b-39acd4278d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5ee7b7-3a80-48a3-a901-57c0e9d77141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57ea65b-42d0-460c-8543-91e93725397f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd03f9d0-e8f8-4525-bac4-e4fe3f839606",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd5602a0-2982-477f-939d-f52a5ed42e4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a26a2f-685c-470e-b81e-64766b0ceb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7b62eb-cfc8-4368-93ab-5a6c9fbd02d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a62dca5c-0310-4525-88f2-263508ab10e7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4beceee-84ca-44ba-9ae7-3ddee71515b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c7d4ec-b3f4-43c6-809d-66a7126494b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33858e42-b814-4d95-a186-6ff0ac365fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310c4ac1-aebc-47ee-a834-0d4bfc11375b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541ac65a-d7b6-40a2-b133-a9a4017d4535",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e7d80b-4d5f-4561-a05b-110e2e03a273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2078a7c4-2e4a-49e8-8863-78976d46f28c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e2c7ef-654e-4fee-9290-58797636dbdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ccc78d-b73a-4f9f-919e-2a860333db84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c742be-a8ca-4267-9c66-ab8185092520",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa35ece-20a9-4a84-8c1f-7f1b1928d38d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2c0af8b-ab05-462e-8948-703251bd884f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d87e12b-2e59-4e11-bf75-4477ff713c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f75266-d29a-40f5-9e75-29829c5a6a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f343d112-1632-46a3-a9cb-762dcfb9f3fe",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae5c345-b2d4-44e0-b412-96b6a4c8e0e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f948bde9-eb27-4742-bdd4-b723f29a9f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24521fd-7e40-4e9d-856b-afb84bbcff01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd311b93-ded2-41ba-8dff-0b972ed482f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08714b1-ef40-4cdb-8826-1c876d213dfe",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea655d9-f863-4cca-9107-c09d6631eaaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "587bce92-611d-4001-9c91-414e8809922a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84275a59-a34d-4e50-a9b0-4236568ee8c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60782b72-3d5b-426e-8889-837a9667e365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad50b35-5655-415c-aa5d-db52ef0797d1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb2a24d-691c-4167-9145-46ebf65efba5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c5d70c1-2a5d-4ddc-ac2e-087b5d8dfd76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21302b37-d948-4cad-ba30-169acfa65ff7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29d37dc-2fbb-439b-91ad-e3d6a93750d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e9207d-1cdc-4df7-8b79-90e18be2b326",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f72c76-8842-4606-872a-fedcb42a4942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ebd619e-8de0-4f3b-85ab-b11d969f3e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4875e20-e5d2-4ee7-abda-a9f65609da7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e8cdc8-2659-4ca7-89c5-e974d326705c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e177b6-17dc-470b-89f7-f37e27fc99dd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae2beb6-0734-4cd6-953f-7c9ab4f923a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d1459e0-796a-461e-8bb0-4c7d85f01a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3a79e3-6c78-4df3-a8c5-f5258e02ccba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c58dbc-aed1-4e12-b7f1-740012f1757a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaca8db4-7bdc-4658-ac69-b5064dd500ed",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ac522f-76c0-4318-9dcc-3067374bc39a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc476bdc-4225-43e0-b321-66b972462a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7790e0c-acf7-4ab4-87e0-4795066c8def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa1a30c-ae85-4e22-8335-4e99f8929d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09599856-f1f3-4bba-b4bd-92ef552b675c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc11356-9d37-4bbc-8892-2c6c1cc89767",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4462725-d5d3-4cfc-af88-84ac09ded501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af94042f-2b7f-4a2a-87ca-d1f6a7ceb550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de7e65f-1fd8-4440-9057-2c966e6fee5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511674d4-7cbf-4c92-a5ba-ba6089623d50",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f9bb0f-704a-4765-a06e-14afa02080e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "522b171b-f5c3-4050-b572-0d8d13b81971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ca894f-2a63-4191-b338-735377ea5079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7f700d-3cb0-4934-b93e-608a83c6e108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fb577b-51f6-411e-9c01-edd558e9d10f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef493c50-bed5-44a0-8b1e-37735cb1f414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2bd357d-b243-4790-bd82-b1b64279d737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6992c816-5e04-44c0-b2f2-5896600cb46f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecf0b77-e80b-453b-ad2f-7a943ad01115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782b4d8c-ab1b-4805-96d4-53dffcc1b621",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d925b5-16ae-4f9a-af68-bb2327572c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed6b3aef-54b1-4477-8e07-700f1f32745d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf75f7d4-9ed6-4d55-b0c9-002514ddaa7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2c12e3-7638-4d92-aca2-54519e53351d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d16ff2a7-d179-4c78-a2b1-f30cec3dd6e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcb82818-7544-42ff-a02a-9b4b39892945"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7a6e221-9845-48ec-bbb0-28ace5cb7032",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4bd639aa-25da-405a-b588-70c26802cd22"
                    }
                  }
                ]
              },
              {
                "id": "b0f201f8-9be2-475e-81b2-f4fb3dabea8e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8e0edbc-f333-4621-899d-f0505166a126",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ee1580-3ae8-4a74-8cda-760dd9cc07ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "99cae1dc-e36c-430e-bfd3-af18aa6a8743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2775fc79-a88e-4384-bf3d-4e959d37dfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2845934-3079-4353-8298-0ad85a31cc12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12c6483e-dd9d-44d4-a002-8c3a9daa677b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c599303-853c-4eff-b65a-22b3fe19be0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b3b8037-cee7-481c-a898-783cdd4df7ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab91cd8e-bf13-42a6-8ac3-87ceda678aef"
                    }
                  }
                ]
              },
              {
                "id": "2b2cf93b-9039-49c2-a016-3683f24baaea",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a3897601-0d66-4a31-8b68-a94643128a59",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01ff1aa-19fe-4fcf-a1ff-e0cca7b40fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "13492774-85bb-47a4-a620-8e8a97715f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73aa7641-3cd0-40ec-8ae2-94b4e5efb619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b830ce2a-d0d7-4818-ae14-6b11262103a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2d1cd996-dff6-41e7-be81-2131be6e2a67",
            "name": "Positive Testing",
            "item": [
              {
                "id": "358f4312-7bf1-45c8-a7ed-b4124ced8d0c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3db59125-c5d5-4c69-b21a-61b42a098728",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8ccd7cad-3cda-4123-a621-8809c2c9e5db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72d7c93f-f20d-4e47-96b5-24ab913b85f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f54e5de5-5f11-4d7b-88d3-415281679289"
                    }
                  }
                ]
              },
              {
                "id": "4be078a7-da87-438e-aed5-2e94d478394f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21139ed6-f792-41a5-a939-c6e69c3d6a65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a7b25484-d25a-44f7-b9d6-523f19ae0a44"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02afb5ff-d613-474e-8e32-1b41b7d4f624",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67ad2a36-50cf-4d46-8d8b-98c998db4e4e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73269544-0c9e-4bfb-b607-a2543732fffd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3abacf36-0597-4751-9319-e2aad1cd8093"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3745288f-2d09-4ffb-a65a-9e09a6b322cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c8a42e5-eb6f-46ba-acb4-011b70b80bbe"
            }
          }
        ]
      },
      {
        "id": "b3b1d192-199c-4e55-a5bb-e6591dd221e0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "16946915-000d-4c9e-81ed-4be393da0fe9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e871c1a-0686-40b1-8ae9-afa5f2286e26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d04887d0-e7a7-4bcc-86a7-8b95f0d4976c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f09023-abc0-422c-840d-572de0aad45a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "db54feae-3ff6-4b45-8982-2ab64133aaa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb557760-0130-4854-9cbc-f6bdb81eb108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "187ea007-5b81-4904-9c6f-4efc0142cba4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96a67871-027a-493c-b617-e1362741a9f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b807d688-20ba-4be6-b2cf-53b00dab708f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b43eb55-f66e-435f-8d3f-3a2644ff04c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "863a871e-3492-4b5e-b1bc-8f2ee8b61948"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb263453-ad53-4520-be4a-1ba90377d8b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2ad79ad3-d2f5-4e0a-8d27-139c1d96b58a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8b35356-4050-414e-91c0-7028fd09bfec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a23100d-9145-4ec2-ad65-871a778f4a96"
            }
          }
        ]
      },
      {
        "id": "a52860e6-4c8d-4e2a-a530-508f48bb2279",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "21bb185d-d674-4c01-9bfe-58f71ded029b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee6d98b8-f7af-445d-99dc-190d05870afd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f532eb5-1ddd-471c-b3ca-fd4cd7448963",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9f243f-2dfe-44eb-9dcb-608f12d4b701",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6defc35-42cb-4320-a7e4-3e84f66a274c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48969801-af0a-4cfd-9091-0a1f4c181208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d769d44-1ce7-45c4-94d3-489147fba5b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9402f4e2-a5bc-4ccb-9fd5-837827cbfcf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f50b12bc-1651-409e-9c8d-09769cb754cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b0988b4-5711-4358-8f52-270451db1212",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f77006e5-26d9-4425-9491-f54081c7b9a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fae3019-8529-4405-8122-d9a87cb97fb0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f1e99c55-bd03-4d4b-ab54-83fbf1c293dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2aa7ca21-81a1-4ec6-96d9-c8a185c8d5af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d021d386-4233-40c0-8c1e-2a1a55b2038a"
            }
          }
        ]
      },
      {
        "id": "dd0e08ba-dd26-4e47-8071-3d2e34b742fe",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "01be5b02-4289-4c72-af9f-69b5367cd251",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebb83994-66ec-4200-9d44-bb5bafd495da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55ae5d0d-7232-4b56-ab7d-744aa178420c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2810239a-6dde-4fc7-8695-c8abea07c231",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd86db06-0a8a-4cf5-a771-667ce0667eac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d576a71f-2d37-41de-817b-800234b962f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73522a87-285d-4c2a-8682-1118d400acc3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "791266ac-6ea6-4fde-bec0-0eacd3360ac9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf6d6874-ef84-4391-8a5a-1ca6f5e8b7df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac2567fe-843d-4624-a939-52856953de8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a58b35a5-9420-47a9-b340-8f8a885f2523"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c55ebe1e-f4eb-497a-b254-24003b620fc1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "401624cd-b98a-4a7c-99ac-6ebe0ea361b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2ab6a44-d774-4076-9862-1e3491650a26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ef782f7-d2d3-466e-a7d2-e1b0e37ee8a3"
            }
          }
        ]
      },
      {
        "id": "22c29022-61a9-4e4f-a527-07957421e069",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95960e34-67c4-4fd8-85da-2cbae71ab7ce",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6d92d9e-685d-4a41-ab33-b0bca790a63a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "80f4686c-8dca-48a4-a591-9c17ee996b59",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b5202f5f-ba8e-48fb-bfd7-73b602a5ccdc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0575b3c1-7a23-4b01-976b-b625f743a61b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 121.14736842105268,
      "responseMin": 7,
      "responseMax": 3828,
      "responseSd": 327.86564327012763,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701131772190,
      "completed": 1701131816461
    },
    "executions": [
      {
        "id": "6f1f0333-90d4-41ec-ab69-2bf0bdf30dba",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "96fc9f0c-d956-4259-b561-b2e5a45b35b4",
          "httpRequestId": "9a91d00b-def6-4d36-be19-35fea034e0ed"
        },
        "item": {
          "id": "6f1f0333-90d4-41ec-ab69-2bf0bdf30dba",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "94d4b099-cc07-4a5e-8ff9-fe168bc871be",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "72cc170d-993f-43f8-9f82-22f43fae9db2",
        "cursor": {
          "ref": "a7917303-e72e-424c-9e95-5ac3af328696",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "939d7e68-4c51-4907-b27e-b55e63c352bd"
        },
        "item": {
          "id": "72cc170d-993f-43f8-9f82-22f43fae9db2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3f2cfce4-6859-4193-aa2a-268699cc8972",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "46817cd8-064a-4560-b5c4-c00eadb7421e",
        "cursor": {
          "ref": "a9285f47-f781-4fd7-96ee-34595a463ba2",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3384da3a-e35e-470c-bae2-255d4386ccd0"
        },
        "item": {
          "id": "46817cd8-064a-4560-b5c4-c00eadb7421e",
          "name": "did_json"
        },
        "response": {
          "id": "7e76cedd-4e0c-4730-bc12-3d7f694b4510",
          "status": "OK",
          "code": 200,
          "responseTime": 402,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf59a98-4c40-42f3-91f2-74e339242e81",
        "cursor": {
          "ref": "41bb3a51-3e35-407e-a8ee-672807f4b8e2",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "82be800f-4a26-45b0-8ab1-63915e3edd4b"
        },
        "item": {
          "id": "4bf59a98-4c40-42f3-91f2-74e339242e81",
          "name": "did:invalid"
        },
        "response": {
          "id": "43df7c13-f1f4-4a98-ad71-c0e0d7dd0cd3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 931,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf59a98-4c40-42f3-91f2-74e339242e81",
        "cursor": {
          "ref": "41bb3a51-3e35-407e-a8ee-672807f4b8e2",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "82be800f-4a26-45b0-8ab1-63915e3edd4b"
        },
        "item": {
          "id": "4bf59a98-4c40-42f3-91f2-74e339242e81",
          "name": "did:invalid"
        },
        "response": {
          "id": "43df7c13-f1f4-4a98-ad71-c0e0d7dd0cd3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 931,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffd0753-466b-43d9-8baa-8c0607b7f94d",
        "cursor": {
          "ref": "b395b7d0-971c-4807-97e2-458a6ecdc48c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "536deb72-1706-4197-ac18-7399df5f2704"
        },
        "item": {
          "id": "9ffd0753-466b-43d9-8baa-8c0607b7f94d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bcfa4a38-e000-4c29-8e83-edf3c6f43970",
          "status": "Not Found",
          "code": 404,
          "responseTime": 74,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55cbc35-9783-4ca4-9189-eefe6da06dde",
        "cursor": {
          "ref": "9ecc8254-24e6-44c7-83ac-1cbe0d861de5",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "22b26844-71a9-4825-81b7-9fc181ad3c80"
        },
        "item": {
          "id": "b55cbc35-9783-4ca4-9189-eefe6da06dde",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "279d577b-6b0f-46fc-b2a4-ed85a6c2704d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72da9a3-539f-4220-ae35-968bce7ac35c",
        "cursor": {
          "ref": "86b4efef-72d5-437b-9ec4-12c02f516318",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5e03f7a4-bfce-44d4-a9a8-cd262f319ad6"
        },
        "item": {
          "id": "a72da9a3-539f-4220-ae35-968bce7ac35c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3b622cfa-476e-40a8-9c2e-04cf5803d458",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9fcd41-8890-465a-a5b3-ecc25369bb9e",
        "cursor": {
          "ref": "a6161efa-ea39-4206-998b-d8649456c44f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e9479496-33da-41ef-9086-7001cf63e902"
        },
        "item": {
          "id": "fe9fcd41-8890-465a-a5b3-ecc25369bb9e",
          "name": "identifiers"
        },
        "response": {
          "id": "77ded14d-782e-4b66-8fd4-2ab4ddbbc37b",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99e4d18-de58-4439-a9e5-6e95a665a689",
        "cursor": {
          "ref": "1c9299d1-71a7-40a1-b06f-1870c47973a1",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c0f7ed3a-8946-42a7-b823-67ef732b2be3"
        },
        "item": {
          "id": "f99e4d18-de58-4439-a9e5-6e95a665a689",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3572d0d4-e771-4ade-95ed-2928ae65e70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec49c29f-03c4-4648-b0b9-c67321739127",
        "cursor": {
          "ref": "7df7e295-2bf9-496a-94d8-9bf77f9a990a",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "73db962b-a314-425f-b2ad-f43a2d1e3f89"
        },
        "item": {
          "id": "ec49c29f-03c4-4648-b0b9-c67321739127",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c62e5d80-85a4-4e72-a58b-8d566cc96074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcef463-a7ce-428a-9545-e1beb22880c5",
        "cursor": {
          "ref": "a3b26b1b-a734-4b85-988f-1bb35e2683bc",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ab63d92a-fdee-46fd-bc94-a634e4a2fdf4"
        },
        "item": {
          "id": "dbcef463-a7ce-428a-9545-e1beb22880c5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a0cb46f7-6630-4a14-8650-79e11e270a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf81b1c-304b-4fc6-9f59-ea8ec764afc1",
        "cursor": {
          "ref": "033e34fd-bb45-4821-aa3e-3fe23e920597",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9292137b-5a2e-4dd7-9b31-39c659efc434"
        },
        "item": {
          "id": "bdf81b1c-304b-4fc6-9f59-ea8ec764afc1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3d31b88f-2000-46c3-b991-156e53ea4354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b23368-eea3-4e38-abed-f5c437e57a20",
        "cursor": {
          "ref": "ced03793-1a25-451e-9296-995315cf5af6",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "636d5459-4a00-4e7d-b339-78c05907034a"
        },
        "item": {
          "id": "17b23368-eea3-4e38-abed-f5c437e57a20",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c33eef34-259b-4f07-b027-5074f2547d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d376dd-f48b-49f6-914f-cbbdf0281e5d",
        "cursor": {
          "ref": "dab97d02-b131-4147-b17a-cabbaaeabf08",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8958ef8c-5afb-4707-b3d0-07441dd345f5"
        },
        "item": {
          "id": "62d376dd-f48b-49f6-914f-cbbdf0281e5d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ac0ad3e1-eac9-4753-b332-afa7ba427622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42b28e6-a584-4089-89cc-3b7657def378",
        "cursor": {
          "ref": "0f448b0d-3627-4276-95c9-212f976c08f2",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ea7e3594-ecc0-42fa-b2f5-59a78387a318"
        },
        "item": {
          "id": "b42b28e6-a584-4089-89cc-3b7657def378",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "08c8e2ee-76b1-4f57-9d55-4fd67f259eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b292fbd3-9a7f-4fa1-b2ba-6fa7b8d22ac2",
        "cursor": {
          "ref": "b38f99a3-d93a-4309-a254-8501646fcb84",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "15559a42-86c1-4725-b156-eb6793154a10"
        },
        "item": {
          "id": "b292fbd3-9a7f-4fa1-b2ba-6fa7b8d22ac2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "20b130e7-4ec2-48a5-bc1a-b406f76531e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cdffb1-e747-4dfd-ac1f-a592e7bcabc6",
        "cursor": {
          "ref": "a2f3b7f0-2830-486b-a35f-f5d6285782b1",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "051e92bf-5535-453f-8c18-89a396492291"
        },
        "item": {
          "id": "c0cdffb1-e747-4dfd-ac1f-a592e7bcabc6",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "007fd983-0558-47c8-993f-707b647dfadb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9367e3d-384c-4490-82c5-be748ab8f916",
        "cursor": {
          "ref": "60f26339-2ac4-4e87-bb9b-e3203c55bc81",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "08b97ed3-8811-47b0-904a-7bdf795af674"
        },
        "item": {
          "id": "f9367e3d-384c-4490-82c5-be748ab8f916",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7fe971a8-1b9b-4822-b905-b0cfb1206ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0681bda0-6700-4344-866e-af94cb2a6d1b",
        "cursor": {
          "ref": "3ccafc02-5b5f-4b67-9034-f5d4832b5d26",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "14585784-c5b5-4b24-81bf-9b6c8a08c53b"
        },
        "item": {
          "id": "0681bda0-6700-4344-866e-af94cb2a6d1b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "17ef0211-2e3e-4982-a6e2-61b127071072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f26efea-5f3c-401b-a88f-cd31f0cc14e5",
        "cursor": {
          "ref": "efadde41-94a4-4c2a-be3f-518df2333459",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d4da5645-e5bf-4f3c-b562-0e9ab7fd3a62"
        },
        "item": {
          "id": "2f26efea-5f3c-401b-a88f-cd31f0cc14e5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "aa7bbd34-b718-4c29-87e7-7654c0b1a0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d1bd2d-66d6-46c3-b6fb-56c88c477cfe",
        "cursor": {
          "ref": "033c6263-bafe-4054-bb7f-da3823fb2a70",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e5dc5fa2-3195-4923-a6e5-b9aff2bdb001"
        },
        "item": {
          "id": "74d1bd2d-66d6-46c3-b6fb-56c88c477cfe",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4ce1d26a-8528-4ada-bbd2-f070fff3c2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed2ed6c-1548-46b5-93d5-96c4c075865a",
        "cursor": {
          "ref": "34a9e563-8d23-481d-998a-bb1b7110dede",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "da21f4e6-2bed-4717-a5a8-b57c64ca3216"
        },
        "item": {
          "id": "0ed2ed6c-1548-46b5-93d5-96c4c075865a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c61c703e-a174-4d1f-8221-e8f59d06e1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179bc620-945a-494e-913c-fb06e666299c",
        "cursor": {
          "ref": "1a34bc39-884a-4272-a7d0-e1a9316c1b77",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "56d34b81-b57a-445e-8840-9cce795a1a1d"
        },
        "item": {
          "id": "179bc620-945a-494e-913c-fb06e666299c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "103faba8-9d89-459b-b98d-a64303add733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0682729-fc85-4408-a217-1f83e055d4ca",
        "cursor": {
          "ref": "6ebade8a-129d-4bd9-bcbc-3528daab5533",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3e45f155-b365-4a51-b297-c16233edf8e8"
        },
        "item": {
          "id": "c0682729-fc85-4408-a217-1f83e055d4ca",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7d2621c2-a59a-49ec-8898-a5b58d85b7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7410d83-6d3e-40fb-b97d-f410fc9909e3",
        "cursor": {
          "ref": "5aa1d6e5-9e55-42e4-a1db-abf2bc59c3ba",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "40079efa-fbff-49e1-b5f2-b9611c1a0c1c"
        },
        "item": {
          "id": "a7410d83-6d3e-40fb-b97d-f410fc9909e3",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a2ab8d37-a4d9-4ba6-b6dc-d0aa74d5dd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dc579e-2a65-4984-aea8-60651a14e1b6",
        "cursor": {
          "ref": "84fe461a-b4d7-465e-9635-a81ac181ae26",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "da7af577-717f-4a88-95f3-dc51bc7458bb"
        },
        "item": {
          "id": "43dc579e-2a65-4984-aea8-60651a14e1b6",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "681a66a0-3997-4206-8d83-42999925c5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f93cabe-f710-46f9-a9c1-4a8519f27f28",
        "cursor": {
          "ref": "4e7ed31e-fff0-4ee6-ab8a-3f5df5129d68",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "45d8002a-3181-4306-8d5d-aacd1a2ecbb6"
        },
        "item": {
          "id": "7f93cabe-f710-46f9-a9c1-4a8519f27f28",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "48f780a5-c23b-4b40-82b2-dc1188a26857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0ba5dc-4bf5-4169-9c2b-b15033795fb6",
        "cursor": {
          "ref": "60a8faf7-09d2-4051-8c94-d12efb5363e2",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "831dbeae-e929-494a-8868-444ac9fb3a12"
        },
        "item": {
          "id": "4e0ba5dc-4bf5-4169-9c2b-b15033795fb6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6570d7ea-82fb-41f1-b3f1-949b91e436e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5d0b2b-61fd-476c-84f7-fd0ddb0fc24a",
        "cursor": {
          "ref": "850d6ef3-816c-4703-9c79-92e633e629bd",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "63783054-921e-4a32-975c-cfc92ea60396"
        },
        "item": {
          "id": "7c5d0b2b-61fd-476c-84f7-fd0ddb0fc24a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2d0b7cbf-0ea0-4dd8-88e0-d3235f67a63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff838841-7762-4d6e-834e-268c50ef3f20",
        "cursor": {
          "ref": "ceb40835-2adb-495a-bb46-db52be692c91",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6a481d67-e92b-4d41-b94a-a7991f70a7a7"
        },
        "item": {
          "id": "ff838841-7762-4d6e-834e-268c50ef3f20",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a58da7cb-cf7e-41b9-9b86-675af5ec0039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31dd06a-b4ca-40e7-ba87-79bedc923366",
        "cursor": {
          "ref": "b7622b8f-ba33-4ea1-a375-4fb041544aba",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5fe405e2-09b8-48f0-90ab-fc6557608a6a"
        },
        "item": {
          "id": "c31dd06a-b4ca-40e7-ba87-79bedc923366",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1ab2cb72-829f-4c3c-837b-b7b4ccff3748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6cc8ae4-7c6c-4d55-ac71-a11052bfc7b9",
        "cursor": {
          "ref": "59f08813-e08e-46a5-a860-b2824c92a693",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "75323815-6aba-492c-94ec-5b470baa4be5"
        },
        "item": {
          "id": "b6cc8ae4-7c6c-4d55-ac71-a11052bfc7b9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8cf12b30-fe95-48ec-b4f5-60adc2517137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c496299-50af-4dba-bc4f-3731c3af0c46",
        "cursor": {
          "ref": "362584d9-334a-4327-8be7-961e2eb19dbd",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b632a2d1-58cb-4293-a966-ab24f2799b86"
        },
        "item": {
          "id": "8c496299-50af-4dba-bc4f-3731c3af0c46",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d894f16a-dbec-455c-b63b-d712a4c0ca8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 940,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9332b1d3-ff9f-4040-9d75-7441f99b807d",
        "cursor": {
          "ref": "5edd950c-80f1-4c5a-8f7e-bbcc28eaa398",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "36473026-28e2-4627-8523-1f1b5082bbee"
        },
        "item": {
          "id": "9332b1d3-ff9f-4040-9d75-7441f99b807d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4fe44d6f-727c-40c0-a016-568d1ea8b109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763dd14b-57bd-4745-808a-13622e0d4517",
        "cursor": {
          "ref": "33e7adaa-cf8a-46a3-82de-84e7dc8872ff",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a25076f3-8dfb-4aa7-92d5-7d1088416e2b"
        },
        "item": {
          "id": "763dd14b-57bd-4745-808a-13622e0d4517",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1f4088be-8a3c-4a0c-a22b-9863aaee315c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3545335-9b8d-4246-a234-f21dfb9a0376",
        "cursor": {
          "ref": "4f901e9f-dfd6-4f58-9905-a5a670997cc2",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cfd1fc83-ba4f-470c-b342-c2bb4092306d"
        },
        "item": {
          "id": "c3545335-9b8d-4246-a234-f21dfb9a0376",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "048cea5e-f57e-4db8-9c66-9370e174c055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76b6d13-eb64-4cc3-9e85-83690bf0812e",
        "cursor": {
          "ref": "b130f3d3-867e-4f9b-bbd8-bff22372d0f4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f7458a49-d19e-4ead-bab1-9570d5cb7dcc"
        },
        "item": {
          "id": "c76b6d13-eb64-4cc3-9e85-83690bf0812e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e9bc7b05-e467-4890-924e-5d750344d333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e244a6-4346-447e-9048-0c45853fde8f",
        "cursor": {
          "ref": "380fc81a-658c-44a6-b5d4-f319a82f8a6a",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "06a3c1e7-5224-4165-8999-bb6da098e6e5"
        },
        "item": {
          "id": "62e244a6-4346-447e-9048-0c45853fde8f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5c9eea51-b871-4ab9-8f28-08dcc521f4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43aa9ee-07ff-4fcf-806c-49ac538c8f51",
        "cursor": {
          "ref": "f47a4bc2-d881-4b93-a732-8b942e9c72bb",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f393f7ac-bf17-4fff-94dc-c49ab95b8d05"
        },
        "item": {
          "id": "c43aa9ee-07ff-4fcf-806c-49ac538c8f51",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "34582741-c0d1-4e7c-b0b5-24306bf5ab6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d3a2e0-7ec9-4548-99c0-1f4fb02195fd",
        "cursor": {
          "ref": "974f3c3f-bdd8-40da-abe0-6a68a4b5942e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "92903c03-91aa-40c1-ac56-4ef6d447bf4a"
        },
        "item": {
          "id": "81d3a2e0-7ec9-4548-99c0-1f4fb02195fd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "951dd849-9e24-405d-a9e0-38bd5f740284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdffda0-c983-4eb2-8075-06c1d6919897",
        "cursor": {
          "ref": "cb14c4a7-3cd1-4cea-9887-115b524c3ed9",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f7f7a281-3ad5-4d61-b7a7-e283fa2d8ca1"
        },
        "item": {
          "id": "5bdffda0-c983-4eb2-8075-06c1d6919897",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "84bcc423-8d7c-42ab-9fae-b0a0ac031255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c87a179-45de-449b-a46d-82a9df4104e5",
        "cursor": {
          "ref": "540c956c-3f0d-4c4d-a77c-2aa617a2b9de",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8710c605-91d7-4ebb-b5a3-8aead4ee3bb4"
        },
        "item": {
          "id": "2c87a179-45de-449b-a46d-82a9df4104e5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8c74c10b-9546-4744-9974-6c8672b949cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3943e019-5952-49d2-b91d-49fa9aba9aab",
        "cursor": {
          "ref": "bdd36904-ad25-4cfc-97df-24720eb4420b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e4afb18a-a7ae-4ae8-bf40-e8b8df14ccc0"
        },
        "item": {
          "id": "3943e019-5952-49d2-b91d-49fa9aba9aab",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f8e5a18b-253f-4489-b367-5477f6302017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54e5c13-3daf-4418-bb4d-d06683e70a4e",
        "cursor": {
          "ref": "fdd3cad9-786f-4b5f-a163-f22858007f3a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a2b6eae5-4e5e-42f8-9eb1-bccac3ead603"
        },
        "item": {
          "id": "c54e5c13-3daf-4418-bb4d-d06683e70a4e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9425f37e-b0c6-4aca-b171-7f54fb28059e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dca0975-56c4-4255-a0a8-62c6562f2883",
        "cursor": {
          "ref": "fc4cc7f3-d733-422a-8382-47715bc0a595",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e11d2276-35c4-4273-8e1d-f600b066c5af"
        },
        "item": {
          "id": "6dca0975-56c4-4255-a0a8-62c6562f2883",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bd3c94e6-33d4-4b3b-8540-872b1cf2b418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b73bc7a-d4da-4185-9a45-d9bb232c15cf",
        "cursor": {
          "ref": "9ea428af-1401-4de0-8321-f622f336c7a4",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "399c1ec0-978a-426d-918d-f85ed5214c35"
        },
        "item": {
          "id": "8b73bc7a-d4da-4185-9a45-d9bb232c15cf",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0dd39daa-2287-411e-92d8-68c49201b6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1021dd4f-d187-4d3a-8e6b-148fac63c1ad",
        "cursor": {
          "ref": "9a8a2a46-9c22-484d-a18f-346b4c185345",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c1c91d40-e348-4f67-8f5e-82130ae2ac96"
        },
        "item": {
          "id": "1021dd4f-d187-4d3a-8e6b-148fac63c1ad",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "aabf9ad5-6a9f-4015-acd4-83f4decd9566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ef9043-4c21-4657-81a2-aa3d9c09b973",
        "cursor": {
          "ref": "9f017f59-0643-4482-a893-99ea4c5dcaef",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "18f76a48-76ca-46c9-979f-2bf01dbae6c1"
        },
        "item": {
          "id": "77ef9043-4c21-4657-81a2-aa3d9c09b973",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1e2e7635-a76b-4a73-9daf-ee2165f69e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad59903-33ca-418e-b65d-dd995f555ab8",
        "cursor": {
          "ref": "8c20fc1e-d88d-4119-a11b-831a467a6d12",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "773a654a-5e0a-48a6-928f-b26a3f3d45b5"
        },
        "item": {
          "id": "5ad59903-33ca-418e-b65d-dd995f555ab8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c37436f2-4094-478f-af84-c0da25894d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79c5b99-983a-4b38-8923-8710687cd829",
        "cursor": {
          "ref": "b2daf02a-f28c-4274-8b51-8abd9a347499",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "321e273a-c0ca-426d-a5af-56bf295b4463"
        },
        "item": {
          "id": "f79c5b99-983a-4b38-8923-8710687cd829",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b98cc2c2-66b0-4763-b4b6-5ad2fb4c14fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf93bab-89ab-4f68-9da4-9fe8895721b4",
        "cursor": {
          "ref": "b06fdb67-83de-41d2-9fb0-e6c279aa09d3",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a21486ed-005a-4622-afa3-e670f1bb4ffe"
        },
        "item": {
          "id": "caf93bab-89ab-4f68-9da4-9fe8895721b4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e5dc6be3-f0e3-4452-a248-960f73e3badb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0017297f-2601-4cec-ab45-82112727c6c6",
        "cursor": {
          "ref": "74c05b66-b1cd-439c-b681-2387ec0d69d6",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "50f42a13-bc25-404a-b356-1143ac25e813"
        },
        "item": {
          "id": "0017297f-2601-4cec-ab45-82112727c6c6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b089662b-7c99-4584-8057-7c3429275ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccdd917-6dcf-419f-aab3-a9fc2246d4b1",
        "cursor": {
          "ref": "8064e241-1bc7-4ad3-b9dd-7a37dd262ceb",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1c568d7c-2b08-4614-960b-bf81614d6280"
        },
        "item": {
          "id": "dccdd917-6dcf-419f-aab3-a9fc2246d4b1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9d82b37c-5c2f-48d8-96de-6a50a7f7741b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673eb06c-a0ff-42b1-a85f-be20fa4c228e",
        "cursor": {
          "ref": "beb4d5d7-61c2-4847-a1ac-41b098576485",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c876beab-2eb2-4414-9d3b-fe194b4e8a5b"
        },
        "item": {
          "id": "673eb06c-a0ff-42b1-a85f-be20fa4c228e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "11db9709-bbbd-4548-8a63-d3fe0b3054c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49a3968-6703-4ed8-af28-73b0f0b4828e",
        "cursor": {
          "ref": "a3b8ad2e-31ba-4f55-a9c9-85461940134e",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1a44186c-a6e1-4c67-bbb1-7c9caf930065"
        },
        "item": {
          "id": "d49a3968-6703-4ed8-af28-73b0f0b4828e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "15fd371a-123a-492e-aaa4-80b09103c206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d7d3a4-0762-4965-a3a0-c9134dcd68a8",
        "cursor": {
          "ref": "c7061fc0-a8d1-4f3a-8a64-830d6dcfdda9",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f6b9ed40-bf3d-484c-ba03-f7ab2ce0fa92"
        },
        "item": {
          "id": "39d7d3a4-0762-4965-a3a0-c9134dcd68a8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3560747e-8c9d-46b6-8f8c-2e5b869150ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf226c62-f209-4639-a8d5-834918ac2d00",
        "cursor": {
          "ref": "efdd4689-8048-409b-bcf4-a69e7059d7ba",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7ffce69f-4b07-4f31-85e1-75358e4c1ff7"
        },
        "item": {
          "id": "cf226c62-f209-4639-a8d5-834918ac2d00",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6f6f3f26-c457-4b3e-9e8c-71a11f702cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3937331-052d-4e52-93a3-e9063576b206",
        "cursor": {
          "ref": "cdbf1e39-a21c-4eb8-acae-d360720d793a",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6a76d6c9-99b9-4fce-8597-29b56cef2ffe"
        },
        "item": {
          "id": "f3937331-052d-4e52-93a3-e9063576b206",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "34f96866-fc34-414e-a4ce-00f9a096b690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b96fa9-2d83-4377-a94a-8ac8ee497127",
        "cursor": {
          "ref": "7335a6ed-4b6f-4220-9cce-d0ab2852d618",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8174a612-3c4a-44af-8a0b-34fb80bb27a2"
        },
        "item": {
          "id": "b4b96fa9-2d83-4377-a94a-8ac8ee497127",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c181af02-4ffa-40b5-9902-9163fff18b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2399b1-16b8-4d38-a23b-e1c5e362f12a",
        "cursor": {
          "ref": "1d76e1be-2683-4599-9a7f-fef889d28305",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bc407e43-1b6c-43df-a9f4-01be3dc2a351"
        },
        "item": {
          "id": "7e2399b1-16b8-4d38-a23b-e1c5e362f12a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "558e4655-2b45-437b-bfc2-bd7c203126d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a9c88e-13f6-4039-bf60-79265c13d610",
        "cursor": {
          "ref": "74355c82-3d3a-4394-94e2-40343038e601",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8d0fd701-2f8c-4676-bdcb-c8b9082ac20e"
        },
        "item": {
          "id": "c3a9c88e-13f6-4039-bf60-79265c13d610",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0d7e1681-ea9e-419c-bf98-f3b2136b0015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d750ae3e-001f-4160-87a7-69f46686e343",
        "cursor": {
          "ref": "00ab4cd6-cff0-4d74-abe8-323358d44b03",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8b6e9b9e-8308-4f8a-9431-bad93d05c21f"
        },
        "item": {
          "id": "d750ae3e-001f-4160-87a7-69f46686e343",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bc91cf04-4c5e-4719-90bd-e7b4832c8f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ba7619-b1b5-4b91-9a2f-42c6df8d11ed",
        "cursor": {
          "ref": "7e66cfbf-3244-4380-a55f-ddcfab3139b5",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "405e305c-81c0-4f50-a27f-c1ec59ab1fd8"
        },
        "item": {
          "id": "a9ba7619-b1b5-4b91-9a2f-42c6df8d11ed",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bf5daeb2-1a14-4806-9823-145ac62c325c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b664f8be-8cdb-4edf-8a5e-ef7c68dfd6d7",
        "cursor": {
          "ref": "b95d0f50-0fe0-4469-9bb3-b817124f58f8",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "82ee182f-61e6-4fa0-aa5f-6d352aad0096"
        },
        "item": {
          "id": "b664f8be-8cdb-4edf-8a5e-ef7c68dfd6d7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "3e015748-b90e-4e90-b730-1b1d48385491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55b3038-e930-4334-87b3-55eb3d7e6914",
        "cursor": {
          "ref": "50f13ccd-92cc-4f39-b811-e3a8b591b804",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f6729fae-84d1-44e0-9abe-5f45410843bf"
        },
        "item": {
          "id": "b55b3038-e930-4334-87b3-55eb3d7e6914",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ad528c2d-52ab-4acb-8c23-3a57981afaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef37f4c7-59de-4116-bb96-f0538bdaf496",
        "cursor": {
          "ref": "c216ea3b-4425-49c3-a8dc-30eae29330e3",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c1e71475-7386-4833-8153-c3190ab4f9e3"
        },
        "item": {
          "id": "ef37f4c7-59de-4116-bb96-f0538bdaf496",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9389c18d-71d4-452d-98d4-f5ec82feaf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4633e1-aaae-4783-a957-c12440996d5d",
        "cursor": {
          "ref": "fd3531a5-4e4b-4452-80d1-489884aeffa5",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "098ddb1c-b8d5-4183-9fed-3fe85eba2385"
        },
        "item": {
          "id": "3a4633e1-aaae-4783-a957-c12440996d5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "28f7f227-38f5-4fc7-83cd-f8208b337f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd103882-3cda-4d08-8a5c-9af68d89b8de",
        "cursor": {
          "ref": "d9d9479d-9998-4a98-a296-cab019c3bdfb",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "11df7d54-8d50-47dc-a8ac-18d2b9a98a86"
        },
        "item": {
          "id": "cd103882-3cda-4d08-8a5c-9af68d89b8de",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "37b7074f-1d7c-4809-b542-14a737491c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98096ed5-ccf1-48bf-b7ba-99aabf3168ed",
        "cursor": {
          "ref": "adf848fa-6dfa-4dc9-92ad-9779a73a9879",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b061c6dc-5ea1-4d3f-8132-2e33bd064192"
        },
        "item": {
          "id": "98096ed5-ccf1-48bf-b7ba-99aabf3168ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "251f73b6-898e-4670-b7a2-5ab9949432eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2dc1bad-a428-4372-92e9-d7c11dc5e2ad",
        "cursor": {
          "ref": "a964c7a7-252d-4326-a2e8-6fb28522ddd4",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "11f9675f-78ed-4e77-ad7d-deacdb500a98"
        },
        "item": {
          "id": "c2dc1bad-a428-4372-92e9-d7c11dc5e2ad",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cbbb9594-2895-402c-9d68-639cf5b17cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 190,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8063e3-88f6-4354-b5b8-5c3d9a5f2000",
        "cursor": {
          "ref": "08f26a58-1572-4bc4-9fc2-6e9b658f976b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7a899fd5-932d-421c-a2fc-fa38998b3760"
        },
        "item": {
          "id": "bf8063e3-88f6-4354-b5b8-5c3d9a5f2000",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2d4c18db-3082-41aa-a1f1-26135fae06e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a002994d-7fce-4871-8ebd-7e0b815cfb34",
        "cursor": {
          "ref": "6a0cbefe-f21e-4a42-bca6-ad790b31e686",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "558ad8af-8ae9-409a-8b74-5015433ad5bd"
        },
        "item": {
          "id": "a002994d-7fce-4871-8ebd-7e0b815cfb34",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5d351ab9-b1a4-441d-bef5-438f1ab3b095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2a7a63-e00a-4976-8a0e-6ae3e4e462dc",
        "cursor": {
          "ref": "55f16fbc-a304-47fa-8251-f91f5c4616c1",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a7c2d53b-6b88-479f-96d0-8a4eccb8c3d4"
        },
        "item": {
          "id": "5d2a7a63-e00a-4976-8a0e-6ae3e4e462dc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "08cddec6-ece8-4f51-a1b2-21a64ee7b1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7e42d2-91f9-426b-a1ad-d42431bb0a89",
        "cursor": {
          "ref": "942c10df-2991-4991-93d0-d750ee3dfb6f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ab9805ce-b5b0-492a-a2ab-ed0cb031b7e0"
        },
        "item": {
          "id": "2e7e42d2-91f9-426b-a1ad-d42431bb0a89",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ff75ffd2-5b93-409e-b4a2-0c33225bf236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d4c8ca-f470-46b9-84b1-49f73230f8da",
        "cursor": {
          "ref": "3c6be9e8-f7ca-4370-a980-3735857ddb7e",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2f2c936f-5fa2-4c13-aa29-49e692720364"
        },
        "item": {
          "id": "38d4c8ca-f470-46b9-84b1-49f73230f8da",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cdd85539-73ac-4b51-acf3-dccefc91e307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddeef707-19ab-48e2-99b0-efd0284564b4",
        "cursor": {
          "ref": "ace6a075-fd70-46b9-8614-27ef78f150c4",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2d151a03-3b1a-40b4-a14e-9450dcb6c87b"
        },
        "item": {
          "id": "ddeef707-19ab-48e2-99b0-efd0284564b4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "be4c1e00-56f8-4aba-bc6b-7d410e83728a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00da2720-962f-4e83-bea0-0efbcf1fc04b",
        "cursor": {
          "ref": "acad0ea9-3e19-4c1d-b514-06ddef1434d0",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "706f8306-7d80-4da6-9256-d8444590e790"
        },
        "item": {
          "id": "00da2720-962f-4e83-bea0-0efbcf1fc04b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f44233f9-3df0-43eb-8166-65b4820e0cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e28d457-210d-4abe-80d3-2996e24ef5ed",
        "cursor": {
          "ref": "91893a59-6fea-4acd-9464-705623ca3f3d",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bf3dfa74-6788-446b-8cb9-068598a53f2c"
        },
        "item": {
          "id": "7e28d457-210d-4abe-80d3-2996e24ef5ed",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "752a5140-fbf5-4707-9d83-c157c20805de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae7b8f8-a9fe-4f49-9c13-be0c573f21c8",
        "cursor": {
          "ref": "957d8fcf-3f02-450a-8e79-46a9df778858",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "430472e2-e524-41b5-9b94-a5f37aa1df2d"
        },
        "item": {
          "id": "9ae7b8f8-a9fe-4f49-9c13-be0c573f21c8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bca7e71d-c8c0-455f-aa87-eff3712e8617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eea94e4-f3ec-4808-8af6-b23fc1cd6ee4",
        "cursor": {
          "ref": "879ae4d0-7107-4226-a7f6-7502da6831aa",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "535aedef-dbd0-45ca-9463-19c975915b4f"
        },
        "item": {
          "id": "8eea94e4-f3ec-4808-8af6-b23fc1cd6ee4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f173a533-2075-411c-a452-6fb8205d1b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2119245e-824b-44ec-ae95-ee56bdcc507b",
        "cursor": {
          "ref": "e8784b51-12d3-40f9-b81e-f0898b4d08d5",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fb6ca316-851a-4a75-9398-f363150d8569"
        },
        "item": {
          "id": "2119245e-824b-44ec-ae95-ee56bdcc507b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6de2be4a-79e5-4088-b386-9cce92c50824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceea1972-469b-451a-90d1-a5fea3ca6438",
        "cursor": {
          "ref": "f8040ad5-a534-4bea-ac3f-8408e476914a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f425ef9e-4b8e-470e-bbf7-8bcfd192d2fe"
        },
        "item": {
          "id": "ceea1972-469b-451a-90d1-a5fea3ca6438",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "34ada3c3-58f6-4d44-85d9-19a943a7b5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 192,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2dac28-189c-4c93-8013-a48e9ab4c47a",
        "cursor": {
          "ref": "4dd9c558-beeb-4946-a3df-6a3259330ebf",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a119f056-2fe4-4d98-b491-51de9eee8fda"
        },
        "item": {
          "id": "5d2dac28-189c-4c93-8013-a48e9ab4c47a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "70ee7fa3-77cc-4e5f-b7a0-d5d03dc7f9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e35250-43df-4ee5-9512-9da5c740e7c5",
        "cursor": {
          "ref": "49ed2b16-b769-4cdc-bf37-f570c9ee172b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "49e723f7-7f15-41d9-ab28-800a40cd7a08"
        },
        "item": {
          "id": "f1e35250-43df-4ee5-9512-9da5c740e7c5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0802df6b-28b8-49fd-aef6-5bb7bf18e745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9d29ba-72a9-4db2-80a4-ba9693aaf806",
        "cursor": {
          "ref": "a7c6e0f7-b3f0-4806-87b4-c33d0342f69d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "139d57b6-102c-4cc1-ae7f-5e4b493b16de"
        },
        "item": {
          "id": "1e9d29ba-72a9-4db2-80a4-ba9693aaf806",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c6d23c0e-a7b1-460b-9387-2d9e4c795eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a731fc62-7265-43ff-8a41-7992fdc02854",
        "cursor": {
          "ref": "a7f7d31f-a3e9-4b59-b2f5-783a08dccd74",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b923a820-a806-4148-bb81-89d4bd597d33"
        },
        "item": {
          "id": "a731fc62-7265-43ff-8a41-7992fdc02854",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fe50553d-edb6-4a93-8bc8-d1b18bf47db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ee4c29-d160-46f0-8e5b-607dfaa6addc",
        "cursor": {
          "ref": "6057f96a-a657-4542-8a05-49d7580077fc",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6cb0933c-96f0-4f9d-963c-2cfb8c5a7a8d"
        },
        "item": {
          "id": "69ee4c29-d160-46f0-8e5b-607dfaa6addc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d0a58ad7-c323-41ca-a836-a23e92e234d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a967049a-3b2f-4dfc-96cd-66cc6ea26c29",
        "cursor": {
          "ref": "6deaf738-e4ba-4a6b-9962-67329fcb0508",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "02c7fc28-71c4-41aa-bc18-a925e3da6f03"
        },
        "item": {
          "id": "a967049a-3b2f-4dfc-96cd-66cc6ea26c29",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "85fb7258-a4a3-454a-b8e3-f7ac0bf55d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b6fac8-debb-4603-96f5-0c20413dc8a1",
        "cursor": {
          "ref": "31c37a08-3136-4e2c-9d30-e064fc379558",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6dcf7258-b36c-4a5a-9cf9-a953dab0fec9"
        },
        "item": {
          "id": "97b6fac8-debb-4603-96f5-0c20413dc8a1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "02219b74-2173-4246-981f-da0c8acd77e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a7c8fe-17d6-4908-951a-35760875be31",
        "cursor": {
          "ref": "5c482ade-db1a-4da3-826e-6bcf885cc0ce",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "77a47438-6bb1-4f04-957e-941eed199187"
        },
        "item": {
          "id": "84a7c8fe-17d6-4908-951a-35760875be31",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6e8efa59-f93a-4f3c-a5c9-2c0a99fa12ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d88723d-677e-46d2-a2c3-891ec86f0606",
        "cursor": {
          "ref": "41022c6d-b0e7-499d-8329-1aa5cd5aa209",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "21525bed-f1b1-43d1-90c8-673c739a5ea3"
        },
        "item": {
          "id": "7d88723d-677e-46d2-a2c3-891ec86f0606",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "62d4c9a3-7655-49cc-bab3-cd42cc02c75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c801e9c-aee4-4388-94b4-1677eaf4272c",
        "cursor": {
          "ref": "efa41253-ac8b-4369-b232-bbceba504f8a",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a09fe2bb-d32d-4034-9b36-901452f1a605"
        },
        "item": {
          "id": "1c801e9c-aee4-4388-94b4-1677eaf4272c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "554ccc32-908f-4e8f-b5b6-c7782164fa33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e224ac18-b5bc-43b2-8393-426d6ed5d5cc",
        "cursor": {
          "ref": "9ec8434b-12b9-4d0a-95de-6e423556357a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c2453bc7-e5f6-4b3a-b8fc-bea7d9001a18"
        },
        "item": {
          "id": "e224ac18-b5bc-43b2-8393-426d6ed5d5cc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3578aa5e-9992-4695-80b9-291f46f72a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46ef4d1-b347-45dc-b4fe-16a8663b0453",
        "cursor": {
          "ref": "2891b7eb-e46a-48ef-ba72-f01d79e3168d",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e17362d7-0f31-466a-8259-b368425e6d2c"
        },
        "item": {
          "id": "d46ef4d1-b347-45dc-b4fe-16a8663b0453",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c51063a0-5bef-47d3-b4b3-deeec6813759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14dce41-a628-46dd-a7f1-dd72d9aa4fe0",
        "cursor": {
          "ref": "31e9cf84-d041-4d43-b803-769976d8a401",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "00204fb8-c579-4645-a7de-6fb08f790ac4"
        },
        "item": {
          "id": "d14dce41-a628-46dd-a7f1-dd72d9aa4fe0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7c3bfc6f-296c-4d15-bd21-c08a0f67fe0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d30dd37-3da2-4b5b-a829-2f902d11b195",
        "cursor": {
          "ref": "c74acb4d-2c50-4fb8-b961-1f9b370348f3",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "11636280-4258-4437-9244-9782e6fea7bb"
        },
        "item": {
          "id": "6d30dd37-3da2-4b5b-a829-2f902d11b195",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "19f71f82-2756-420c-b8f8-3042c6292b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f5189d-537f-4cd3-a44c-9a51679a671b",
        "cursor": {
          "ref": "823fad16-c4da-4962-94d9-9ca94b3cf52f",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8f5ed4ae-4317-4d92-9df7-304f1b880d54"
        },
        "item": {
          "id": "c1f5189d-537f-4cd3-a44c-9a51679a671b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bedb6b21-b75a-468c-91e0-807c8ffd505b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ffcfd4-d495-468d-ab99-a4d0c532c6b9",
        "cursor": {
          "ref": "6da6e5d1-cf26-47be-830b-b43f585713d8",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "db522fa5-df42-4791-bd9d-3481b2324546"
        },
        "item": {
          "id": "62ffcfd4-d495-468d-ab99-a4d0c532c6b9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c30d8346-1526-4ec8-a940-6581ef0c7489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee60257-1c65-4266-8e25-d7236a4f8655",
        "cursor": {
          "ref": "6c891827-5dae-4f7b-a403-fed572b83494",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "53975a96-286a-4999-90da-a29bac9c5298"
        },
        "item": {
          "id": "0ee60257-1c65-4266-8e25-d7236a4f8655",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "abeab86e-9587-4006-903a-210c41ea7f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d830c99a-4505-49f9-86de-3cf29ef66ef6",
        "cursor": {
          "ref": "a2d2a5a9-fdf4-420c-9d14-9d616f778673",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "123032e9-e9ee-4df6-8ef5-d675f5dac406"
        },
        "item": {
          "id": "d830c99a-4505-49f9-86de-3cf29ef66ef6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "476c715a-b20e-4265-a8a7-c497c199f98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96601b94-dc9e-40bf-89ca-95ce3ab97868",
        "cursor": {
          "ref": "26b3a06c-33f5-4654-91ea-56dbaeada9f6",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ad8721da-618c-49d3-9699-1f9859cf6fa5"
        },
        "item": {
          "id": "96601b94-dc9e-40bf-89ca-95ce3ab97868",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7a1c90af-088f-46f9-a601-d0de4be5eb83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc5a331-b0fb-4010-80ff-997b40a9ba39",
        "cursor": {
          "ref": "df598c59-0e2e-4a4a-a54a-9ae9ce25fc25",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "40f99ea7-91c6-42e4-91c7-348af4b3767c"
        },
        "item": {
          "id": "4bc5a331-b0fb-4010-80ff-997b40a9ba39",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e656a116-215f-4b32-a187-997bf805810a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a0a3b55f-148a-4a56-9a7a-69653a297013",
        "cursor": {
          "ref": "2ddb6e7a-0aa2-4db5-9bc2-733f95669582",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "eeece0b7-88e3-4065-85d1-e3a2a37761ef"
        },
        "item": {
          "id": "a0a3b55f-148a-4a56-9a7a-69653a297013",
          "name": "credentials_issue"
        },
        "response": {
          "id": "466f433b-8629-4c59-b607-66f1d061f83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "f1bbcd3b-b546-4fe7-b26a-d49fb98676bc",
        "cursor": {
          "ref": "e0d498c5-31d9-44b3-b44a-aee87ff8b722",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b014e277-0671-414e-b42b-71c4048111bf"
        },
        "item": {
          "id": "f1bbcd3b-b546-4fe7-b26a-d49fb98676bc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9097fbfe-e9f7-4c5f-8322-be02fee4bc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "82f16f04-74a5-485d-b58c-7d4d0c76288e",
        "cursor": {
          "ref": "4dcf589a-2b35-470c-b9a0-ce7645585b3c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "343e3a55-7bf5-41cb-beb4-ede292459f6d"
        },
        "item": {
          "id": "82f16f04-74a5-485d-b58c-7d4d0c76288e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "861fc65a-a73b-4e50-b7d1-6c854cdecc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "65e77937-30bc-4c60-8bc2-d024f37060b1",
        "cursor": {
          "ref": "5eaff42e-40a0-43c2-9e4e-87884d59a869",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f5a5b4b0-e228-46ca-9be2-48662b41bb43"
        },
        "item": {
          "id": "65e77937-30bc-4c60-8bc2-d024f37060b1",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9eece168-c721-496e-9629-4ec6b574bfe8",
          "status": "Created",
          "code": 201,
          "responseTime": 3828,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d3deec-76db-4bc6-886a-be77f7f773b0",
        "cursor": {
          "ref": "01864dde-fbf9-41cc-8316-90d4761a52e7",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "da92f2cf-3e52-4f9d-8b64-0f23d7ea3c90"
        },
        "item": {
          "id": "99d3deec-76db-4bc6-886a-be77f7f773b0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c335a797-92c9-475e-a2e4-9039c15cd7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7d4dedbf-26c5-4fda-ae17-11611b76ff31",
        "cursor": {
          "ref": "0f0fcf5e-af9e-46a2-b88f-53a744f5c6d0",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "82971694-ea53-4fa2-bbcc-a160f9adcc0e"
        },
        "item": {
          "id": "7d4dedbf-26c5-4fda-ae17-11611b76ff31",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c6539a75-f408-4523-975c-3dd61c4ae7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c6097e75-69ee-4d24-b05b-21ec38be116d",
        "cursor": {
          "ref": "9b35b58f-5ffb-4377-9038-da56b7d0e92e",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b167bdb7-a92f-440f-b7d1-b09017944804"
        },
        "item": {
          "id": "c6097e75-69ee-4d24-b05b-21ec38be116d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b07ccf25-89ee-4e17-ad20-6897d31331cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38271ca-1758-412d-b1d0-a35814e71a3f",
        "cursor": {
          "ref": "63e0b652-b833-4709-8da6-401e4293e34e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c6ed04c6-0aea-46ed-933e-979375e66ebd"
        },
        "item": {
          "id": "a38271ca-1758-412d-b1d0-a35814e71a3f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "be4e6bf0-6b62-47b5-9942-7cd46f8af688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ba294a-9a71-4ea6-a938-216b2b090ff2",
        "cursor": {
          "ref": "7032ea19-35bf-4bd8-b4fe-27f28eca1258",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5c76b477-8ba1-4ffc-b351-9a1771d90749"
        },
        "item": {
          "id": "95ba294a-9a71-4ea6-a938-216b2b090ff2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "93bd4a97-9ff5-421e-b414-fa7507b98d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f6f6d3-fac2-4521-b08f-97b796ec5ce7",
        "cursor": {
          "ref": "0856bfb0-1c9e-4370-83de-49cf8bb5f461",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1f68ac8e-eede-4bd6-b554-d6d3c6c86937"
        },
        "item": {
          "id": "96f6f6d3-fac2-4521-b08f-97b796ec5ce7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cfd84eaa-cac0-48fe-b85b-d4db8bda3f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df54c878-138e-449c-a160-db2e5c8106aa",
        "cursor": {
          "ref": "361a9a97-eca9-42db-ae63-fd6c215f0a52",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1f6501fe-4622-4504-a825-f0585b0150ae"
        },
        "item": {
          "id": "df54c878-138e-449c-a160-db2e5c8106aa",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b8f4468c-4476-45c4-8cb7-b22240ed65d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fdf5dd-ce32-4acb-af61-c8af6778bab8",
        "cursor": {
          "ref": "5ba6dfbf-3232-45c2-9df9-480e4953cd3b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9e387021-1b76-434e-8483-1175f4cd8d64"
        },
        "item": {
          "id": "53fdf5dd-ce32-4acb-af61-c8af6778bab8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d1c5838b-c8db-43d1-9ecf-78f016a1af20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0118773d-424c-474b-9633-bf850bbc3c0b",
        "cursor": {
          "ref": "3daa27bd-35cd-4370-bd4d-50294af30247",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f7deeaed-c68d-4910-9420-c64b1ae37cf1"
        },
        "item": {
          "id": "0118773d-424c-474b-9633-bf850bbc3c0b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5b0a739e-8c9a-47a8-88e3-1e75d83eccb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245ef52e-9ebb-4059-8114-ce4ae8388665",
        "cursor": {
          "ref": "a51cc397-ed6c-44e8-995c-35931cfac45d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "44e85aac-33b4-4cd6-b9c1-3fde84989cee"
        },
        "item": {
          "id": "245ef52e-9ebb-4059-8114-ce4ae8388665",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "38edf8d7-5b6e-421a-a14d-6d99a8bba427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4996d7-9844-44a5-b857-9f6f157404fb",
        "cursor": {
          "ref": "c5be4252-edd3-4a3a-b7da-9c2e6f3c74ea",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "502ff307-6af7-4c72-bee7-3e5428817f5c"
        },
        "item": {
          "id": "4b4996d7-9844-44a5-b857-9f6f157404fb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "391fe552-9935-427d-bd83-87832d3b4520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbce122a-ed8e-4350-a14e-b135406d2797",
        "cursor": {
          "ref": "1c797938-ddc1-447f-afc7-686f10c927dd",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "06617d65-b3f9-40b6-a7e7-8b48d3ec78ab"
        },
        "item": {
          "id": "bbce122a-ed8e-4350-a14e-b135406d2797",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "01f37141-98cc-43fe-9f66-55fc51ce664b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333c010a-ab3c-47ec-b76d-0ba9539461c7",
        "cursor": {
          "ref": "127baf1e-fe7f-4f8a-92de-bd525d664e30",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "cbe486f8-b07b-40bf-892a-9fc73364746d"
        },
        "item": {
          "id": "333c010a-ab3c-47ec-b76d-0ba9539461c7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "20eda9d0-678e-4bf9-a488-6d5637e85ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c112f9e9-03b3-42ca-baed-ccada472bd64",
        "cursor": {
          "ref": "2fa77cea-ff25-4056-834b-1b978139e2d9",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5e812b4c-184d-45c9-88e7-60c6d887eb7a"
        },
        "item": {
          "id": "c112f9e9-03b3-42ca-baed-ccada472bd64",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "12f1ec61-263a-4107-a0a1-ee5b25fdb3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf41f9a-f8c2-4e15-9f4c-189e033f1009",
        "cursor": {
          "ref": "1f2d629d-dbb9-48ff-9050-d2d86928b3d6",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ebb29731-75bf-4f70-8dd1-fb501d18ce1f"
        },
        "item": {
          "id": "abf41f9a-f8c2-4e15-9f4c-189e033f1009",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "18a4938c-ee08-479f-93e3-7189f77edc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2d5ad0-94ca-416f-92a1-5bbf973d2a2a",
        "cursor": {
          "ref": "d98846c9-aef9-49e2-8305-858813487ee2",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "46979952-a67a-4e12-bc36-f070f9480e61"
        },
        "item": {
          "id": "3e2d5ad0-94ca-416f-92a1-5bbf973d2a2a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3426ee53-bd47-4805-bf38-3389a2ef6018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c16ce7-9611-4f56-955c-322d995ae26f",
        "cursor": {
          "ref": "26678aeb-f5da-4ede-b459-80c75e6a4dc9",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cbfa49e6-9c6e-44f2-9076-e9e11cacec11"
        },
        "item": {
          "id": "80c16ce7-9611-4f56-955c-322d995ae26f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "83754580-3d51-4b36-bf2f-289516ba1462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a524cfd2-053e-4997-bcdf-f348f93574fa",
        "cursor": {
          "ref": "0268b41f-20ef-49df-a831-9b502979fcf4",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0458ccf0-560b-4d97-b903-7d46ccb65b79"
        },
        "item": {
          "id": "a524cfd2-053e-4997-bcdf-f348f93574fa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ca831c1b-dc5a-4af2-9310-c8d092e88f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046c1d9d-8d87-40f8-bd3f-34151e440831",
        "cursor": {
          "ref": "95365d67-d653-4d2d-a264-f6720be9ff39",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4c9ecc68-326e-49a6-b8bb-b74c3e536ef9"
        },
        "item": {
          "id": "046c1d9d-8d87-40f8-bd3f-34151e440831",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d7372de5-f7bb-438f-adb2-951848d7f717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de442636-e847-4a9e-ab5c-b039c33abd89",
        "cursor": {
          "ref": "108d00cd-b82d-44ea-8ae1-bdf60af052df",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ce2d71ee-39e9-49e5-8d1a-637fd425a657"
        },
        "item": {
          "id": "de442636-e847-4a9e-ab5c-b039c33abd89",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7ce7566c-a272-4aaa-bb96-ff5b58dd19c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7132e6bf-f745-45c9-a8e3-b61c0c4e7044",
        "cursor": {
          "ref": "370fa0ce-c74e-410e-8b4d-9db0a0c0af76",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8d01c847-6942-4bbb-840e-02d83c44aae2"
        },
        "item": {
          "id": "7132e6bf-f745-45c9-a8e3-b61c0c4e7044",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a1fa7d26-53a5-46e1-8d32-8209d28c7ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751623e8-c455-4852-b184-b51ceeb86664",
        "cursor": {
          "ref": "149310a5-bf41-4ccb-9f89-ce48bf86b307",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "07f3d892-f321-4c97-9ffb-f9043ee6a49e"
        },
        "item": {
          "id": "751623e8-c455-4852-b184-b51ceeb86664",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a9073142-a4d6-46ee-94f6-2efda45a4072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3704b73-b62d-4963-93ce-0915aca4419d",
        "cursor": {
          "ref": "0841d090-d379-41e9-8430-1d1d1a122762",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d12e1533-4df5-45a2-b7c7-92381e8a0d45"
        },
        "item": {
          "id": "d3704b73-b62d-4963-93ce-0915aca4419d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c4b5169a-2d72-4b0c-ab64-9b2b2c9b6e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e1c74b-3938-479f-8ba3-7c61204baaa1",
        "cursor": {
          "ref": "33a3cd5c-5bab-43d9-bcc5-4313888daf2d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "12b28a97-5efe-464d-b25a-60980445f86f"
        },
        "item": {
          "id": "f5e1c74b-3938-479f-8ba3-7c61204baaa1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "77ee7d6a-c3f8-4ed2-bc92-53c5752ab372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb441f0-3ef6-4a23-8939-a93d0f438f1f",
        "cursor": {
          "ref": "5032da25-8937-41da-828f-d57b17ff6dc5",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "33c45f49-ad82-4220-b21a-fbfd432b46f2"
        },
        "item": {
          "id": "bcb441f0-3ef6-4a23-8939-a93d0f438f1f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "70735cb6-d7f2-468a-9b85-a0dcbfaad714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b811ecdc-90c6-434e-87c5-6caf93fcf91f",
        "cursor": {
          "ref": "25cf8765-9700-48a9-8ef0-6dde7649b890",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "246b4688-091b-45aa-80a5-1ae05711dcc0"
        },
        "item": {
          "id": "b811ecdc-90c6-434e-87c5-6caf93fcf91f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e649c092-64fa-49c5-80ee-7ff58b1aafea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2184138c-9812-4049-a625-e680bfaaba31",
        "cursor": {
          "ref": "b64a5da0-21bf-47d3-a9fa-004b19b0f60f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "45162b0c-6cdd-4f98-8dbe-684df302d6a5"
        },
        "item": {
          "id": "2184138c-9812-4049-a625-e680bfaaba31",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "145f0bd6-7bcf-47d5-b67e-85ef414debfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbca0863-76f2-4360-89cb-e4a5ac0aa852",
        "cursor": {
          "ref": "74b717cb-618a-4f80-808f-e98cdaeea3e0",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8b8537a3-3800-4a55-b2d1-bd1fffadc24f"
        },
        "item": {
          "id": "bbca0863-76f2-4360-89cb-e4a5ac0aa852",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "eb8ab30d-38eb-4ed0-8337-4a19b9ca4f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850828f9-6828-428e-9ff3-ba4a623dd907",
        "cursor": {
          "ref": "b306c15f-e68d-4cf3-ab86-0929af0ef48e",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6959b39f-7fab-4ab6-890e-23c352d4e44f"
        },
        "item": {
          "id": "850828f9-6828-428e-9ff3-ba4a623dd907",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0ea10e32-7df3-4076-a6f8-02ec362b88ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe18ecd7-9ee8-4d3a-98ac-1a01d53611cc",
        "cursor": {
          "ref": "154dc11b-8d80-4cde-9797-a38326b08247",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6e95fcc9-4a54-4f4c-a962-9fbb8a3eca2f"
        },
        "item": {
          "id": "fe18ecd7-9ee8-4d3a-98ac-1a01d53611cc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4070f1eb-84a8-48ca-a00d-5374994aeed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec472690-c1e8-4b78-80a0-65293185ec3c",
        "cursor": {
          "ref": "db782fe3-ea16-4177-b4be-9530093567f1",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b54e8ea8-9fed-4cac-908b-5e529bcdb094"
        },
        "item": {
          "id": "ec472690-c1e8-4b78-80a0-65293185ec3c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9e4c082d-797a-41e6-ac3e-130b2807db47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31efac4a-5e26-4efb-8a43-5f8c529d2330",
        "cursor": {
          "ref": "941ab56e-dd4f-40d5-89e3-e8234a2dce71",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e69526c4-df89-4d94-966f-238b501e968a"
        },
        "item": {
          "id": "31efac4a-5e26-4efb-8a43-5f8c529d2330",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6fba1796-7872-49eb-a6f0-f627a99b3f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a6ea4b-929e-4650-ab91-a3d5a9f6760a",
        "cursor": {
          "ref": "d4e1b0d9-cf06-49c8-8355-fda9f4cb532e",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "036d81e5-6ef0-4ca8-8376-f195c9796981"
        },
        "item": {
          "id": "10a6ea4b-929e-4650-ab91-a3d5a9f6760a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1dbe537d-f8ec-4255-a104-e4e77d8185cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1466ea5-1fc3-4da9-8e25-091644134b2b",
        "cursor": {
          "ref": "992c2b25-264d-4b6c-8d37-1b855aa34038",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7ed30b51-a0df-44da-a564-67c196438db5"
        },
        "item": {
          "id": "b1466ea5-1fc3-4da9-8e25-091644134b2b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c814951d-4990-455b-be03-8806df6e0caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b5158a-d320-41e1-96cc-e13b6dddd19e",
        "cursor": {
          "ref": "13bfa7aa-eee3-43a2-84ec-d72c09ae2132",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e39b2e7d-df12-4f80-acb2-d30c9828e69f"
        },
        "item": {
          "id": "b1b5158a-d320-41e1-96cc-e13b6dddd19e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d0f683a7-dcd3-4928-9049-83dc12d530c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ef6351-dcff-44e0-9122-f49e175a6067",
        "cursor": {
          "ref": "412a5bdb-3d11-419b-ac12-828334e2b367",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "15ae3fb9-f9e9-4527-9223-1ac5522bcc8c"
        },
        "item": {
          "id": "f5ef6351-dcff-44e0-9122-f49e175a6067",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8d61957d-04e5-476f-ac83-40472c1f8118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8315c02f-7b18-45da-bc09-638ff2ee85bc",
        "cursor": {
          "ref": "77f3aa76-33af-4fc6-b61c-d94d4c8adaf6",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "32419059-8ec9-434e-94b0-40caace84c82"
        },
        "item": {
          "id": "8315c02f-7b18-45da-bc09-638ff2ee85bc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5482964c-9a6d-4a2a-8554-ac9c7a9cb359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2148f9a9-8e05-47d3-9c83-ea0cb5201380",
        "cursor": {
          "ref": "12133c50-d51c-4d71-bd9a-24de36fbfe2b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2d319b88-12cc-4195-bd7d-8d14a0007e3d"
        },
        "item": {
          "id": "2148f9a9-8e05-47d3-9c83-ea0cb5201380",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c24112e2-4698-4726-a675-ef4c16c3cd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581ca857-365e-42c3-b3ce-18d8eea9178a",
        "cursor": {
          "ref": "660e7672-52ac-4a10-8141-8e8cea18683a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "59198765-3347-48fa-b15b-e2ecf5fee494"
        },
        "item": {
          "id": "581ca857-365e-42c3-b3ce-18d8eea9178a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3480e130-1f6c-4e84-ac48-da97622beb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fe687e-d35d-4fec-b243-0e2dedbca0a3",
        "cursor": {
          "ref": "a54f53da-f024-4d8e-98c1-6dd8156bcb96",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4702e477-1654-4f05-8739-e8cc50172a25"
        },
        "item": {
          "id": "84fe687e-d35d-4fec-b243-0e2dedbca0a3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fc285f2b-9208-49c5-8ab5-65d52972abab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1af3a31-d92e-4f45-b396-0e4b52f403c6",
        "cursor": {
          "ref": "bf0566d6-0e02-453e-8968-613657151436",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8e932c92-dcce-49ae-bc73-6d5af0fdd44d"
        },
        "item": {
          "id": "e1af3a31-d92e-4f45-b396-0e4b52f403c6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "19450265-6104-479d-9c9b-19d20da31d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd49aba4-fbf5-4a1b-9a43-ed006f509e69",
        "cursor": {
          "ref": "bda22829-3b6e-4023-b066-75f1c00049fe",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9a2d8ce4-0a5c-4fa7-b154-3c5efc311f5a"
        },
        "item": {
          "id": "fd49aba4-fbf5-4a1b-9a43-ed006f509e69",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7af00e04-721e-430c-afbb-b0c767ad76e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10106166-1703-4eaf-9ee4-16b5cc9b222f",
        "cursor": {
          "ref": "9050452f-222f-4a02-8e59-6d2a8295fd69",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "61f79295-c70a-4940-946b-f135e4cb1d2c"
        },
        "item": {
          "id": "10106166-1703-4eaf-9ee4-16b5cc9b222f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4e00f238-8efc-42fa-91a3-c13343b97e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a544cd0-bb5d-4b5c-b2b2-a9bd7221b8f1",
        "cursor": {
          "ref": "a95c7a88-6804-4182-aa5e-e146f87ca99f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ee5aabd4-05b3-4be7-abe9-80a8d4217332"
        },
        "item": {
          "id": "8a544cd0-bb5d-4b5c-b2b2-a9bd7221b8f1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8c44265b-fa4f-44e7-9fbb-fc888eab0705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2b685a-b370-4fa9-b7d2-c7c2741faf59",
        "cursor": {
          "ref": "eaef4eaf-5ebb-4708-a3b7-5f5ea381d23a",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "288dfc7c-357f-408a-852e-826420dc7387"
        },
        "item": {
          "id": "be2b685a-b370-4fa9-b7d2-c7c2741faf59",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "50639d26-7c90-40a9-86af-504e88a55e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c3b313-60df-4d51-9937-c0e026a32329",
        "cursor": {
          "ref": "e748203a-fab6-49b7-b38d-3e7f2816e14e",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ce889699-3272-4497-9e35-7ac1dc5e69ec"
        },
        "item": {
          "id": "d2c3b313-60df-4d51-9937-c0e026a32329",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2dbcd058-2afe-4a81-9a1d-2d43174cf742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a3da8f-edee-46ba-97e3-edad971fe1d9",
        "cursor": {
          "ref": "90d2e89d-c2c6-4626-ab0e-cdfd78db23fc",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "15d1b02b-5279-4527-9970-cc76a3cd70b1"
        },
        "item": {
          "id": "30a3da8f-edee-46ba-97e3-edad971fe1d9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "22099c3f-72fe-4b8e-b1c7-5bc073f358eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be9cd9c-44d0-4078-85b8-6e399bbd76d2",
        "cursor": {
          "ref": "8516ad9c-6f43-41a3-afea-e18bb68c0b36",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f8c2025b-1c7c-46c7-a841-e96d46c045c8"
        },
        "item": {
          "id": "6be9cd9c-44d0-4078-85b8-6e399bbd76d2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1e0050bc-f4bd-47c5-a982-44502374e487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39297e9-fae4-453c-b770-be1eb913783f",
        "cursor": {
          "ref": "7eb3dc0a-5e13-48bd-8f24-176610b5edf8",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b1841da6-9e7e-4255-a6b9-ab1f48ea2ba9"
        },
        "item": {
          "id": "f39297e9-fae4-453c-b770-be1eb913783f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "08500544-301b-4cdc-9542-880fcc5f00bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725e4306-3394-4aa8-a889-80f968fd50cc",
        "cursor": {
          "ref": "ff835bb3-f4e6-4d6e-9f96-3801465aefc2",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e0742153-b82c-47ef-a211-1876704e84eb"
        },
        "item": {
          "id": "725e4306-3394-4aa8-a889-80f968fd50cc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "866e44a2-deb7-49c2-9a39-f2e224203bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8744b929-9383-4b63-b2f7-ae00df254a46",
        "cursor": {
          "ref": "540e52c0-077c-4ed1-8184-a176c0a646b2",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "aff8c859-fce6-4f15-93e2-422d0db1f0ab"
        },
        "item": {
          "id": "8744b929-9383-4b63-b2f7-ae00df254a46",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "067a3170-3c1c-4baf-8a9d-5bb750c34a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888beb90-079d-4118-9045-2c993043db48",
        "cursor": {
          "ref": "82aabb31-7d68-43c8-a220-5d31d9715d18",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4d6ba0c9-f0cb-41f3-95cc-98ef41ea4875"
        },
        "item": {
          "id": "888beb90-079d-4118-9045-2c993043db48",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dab0c17d-ac84-409b-950d-5c1404279d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d45250-5a33-4e5f-b294-d1177b387e33",
        "cursor": {
          "ref": "f4414aa5-cb00-429f-aa12-1f08eba6da59",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "14b2433f-00a8-4e44-a449-89db78ae41fe"
        },
        "item": {
          "id": "b1d45250-5a33-4e5f-b294-d1177b387e33",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0fb3048b-a4e7-4218-a061-04f9146b94af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f718c3b-e106-45e0-a08b-7381490ed1dc",
        "cursor": {
          "ref": "3809cf1c-55d5-4a8f-a3eb-2a0957b4d589",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8b1ec1ea-dee0-45e2-b6b2-6528c171b268"
        },
        "item": {
          "id": "5f718c3b-e106-45e0-a08b-7381490ed1dc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "438f5c62-770c-4689-90ac-c1a3186b5f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411fdc5a-ea06-491a-ae2f-bab6cf59c93a",
        "cursor": {
          "ref": "fcaa2770-4a21-4c8b-ba51-9709065b22e9",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "545dbcba-aea3-42d6-8d02-4226f50da422"
        },
        "item": {
          "id": "411fdc5a-ea06-491a-ae2f-bab6cf59c93a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2f460e1d-6318-4d7b-bca2-36045938f94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "969402b7-b24b-4299-9bb2-a008a34c9568",
        "cursor": {
          "ref": "2ef8b2cc-9896-4307-9276-d03c870937a5",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b1e887c8-7608-495f-9695-94cb1e10dbc5"
        },
        "item": {
          "id": "969402b7-b24b-4299-9bb2-a008a34c9568",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "898db7fb-28b2-4362-ab88-25b103b7f942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6148fc-a106-4854-9459-528959a16873",
        "cursor": {
          "ref": "8e384fd3-a057-47f9-9c40-5ef2b3d23e69",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5ff41b9c-c103-420e-a56f-30a3838cfad6"
        },
        "item": {
          "id": "1d6148fc-a106-4854-9459-528959a16873",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1681044e-7f84-467c-86a9-c5a82ca3c222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67fba70-3562-40ec-8a8f-1a93cb6cc654",
        "cursor": {
          "ref": "e4c00a0f-121f-48c1-aea6-0cb6a9ae7907",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "63f49e76-2549-418c-9fd1-283f6d97471d"
        },
        "item": {
          "id": "e67fba70-3562-40ec-8a8f-1a93cb6cc654",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8d23752f-9906-4b81-bbc8-40f85efc9259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b468706-cc42-4f6e-b806-23a3619c3f1c",
        "cursor": {
          "ref": "0ab590dd-e6a1-413e-9d0d-851cfb6ecf62",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e4880ac1-6210-405d-b380-139c81a1c2c3"
        },
        "item": {
          "id": "1b468706-cc42-4f6e-b806-23a3619c3f1c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "89460b50-e45a-4724-8784-a5b9952b1b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e948cb6-db3a-4fbc-b5c4-6b6ce52e92ab",
        "cursor": {
          "ref": "a39a1e77-ceb3-4daf-9997-0fbdee9bf931",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a7d5959b-a353-4b3e-b5e1-6a6fdcf3797a"
        },
        "item": {
          "id": "2e948cb6-db3a-4fbc-b5c4-6b6ce52e92ab",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1667b330-9a1c-46b1-bf70-4c800ac870f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2406d7be-16b8-43dc-a899-c1b8863c4f88",
        "cursor": {
          "ref": "0d254c73-75c5-435a-971d-36e2c37ee10b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d5f3a02b-0935-4153-9c38-b9c0029afebb"
        },
        "item": {
          "id": "2406d7be-16b8-43dc-a899-c1b8863c4f88",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "68a5a1dc-b6dd-42cc-b208-78fbba526ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21b49cb-46d1-42e7-b5f2-f4bbd201044a",
        "cursor": {
          "ref": "3706f17a-bf53-451d-95d4-59b0c62a26ed",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d0b8fdb2-57bb-4edd-8b69-005568c1c28a"
        },
        "item": {
          "id": "e21b49cb-46d1-42e7-b5f2-f4bbd201044a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1ed42738-f1f9-4808-ba5a-e3ecf879a451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea11ee0b-9665-4bce-b309-4ac8ececb2e2",
        "cursor": {
          "ref": "86ca1f33-bb9b-476b-bb9e-ccaaac5ddea8",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4658ccc4-d9c7-4f68-9923-6fe2e1a06a39"
        },
        "item": {
          "id": "ea11ee0b-9665-4bce-b309-4ac8ececb2e2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "86f244c8-e16a-4537-8477-875cd6b56cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41289c4-7998-496c-9d96-14b886472ad2",
        "cursor": {
          "ref": "3cde42bd-5033-445c-b456-c257e47190b1",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "41c92989-34b9-4057-98c3-ee679c9527a9"
        },
        "item": {
          "id": "f41289c4-7998-496c-9d96-14b886472ad2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a14627af-0635-4448-9af2-414f91822d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411a96d0-c3db-485c-a2af-57f44dc10bbd",
        "cursor": {
          "ref": "20157826-e40a-4ac1-99be-87367bb3f11b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0eb3d0d0-71cc-4cf7-a1bf-b8903eb7ff32"
        },
        "item": {
          "id": "411a96d0-c3db-485c-a2af-57f44dc10bbd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1850248a-129b-4884-8768-4a1abb468438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b544837-86bd-4a4f-be2b-3200364a3aeb",
        "cursor": {
          "ref": "c210e77e-b967-4de7-b24a-6f16dd37c704",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ae58580b-4daf-46d6-a06e-ac73b2ac2ec1"
        },
        "item": {
          "id": "6b544837-86bd-4a4f-be2b-3200364a3aeb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9dd95bda-d49d-4708-ad8b-23436b902336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386a744e-331d-4527-97a2-36ef6b9102de",
        "cursor": {
          "ref": "152b5a0d-4a7d-42e1-9469-cbcb4769dcf0",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a3dec28d-f43e-4b47-a8e0-832c5a774156"
        },
        "item": {
          "id": "386a744e-331d-4527-97a2-36ef6b9102de",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e18cc15a-76b6-4615-ba4e-535e6bae5185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198c82e7-9492-4210-ab97-76c9e5789abe",
        "cursor": {
          "ref": "be8bc42a-272f-4040-9e9a-732a963296ce",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fc04bb14-d4a3-4cc0-8ceb-4ef15066b573"
        },
        "item": {
          "id": "198c82e7-9492-4210-ab97-76c9e5789abe",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a10ac17d-d517-444c-8dbd-891997a450a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c11cc5-2756-4dda-b82b-f9c4e9e323c5",
        "cursor": {
          "ref": "a95fcf33-67e1-4ab4-bcba-9948f6d6af31",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "101b4051-f071-4c1f-b597-ed96c624d125"
        },
        "item": {
          "id": "49c11cc5-2756-4dda-b82b-f9c4e9e323c5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ebe86a93-6c91-4deb-9f6a-d1d868271126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefe5121-910e-42f6-822c-202d5bcf7329",
        "cursor": {
          "ref": "6b1298c8-7dda-4df2-a215-26b7d5454e61",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b5301e9c-9bde-4b16-9add-70c2f538a63a"
        },
        "item": {
          "id": "fefe5121-910e-42f6-822c-202d5bcf7329",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c8220418-ea92-4a21-9be8-5750e42ebc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c68b77d-12ff-48e9-a9d3-1fa918409dcd",
        "cursor": {
          "ref": "91b961ed-4976-4e0d-b7a9-573932556d79",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "702dbca3-ec5b-4767-8b33-cc7f7de5e78a"
        },
        "item": {
          "id": "0c68b77d-12ff-48e9-a9d3-1fa918409dcd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e85f1afb-7ef4-410a-8fd8-7e12e8d9ea60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79905ff9-d081-48ca-9f56-f89848342c89",
        "cursor": {
          "ref": "c91663e6-fb5e-4514-bdab-ce699630c072",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5aa39f54-8ecd-40a4-98d1-3e90e61bcdce"
        },
        "item": {
          "id": "79905ff9-d081-48ca-9f56-f89848342c89",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d0a87728-ab2a-4813-8929-a771bb250bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a600ce-281e-4b3b-81bf-06613525d919",
        "cursor": {
          "ref": "cacab56d-f7b4-40cf-8a53-180169af6016",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b70a9d4d-c026-48d5-bced-f70ceb62f717"
        },
        "item": {
          "id": "05a600ce-281e-4b3b-81bf-06613525d919",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "da0821ba-8423-40c9-9b39-fbb0651048a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2e0004-0a92-4f52-93ae-7f94626da1b7",
        "cursor": {
          "ref": "4a0daee7-02f7-41c9-b406-30b8833b2257",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7d1f495a-7226-4c22-8868-c385c875479e"
        },
        "item": {
          "id": "9f2e0004-0a92-4f52-93ae-7f94626da1b7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "05b0fedd-7ef3-4062-b8df-3ebe4e5053f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9dc42e-b42c-404d-82a5-cad7932731b7",
        "cursor": {
          "ref": "468c78d5-e6b5-491f-aba3-0c69478bd95d",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "44584b40-275a-4b45-b448-ce4ad2902e20"
        },
        "item": {
          "id": "5d9dc42e-b42c-404d-82a5-cad7932731b7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5e8bedf9-981b-4d6d-b1a6-17aa5c896b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdeb546-03ad-4c2e-a13d-df97db1af1dd",
        "cursor": {
          "ref": "74727e22-e0e1-4ece-afd3-b27af3dac337",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "50a2a97f-cf10-4b74-a93c-907f3aa0c4ca"
        },
        "item": {
          "id": "5cdeb546-03ad-4c2e-a13d-df97db1af1dd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bde90706-2195-4181-ac7d-520751227438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b5d3e4-105b-4e73-a251-45dc12bc7a5a",
        "cursor": {
          "ref": "0a11fa0d-28d7-49b8-9cfe-c15c4150bc73",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "07e528fc-c64b-4ab8-87b3-1cbbc34ea8c1"
        },
        "item": {
          "id": "73b5d3e4-105b-4e73-a251-45dc12bc7a5a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f79ee180-8344-4870-afaf-4e4c1b45defb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6aa335d-8ba2-458e-8ae3-f15687654bb8",
        "cursor": {
          "ref": "3a79361b-4370-4c51-9efe-ec93f21ae40c",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "def27a81-9288-4f10-a85d-ed7ff3eff68e"
        },
        "item": {
          "id": "b6aa335d-8ba2-458e-8ae3-f15687654bb8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d9ab8e6a-4821-4836-a551-aeebb20dbefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d69a92e-dc94-4789-8820-9b2652c50ce1",
        "cursor": {
          "ref": "cc2f20d6-58e1-4591-97e3-124a867987b8",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9060209c-d2a8-42a4-8b24-639c139ed157"
        },
        "item": {
          "id": "8d69a92e-dc94-4789-8820-9b2652c50ce1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cb5a7935-f4fa-439e-9896-30c699c20765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acad548-6a03-4022-baad-a274e7684f76",
        "cursor": {
          "ref": "d6ce5e04-64a7-4abe-b6c4-07014aff4cb5",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "26211d6f-dff8-4c5a-8e50-805b806d5b05"
        },
        "item": {
          "id": "9acad548-6a03-4022-baad-a274e7684f76",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d13f6809-7ae0-4f23-a1c0-00d9e20b614f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779b9a75-35a4-48f9-beb7-6b8d6309e4a8",
        "cursor": {
          "ref": "3af0f05d-df9b-42bb-90fb-0fadd76d7997",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "169775d6-bf8d-4b07-a7a1-7bae8466627f"
        },
        "item": {
          "id": "779b9a75-35a4-48f9-beb7-6b8d6309e4a8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8adfae77-7c8c-41ad-ab52-29e9300c24cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba73d3c-c83a-4847-8c42-a2b01eaf9db5",
        "cursor": {
          "ref": "9f909a30-ae23-4f36-9b21-6334a200bb76",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0a00a244-7e21-44b3-91b3-ff6ad9267d9f"
        },
        "item": {
          "id": "5ba73d3c-c83a-4847-8c42-a2b01eaf9db5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ebd50dab-5440-4c7a-9a01-5ca0d8356e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d7de74-32a7-43aa-a8d7-5fbd75e10dfd",
        "cursor": {
          "ref": "1efd7403-237f-4af6-8cc0-4c7d1b454e79",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "553ba81c-0206-4c4e-9eb1-148982f32319"
        },
        "item": {
          "id": "81d7de74-32a7-43aa-a8d7-5fbd75e10dfd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "633309a5-b5c6-4fdd-a013-e5170c31c159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5efe46-a548-4b5b-8dd2-9160336e7506",
        "cursor": {
          "ref": "0d600d8e-220b-46f5-8951-0bbabd942eee",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "86bcc5e2-b991-4475-85ab-57ddae3fc526"
        },
        "item": {
          "id": "da5efe46-a548-4b5b-8dd2-9160336e7506",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "038fa960-1925-4574-b830-cdde9c9ba738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8d62d7-a307-4849-ac28-a48d381c29a6",
        "cursor": {
          "ref": "f8bd727f-7e76-45e1-8dc6-998de9b6a59c",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "00558ed9-dcf2-4c12-86d5-42aae24ddc9c"
        },
        "item": {
          "id": "9f8d62d7-a307-4849-ac28-a48d381c29a6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e10b9fb5-bd5d-4771-a869-be09b846f6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d278af5-91b3-44cb-9e43-04760558c442",
        "cursor": {
          "ref": "5adac426-7c49-48a4-9266-7a883ed45a55",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f00052af-9c0f-4494-90e2-010a81d01a97"
        },
        "item": {
          "id": "9d278af5-91b3-44cb-9e43-04760558c442",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8a9f1f83-ca68-4167-8100-a4a0a14a0e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f184af1-dc3b-4a6f-8c0a-529d5ef41fe5",
        "cursor": {
          "ref": "0e8a0935-2320-4cb7-8fea-521c59f75806",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "cc7a6e6f-5052-43e2-bb18-acbf93b021bd"
        },
        "item": {
          "id": "0f184af1-dc3b-4a6f-8c0a-529d5ef41fe5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e79824ed-356f-449d-8775-0bf992ad883a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c398118-8de0-474a-a33e-096872832fbb",
        "cursor": {
          "ref": "2d2d55bb-8de1-43cd-ae5f-c95aac5d240f",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "476d5337-ba97-4ab9-8e0e-e610ba9bfbc5"
        },
        "item": {
          "id": "9c398118-8de0-474a-a33e-096872832fbb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a5477844-31a1-4432-848e-e3aac7139f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2350cabc-200c-4102-9e3d-2d2bfc44d9a9",
        "cursor": {
          "ref": "5bf6d388-c3bc-46f9-970a-a9943cb44624",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "cf02cfad-e853-41e9-8df4-7355883c1c6c"
        },
        "item": {
          "id": "2350cabc-200c-4102-9e3d-2d2bfc44d9a9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1ce3c77f-51af-49b7-9ee1-746fc2e84456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07058b63-5785-451e-8773-da1e1fd2d4f5",
        "cursor": {
          "ref": "a3be272d-7e36-42b9-a237-f795998d3265",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7c221997-13f7-45db-a45d-0ca8e3f3477e"
        },
        "item": {
          "id": "07058b63-5785-451e-8773-da1e1fd2d4f5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cdf9bb43-9f0a-4241-9ca7-06866e1119a9",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "ca06ee36-b8af-4688-82f2-8baf434eac3a",
        "cursor": {
          "ref": "9be191a9-a5c2-4fd8-999f-5335499d1fb0",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a9bdef3b-9c62-49ac-a55d-1fa83e6d2d06"
        },
        "item": {
          "id": "ca06ee36-b8af-4688-82f2-8baf434eac3a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "76bba170-3576-43e9-bfe5-e36bdfaa299d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775a19b3-2505-42de-81b9-84385daa8de1",
        "cursor": {
          "ref": "db984799-58ff-46de-b818-91bddd2aa146",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "00bec121-a4ac-41c9-954e-6523e5ec44d5"
        },
        "item": {
          "id": "775a19b3-2505-42de-81b9-84385daa8de1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4d6b5da6-8a05-4f16-b036-fe1755640cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4688601c-f065-403d-8391-be1be326225e",
        "cursor": {
          "ref": "fefb427a-5487-4825-abf2-fa76101488ee",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "452d510a-0564-4476-ae40-c8d4c209c4dc"
        },
        "item": {
          "id": "4688601c-f065-403d-8391-be1be326225e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "455be16a-f420-40fe-86de-14705d845118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea5156d-2a36-4eb8-9bff-114ae1ed2462",
        "cursor": {
          "ref": "6fb93da3-bbe3-4178-a3c5-f2e25c989d53",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d7489c67-41aa-492c-ae6b-ed50d9e28488"
        },
        "item": {
          "id": "cea5156d-2a36-4eb8-9bff-114ae1ed2462",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "da08cd9b-ad7e-4628-9ed7-56705e4daabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8f93f8-f30d-4d1e-95d0-da46cb888ff3",
        "cursor": {
          "ref": "d6863922-8d05-494c-b59c-c0d469488853",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bbeed4d2-f00a-44bc-9b26-6689507ba974"
        },
        "item": {
          "id": "fc8f93f8-f30d-4d1e-95d0-da46cb888ff3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "85432a16-e2a7-4bdf-8544-b7264c8166dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7923d639-d1bb-4c14-969e-367ac42273e5",
        "cursor": {
          "ref": "8aab76ea-d42b-47fa-a954-d92c230b4bd1",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ad0ce084-00fe-41ee-900e-10f1e02b506c"
        },
        "item": {
          "id": "7923d639-d1bb-4c14-969e-367ac42273e5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "dd6732f8-703a-417f-9de9-517635075744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475ddb6b-793e-4bff-92da-b39b6acfd99f",
        "cursor": {
          "ref": "8520f0b8-152f-4960-9fa6-1e7a1d297a35",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "794b5c7c-a396-4336-b069-d2fbd7f72874"
        },
        "item": {
          "id": "475ddb6b-793e-4bff-92da-b39b6acfd99f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0c5faca3-df0b-48c6-9615-43d168d1744e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e2fc74-d768-4661-a1a5-af99dad01852",
        "cursor": {
          "ref": "669612b6-c4ee-46ba-9770-334de9a46eca",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "02c5f5f9-caba-44a6-b699-c4d59a394ab5"
        },
        "item": {
          "id": "a0e2fc74-d768-4661-a1a5-af99dad01852",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "04b84c62-62cb-49a1-9f6e-ebebe4fd58ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6896f156-8c6a-43bc-8dc4-9c5c46685359",
        "cursor": {
          "ref": "e32f4e67-03bf-4b32-846e-dfe06c736c67",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7dca8b0d-bbc6-4245-8a0c-b2e7e9c6ceda"
        },
        "item": {
          "id": "6896f156-8c6a-43bc-8dc4-9c5c46685359",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "eda17365-7246-4c08-8d6a-7c65a12a6889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ce16f5-554b-42ff-baa4-b74fcd3f68ac",
        "cursor": {
          "ref": "f0c8d99f-284b-41be-bdef-fbf07fd7e995",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bf2a1589-a1f8-40dc-ba23-6b708adc73e5"
        },
        "item": {
          "id": "e7ce16f5-554b-42ff-baa4-b74fcd3f68ac",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "21c433ac-c485-477d-8631-ddb0764ff39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1cb0ec-10a4-45ab-9fb9-d8b459825379",
        "cursor": {
          "ref": "245b99c7-1007-4777-893b-dc2ab7791b51",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "38c2975a-d864-49f1-9327-21fbaf3d4add"
        },
        "item": {
          "id": "1b1cb0ec-10a4-45ab-9fb9-d8b459825379",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a7d221bd-197a-412e-979e-1cb98e0e6997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e637a825-abde-4079-b3f5-9f4d555505df",
        "cursor": {
          "ref": "84f03793-269b-44be-8f82-e31050dd2c21",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d80efd17-f681-4971-b0e9-fb3a48a6b1a5"
        },
        "item": {
          "id": "e637a825-abde-4079-b3f5-9f4d555505df",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b457ed42-318f-4349-af3b-bc106bb84dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad60bdcd-1d1e-4bfb-883d-91b5492001b1",
        "cursor": {
          "ref": "6cd53155-d515-424e-8a4c-6962dd5d950a",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b5882abe-96fe-47b6-9d6a-d144f2ede44f"
        },
        "item": {
          "id": "ad60bdcd-1d1e-4bfb-883d-91b5492001b1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e0e6c2c9-4b9c-4083-ad98-0bdd09db9e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48bdad7-4b6e-44a2-ad79-56aa860c17ad",
        "cursor": {
          "ref": "87895805-e7cc-4ba7-a71d-b861f10a05d6",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f647c935-294c-47a7-beaa-e1ed7521f483"
        },
        "item": {
          "id": "b48bdad7-4b6e-44a2-ad79-56aa860c17ad",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c39a8ca3-8a14-425c-bdc5-142c6827a70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86288336-f9d7-4340-bb03-d64951879090",
        "cursor": {
          "ref": "cc117740-e22a-4574-b450-b5ddd655af3e",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "55cccc01-1556-434e-a2da-50dc8e930f49"
        },
        "item": {
          "id": "86288336-f9d7-4340-bb03-d64951879090",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f2385d12-723e-4598-8612-3679d1c1501d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c48b090-5120-4f56-ae04-923aed10bad7",
        "cursor": {
          "ref": "92efb7a3-288b-47fb-a5c7-608a993dfa6e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4a8caa20-2435-45f3-9cd5-3f99197b6685"
        },
        "item": {
          "id": "3c48b090-5120-4f56-ae04-923aed10bad7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ed67c375-54f7-4a10-8b33-a6bbc7266a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421a54e5-2788-4de4-9e59-ebc0d72a5903",
        "cursor": {
          "ref": "b6285692-622a-4c0a-9b94-c33f31a47b70",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cfe802ec-2446-4bdd-9717-fdba53038aaa"
        },
        "item": {
          "id": "421a54e5-2788-4de4-9e59-ebc0d72a5903",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3cfde0f3-2c30-4f91-8265-fee212d3395e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb8f662-a2a5-4f64-a46f-37efa2502337",
        "cursor": {
          "ref": "c4933bbe-45e1-437d-b258-f58768889d17",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b1649854-a0aa-46b6-8575-28678858a00e"
        },
        "item": {
          "id": "aeb8f662-a2a5-4f64-a46f-37efa2502337",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a7d05343-5baa-40c3-913e-807a511ad08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a40146-3a85-4c60-a73c-6f8842342481",
        "cursor": {
          "ref": "339385e8-33ed-48f0-b3af-cfa0ae6dfcb5",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f642e3ed-359a-4069-bab2-b74b63988815"
        },
        "item": {
          "id": "e8a40146-3a85-4c60-a73c-6f8842342481",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "35d4d674-8002-40f1-bfd8-521c49259cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d5e259-966d-4837-a2b7-ca122c70ff47",
        "cursor": {
          "ref": "69d2353e-97b2-48da-9157-839daaf8a48b",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "adfa3fa5-78d3-4eea-b60c-35f794b96c53"
        },
        "item": {
          "id": "79d5e259-966d-4837-a2b7-ca122c70ff47",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8e3fda72-3b43-4d0d-adc7-27c1d7c241fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91874d94-64e5-44d4-b78a-60f2cdf64834",
        "cursor": {
          "ref": "bd23234a-6542-4f5a-838d-6b5dc9c01f52",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5561d992-df3f-4600-8db9-d126991bbbde"
        },
        "item": {
          "id": "91874d94-64e5-44d4-b78a-60f2cdf64834",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "81ee6365-ff4a-48b6-925d-b7e4dadf745c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac3f8ed-2b49-4944-b98b-4c6e47c68cad",
        "cursor": {
          "ref": "f18c7d9b-7518-4ab8-bf44-65a10afb87f3",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c6e1a834-6ae2-44cb-8d52-1c2b8c7e9a3b"
        },
        "item": {
          "id": "2ac3f8ed-2b49-4944-b98b-4c6e47c68cad",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9d26e125-129e-42ac-862f-57af12f8e93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a5f8a5-f01f-4408-9840-18d8d9b033ac",
        "cursor": {
          "ref": "e721cc06-1802-4760-884f-3b073c4f6972",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6292bf24-e5f9-4000-83e9-0d5d7cd7ac1e"
        },
        "item": {
          "id": "07a5f8a5-f01f-4408-9840-18d8d9b033ac",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ad6e988f-71d2-435c-bc74-eb42515126a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5c2f62-9058-47f9-8742-382bf353aa81",
        "cursor": {
          "ref": "66fa78d7-b2bc-4a69-9e30-2cfbca09946b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "79de2e03-126d-4e99-90be-57952b8befab"
        },
        "item": {
          "id": "bd5c2f62-9058-47f9-8742-382bf353aa81",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "354b8638-485c-4539-a6ae-5a7c8a6cf269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af1d352-4032-4ca9-b2fe-2a4ab8c0aa0a",
        "cursor": {
          "ref": "6257ef96-01b6-4f0f-96aa-52910bce3732",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7ae128ec-cf8b-4ff1-8af2-3d9afdb9e516"
        },
        "item": {
          "id": "2af1d352-4032-4ca9-b2fe-2a4ab8c0aa0a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2849efe7-9f60-4aec-9978-855b97cc9a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8967d407-ac0b-4875-8b3b-5217b4ed7ecd",
        "cursor": {
          "ref": "7875f016-f081-40b1-8268-e0271e6ff65c",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "254b9b15-f65c-4373-bc00-7477e1f071e3"
        },
        "item": {
          "id": "8967d407-ac0b-4875-8b3b-5217b4ed7ecd",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5e8054b7-9b15-4c10-9ef1-d38ef66a5da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa718e1a-dc70-4f2a-a0a4-d84f72f1bcae",
        "cursor": {
          "ref": "11f41b10-504b-4985-acb9-813221226d09",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fbac0477-9d4d-4291-b0da-b0c5c458e8d7"
        },
        "item": {
          "id": "fa718e1a-dc70-4f2a-a0a4-d84f72f1bcae",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3b29d55d-9c6b-41bd-b09a-47cae602e7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e375392e-59c2-41c0-977a-7d10bb3d7876",
        "cursor": {
          "ref": "c0205e1e-114a-4e94-966e-a80568a7db90",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cb4e40b1-3845-4c76-aa73-44609242c79c"
        },
        "item": {
          "id": "e375392e-59c2-41c0-977a-7d10bb3d7876",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "18184924-a009-4c1c-bfd9-3bd62d97cd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fe50a4-a053-47fe-ad07-cbdd106ebefb",
        "cursor": {
          "ref": "acb89188-c5bd-4e7f-8880-a69a97660dbf",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "29d2c754-fae1-4f72-a591-a08fa08ec15e"
        },
        "item": {
          "id": "45fe50a4-a053-47fe-ad07-cbdd106ebefb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "197b0ae9-7e28-4203-9e33-fd75babcbb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703fae0c-2bc5-4629-a112-c8681dfc8fdd",
        "cursor": {
          "ref": "382b3d15-1408-45a2-b188-36f73e44aaf5",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "96a42a38-6892-41bc-846b-8e0819918391"
        },
        "item": {
          "id": "703fae0c-2bc5-4629-a112-c8681dfc8fdd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7cfe8de7-0923-43ef-b50e-68a62defa339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27449640-3218-49cb-83b7-65c7a2c6c772",
        "cursor": {
          "ref": "43b60be1-bb7b-4d9f-92ab-4f0ebe40f2df",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "82212a06-98e5-4713-97d8-c20e317c82da"
        },
        "item": {
          "id": "27449640-3218-49cb-83b7-65c7a2c6c772",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "304ec00a-f564-479a-a2e2-002375942f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac84817a-763c-47a8-afd4-27aec6b1f397",
        "cursor": {
          "ref": "4899e104-9221-42d5-8f45-b7ca7e38e102",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f4306de3-3536-4f97-bca9-b00a55514176"
        },
        "item": {
          "id": "ac84817a-763c-47a8-afd4-27aec6b1f397",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7b563b93-fff0-4513-a812-e9c6217303d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df9d883-27e0-4aab-a507-614c3703fb11",
        "cursor": {
          "ref": "fe40433d-fafc-4730-b476-c578740926d0",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bce2c64a-8d4e-4005-b6cc-aa787ea58585"
        },
        "item": {
          "id": "8df9d883-27e0-4aab-a507-614c3703fb11",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "18ae8a2f-0cbf-43c9-ad7f-09f57a3822e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c299cb99-5665-4b7b-b04d-8f8079ec6e5f",
        "cursor": {
          "ref": "d79a292e-b980-47f9-9e8a-bb6315c3673c",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e7159618-1979-4b8b-93e1-a74250e191af"
        },
        "item": {
          "id": "c299cb99-5665-4b7b-b04d-8f8079ec6e5f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b36a532e-fbc1-4bfa-b857-4079582718b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7479e2-c551-44bd-a3de-14e6ddd401bd",
        "cursor": {
          "ref": "e79b73b4-d05b-4147-9ef5-201d6b5d16bb",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7875db4b-2a2a-441c-8ce6-695efe877e8f"
        },
        "item": {
          "id": "0c7479e2-c551-44bd-a3de-14e6ddd401bd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "cd8121d3-b7b6-4a44-868b-dc371420f1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c11d7a-597d-4dcc-9268-7a9b1b0a1f49",
        "cursor": {
          "ref": "9a10b0b5-d179-4efc-a813-149038bc0cf5",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fc1e9d27-0f0f-44ca-a5ad-daf5756c706e"
        },
        "item": {
          "id": "43c11d7a-597d-4dcc-9268-7a9b1b0a1f49",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c6ecdb7a-af79-4eab-ab88-f787cd87aab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffa4453-56bb-4643-81db-270be3da3c9f",
        "cursor": {
          "ref": "4ee392f9-d55f-423d-b768-72bd891640c1",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "21f102d9-679c-41be-91f1-e45d2588c6d6"
        },
        "item": {
          "id": "7ffa4453-56bb-4643-81db-270be3da3c9f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f96f1d59-d189-4790-8e6b-95e0e46af15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390d9df1-0f2e-4b05-af74-1be499899aca",
        "cursor": {
          "ref": "8824c4bd-c5aa-4815-b652-b2ecc407c1a5",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0e85f4ad-7e64-4a32-8c0a-baca9914bbc8"
        },
        "item": {
          "id": "390d9df1-0f2e-4b05-af74-1be499899aca",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "75726c82-978d-4a48-8519-de2ab50880bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca447be-b963-4aaa-8d24-206aa2521332",
        "cursor": {
          "ref": "587f41bb-6d80-45bb-ac6d-c01428cf3adc",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "26dfe335-db0a-4a94-9048-f4e5a1485ca6"
        },
        "item": {
          "id": "3ca447be-b963-4aaa-8d24-206aa2521332",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7b2da80c-6e8f-48bd-bb57-fae6a3b2a864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea2d19e-25ac-4703-834e-f4f8b9891706",
        "cursor": {
          "ref": "c1b24add-9894-40f4-9f13-827048a1c18c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f00ac60c-2d4d-4931-9021-327d04d6e2e2"
        },
        "item": {
          "id": "fea2d19e-25ac-4703-834e-f4f8b9891706",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ed6de62e-f515-4ea8-9096-4ef79c5a585b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea041e7-ca7d-4519-8c01-b223696e61ec",
        "cursor": {
          "ref": "c5342402-e0ff-4255-b93e-c92b3a8390ad",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "470227fd-ac5e-4eb3-8f5e-7021be0a70ee"
        },
        "item": {
          "id": "bea041e7-ca7d-4519-8c01-b223696e61ec",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "27b7f84d-313c-4a8f-8aa1-9c4890f27de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec4a8d5-1a38-47fa-9724-3a944cb0c849",
        "cursor": {
          "ref": "391fd0f6-5f28-4c25-8bf6-22745821f9b5",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7f8a193a-12e0-4cc6-a406-ef814a0e6a98"
        },
        "item": {
          "id": "bec4a8d5-1a38-47fa-9724-3a944cb0c849",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f890dac4-5e63-420a-a3c4-a5b135f92136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cded8de9-daf2-4982-bf17-622541bb8b27",
        "cursor": {
          "ref": "f9e26c75-fb38-4694-a20d-1a4b062578a5",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fb5b9cb3-d783-455d-b668-0b4660edc5b3"
        },
        "item": {
          "id": "cded8de9-daf2-4982-bf17-622541bb8b27",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8d70bd6f-e9af-4dab-9ae9-7f9f066f7ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f12f85-ddfb-48ea-befa-0bfd43195704",
        "cursor": {
          "ref": "b7c23079-498b-4359-9d52-55bc61b7effc",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "be1c94b2-ecf4-4b27-ba65-b58aab5ac3ec"
        },
        "item": {
          "id": "52f12f85-ddfb-48ea-befa-0bfd43195704",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0bd586d1-f7ff-4bb8-90cf-cc41649c3f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd77ba7-ce6b-4b2a-93d4-7837fe7e8fa9",
        "cursor": {
          "ref": "0de50a1f-82f3-4a77-8da5-151a603e273a",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d7ce9ac8-b07e-4409-a975-0d93f264615a"
        },
        "item": {
          "id": "efd77ba7-ce6b-4b2a-93d4-7837fe7e8fa9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "08fa4891-6d46-4e63-b2d5-6c2da088393b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456a2487-06dd-473c-847f-a215a0172eff",
        "cursor": {
          "ref": "6b1f8ce7-2560-4611-a5c2-109fead4fe58",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9905d91d-816f-4723-b0b6-00e35d345038"
        },
        "item": {
          "id": "456a2487-06dd-473c-847f-a215a0172eff",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fea29fcc-35da-4dc6-a1a1-e48076441413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce309c8-ae60-4ed5-9ed8-eae6d1b8f9d4",
        "cursor": {
          "ref": "29135b00-5585-4022-92a5-73b355ec8a2e",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8570e2ce-22e0-4c57-a8d8-bfaf862f533f"
        },
        "item": {
          "id": "dce309c8-ae60-4ed5-9ed8-eae6d1b8f9d4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8594184f-b86c-4c31-9f79-cbee57dfd3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8de5b0-d2d8-4f6c-8d3e-86ecb64e3125",
        "cursor": {
          "ref": "42b0e3a8-2e71-48b3-af9f-6dfa4eab1497",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b02364d0-c5e7-4346-91b2-05b5d09a57c1"
        },
        "item": {
          "id": "ec8de5b0-d2d8-4f6c-8d3e-86ecb64e3125",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a29d618a-3c10-4ab6-b702-c0a3410b389e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca8d78d-4dae-4342-9f77-be52fe7eb795",
        "cursor": {
          "ref": "e340de36-8cfc-4efd-be8a-1c0ed0bc1607",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "43089476-549e-4282-b276-c548f6194751"
        },
        "item": {
          "id": "5ca8d78d-4dae-4342-9f77-be52fe7eb795",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1ada761e-1d4b-476b-b28e-34f3861ac1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea7ab90-8663-4ad3-b794-bc85af764fb7",
        "cursor": {
          "ref": "f2e64e5b-e699-46e3-8a02-a64445f808bb",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b49ac082-6489-4553-acf4-1bea0de9b7aa"
        },
        "item": {
          "id": "5ea7ab90-8663-4ad3-b794-bc85af764fb7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "93ae52bd-761a-48d5-933a-3a1c0b016d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97747a63-c357-4d25-9022-8c3ae8675e9f",
        "cursor": {
          "ref": "200bfb56-17f5-48da-b65f-c28ea70827d8",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f20dc7ec-d37d-454f-b01c-6084e0458fb3"
        },
        "item": {
          "id": "97747a63-c357-4d25-9022-8c3ae8675e9f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "dd9f7402-26e1-485d-beeb-9ac9577e1bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3d766a-20ae-49a3-a22f-60599234ce64",
        "cursor": {
          "ref": "58421889-e522-4376-a466-e8100173472f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c3436634-5c2b-428e-b999-fee652204919"
        },
        "item": {
          "id": "9f3d766a-20ae-49a3-a22f-60599234ce64",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "74d89bd1-0738-44d5-9b71-826a0203bb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae1dc2b-eed0-40a6-94b0-d2d53023291c",
        "cursor": {
          "ref": "8723d81f-59f2-4e33-97d7-ddbd1223ef27",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fe89d937-1f60-48bd-9321-d266fa72314d"
        },
        "item": {
          "id": "cae1dc2b-eed0-40a6-94b0-d2d53023291c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "735f95b7-f644-4690-946d-daa77960bd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0395c803-40d4-402d-b038-fff3c479992d",
        "cursor": {
          "ref": "2fc47ba0-6828-4921-943d-0a9c4ee3317a",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9f954885-15e7-4d3d-bf74-7e423c2da9b8"
        },
        "item": {
          "id": "0395c803-40d4-402d-b038-fff3c479992d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "61b935a6-f68e-41f9-ade6-18f2ca357a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e9efab-f2b2-485b-be55-231d877e7a69",
        "cursor": {
          "ref": "602796cd-18d7-4509-b7bf-2d4442b0f0ee",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2b4ae9ee-21e9-481e-95ac-e24581a85c89"
        },
        "item": {
          "id": "20e9efab-f2b2-485b-be55-231d877e7a69",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c7b56dfc-0d85-45d4-9014-0360bf0b01aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b46341-2ae1-4fcb-ba08-2a0cd79ffa7e",
        "cursor": {
          "ref": "4efc378d-d166-465e-a27c-d1c34f66ca88",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1f39489e-f145-475f-9439-c99793acaff6"
        },
        "item": {
          "id": "22b46341-2ae1-4fcb-ba08-2a0cd79ffa7e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a6de5929-5e6b-4902-9853-5ad171a87165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1821d8-bc24-4890-8dcd-9873a5d8b818",
        "cursor": {
          "ref": "2cd6ccfc-262b-4645-b489-cdf39cf4e9e4",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3f2c5088-20b9-4395-ad95-f95136362d33"
        },
        "item": {
          "id": "ba1821d8-bc24-4890-8dcd-9873a5d8b818",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c9a9228d-53c0-4b9f-a02f-3b91d09f1307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c38a83-ddc2-49ea-b0d3-2786e8ed2eb5",
        "cursor": {
          "ref": "543d368f-4409-4e4f-a444-8473a8d718ed",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1f6fad9a-6500-4091-8a8c-97ce71f75c67"
        },
        "item": {
          "id": "d5c38a83-ddc2-49ea-b0d3-2786e8ed2eb5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5b3fe109-0974-4262-84cc-2dc801bdff67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc19fa09-04ed-4735-885d-56c726abc055",
        "cursor": {
          "ref": "a09675d2-3229-4a14-88cc-25abe3bb148c",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f631dc59-8d49-4c49-8456-6d5a90f8361f"
        },
        "item": {
          "id": "bc19fa09-04ed-4735-885d-56c726abc055",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4d8adaa2-560c-40d8-9623-14ca0e9e8450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19003d6-ed4b-4c46-9b5a-f7a8a3db13fc",
        "cursor": {
          "ref": "64c8bf25-f2b7-4106-a2e1-76748d8c0976",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e2258faa-65e9-4c65-bf64-92c778fedb26"
        },
        "item": {
          "id": "a19003d6-ed4b-4c46-9b5a-f7a8a3db13fc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "eca86e65-7188-4d8d-bfe0-4a2957ff7426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c898bc8c-4999-4144-952e-74668e3ef68c",
        "cursor": {
          "ref": "930e114a-a72e-48bd-9747-69b563d769fb",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "69745a83-c5a6-4546-8e67-14e7ad90d5f0"
        },
        "item": {
          "id": "c898bc8c-4999-4144-952e-74668e3ef68c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4fb0e0e8-948b-46da-b678-fcd2786b70c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7832f023-f8fe-4fe4-92bc-7279a7a4430b",
        "cursor": {
          "ref": "22b683eb-6648-40c9-9c28-68945a2f4db4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "bd048620-2a03-49a4-9622-e70b9b5c743d"
        },
        "item": {
          "id": "7832f023-f8fe-4fe4-92bc-7279a7a4430b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d8b3093f-4d12-472d-8647-8bb7229f7015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053b27e8-f5ad-46fa-a1c8-2f5df83fe298",
        "cursor": {
          "ref": "9a4b3280-cefc-46da-880c-c8a1762896bc",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3c3e2660-16c1-495f-a807-ea8fd75804b0"
        },
        "item": {
          "id": "053b27e8-f5ad-46fa-a1c8-2f5df83fe298",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "62e64afa-92cf-4d5a-9cf2-caef2adfb2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939b33cb-d92a-475b-aa7b-f415b64cd111",
        "cursor": {
          "ref": "732f31ce-acc3-4607-a720-9e14db02e2a6",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2c9f7f7a-0efd-4077-bc6b-65ff1754a3a5"
        },
        "item": {
          "id": "939b33cb-d92a-475b-aa7b-f415b64cd111",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "44b5ca17-c413-4c31-899f-9821d696011d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2beb59c-4ed5-427b-8456-98d2b48763de",
        "cursor": {
          "ref": "400d18b5-f815-4282-8a96-79657dd5549d",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "17dae740-540c-4fec-9ad6-3c45d0cad155"
        },
        "item": {
          "id": "b2beb59c-4ed5-427b-8456-98d2b48763de",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bde6d6e0-156b-4a61-8116-9b7cda479cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a842c2c-e3b5-4a9d-8dba-3098f6bccd34",
        "cursor": {
          "ref": "cf3d1ba5-cfea-4ecf-b16e-8c3051d960fd",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2c67b708-1b81-47eb-b1c2-55d3d896befc"
        },
        "item": {
          "id": "7a842c2c-e3b5-4a9d-8dba-3098f6bccd34",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "841d20b1-43bf-4193-89e3-911fd284c47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57ea65b-42d0-460c-8543-91e93725397f",
        "cursor": {
          "ref": "e108de6f-cec8-420c-b405-ffa01d4ba093",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4f957e66-be01-440c-b5e3-4f444bfb337d"
        },
        "item": {
          "id": "b57ea65b-42d0-460c-8543-91e93725397f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "63a534f7-bdf8-4fd6-8194-f13340321e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a62dca5c-0310-4525-88f2-263508ab10e7",
        "cursor": {
          "ref": "c5832fb0-3902-48ca-89c9-aef545835401",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7be6ed89-a07a-4038-95c4-3d642a023de2"
        },
        "item": {
          "id": "a62dca5c-0310-4525-88f2-263508ab10e7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2b60d0f4-41c7-4b63-85bb-712340f984d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541ac65a-d7b6-40a2-b133-a9a4017d4535",
        "cursor": {
          "ref": "56bd237c-2aff-4c53-8e9e-fed3c44ef1e6",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "91100e8c-f246-4a7d-9862-58ec3cefe086"
        },
        "item": {
          "id": "541ac65a-d7b6-40a2-b133-a9a4017d4535",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "86247e5f-5211-4049-92bc-a6fdd7f32c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c742be-a8ca-4267-9c66-ab8185092520",
        "cursor": {
          "ref": "f5131c42-e2e8-4ac4-9fd2-61dc5639c6f3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3e522c3c-a7a6-4c4f-908e-f7f4402dd72f"
        },
        "item": {
          "id": "58c742be-a8ca-4267-9c66-ab8185092520",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "45bfdddc-c179-4795-a9cb-b995138f18a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f343d112-1632-46a3-a9cb-762dcfb9f3fe",
        "cursor": {
          "ref": "1ab53a09-66a0-46ca-a862-d0f5ad86c4af",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f4111f65-0081-4fe0-b05b-703a53d99db1"
        },
        "item": {
          "id": "f343d112-1632-46a3-a9cb-762dcfb9f3fe",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9caf3317-fefa-4167-8409-eccaf6cd0d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08714b1-ef40-4cdb-8826-1c876d213dfe",
        "cursor": {
          "ref": "03b8d67a-b082-4f93-a705-e7e0a109ec88",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "83743c2f-1a17-43c1-a1cd-eed1ecd5244e"
        },
        "item": {
          "id": "e08714b1-ef40-4cdb-8826-1c876d213dfe",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4d4d8274-e3dc-44f7-8fc5-d3b734ce6940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad50b35-5655-415c-aa5d-db52ef0797d1",
        "cursor": {
          "ref": "a0a76a58-a17c-4c4e-801a-67c4c3c0084a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9643db4f-6c53-4733-844f-b729c3ea2ed4"
        },
        "item": {
          "id": "0ad50b35-5655-415c-aa5d-db52ef0797d1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9fb22eac-ac93-49cc-a1df-6c4577cbba8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e9207d-1cdc-4df7-8b79-90e18be2b326",
        "cursor": {
          "ref": "b171af72-0608-48d8-a793-910f85c5d534",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "b0aeead5-3bc0-408a-a588-101b2912df0c"
        },
        "item": {
          "id": "b0e9207d-1cdc-4df7-8b79-90e18be2b326",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1d5e29b3-b107-457b-9cf0-b60a6a13b1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e177b6-17dc-470b-89f7-f37e27fc99dd",
        "cursor": {
          "ref": "f687cd0c-8896-409f-9cef-175c008a7e59",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4b937b95-44e2-4e05-b83e-3ac56876ee34"
        },
        "item": {
          "id": "53e177b6-17dc-470b-89f7-f37e27fc99dd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "13da44be-412b-4a8c-8550-11540c9fbe8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaca8db4-7bdc-4658-ac69-b5064dd500ed",
        "cursor": {
          "ref": "2552cd69-8382-4e3e-9f80-3b2bb956002f",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9d2cdf4f-4c40-47ba-84d4-437de18ad492"
        },
        "item": {
          "id": "aaca8db4-7bdc-4658-ac69-b5064dd500ed",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a5648f15-bd06-4586-ace0-5d3520a9e434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09599856-f1f3-4bba-b4bd-92ef552b675c",
        "cursor": {
          "ref": "f7230992-ef9f-4b7c-af23-4677e67ef56e",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8feb0af4-40f7-4f9c-979c-9eab26807653"
        },
        "item": {
          "id": "09599856-f1f3-4bba-b4bd-92ef552b675c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2a2dd77e-f3d0-4890-ba5d-ebaa1a76e4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511674d4-7cbf-4c92-a5ba-ba6089623d50",
        "cursor": {
          "ref": "7cf51c44-02ce-4839-8e47-d3a255a6310f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e928dbf9-0336-4403-8877-10f331d7790b"
        },
        "item": {
          "id": "511674d4-7cbf-4c92-a5ba-ba6089623d50",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d64b3873-1553-4737-87cd-c79567327725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fb577b-51f6-411e-9c01-edd558e9d10f",
        "cursor": {
          "ref": "03d7068b-b21b-46a6-a49a-ccfbd94f9826",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b07f6b19-b7ee-4ef2-823f-8e8ede42530e"
        },
        "item": {
          "id": "57fb577b-51f6-411e-9c01-edd558e9d10f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f293345c-81b6-4fc8-9f3c-526b72ea250e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782b4d8c-ab1b-4805-96d4-53dffcc1b621",
        "cursor": {
          "ref": "9972d275-9cdc-4931-a214-61e80e399b78",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "37c5ab2d-ce9d-40f5-8b0c-25469e1688e5"
        },
        "item": {
          "id": "782b4d8c-ab1b-4805-96d4-53dffcc1b621",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "92a1e0de-12d8-40b2-8aa2-f924c49b94d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e0edbc-f333-4621-899d-f0505166a126",
        "cursor": {
          "ref": "3fe63692-d9eb-4fb0-ba51-cd5a8c8e1ab6",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "75a63a9c-1260-4632-aaac-fb7177a92213"
        },
        "item": {
          "id": "a8e0edbc-f333-4621-899d-f0505166a126",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0ccdbb05-cc92-4601-a68e-58a206983ed9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3897601-0d66-4a31-8b68-a94643128a59",
        "cursor": {
          "ref": "67c32327-8e1a-4711-b0ef-f3f8db16216e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5284f307-5915-46bf-9fc3-bb25e9453808"
        },
        "item": {
          "id": "a3897601-0d66-4a31-8b68-a94643128a59",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "63418fc8-8e1a-4464-a290-93dab257356b",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "358f4312-7bf1-45c8-a7ed-b4124ced8d0c",
        "cursor": {
          "ref": "951bb19f-41d0-44b4-ab03-2eb2f341a9f5",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "58988407-1c7e-4238-b662-c7a70a136029"
        },
        "item": {
          "id": "358f4312-7bf1-45c8-a7ed-b4124ced8d0c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2b7c95fa-e79a-4a1d-90dc-10e06165cc1d",
          "status": "OK",
          "code": 200,
          "responseTime": 2821,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be078a7-da87-438e-aed5-2e94d478394f",
        "cursor": {
          "ref": "ef98d07a-e3ce-4584-9af7-f90f67703558",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "46fdd1d2-b743-46b7-aff7-15f57ab4a9fc"
        },
        "item": {
          "id": "4be078a7-da87-438e-aed5-2e94d478394f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fff37655-837a-44e1-84bb-e0719c29dfce",
          "status": "OK",
          "code": 200,
          "responseTime": 2259,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04887d0-e7a7-4bcc-86a7-8b95f0d4976c",
        "cursor": {
          "ref": "e2e31f77-87ad-4731-a587-4008105d9068",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "48deb50a-5f0a-46f0-a7b5-1c80b7172125"
        },
        "item": {
          "id": "d04887d0-e7a7-4bcc-86a7-8b95f0d4976c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b3dfb2ae-1156-443b-bfc6-7699d7a5f487",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04887d0-e7a7-4bcc-86a7-8b95f0d4976c",
        "cursor": {
          "ref": "e2e31f77-87ad-4731-a587-4008105d9068",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "48deb50a-5f0a-46f0-a7b5-1c80b7172125"
        },
        "item": {
          "id": "d04887d0-e7a7-4bcc-86a7-8b95f0d4976c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b3dfb2ae-1156-443b-bfc6-7699d7a5f487",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f532eb5-1ddd-471c-b3ca-fd4cd7448963",
        "cursor": {
          "ref": "f264dbdd-5f15-4bd9-ada0-7213a2f0bd86",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "34d93bf8-33a6-4dad-bfbe-0a96f75cee64"
        },
        "item": {
          "id": "2f532eb5-1ddd-471c-b3ca-fd4cd7448963",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a3e70316-37b8-4198-ada6-86744dc84bad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ae5d0d-7232-4b56-ab7d-744aa178420c",
        "cursor": {
          "ref": "e31da434-2ea5-429f-af3c-5177718a9d90",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "3df28c9d-308a-499d-91f4-30af0970013b"
        },
        "item": {
          "id": "55ae5d0d-7232-4b56-ab7d-744aa178420c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b49919dd-8713-4c38-a35d-df33a1970f34",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}