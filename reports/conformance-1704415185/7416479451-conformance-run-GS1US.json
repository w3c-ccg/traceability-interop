{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4a5de772-165b-436a-b31d-23f97938975e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4c30e4bf-425c-4f7c-a344-5c5a6f7c5f2b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb3968c3-f88e-483f-856d-30dbc5623357",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a9815921-8e4d-464d-a0cc-8b1ce2a1ab8b"
                }
              }
            ]
          },
          {
            "id": "769f6270-999e-480e-b483-742984eaf990",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c825ea59-aaaf-4948-84cf-6e405e6040f8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c6fbb22e-9780-447b-b5f8-c7d7874c9d62"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b213da81-a793-4414-a10d-10b7c267fda2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "79cabf9f-695e-45fd-bce6-5b994c35b371",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c28c2106-1010-4c9c-bdcd-e95c864e6c82",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "182409a3-5a9c-438a-b934-9f7d7e329a85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acf78ca7-1067-4dea-b7be-7ac90002d901"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3bfecefe-9894-4b00-aacd-682e0cdcc53b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6003103d-cd19-4b23-b977-bb7f8c3c80b2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "11951ddc-a40d-449a-a806-21b36cd19ca0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "464c26b2-d6e1-4493-9198-ca949d1fd91f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13b2db7b-3dd8-4e48-8941-49424b073be7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "102fe3c0-6f47-4fb6-92e8-b82b1b66c7d8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74631f70-a5c6-4690-bc7b-2a4266016391",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40b37b44-e90e-4f40-bef4-22e733169884"
            }
          }
        ]
      },
      {
        "id": "56183f5a-772a-4873-84f4-d0c5321ddf44",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7c997ce8-13f5-4628-9de6-928946b7002b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b9c9d80-d72d-4ea9-a963-2637ecacf4dd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d2bc9062-0415-4b34-a607-c4275460b79e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cacec4-3668-41ea-b54e-e64da18cc860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "076a91f3-4781-4261-ad64-72de5754e81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8aa179-2afb-414f-9196-b6c01eddc032",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e28573-ff1d-4bd2-bab3-d08da6ff0f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69d42cad-2d72-404d-a7a9-e0652e83daf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8933969b-1b41-4d78-80ee-342279dee5a6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c46b6a5-9c79-48aa-bab4-78d1cdd67685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef59d993-e96c-45f1-8f67-683a987318bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f99db6dd-d896-4641-9552-9848048f4711",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb931a36-ffb9-4ab6-8035-c473b9e44342",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea396e02-6728-4093-9f32-9765e5cf06da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f737be3e-ff88-4536-885b-ad40b82cbec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f471e852-f425-45d3-a3c0-2d841ccad208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77e183e-d154-4969-8c5c-f089f72bb099"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "504df328-7137-4075-8630-b0bf3b6cc720",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b21037da-98b1-49c9-bf0e-6202db46f64f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaf3788c-3822-44c6-a21f-14b0d1780c6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a6a9dec0-0a48-4efa-bbdd-a8cf9f112d9f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cdf539f-4041-45a0-932e-08853394baf4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a9c97cd3-b614-4ca5-a9ad-48d0bad55ec8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0be9b353-2981-49c8-beac-3bbec966acf3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe3a1a92-9bd7-4a44-b172-575790909a80"
            }
          }
        ]
      },
      {
        "id": "9097f59a-0d6d-4f9f-b79f-57dbe6b2ae0f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "938c2ee1-d944-4dd1-ada4-c2a9e174f382",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8e9f662-f661-4f55-a5e6-fc84074675c2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e00e193c-3c3d-47c4-a76e-49b6749cb791",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6212d7de-7b89-4236-9238-ab3888e3dfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c09f6f-f159-49f0-95ef-af7d4bd4b9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32325831-bef5-4b07-943f-0d54a0ef1ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cca3a700-c6f5-4881-8b70-708148b03021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ab1466-abf4-49e8-aec9-0ea752ff8b90",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0dc2b4-3d82-4a2a-a89a-15273c756601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73af738-b9d2-4bfd-ba49-dc5ad67aded0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a7c147-f79f-45af-a51d-58dafc3ab192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f388b555-60a8-48b8-940d-3262b886cf30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab16cb75-b5f6-4034-a966-99709d31305b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6afdae5-7cb4-4868-88cc-678023fa0061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e21ae9-2a09-48a6-b5a6-aaf7fe15cac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4db8122-9da9-453d-931c-2177d3ffbbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c93ec5c-1982-4d66-a351-dd08faf12e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03704ff-3b36-4719-bbf1-bf91dd08fcd3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecc1ba1-6fb6-41b7-a735-8a3a4af60311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f578fab3-3459-49ac-b0bc-a71305ab4517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9913c35-9b22-4d47-ad66-61887798a286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc1e47cf-e865-490e-a6a3-e6b35ef87c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61a82b3-36f7-4b89-bff9-fe2a8f36eed4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f9fe35-a7bb-4ae1-837c-c8e071cf611c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a714fb0c-b751-421e-bc5c-0d5854688f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4d14ab-d8c9-4d76-b4e2-385f74c458fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1756ccae-fe04-4c01-a5cd-950f7b49c977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f2515f-6eeb-45db-9639-db84835f2104",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108ac20e-b791-4ed3-9c04-aac206d8fd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e54eb5-b4e1-4370-b18e-af5c4e55c029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5bdaa7-15da-405a-8050-71bb73c3cf74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c852b242-f5a2-4bb3-8b81-dd0a6c3725cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5053434-4357-4490-88e8-1430e0e88771",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496d239c-7410-4dac-a127-ea017d3e9328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee44151-fe8f-49d6-a950-5432cdb3d3b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d8b0a2-3819-4cb9-8dfa-20f2f1f0eef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85cdf619-3c1a-44af-9d3b-cf3182e019c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62db26a-01de-4e1c-8680-5479face5fe0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49844c17-1a71-49ba-9f57-2857cc138391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d79dd49-eb5c-4577-9345-294e5c64e63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ef9238-b567-443d-95e1-ae43aeec59b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57c47974-f01e-4c77-9429-dfed79f31e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdea8c9-9766-454c-86e4-a4fb23af2c47",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13d60d0-0272-40fd-8810-018df5ccb884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097ab0a7-7899-4227-90b3-0acaeac036e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ee490b-28ba-414a-9e33-27a6a2f79797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e94e392-20b1-4b78-897b-3dc01f1faced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dae9082-2f59-4a39-8b4c-47c54c2fb3ef",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e312ce9-6650-42ac-80b1-5c0a20e28a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c987a1-0155-452b-a8ac-a346d9375a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b6dc9f-c2c5-4d16-ac73-668191011949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10555b72-9aee-4c66-b7f0-1b8da9130a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8f2bd5-5814-4739-acc0-b5665cbff365",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4a0375-f00b-4eaf-8c89-4796a652a667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a134a2-6e74-4538-8ca9-0a7e5f6a99ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e49cdb-5061-4e43-9379-edd5af176374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b8c1cdb-0cd7-41bd-9e08-9d0f1b5b9ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822425da-9c33-487b-b22b-4f1c1cf75600",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157ebb14-066b-4741-9ac6-8f4dc8fa770a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2619e696-2cf2-4f88-90f5-0be66eacad19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81b3210-90b7-4f54-b49e-6da6a794c44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78977588-df9f-4aec-89ce-5cad2e998ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a551c395-c74d-41ed-906a-e04aa66a1d94",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636dbfeb-ddb2-49de-9023-a0a625f4af95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf05ee0-4957-4685-ba12-227d8f01bf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38a7510-34f1-41df-8b72-2252dd00735c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07f34731-de1e-4819-9e94-0133b27fab1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b63953c-4fb5-4e7c-a0e6-a4ae66aa8b2a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b634f2-4ca7-45eb-8c12-97d573e9c808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18fa590f-b1a4-4e1c-98c4-902374ce7a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec1366c-16cd-42f1-8c19-24504d5ad3be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a60113ba-dcfa-4015-a80f-d34cf22c34ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becc794d-ba43-46e9-8e7e-918ecd154b45",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fbe1ed-1ea9-4d80-9996-f1d3fdc318aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae103b11-b56f-453a-ae75-e4755fc92178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c26f7e2-d0ab-4028-882a-5e71281c2b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1968b7bd-2173-4e1e-8970-d54614489552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37747693-31e4-467d-80dd-2ce34c383413",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dea12a3-06f9-4a26-a1c9-f476e8e54735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc65fd5-c67a-4c5b-8b22-096105cd1eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c7b297-0efc-4f0b-99b2-217204496eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d496afeb-be96-4b93-9f72-a7aa7852de35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec15fe30-01fc-4ae7-8f8c-ae7e15d4bec8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c7b53b-2923-4f4d-a38d-ac0f12feeeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f49869ca-382c-4b8e-a080-306daf01b10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9de429-5c57-495d-b8e8-f104b109b0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b189b42-467a-42a3-9187-4534a98a090f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db9566d-2bc1-4f89-8721-d07ca35b2de1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50186988-4c5d-4098-b681-54d7f05078ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba089c6-84d3-4b5b-9a5c-adf366b750ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77c1f1b-8bfd-48bf-81d5-98e6a540f598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "77d8fa23-66f2-459d-94e8-b6d552928696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81678041-f553-410a-a7ba-faa40bbefd3f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef825805-828a-4db0-a719-f664126494a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20a89f4-ddbf-4616-8c35-1c926736fa8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6205e81-f2bd-4d7e-81df-657063d68ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c09c9e6-8c31-4564-8be6-25a72185fd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5035b0-56b2-496a-88fe-7b762a776347",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4133ca-3d68-417b-882e-5c525e83dd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b045268-9e9f-45f1-8f60-10c7a62ef789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f69a5a3-b47b-48dd-82de-8dc0c77ca615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c95d07-a9a7-4b87-9f71-e3dcbf6c0fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a555376f-122b-43f7-bc5e-92598bb2f340",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f2bfbe-b35e-4c1f-b9d7-7cddae4c395a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6fe2a4-a61a-45ad-9555-b3bd32d182b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498d9428-43dd-4183-95b5-bc80b76b3f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abd8ad44-94bd-4bad-8ae4-9ff6c34d5bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ef1548-ab9c-4096-9a34-39a726d36e0a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8440f6-2982-4cff-829e-518723cf326f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215fb0fc-9a23-406a-b3d7-938e743c58a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b8972d-ff63-4d82-91bd-6ab423d52912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2009cd75-d3d7-4027-ae5d-6685dd0a14fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6505709-4ed5-4582-987a-b6ce1be15b3a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4697c33-f4c0-4491-bb39-5e064d8a8907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38f540b-d98a-434c-9a26-465f4873920e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48c7ce0-f085-4ca4-98c3-a1992dc5801e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22453757-bec6-4423-87a8-db9540e0438b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c67ef7-311d-40f0-a4bc-7b18e5d22092",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775610cb-59db-42de-be8b-6ea2714a509f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9e8083-8b52-4064-963c-3385ec08b7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9509b450-aab3-4cff-ac2f-d17d1e10b8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c37affd2-672f-4ba4-beba-65316ba496cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1f934e-7847-4379-bfb4-4b57ff585f87",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226e68d7-c0bd-48a9-aee8-068ade476f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd4b772-adcb-4059-b958-75bc58abd03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec377d7-3128-46c4-b1e2-4e9dc3ce90ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eba1f95-6c9a-499f-9d19-153f445f6b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557a2c61-2a21-47c5-9574-540726a4ab47",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842dfe0f-1668-4642-9dc7-c040daf75347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4172495e-dcd3-4e73-a00c-d172f34c2884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d7b22b-8c62-48cd-bc9a-be0d429f98c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd08b56-1c2b-4c15-97df-0f1f8a8aa3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888adffb-b7b9-406d-aae6-1f52ddbb38a8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e228959-6fe4-459d-b365-ff7f2470f9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d96837-a86e-4a78-8311-865345cde53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9667cd-44c1-46ee-a44f-87db608c637f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4310db2-038e-46bc-992d-1479c012f8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f713b92-e91c-4f24-ab94-5f622011488d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88241707-1e91-433d-82bc-8fc3f3552ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11965cb-0bc7-4e0c-9983-66fc18711a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d017c65-237d-443c-8ea3-53cdcc0a9bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e11319e1-9ce5-4216-8db1-6a48729083ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5695f25-7ff8-42a2-b2e0-68f882b3df96",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9c2f67-da31-4818-82f2-66ef81475e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b966bab5-111c-4d0f-918c-34d66acdda9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9adb35-05da-468c-a56b-767a23fbb498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d6b1357-3a73-43ef-9196-2600e70d66c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ccc886-e14a-4d04-acd8-08f5333d6d8f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432f558a-6f4a-4735-b1d2-78ed7c67ec51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72225bc-a813-4dfe-9baa-7b8d0392a592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e41a3c-fba0-4a5b-9c16-48e983bd4408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a62679c-ac0f-4433-b718-74104abdb733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6585aa6a-673a-45c1-962d-107dafc293ac",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600842aa-e4f2-415c-a527-9abcd3c8c7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4acf7f-b439-4993-9eb1-0459bc583b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d820f5c9-bfbd-47c7-961d-018ec5f01e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39949163-09fa-4235-985d-bfb9f5927533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b638521-ddb2-4c7e-a0cf-3974ec12f841",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099a95e9-7871-4986-8f39-483b66b01fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4375cd-6ca5-4734-8131-a79689652375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d926294-72e5-431a-a10e-882d19b4974d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d10013-c32a-49cf-9b48-9bdd77d6549b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a960cd-9ebd-4c92-9989-d485f152f2ea",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268fa8a1-78da-42ff-b9a5-afcd193e900f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce45da7c-2b90-43ab-ade8-69925217519b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b37ed4c-2ec6-466a-b918-a2267780e870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "104187a8-3bdc-467d-9d4d-e40201996c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49686192-6123-469a-850d-c29fba16732e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8928510-ccbd-4fd9-943a-2cfbe85f6687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af6d85b-8ace-4d83-8004-7268b337d6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43108d0c-052a-47c6-b07b-f7d92149e175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da112351-84bd-4ebb-b821-ad6a1242a890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672f3028-b49b-4896-b971-c6729e3be190",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0d8fa8-7b68-46d5-b6fd-d699761de09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3158b5-4381-46b2-8b84-2aef255a0bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9920f947-656a-41ab-9fb9-9f3c2fb594a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc92c8f-f779-46e4-acd5-65e6a62828b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e226d8c5-ff4c-4441-8d57-adca1781a569",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0799bae-0b8e-4394-94c9-c97687280a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21032eb8-1745-47de-bf52-a4b60ec5c203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147de0b9-541c-472f-b09f-85a3ebb8b6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12503be9-7269-44bc-940d-ed0527cb6844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15508cbf-781b-4f30-92e2-c15127fa1baa",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7019dee-0c77-463c-a5ef-d107203d17ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c716e5-213d-4896-973d-6316a341fb11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4e3a49-8ade-49e5-8904-c2d5ed3935b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81ebd37a-3ed3-47d2-83f3-cada7115cf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4179ab8-d1cb-4ee5-b5ac-d31191a6a591",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677b7077-8457-44ef-a316-50f0914bc886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43a2e57-3024-4b16-8f19-12d7e8dfe44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b566d77-b58a-4fce-8e82-cbf6962fb938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa944b6-0fec-4c87-b287-6f69e65123c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaa1ccf-60aa-4adc-a859-b7d71f23a4df",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55b9bca-7ce7-4b54-aaa5-338e183bf457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e9696d-5848-4877-9a38-c32b5d62e995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364729ad-f8ee-4220-8b80-6d01a661c066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f841418-67f7-46d4-a29f-b9e6532ee25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54cb532-dfef-42b7-8765-5f8d5cac9cbd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c3725d-2520-476b-a79d-4ae70874cd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b575c8b-abe3-41f6-879f-5484d4c817b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6fbd692-059c-44a1-b790-ca595a2170f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e93b8be-c2cd-4370-8169-6c426e7db76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8be35df-0e45-4b4f-8feb-2f89ae95a0bf",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c37630f-fef2-4efd-b319-b4d6a684b326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f254a48-ff6a-4674-a296-2514d8e9f719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a49e0d3-ecff-4f35-b4ba-edf572871b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "272c28bd-528e-4ce2-9903-b66f6614eb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e472eb-6acd-4d2e-aa22-8d143e404fc3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8deeb2-bff6-4893-bc86-8cef1fbe43aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88487279-a6d5-4f4e-bd8e-6ae7a329517f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b2123e-2c5f-4613-bbd0-4b7e74c57dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3adfeb76-dd4a-40a2-a220-2f8febb13fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96350fb9-1518-4d06-89ee-c63f7c19ecdf",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3ae45c-f1e9-47ab-b867-15fc4d68f76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938c8a32-38af-455d-8a67-8ae784777552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a571ee8-3d62-4b9b-bf6c-0c633b402c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf47954-cf70-422c-bd7f-417bd63bc80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b1ca8c-0e65-4565-b218-2658de1faab3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8601ab-4dc5-4fde-a12a-f42d147fb656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba652d6-de1d-4c42-b6f1-0d73a73e7b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80429be1-3767-4b2d-af6c-639198b205f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f995a471-55ee-4fc0-91b0-52fe51ed3eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4257a442-258e-46ea-b339-7cc254c49acd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e396ed-3504-4173-a91e-eb2ab02eec2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb99963c-dba0-403d-92ec-0f8eef3f82be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f03acfb-afb8-4565-816c-aa5eed1acf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "93ad932c-6012-464e-bd0e-65846efa3708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8f7953-dd67-41da-8181-a3ca5a59af57",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c1da56-f65c-4239-83b2-15c47967a01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82764af8-8404-41a8-b3f2-e31a77d5fafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405e9745-c2fc-4484-8885-dbd079b885ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3868ca36-d48d-43d2-98cd-e039eda7a6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb65dec-3741-44cc-8bae-cae0cfc05403",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c00888c-d9e9-4ac7-bd73-695e97642deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e1aac2-c4e8-4e64-8610-1f784496294e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5dad866-ad91-409f-b6e6-5eeb83ac202b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14a20dc9-489e-4cba-bf29-faa53fbfaad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f997d5-0231-4374-bfa3-b28265d7bbc1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6a1087-ada6-418c-92d8-2836cd43ad36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95621f9-8214-41f9-9598-0faba27f716a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ee7833-0994-4cfa-b3df-c8474063ce18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3204713-6a3e-4a96-b898-99f604414947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca536933-4f7f-4396-b806-97b9aa7ffe3e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561238ea-d208-4f06-9265-d21fb143ff85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1809e55f-3931-40b3-a652-a5c696a17a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af46fd1-504f-46ec-a5ee-ad53037189fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "607b33fc-db71-436d-aa3d-82b7e5a01815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1765ccbd-0126-48fa-9dc4-0ab830377389",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb434854-20d7-42be-b381-8a91e82e869f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081be08d-dd1e-4986-84de-01d27fbc223f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d7ff9f-2e4d-4329-af8f-15f37aa157d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc87419e-cdf9-4c73-86b4-78188b8a09e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed961ef-2d2c-49ce-bacf-97bd6d159f85",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad3814b-0ea2-4a75-8225-1076a45e1668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f10ab1-099c-42a1-b993-cef7cc44cf9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061b97ef-5764-4740-8d1a-191f8b79b637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9875fd53-b606-4094-83db-5f0391490037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57c6213-2d7f-434b-ae6c-85af01d9ecb2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86dae132-8ced-4e3d-be2b-e54c749cb0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782175f2-63f2-4240-b00c-c3ab43aa44d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2325fafc-9834-4364-8d16-be7ec7c24d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a47492-1ca6-44f4-a1c9-467f578cb7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071d95de-bad0-404a-a09f-2acebc70ee18",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7119ea8-b5bc-499f-8f5e-a9a2eae3a58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412cf133-84a8-4a47-b12c-61167e30a86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504059fa-2f7e-4052-8153-74aa15523d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0442558-3ec3-47d7-96d0-424d2b8df8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07514c13-a407-4531-a147-e9ef0dad105f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5082fea2-2bab-48d4-9ccd-bf99fa3aee27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59091f77-3a66-43df-8256-3d9e888de18e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e44b5da-b109-4d3c-935c-a25a29594f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94c44973-7294-4d4d-b6df-bf5e8381c285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb9a696-a022-4d62-a3ba-880e5e683e7e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7f17b1-bf69-4076-a300-fb1f50c1536e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0a3241-7c1e-4b52-ad6c-a4b9f4aa9412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d39d7d3-af97-4f38-ab50-05b2d56761fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "735d18b8-f5ec-403b-ad09-2052332180df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4f5d18-0b57-4fa2-a182-4b5cd44540de",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf9ead5-f08b-4a70-8529-43f8875a7829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f420f09-15a7-46a3-bf6e-5a38f221e40e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861f499d-3a68-4feb-b7e8-35b161df3671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "257c24c5-0d8d-43b7-a37c-613d4db4ce78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd0cd4f-3610-4e53-abd9-fda895248344",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebaaddd8-83cf-4163-a8ad-9532c782dcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a944e8-5b0e-41ce-be46-d9955a3d8e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bc7f2b-287f-4206-83bd-9bd9beb80e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "df51da3c-c959-48d8-b8df-4d22fcdb0be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb5c097-47d1-41f0-8d1b-c907fab4c218",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79b49a6-e9fe-4343-a39d-a814a8069feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250f512f-f531-4804-85cf-145162251795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc40cb2-bff4-4758-921e-88e9fd0616dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd9014c4-43ce-445d-8b40-9648673b95a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43ef510-a76d-4e1a-ad33-cd8e698414a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d803e3-17cc-44c2-a29c-e63ad7ab1b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e324c337-3dd3-4cd2-ba54-83ae5dbc6376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c87ac2-ad65-4663-950f-addb94a41d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf7803d-dbb5-4e85-b7c1-c9228c0fd2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53480e3-3c69-4deb-a38d-cc92574f5233",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8b10a0-720e-4803-b02f-0ac2a5647720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c16322-08e7-4d5d-8713-8394bfa28039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8ddbdc-fa6a-4b70-a189-a0cb05d0049b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb85613e-e201-46d4-803e-d0205e602504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16c2f8d-8065-4ba2-a40b-83e4fc201635",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fdccc3-bcb4-4fd6-aa16-5ef990ae6d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d38bdaf-2786-471c-a8a7-19aafa875580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526da512-b135-48f7-bbd8-38ebbb73d06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cbbbe0-c94e-4c87-a3f2-b3ca7411d7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0970716a-4aa4-4d8e-9d6c-78feb8e1dd64",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4cca05-980e-49b7-9b6a-9287c3ed0af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05381725-f1f7-4da9-86c5-7535cfe28d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fd9ae9-94cf-4140-a461-0c358f2b98d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "594b851a-ad4a-48f8-ab0c-9de854fafcdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b782bb-e38b-4193-b02d-acbc1d01b948",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d389cc89-68c5-483c-bbb2-58b4d056fb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76ca8cc-6c08-4da5-adf1-7c600c340289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf6fdd0-0654-4615-8c2b-4cf32aaddb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4afb0c4-6431-40b7-a6a5-5c42239d249a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9974ca9d-3cf0-428f-9db6-7a16d623f1d6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c518e00d-36b9-440e-aeaa-11cd844c94f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8fefd5-0134-4700-9b29-1944be735a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edd1003-a572-4f2d-ac5d-f0c10c1f38ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbbe5738-3b1f-482f-856f-074333574e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99df2f21-51ea-4595-8b3a-2cb4462d9393",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20876327-138b-4862-8f87-601adf663ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64ab447-6227-4827-a731-5c1b3d2ad71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e6f623-6c1a-4c91-a950-a4905ab55434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "398c2801-9ae1-4f01-86a4-f8de00954398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90662df0-0260-4913-82b1-093d8260b8cc",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73eecd5a-6825-4103-90e6-08fe74f1e273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c105c51-859d-4459-9519-284b69eb33cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e048b586-56ed-41e5-821f-bae611ea6bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a5aee9-1065-411f-ae11-2f8060186b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a917fe-6750-4979-ae0c-2e3bc6f83dd5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a41345a-a5d4-4162-ac90-8909a2a63484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198eb45a-ec74-4452-b5b8-d367a47fad1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335f1c1c-7b0d-48eb-a4f1-7c32979932d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0b3735-3a06-4576-be9e-f27678f54d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e340f7a4-18a8-42bb-9fa7-293737cf097e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11dc440-9074-4248-b205-f08c48d002cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ddf42d-9c55-48ff-b13c-509347bed322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45cde4a-ae7e-46ce-a1de-c3a59c18af12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "45223fc5-f13f-4207-9f0f-2a9da6c22ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11521b54-ff43-49c1-bf83-be7021112537",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad626093-addf-496c-8604-5d435e131542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c7a50a-23fa-490a-bdba-047eb31bd4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a1ec0e-f3ec-420f-833e-9dc7e45552ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "646e77ae-7a3b-4211-9502-e8ea49de73e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d907487f-f911-4b78-9998-f115eb0d0ca6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25eaa656-0bb4-465e-bf2c-265e4630e7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa2730f-491a-485a-9953-991698bae9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c339dfb4-ed5e-467d-8593-7528e0bf6df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f124736b-d887-40af-a41b-95d9c8a044af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6f2b92-0948-4a9b-8ec0-f3442c5dff3f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161a11ed-d66e-46f7-8c8e-6ba6dd9e1604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49d76ca-9af7-48cc-9618-3b78d4f0f1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ae7353-97db-44f7-98e3-59dc1ef1663e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d27345-8ffb-4e6b-9e57-128236f64bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6859ea9-1145-487f-8064-c0fdf401e38c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695ae6a3-2ac2-432f-8f12-0f4a4e1d7672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9129345d-33ad-48b2-905b-974661aef0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f5cef0-943a-49c2-891b-e73d3d468644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "538a595b-b282-4bd8-89ea-a73e157fee12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165722a1-d8aa-4222-b604-fb54a17d2b01",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74fd7fd-73b2-448e-b1e8-7b9d28ae3605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e075b4-6dc5-4736-b599-3309702efd46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e81821e-5c49-4977-aaf1-46dbdc2ab165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f13bd75-2056-40d8-bc04-06d1ee9a16f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d18d2f2-0e1d-4d78-9062-764586251202",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a141dee9-8020-4c3e-bccd-b8b8a7fbf8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a99c6ac-e762-4ce6-b78a-158bc4021cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a24f58-40ef-4d60-a88b-6eee86b1f66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e1bc48-c6e8-4683-b674-bc0aa11cf80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ee401f-19b8-42f3-8ce8-521c5832c86f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a907018-20a5-435c-a842-bb1fff5399f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49cafbb3-e4f5-46cf-b7df-d66fca3a8664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70706a9-9ace-4136-8562-c9c646098647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a587247-54ea-4a22-8611-ee20dfc57822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1e0e02-2bab-41a0-8d10-a0665ef8dd48",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce0404b-ad9b-4d0f-96af-44fbb9c444bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fbbae61-2346-4860-8a55-3971220d1d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89aba211-c69a-42e3-aac5-5352d39cc7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5bf979b-da40-4cee-bbc9-e9e3780aef42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4105b965-1c08-40ec-8c91-6b220ff9e201",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd79fe8-023a-40af-9081-b1d783ec94f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976a8dc4-fdef-4866-8244-400b6ed3d559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3200ee2-09f5-41d0-a851-698879b01af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3f1624-6174-49fd-90e7-2b722694bd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4936b7de-ea68-4e7f-87c2-efc1f79f908d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dc7d14-617a-4d49-b0bc-42e7939584a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61cbe637-2b75-43bf-a426-4c1c5b92cb4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574edcc5-29b9-4580-91dd-97686d0dfd2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1044a82-33cf-451f-bebb-bd1d65bde4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b27c60-2009-456b-acaf-cc9cd63c64a1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d084418f-7a3d-432f-9521-f517acbf5d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e173802e-81a5-4770-8244-b81084980498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8faf0429-9a3e-4461-ba0e-7086860d3d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41490d57-2198-4be9-b8d8-7423cc2c5111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986283e6-5d77-4169-94e8-886546010629",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cf127d-609c-47ac-843b-5c8ed1a431d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1471a40c-7de9-43b9-bd8f-36736f1a59e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee2c816-3551-427c-a681-0ed100701c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6570734b-b6a3-42d2-83b3-089497b006eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7371241c-82ee-43c0-ab41-87ea65e17c94",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43505c5f-6c77-4f4e-a8d7-70f787e44de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45bd5997-0426-4f30-a8f3-1d56cd6f4e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a961c2b0-54c3-4371-8e9b-f02a5208bf2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b541eb35-4ae0-4c59-9382-1e1ab3f52b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a67af86-cfab-44cd-9ac8-b2fe35665f6f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e322cf-c355-4a07-a98b-36f2d189c14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb98057-35d0-4f9a-b2c2-730fa8b75902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256c1975-2278-430b-8591-fa611299d4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88f42091-810c-40aa-a724-3b79bb8425a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4b7238-2b5b-4e63-aa97-f0db2bce37e7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afde8329-2f79-4f57-ae38-62a5400cc2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b2906e-a790-483d-8683-0d1a11e855d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964e6e84-7a5e-44e5-a11a-b68c119d41f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f47650e-2fe2-4fda-86e6-6e887dc876f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0d5526-95a5-4920-8b13-cf87906e2d6f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d58c2a-9efb-4467-a9b4-31f03875e388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f851ab-a9f1-49fb-9838-674de0e0db1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0a1fac-2a23-405d-b7fb-da010a2b6c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3673fdd-7d84-4b97-b88f-3e6c621b0b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a41b776-d11e-4304-9234-e2ec9fde59d6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1fd00e-fb76-4226-baa2-cafa3b713893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0629cf-1dd7-4230-b021-85c5b3d7e6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73496ddf-58cf-4ccf-b443-ea3a34b51fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b70d9e97-72b9-4eee-8e63-410c777e8017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db114c42-9e3f-43ea-b1b8-df6171d969a4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95483a1c-ba37-4098-8a65-c2706db0ffd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aece539-321e-45ee-b74a-c57d899a6c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a77312-c3a7-4d5c-9278-9adc960a0035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a17ea98b-c52d-4056-ba72-9284613b06cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41c2935-77b5-40b0-84dc-442b63a8e99d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93a9253-a43e-460b-966f-55627f0b65aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c24828-991b-4d7d-8318-400138b315e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c2bf44-d2f7-4017-b856-03c534a9e1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "19a379e7-6e33-4c57-9c02-ef8eea4b05f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acc0cde-1d2e-4169-9814-8f39424fd8cd",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7c3081-645a-4ed3-a829-f5f2503548a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3b2381-7d52-474d-b871-02e2c017cb9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f124371-865f-41c6-837a-c04bfaca6321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "133c39e0-1d00-44d0-9c9b-4430cf5d7e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32e385d-ec49-4c9f-85dc-d9daa51aaac1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "739d0d61-633f-4efd-89ea-b1ed36a70159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89189503-1aa9-445a-b78a-871de6b661cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a218520-0f9a-4642-9789-58ba6bdb244c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a514852-9cd5-43fa-ac29-ae22315859e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a07225-03a3-4694-843e-65bbf789977c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f6db17-e6a1-45fc-b90f-777625eb9a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9739e6-f75b-4e34-9b83-4eb0172d2857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18b94ec-3df7-4c50-bb46-894340f182ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f155d440-d284-4c42-b36b-0a9c02767aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c240056-5b6c-4189-a06c-272dd1e9b217",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6386496-6946-4ba9-b947-5d4321860660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3df72b-beda-4276-885d-579679a303b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a8af40-3d4e-4571-89a0-16280a272771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd673ab-bdad-49a6-ab8a-a40202839c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9b0ad8-9c63-4f80-bd98-b2c00f45f687",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edcd92f-8440-405a-a5e5-56d7422874ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "038d2b6e-0636-4bee-94bb-058d922a90a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc7c250-765e-4cf0-a20a-6784ca9635eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "27cb17f5-d1f3-42ca-bac5-e04022d95cc3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "08fe6188-9495-4b36-a5fb-96c44cdecf7b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b900840-cb17-4d32-887a-5ebeadd415f5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54dd336-071c-4910-bd76-08948b728725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12a5a21e-c3e7-4ac3-aa5b-a2970f66f73f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5767940d-12ad-4a66-a49a-a17b437b9d87",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ea32f9d-e59c-4c51-8c9e-470e624b16b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c20cbfa2-4685-43bf-8cb9-9f63b3c6a5c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f36b6340-d6dd-40ff-bdb6-4de0519e4ecd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79d334e8-fe6a-4d41-8447-4691a98cc734",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "504c68b9-17c4-4538-a9a6-2d8b748e18d5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "88e4638d-35ee-4cfb-b1fb-c3da20e7663f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb5bd81a-d952-438b-92c5-2cf3004b35f2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ce04a5cd-d411-46f6-9756-94c148ddb491",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9d890d6f-45f5-4915-bb38-ffe8569aacf4"
                }
              }
            ]
          },
          {
            "id": "ab4b2540-1369-47f7-9b4a-956bbe796c1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8a5c30df-ec69-4390-ba16-9949442a9254",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7570dd6f-a98f-4a54-a95d-6f5777898cf4",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e139a22-a693-48cf-bcf1-800e0cc059f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c14747d8-6c86-49f7-80f9-60a0689a2ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878e63b2-6fde-4675-8315-cd21c9e12db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61f7d0c-0c8f-41cc-bd0b-44b0ff812004"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a3a4204b-af88-45ea-a1e6-a18a9c2db248",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c8a017c-1af7-4e36-ace0-a5f5e845b53f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5268668a-029e-4a33-8964-952465b74bd4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be58c12e-e1de-47c4-a464-36608b6eb82a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "de367a44-48fc-47dd-8268-d2e6618b2a9e"
                    }
                  }
                ]
              },
              {
                "id": "2ca2670f-cb84-4f1d-8f9d-daf845ab66ed",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1240ff09-98c5-425b-ab88-919473b9e1fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e45354b3-f323-47c5-b0ee-510e95c2123a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41b57bb1-6c54-406d-b11a-44a44899f6d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fb0f023b-eda7-4aec-b18c-069a4c098174"
                    }
                  }
                ]
              },
              {
                "id": "60b9d58c-56c2-40c6-bead-ba53a1ea04e4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7752fe54-553f-4b8e-a32a-17235518eb2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c30ae490-54b4-41fe-964e-0448706d03a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e37d155-9e4b-47b0-a8a2-a5045f8ebce7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "709e064a-efcb-4da9-a0d0-badde28808a5"
                    }
                  }
                ]
              },
              {
                "id": "e6880355-70f7-477b-a344-b760ec623207",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9283ac3-7112-47aa-93f7-59b9f3d88eb4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "991fcd74-3852-4c86-9c55-675d5ff65c00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07e2c78f-c718-44d5-bb19-c88ab0172622",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "395d687f-b799-4caf-8860-aa2984ed50b8"
                    }
                  }
                ]
              },
              {
                "id": "28878941-ae81-4ab6-841f-a7594c52450c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82f89d7a-cbc2-43ec-9ce1-c3b345cfce80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f44e7b0-9e43-4be7-ac8a-ad864756cd4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a817e898-5de7-4420-913c-d33584fbee91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "10620576-bc91-4b60-8c0c-7ef7029bbd59"
                    }
                  }
                ]
              },
              {
                "id": "15cb1d9e-1fb7-46ed-ad7c-045a49c2bdfd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "101e3b20-6794-4550-bcc6-033a5af617bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "781925eb-7c8b-4eac-9aba-d384fe0f7b66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e0231b5-67d8-4c0b-954e-c572b918a230",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8b200424-d9bd-45cc-ba29-b610df625bc6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "02e469de-b65f-4dd7-8a8f-f0faecdee333",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "338dfeb8-83fc-4372-81f3-d5dab9b595d7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "480d9c2e-cccd-4bdb-bea4-33d371ae2442",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3913e858-b7ad-4bd8-b93b-2f301b8d243a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5be9206d-af4f-49b6-bc8d-87c2470b695b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "68dbb63e-e3c0-4497-bd4b-d935fdc3c610"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7eedbd5-9453-4c33-85d2-fe444f14722c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62cf37ea-73dd-44af-93b7-2e7b49564f0a"
            }
          }
        ]
      },
      {
        "id": "f18bde2c-0152-4ea7-977b-d3d8935814e8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2fb75147-c36f-4c9a-b573-878c913a937d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06df4fd0-737e-4ef7-ad32-fd94275940a6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "433ec31b-c9f1-4228-8a71-649a376b3113",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b596160f-20d4-40ad-9cbd-36c2068f45fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f81753-6946-4afd-bd53-b0c05b580cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd55f6c-fcb9-4f4c-bfa7-377ba8a92210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d49790b0-00fd-475b-833d-227eafaae0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9424d3e1-fd9f-4357-ac3b-be5cd4be871b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0e17ac-e315-49af-aa74-eb9a4bf73e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d599f84-28b9-4f1e-b69f-5f5a2894db47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba49f1fc-2790-4e76-ace9-c1381563c10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de10b730-224e-4f5d-bb4c-3a477749187b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3f1ea2-f008-487b-96af-1b158570086b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bdce21-38b0-4a57-b686-069684d13acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94cde59-56a7-4028-89b7-2033b55210a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70620b2f-a1c8-433d-8653-cbb6ee8f1627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fabf68-b257-4fe7-96c0-64c56afb5c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a7b6f3-e83b-42a4-9c27-a38dc97283a8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021e11b7-a938-46e9-9c2d-67cacbe8a3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fee0d68-54a6-4009-a56a-66db919d90ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6225ded-6f21-4672-aea7-a76787a8e029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c12dcfc0-ef0c-4c29-96c2-513859079014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7265289f-76d9-42c1-9c8a-6ae4474fa1b1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bad649a-7703-42df-8e85-4616999670a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127f11ab-46dd-4c8f-b5b4-2d84702fa766"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa3647d-d763-4c30-9ea2-103a16a82700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69caab6b-c780-48c2-a596-78d99b250e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405dfeb9-41b8-4b62-bc7d-2ec09591b869",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52a5227-3af2-43a8-ad07-07bda47243f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73602d63-f467-4bb0-9fb6-d52b8a4c7272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324d3697-0a69-4bac-afc7-29e0429b4e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14299816-5523-4fae-bdf5-a9ae84e44179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54196443-4659-4660-859c-01e54f666575",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35fc9af-915e-4224-9d43-83756703c3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7821d2ca-4543-460e-89a2-ffbaf66c7b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6901262-fc92-4a67-a5e4-e3b3f2a1efd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b02b085-26fd-4cf3-9367-b8bbd28788b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0d61da-43d5-4ed5-a911-93f967adb867",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a0d317-6ced-4114-9673-b5a3f3892c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d927cb6-6c4d-478f-be5c-51b845cfcb9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6792c09-9041-4d10-94e2-723b05d48d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "236c3a95-8bee-4d55-91ca-87c0c65e0c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2b3214-2b3c-44f8-9266-cf5dc42260e6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55013ae-a388-45a8-9640-f99b56d39385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f8d0db-208c-4616-9d50-01afd186546c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0780ab-9889-4ae1-938a-54ffcbb98a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0094839-5614-48af-8cd6-a8b92ae3493c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18360cf8-e7c9-4f52-aafc-6a0e8a0fa4a9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13785d44-4a43-4667-88fb-bd6a1595f972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c85f66b-50bc-43d6-84d1-ee1743427085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bc467e-24c1-47bc-9fac-90c7d29e4dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1f231e-4a29-4c92-9732-929d0004ed99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349d0e4f-780f-415b-82f1-0c0f28ad5aee",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78310477-b948-4b25-be6e-3d92aab06ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f87d03-c577-4943-ae72-e0815660e6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2788b8f1-9fed-40a4-9f49-a809d89ccafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4df60e56-dcfa-47f2-9f0d-97616a77fe16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b389c112-96fe-4580-9549-ae0b5eb7862c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a2f1ad-0e40-4a06-b4df-76fafe21ac4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba36c17a-5c6a-4e61-9331-c2f6ee94bdc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69be714a-b4f7-4d4e-8578-34cd9f09b723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4219ff84-c11a-45b4-910e-70e487f52715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d0810f-e75a-427c-b4e3-26849b3b31f6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef1a714-a10e-4f74-a523-04e1eb8e8b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87f4894-f5ce-4866-8aea-a6a27c61d4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a74f33-6b04-41ac-97cc-705eef8e8422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c17ce448-1e3c-4c50-83ca-42f7a4dedfa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc33bcf3-5077-4020-b3c5-03c507ee62e8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d613d4-ed85-477d-b8a9-9990a9c719c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2844c5d-29f8-4765-a860-92fb7f0f7a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e6f06e-d73b-4ba3-893c-289f59f14410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "42fd746d-221c-42e3-9a3c-c474dc1157cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c17de4-1860-4b7a-8d90-e8fe5ab503f6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c939fbbb-d9a1-4b08-8cb3-bfd8aad79135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27aba497-aeaf-491e-8361-7094304cd6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd9d88b-58c0-4919-88eb-3224f131ec86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9bcce6b-21b8-437a-9c05-5f16002b5bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c30d34a-7d28-471a-9f76-4a86bd593c07",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aebe73c-c71f-4a6e-8c50-297e02191992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8021994-6e38-452f-94e4-4fcf6a1f08af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2fba06-8972-4ac8-a56d-e1cfada62e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1898564d-986f-4d46-9d60-c40bac6fc89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d012686d-37c0-4347-8945-39c149bbf443",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5dd0cf0-e813-4678-9351-07896a9fbc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c1be49-6ed4-40bb-ab37-4d88248f131a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b7c13c-3ef5-4610-872f-067826d2d561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "86d63eca-3395-4a10-aad0-95a85abda53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db08b460-6d48-445d-b937-ab45b07139a6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b798dfae-d471-408c-948d-34e9cbe0a3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fd6149-3694-4288-8bce-324d87ed6f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d506cc2-fd9d-417e-8475-65b66f8894df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "da5a1432-ed91-4049-96e2-8634e1a72a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31597720-f9f5-484f-bdfa-d88957cfba68",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d245992e-edbc-446a-b9a7-2af3e674797d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0091cf9-3498-4b20-b109-2b1fc30d1bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095f815e-457e-4b62-9518-6a071ea4a609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e21035f6-e0e3-40a1-b689-914c6ab5fabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4165eb0-de10-4185-a847-77b718f6d686",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3173ac60-8a7d-4502-94fb-9be7d4113493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c2343e-dc42-47eb-9756-160481896c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145011f3-f2f3-4bbc-a41c-2978c68f28eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78467333-2aed-4401-a649-a67a9fc96c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f23540-018b-4e8a-8546-60eee900becc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf33457-895f-4161-aed3-71f32b879c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7d5aa5-37ac-4f4f-bce6-af6af98bfe57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6f8ada-d474-4c0e-900a-9397fbfb1a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60769f76-b54a-44aa-bffe-ef37ab45d44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca88e291-b727-441a-83db-8e5300a29989",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e59e7d-58f2-44b9-a3b0-62d285e8c9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a40b96-9d4b-4822-935b-470accb93559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc715ca-e241-4007-8cac-310b293b8c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc66ac8-957c-47f6-9e61-6082dfb9f366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e6c137-23be-4b9d-9077-e0d01f847205",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff98905c-5544-4d50-9203-7774053282d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63f9e0c-e742-4ede-ae9e-888087cc9619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce3ff3c-0cb1-4f5a-9454-efbf78273c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48b931c5-8bb9-4df0-9115-29971d90ffe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635d9890-cd2c-4be4-8451-71c4a62cc1e9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802b6dec-475b-47f6-8474-0f1d0cf5cdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26357e0f-4fd5-4bb8-9edf-5528c8d400f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9273a4-714f-45de-ab89-93c86997ff99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78fa52aa-3296-472f-a0ca-fdd3deabded4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dfcf55-e7a3-4cc6-b84b-0d4bd4236642",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4d979d-bf4c-41f6-bf19-af7c93ba1241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc83a24-ab73-474e-bca8-4aeffd89cb14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b306cf6-7159-4c42-a071-ffbf1bf0c811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d017567-cf73-4b0d-b44b-8e7ee3b4b49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb0b8f9-f552-4b28-a366-ec3084e4cbf9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05f1bb4-05f5-40fb-8830-7682011ca250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3adf85b-2f54-4deb-8b10-9e7e9314e3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4478c9-3eba-4fc6-8f12-637aad2a906c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8098a4f-a312-4a45-8884-42ad10dc9b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9551a8-c50b-4d34-b4db-2ee0d3656c5e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b8e8bc-7b6b-429e-830b-97ae207a0144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b44c183-e7fe-492d-b51b-8316dfa29ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fb0574-4e84-4355-a763-1127d0bc109a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34da33ee-f509-445e-a6fc-8975d29f6e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5788e920-0596-4da0-85f7-04d06a1161c2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ddc53f-f673-4a42-8aba-0c5493b44981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd2ebd8-033b-47c2-94e5-33c0beb35019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154ba470-8e8f-46e3-b847-17f49a87f825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31666261-dcec-4b3e-83c4-c62a99178882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c5a14a-d457-4cba-91f9-32b30d1ab2b7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e06012-d248-4999-bac9-44b77a8a8462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c805ab-3b1a-4448-8fa9-1d1ece005040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa64a9e-d891-4dad-a9f6-4b53f490cda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a83fc631-2920-4351-812b-dbcbdcfc5dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbf4e3b-4df1-4c2b-a43b-fbe920909c4b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fb1d53-fa98-48a6-b3ba-31ee0c2a0f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da0ddc7-3c94-4127-93a0-4294196211c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef81f1f5-4ec0-48d8-a970-4757217d3df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e20741b-8713-4fb4-90ee-e87873e781a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45bff51-b500-40ca-a1e4-ae5824ce19b2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8baae72-a172-47f4-a398-2a713c4a67f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d82753b-b3b0-44d3-8268-71dc556c838e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42703238-5d86-4d54-af24-aa772bb0528b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b9afd0-6198-4701-90b5-894e40853a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b896aebb-6cc8-4dd4-bd1b-3b783bd80c93",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32b4fe9-d71a-4c2e-b078-ff5c06f64c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c285cb6e-cd4a-4145-b9f7-27f85aaa4887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c49c28-7ecb-4d9a-ae4d-6aeaeda36c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d920b062-1fe9-4631-800a-316883c771f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ea1d77b8-94d1-4562-8462-83b3348e5cbd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68867868-f569-4338-973b-7b776b6ff99c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef5e16f-afd1-404a-84a1-5bddbd95b5c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7be493f1-2ad9-4705-82d8-b14bf2367f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8638bade-5bb6-4a15-8d0c-ce7f7327bc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b705a39b-eef9-42bb-8f54-a6846211fffe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f142cdf0-5d09-43c8-85ad-9b7c4ad19720",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93f3f7ba-2ea4-444a-9961-5e3f0de73c4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ea8187c-8cd8-4349-988b-e457981bef11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "209df2a2-63a2-4c44-a57a-a98e63385583"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eabcea19-79f3-4bba-89fb-7a11ba1005c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0b3efe84-178f-4ada-9ddf-4a91f25ab57b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0359e33-921d-4369-9e83-ad94d3d54167",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ba486bb-54c2-4ab5-8244-cffa67022c60"
            }
          }
        ]
      },
      {
        "id": "faf44f8e-5c2b-451f-bc6b-272972c7cf30",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c5024cd8-8fc9-4706-ba37-392c46e19544",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b999d469-c077-43ab-9a41-c41c14bedbd1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "82610561-e323-4b3f-a62b-c0d9a37adc31",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf61ebd9-d4fd-45fc-be0d-0423a9f076c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0289bc-6ca9-43c7-b203-496be7cbd0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9b8be2-1d77-4b8f-8e7c-b069e64bc567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "983e0aac-667a-4813-8e02-962cd171f237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ce51c1-c676-46ed-9688-323ab8e4e8bc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dc431a-94ab-4f43-a68b-d0357f5b1367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe97cf8e-2f17-45c9-9596-853d247265b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6551b6-1370-4e4d-b614-35d38729d3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "02cb83c5-c314-4cfd-9f7b-c90c2c02ccd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a45ff30-fec8-4e2f-b25a-6e6402c203b0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45245523-536f-47ec-be66-61bb7dc2d781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa10a22-9c2d-4ec1-b5f5-7bbddf6d8a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2326b20-1fee-44d0-a386-ab5a93b16c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb86a27c-085f-4fb4-88c1-3d05691b91b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fbce8c-5c8c-40b2-b0cf-ab6e60f49106",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fc4176-beae-4f91-85c2-739c1ac39d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06798e1f-8599-4a13-8422-20ed2bfbc87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19830b45-2435-4ed0-a64b-90bbd1d8a9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b923ab7-ab8a-4f1f-833d-107c03922b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9c99e9-a7db-4be1-b99b-884564d20a37",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b4b54f-e551-401f-b6e8-7e052e42fe2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d537d8-f06c-4ec1-9519-6b24e85648df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82b8869-b6c8-4dba-b378-c70db1ac2727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97389d4e-c115-4a69-a166-b3234f316bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0871737b-b748-4041-9a10-c2cb4e349268",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5472aa36-9d89-4990-b06e-1f1a70a21706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8293bd-bf45-4403-bd75-b512b5e89ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31c36dc-a2dc-45a5-8c08-3928abaae6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af75c696-9eb1-4b59-a17d-ac662ec41332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83b1a58-eee2-43e3-b6c2-bc956ca5204a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525cd246-9b4a-4cc5-87f6-93784bb9544a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1a338f-ec7c-4af0-8a2c-37e94d065028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80aa0bf7-d90e-4385-916b-45910bfc7a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f43594d-f25d-43fe-a1b8-bd19affd56f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ce7acf-39ac-46b5-8cd2-fc21367684de",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d48bc2-a93a-4765-9e7b-18c8fee68d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96123f82-55e9-4448-b90c-5f5e8b58f9e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4558d22d-8656-46c8-8ce8-787a9b4bf5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a15ace8-8a2a-41df-956a-8d7289f07040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9037f3e-c96f-4b39-9bb6-d9c3fca3b4af",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f1aff8-4634-467b-a4bd-febd55ac2fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c592dfc-ab31-420f-8d53-b50e08d0bc06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5948cb-22b7-4489-bd3a-8a218618ec11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "591d2230-33d9-4c68-93d7-9668e7422dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfba53d0-1a78-4a84-8455-cd35602d4b56",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e08366f-b98d-440f-9f96-ffafe734a5f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36ef142-974d-4529-ac86-5970396257f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618f4cc6-3b91-4bb1-a249-4c6d5a1546a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c367edc-9dbf-4164-8c2a-068dbbb62cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922fb82d-6337-4605-8498-77d0669c6554",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10d965f-982e-49a1-88d3-b55f47654c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cca585-27ef-4220-bf77-fcf82c53763e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a51af5-751e-4307-9844-16b89be80253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "57f0be64-368b-4744-b5c6-31f0a4b4b4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4eded22-507f-4a9b-b0d9-e4179fe6b22c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3317257-d493-413a-98a2-4221b74014e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a0f94a-56ec-4420-9300-b6ca09dd9055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ad8822-2a7d-4487-8aca-728e1fded758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81970324-975d-45fc-b164-6f963e9bb906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7aafc41-6bcb-4a09-983f-b0b40c64a0cb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c11b40-df68-4e34-89cd-0033a67d0216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dacfe51-f9e3-481c-8e1f-d00ac3a191d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b9fcd9-32ab-471d-bfc1-493254503434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "34a7d7df-9912-4f8d-a63a-1c15cb9e8465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be122752-65ed-45f8-b12f-a527f7293787",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a30d54-819b-4b87-b4fa-8ed56178f24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e25b61-28bc-4bbf-a6da-f4b41224acc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b13abb-61e5-4268-b0db-aed961109b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "17a38513-ba71-4bed-86f6-35818fcd0081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdba53eb-601d-472d-b232-7fcd22a2fd5f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02eb650a-1bdd-4e33-afd2-1bc88e7c1c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67873850-40d8-4e11-ab7f-3d8d41a859ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43711cf-22cb-4fa0-95e1-2e48995d9d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d39b4eb-4e9f-4e80-a79f-bb2e5e532ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94aa79ff-9cdd-4166-bdc1-b292a51eafff",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485c00a0-8b0f-449b-a594-17a88614c3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576582a8-e66e-4304-986c-ba793adbde35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7128fde3-0291-4484-bb93-50a098c25243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b11d7aab-b29c-4670-833a-0617a01a481d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af3e441-38a6-45d3-a26c-2bf138f3246a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777d97a9-192e-4568-90e9-4ce4e317cf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58e8380-ff7d-4fb3-b8b7-e425e35ce123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92489475-7237-4246-a1f4-0553026a8670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2120d63-efe1-4785-8092-9e947d705efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df794410-fd2c-41af-b5d9-8bbdffb09a54",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787fde9a-b183-4215-a42d-4c3572585184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe573e36-b1c1-43c6-9178-00ba24de349c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fde8b7-44e9-40b7-8f7e-bbc04e20f4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7190e4ae-97b3-48ac-b1ea-b9119a7dbf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ad1770-cb46-4916-b028-9d8cca706ba8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4927f0db-b51e-48df-ad1b-1e530fcf7f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f11fdfd-e7f5-49dd-86d0-4c68403394f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be31ea7d-e7bc-4416-90d2-8bf976378178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "315af38c-5385-4a47-a670-e85ead873912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29777e07-cb5d-403b-ab3b-9c1e9e851df6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0921103-1b04-4083-9277-44cd75f05c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d73dbb-65f2-4abf-953d-6309bfc3bb2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24cae9b-e128-41bc-ba5b-afff585e1deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72da13de-49a9-4503-bbf9-4ecb7da09094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46ff632-3194-4e7a-979f-6a2089453e8e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781f7eab-5965-41b1-93c1-ea0cdb7dbe46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e76ac0-23f2-4ed7-9e5b-8b3c7a0b09db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f03e968-aeee-42d0-b7ca-2140090b782b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1412c2f7-5e17-4808-bb34-050792c27cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b13470-945e-4312-af25-e45590fd7f2b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777eda60-e9ff-4a91-8daa-6c13ae5fcc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad034ab1-827d-437b-b64f-876e8bffbd71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b04f49-bdb4-432f-81f5-be40e89a6b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2210e8b7-91ee-4111-9e97-622a7bc1b843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70684ba9-4dc8-40f6-b9f3-e60b1be94473",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffeb4b57-e624-409f-a888-dcbd6b5d66be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40da7952-dc44-4c76-96fd-de93bce58dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cc2eda-6d07-4eda-8413-8e33095badfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc15b1a4-5ebf-45e5-9158-7b52632b38d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350458da-9a73-45fe-a82a-1fbc22fb23d4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4179d79-3d94-459f-b9e0-ba25b7d1396f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51167d77-0257-4467-89f2-c8d2176ce2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8e10d2-d821-407f-af4e-deade1fc94be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7690d5e7-deda-4d52-a514-5ca0a8600385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6f89fb-2661-437e-86e9-ea90b0e2a739",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813fea46-f7f9-4c22-ae53-b4194186c2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5c5778-ff6f-4e10-8701-1987b483db00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2058a5-068d-4708-8a2a-63c81e346bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecabbba-b9f2-4687-a96a-cbec22193c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fbab26-0aec-43ba-9593-40e7fb73a68b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d5ac66-5aa9-4b9d-b4b6-f062eb9af155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5005510f-4e63-4c53-ba44-fd7f00fb516e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cc4aed-be0e-4694-9275-ff2482d8d045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f898df20-a8f3-4e2f-bfd9-6f10fa01284d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9957b5-3cc1-4454-acc1-732edb3fa2f1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bc56b7-5414-4ac5-9b2f-44959dd8f952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9211069b-e8f3-4c03-a5c2-dfa8fce862f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7f6f37-a499-4cde-b4b0-500fc4716d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51b2331a-f07a-4ad9-bd33-1295737f2723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c394bfb-9b11-4104-8b2d-25a851c264b0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a18ce1-c372-4e1e-a6c1-3c731c205e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3117af7-8876-40bf-ba49-cc43cc1e8d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62362586-e59a-408c-b8b3-ea06a51db888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56e0cd48-dbb5-44e8-9daf-1f31e521da65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ce71f0-beeb-435b-a5c9-487a84c0e66d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720ff11e-66a1-44ae-b732-1e8db9d59380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b6a1459-355f-4abb-b810-39676cdb1995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf96326-3755-4743-9de4-1eddf2332457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea626568-bbca-474c-a493-0a7f37aa2104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d85263-f4fc-46f7-b248-93baa1e676eb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09e3fd3-30c6-4907-870e-06ca77235452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311f74ba-a93d-42b8-8991-6d62ef7524e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389812ee-d04e-47f8-b2a8-c8adfe372d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ace94ee-53cf-4407-bbfb-f0f8f84decb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa7a469-a01b-4e02-8565-620b7687d92e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18542db4-40cc-4d0e-8e56-b3546ae419ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204acdda-3116-488b-9f04-2d8ebaa07ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d60b97a-0a5d-4ce3-a786-97161850c3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f98ac191-94ee-4d9c-98fa-ce2025b6f7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907e7d68-f348-4de1-98d6-362c1b8d99a8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e825e1b-59b4-49da-93bb-19423b1a92b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890e277e-ef0d-4bf6-9b02-464634cc4fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a643777-ca38-46a0-8148-c08a45fd355b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32a8fc0d-f2e9-4e30-9940-ae9f02831c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c667d9-2780-44fc-927e-0380f793d99b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7e8ed8-72c6-4950-b86b-3c6b7b292121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c35f9ec-d3b1-43f2-877d-b44060439f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b513dae-01cc-4f86-bcb7-83846c022c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f29a89d-7031-48fd-aaf9-f19abd360af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da3dff5-341d-491a-ab23-c45aa7d6a90c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1d136a-1f44-45ee-b362-9ae124c92bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138ff3f1-69f7-450e-9d30-82eb687e3dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b47ef9-b2e3-4b81-ac23-17feeb45b5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "196ee059-7dfe-452f-bf6d-890518ffe80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e50d820-5d1a-4777-9833-ec31959991dc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab086fa-fad7-46f9-b27b-6c249ab81a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c300b89e-b1e5-4fdc-a401-d5f7afc4c47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3615cd-a670-47b5-a90f-aa8ea0ea6e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd94ea45-f9a4-48cf-856f-4ab031786613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e745dc-2ffd-4ddc-8e32-8096d35fed92",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f7dfbe-b39f-48ca-a384-b518c88be34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857dd150-3d6d-479d-8751-33e2a1deefbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648b3424-6aec-466f-938b-0b7e12364537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24cf1f41-97e6-463c-9e48-9b4b3003b86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5ced18-ee5a-4d43-9d57-28400e2530e1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76e177f-30e8-4d19-b4c3-454b76b7d8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2085d11c-7172-40f7-858e-9a76dcafff97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca740740-3c6d-4554-b45b-168902c424a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20b555a1-95ce-4f2f-9e9a-695d4df2001a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f52188ff-4f99-40ec-aff0-40a676dab626",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f379b5a6-dbcf-4072-9658-587f2470706a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bf2706-ec58-42c2-b657-67da7da87d20",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b9fea91e-81a9-4698-ae25-f6f294fc8754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2513d1bf-c339-40a9-b259-ad266f6bcfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38a6a0fa-dcf5-432c-a0d0-7fbdf7215d24"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3b031af-0c01-42d4-94c5-540e0ef67700",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18471970-64c5-4b1d-bd96-c04477614f68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a5968be-5576-44bf-90c1-59f27a39ad68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d34c3181-5ff4-4c0a-be08-9cb1388538ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac0667dd-0918-40fd-94a5-5207cd07226d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "56eefc16-3ef2-40c3-a138-ad6da5a469a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2b8ef21-d534-49c3-92c4-99316c9c0fa8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c582fb7e-723a-41c9-99aa-6a72e75aaf63"
            }
          }
        ]
      },
      {
        "id": "4ada9009-8a14-4c09-81e7-9cb6f540f49b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "19b89be1-a74a-444e-96f0-3c71c1f60170",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96609e6a-6c21-4fe4-bbca-3a5fb10b266b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3f2ef086-312c-45a5-8b25-8b07082b2f64",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076ddb36-1a06-4720-ba8c-57c77a71aad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1644a8d3-e906-4ff2-ab6d-a500e3d9bffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22228a18-c770-45cc-aca4-9aa025864baa",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446a406d-0edd-469e-a0b7-3912cbce858b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9fda7cf-e204-4da9-9423-fa71018bdc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32fca7eb-93d4-4e1d-b8c3-21fcb6d2fcb0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02bda116-efad-4ed1-90b8-84cd8aa44ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1767fbf7-42f2-4d94-9289-f9e2de76eb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ae9f0b-ddab-4f91-95c1-dc7821f7b5ba",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18778fe3-0dde-4f91-9d64-092cf831eb83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c9b05f-276d-4b6a-a941-00c71bf8b620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad09f46f-8df9-4081-9351-9c3ccaa811e6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13b6c7f-5e6c-43c6-acf6-28b519bbae4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a45cb04-e2be-4755-9450-d1936054e239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fae1da2-eed0-4503-8037-119f30c5354f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00edf3b7-57f9-441f-b7e2-1125c7498a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687bec81-1038-419b-bae7-7dc16b147706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc61a176-ff76-451e-a1d3-7d9c0edf648e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86694f9e-1181-4d0e-ae74-15d04b5a995c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1d5e00-5bd0-4c95-bb51-3936b71611d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e286c4cd-804e-40a3-ad87-fd046179aefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8642736c-ea0f-4db0-937d-cc6b10b03932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c64425f-b9e8-452b-abcf-89719469b50d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c2a5a2-0d76-465f-98ef-a0d1a0cfb52a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ee63c47-bb14-42a8-9c46-1bb8c4419609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d2cc63-f683-4eb6-bed4-6bbec8ccdda7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31650d7e-30fb-41a9-a885-bc7a397348d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b44bf5f-07f5-4dbf-9213-ed2c29c4bc84",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4a4eff-bd51-442e-9fa0-19e60cabfcf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07561025-f439-4549-9442-ceffad04323d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d7fafd-d9e4-423d-b954-f0e9bec2f979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fae2178-1edd-4e33-adf0-f6be771cbc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc24e161-f99e-490e-abff-93d1048e1acf",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f16a583-e547-4e13-b526-64d928c33bb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "377e9a64-0f1f-49f5-aa16-189490b868f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a451de-acfe-456a-a04a-8f6707e27c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da56248c-b4b1-48cd-ad55-ddc29a490414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d6a395-d17e-4f3c-aff2-7b5c269ecaf1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfe9682-1c18-47eb-bdf5-4b7db7b3a2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e65c459-c4f4-4d0a-b9ca-bc3870d0f785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002221ad-1fb9-43d7-835b-5049789cc6ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766bf4d9-2dd3-4b85-b8f9-e6c1e37b61fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c040d95d-8250-4cc8-97c5-66bb8894d8d5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bf335e-d6f7-45a1-8f68-db7c4659fa49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9368c0e-ef4b-4a78-bd4e-3197f80be50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d57e7a-02e6-4cf7-8dc5-41643b001b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c02286a-d255-43a3-b430-28abe0850e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b898a76e-20b3-44db-bd8f-97fa993f17f3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bec1a9-460d-4365-a9d5-c4250368d096",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e1a011f-b6ce-45d6-8318-f8898f47d9ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb701fe-099a-404f-a9b1-90f55126b57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d32d1b-55ae-45af-b957-d9065265bb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8eb6b98-ac06-474b-84d5-06538206278b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a824817-e485-46e9-be7f-a14ab3917f9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5eff205-5b4a-40f5-8002-97fa9135409f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7961b16-2aeb-4a0d-9b23-2f90c4699736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c2c5e2-3258-4700-b101-588bcc7ba088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb778f5b-ed3f-4249-9441-83a187a291fb",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb0c42b-282d-4eb3-949f-ea89b87c4442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99f5d020-16f8-4aac-8ea3-e4b7df0b2a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df853d76-d0a1-44dd-ab3e-b7fa1765e214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8960d4-f3ba-4bcc-a324-6c5a7acb2161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb11914c-817c-4b09-9cc2-3b4d82461fe7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5217ef-ef8f-4f0d-aa1c-336b6507733e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eb51d05-e8ff-4f1e-b50b-8e1001babff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835c0d2d-559c-4aca-8473-f7e6705a9acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7288c996-10c6-4d84-860a-ef09bfdaf289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e456a0-e41f-4d0b-b8b9-a622382d0d66",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389f3192-61ae-4811-a8ab-e64e0baeb72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb38fd9-1ed4-425e-a17a-aa1ca73e3e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0b0b77-0459-4d9a-8b88-75111b0e3a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508a8e4c-67a6-41af-afbb-a72fc12f9db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa5300e-1673-4455-93e0-2160ff0b6ba6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c66f160-37e8-4dd6-9113-270eacda1702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c115beb0-f980-4df2-9ee0-52ec4efb0e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9646c12-8517-41cb-8e79-6380a247cdd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd95c82-3b5c-40f6-8bbd-3511c23cb7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57a5856-3b6d-4010-8644-4dd9758bd5ba",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063b9014-b2a3-4f0f-bcef-a7ce086a8514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b00f0fb-a4bd-420e-8836-2506fc3e8c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea8a7d7-b014-42ba-b08a-9c7c56ea8392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a64ea32-d54b-49d6-a040-48f33b124b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d37add-2817-4b64-9311-75e408bc4db9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f989d268-e278-4235-96ae-9b60f91ec1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2e9ed6-8518-4b9b-aaca-e7aa664eff0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd7e0be-4941-46fc-ae9f-54408dae8095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae46a19-868c-4736-b6f7-1d0c11de3b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ad30b0-2ee7-4874-8550-68a2261f7a00",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af780c6-4a06-42b0-8853-ceb3060addd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c3573a-69aa-41b6-9ec2-2b37b16275bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423f76d6-14e9-411f-9632-51e2a46bd8bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d779970-1287-464b-a4b6-0548dc4e44d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb348ca-22e8-45ee-94ef-497aed545574",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb09b83-dc85-4410-ab85-cdbb55e0b7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39588948-f885-4353-aabf-fdff789f205f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "823b6870-10a0-4775-994c-1eb397c51756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ca34ec-8cb6-4441-a869-6a695c18cfdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb453ebd-076c-417a-a723-61d8d6366a67",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89aa2150-bc0e-4759-b208-8237b48737c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbff158f-9778-4171-a5f8-56ed19f28a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c4b84c-da55-4058-b8aa-fe2a02128543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9c53eb-b4e3-4b0e-8f7d-8d8fa5cfbde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee7e719-3f1b-4fdb-8835-14e6ff5dc6bc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116ad654-ac40-4603-a3a3-8c6d97c3eb3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e1ba919-4d3c-4dca-b3a3-59a606cf56fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae0433f-140c-42b0-9cfd-4e93162a7168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2bfe3eb-d972-4359-9801-333be36850fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8905861d-429c-44ef-b1cd-2f041c788f03",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cc63ae-b6b0-419d-83d7-f803bf7f6477",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d39091cc-b93b-4626-ba4b-554502c0f159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d2c97f-4749-4aba-a1e7-702bb58afe9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1488d2bd-1bb3-41b8-82a5-3b206a1584bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7315bd5a-c690-45da-bfda-96c9ae102589",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237e797c-f9da-496a-99af-36a6cd575809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c398845-a761-40b9-b7c0-4e7c9dd91f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f3ccce-eb2a-4a9d-a9f3-b3b1f26cd39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de4c078-d304-4a5d-bb02-7a346481f067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193105d3-da64-4eb0-b85a-68f77c6bfad5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bbf252-86ba-496c-940c-94cd34c84f92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51bb5807-6716-414b-89b7-f7dc42c32edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee73510-f345-47d5-af84-f2fc6d4b37ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d037220b-c0dd-44d1-a8e2-588cebb3d9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348c8d89-1e50-4ee9-87de-fab383291736",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d197ee28-5044-4a53-811c-696d81bbc581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ced48a-9589-4e1e-a22d-cf0f00e5d0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66934e94-204d-476e-9d33-5e6df4c7ad2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c44047f-d572-4e63-8099-962f7dd149e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ada749-964d-4c82-b548-f8096d888006",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f09f9f-2def-4b4b-86ba-43bae5fb7f9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee6276f6-026e-4653-999a-6d6978b8ae79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50057b5c-4b2b-45be-abb9-552c1da715b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6361871-c769-4ca5-9369-a19c5623e3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13b4b20-97f4-49d5-acb4-e68d3bcb4d6a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f674cb-5014-4f6e-8cbf-95c894fd02f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "561daf6d-4eed-47f8-ba92-d5ddb9091b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccbcaa5-c539-4182-8be4-22c620083657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd2047f-7b9b-46dd-9264-53510524b035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8726e5ec-75a4-4fa0-a0fc-c3c95c83e1ca",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81af9df-4fbc-404c-9ef6-1070cce956c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91a7ec4c-29d0-44b5-8568-1b0b2dbe3775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b926b74-c31f-4861-a5e8-aed355356017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34784826-e558-4ee9-8791-16b1660e7bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784cb1b8-8f98-43b4-ba07-4a5a663da014",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81383138-7069-419d-9c08-d563c177ce0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cda4c9f-33e0-4719-963c-9f91c603a643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21142a59-5441-4816-8098-8b08ca3cef68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801cfaa1-91cb-41c3-8f49-af123ea9aca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1990d31-d093-4f04-8296-5901a882bfe2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629350f0-0103-4fed-b4d3-baae7c4ed0bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4976c14a-78be-4e98-a67b-6b17a19183e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de06e45-b60f-4bec-a73a-1eee48b84e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc47b5dd-2bf7-43cf-91ac-c9ea53fc7e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1057a13c-d72c-4682-9e50-0194b52bcda5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427c80ab-b7a9-4508-9da1-3d28ba2dd0b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afeea7d0-4a37-4511-ad30-32b201c53d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d0f157-64dd-4109-be2d-617c2e71f3ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a3c872-b7b5-4972-b10e-2f4fea349473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aca91fc-1213-4d97-92d0-2bd16954b81a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646d3455-2f6d-4011-b902-62f8bc3bc375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be216c03-12a1-4f4e-b1d2-7daa64973653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d92fe3-2a7f-418b-8789-6faf20e3a647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfef8ea4-ef5c-4a6a-8554-b366482ab37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c07268e-268c-478b-80b0-73bcea71cf71",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72475e8-cf8b-455b-9b79-868efd2baad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5bba20-f743-45fe-9985-d25b9d3693e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657e8e81-4cc7-489b-a91d-3b918e62169a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8529c3dd-1b14-4ab2-abbb-45537dbbbb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b72deb-d0ad-4df6-a494-f8b8a0d23425",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78da0e17-695d-409a-a6e8-2ffe2e509391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857ca49e-8496-4751-925f-ef2305f1ec48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6e19b5-d369-4957-b14e-57f74a8fddad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1249acdc-f6b0-4278-9ad5-b9eb17692ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2f6baa-396c-4d59-8c43-3796450d1491",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c47b2e-7fd0-48a1-a958-7ed8c314b395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b75685-4d95-4779-a8f4-59d501c4e819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0371d433-9c01-462f-9bb3-7b8c9bf47ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888d2c7a-3080-46e8-b43e-802c17460f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6fca6f-f605-42ad-bb0b-2707e03c939a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06450282-47d6-457e-a493-eaf0a2ca4238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb93beef-a50b-459f-b240-7f8324496c72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6234958-9622-438f-8748-1f661bb05872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95def68d-51d8-42c3-b722-bda200a584ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5266c50-f3a7-453f-bb7a-0e8e0579d91b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dea544-4909-47ad-838c-70cc082a2303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547b955c-70e9-4729-b536-539f0d298b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935fda97-850b-48e7-90ea-78fa3f524ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c8a130-6208-477d-a035-a24e01a97e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33abeff-5329-4cd1-8e31-96531b149bc6",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a8693a-93da-4e50-b1d4-b14c6f379782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6bc28fb-298a-40be-99ef-487bcb4892f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ca787c-f84b-4371-9dd5-52bfbd13daea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02636a13-1017-4422-98cb-1ae443867d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd575b9-0526-4401-a507-2a3dd13127d7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e686bb21-e553-4bc2-b092-3775c4e62182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bacc97-0471-4664-b268-f274234410a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3329830-ceaf-45ae-a1d0-4cadcf5da7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11dde788-df13-4a2c-b00c-c5423421886a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cec0be-d009-4587-a93f-c8ecb1d79335",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6452cd4-ca6f-4341-986a-eb4d4af188bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb3b797-67ad-4e69-83f8-800457270977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd159f59-cb4a-4c92-ae24-9570fd217466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d48bf0a-0d1d-46fd-bc6e-03ec483b4a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d3363e-8ebb-4c9d-9b6b-0ba5361d02aa",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7ec9ab-8681-49d7-9477-b4f48ef26a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8ffab0-8078-4bda-bded-42436625bb0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4b1276-b4fe-45f0-99c0-45f2fd0076bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019bfa3a-e09c-4e0d-81d5-8277425b7a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8575dff1-ac7e-4606-9bfc-39c01d4cf6d7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfec837-89e1-40f4-a07b-1a525845c7e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e28c86-3cdb-4fa2-aaa9-2220e6361334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "453fc668-3f1f-49ee-a068-c85b16841534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33dc141-f393-49fb-a03c-ac3a3951063f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523d4929-97b0-43aa-8c49-34047c911da0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabff25d-e2cf-488d-84f3-40d94be69862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d05d60-7566-4a2f-b4c8-06393bf2d455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b6c7c26-d857-4cd9-b20d-e618b7d38405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38054cfd-874c-4733-a86a-f67a78dadefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a883e7-85e5-4c28-8cd8-ed9bd3200d8d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cd3bb0-4a04-424e-a897-e365970f897b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbce08c-bbc2-4f64-8072-8f088a9ae71e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932a5776-eef9-4597-b544-bebb37f67336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15437db-0469-4f57-8a3d-482755a3197c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d59bed-5f38-4ab0-b0d8-c0371dade417",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b972740c-1100-4381-ae0c-c640161074bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15db7f3-ae85-4c65-8178-5fff6dd759df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57de1c28-a3d1-4c0d-8305-36ad4d015041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd44643-f53b-4e41-b483-1895f8f29722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f88fede-5065-4e5a-86a5-4dc0903b9ce2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1cc494-c0c9-4b5e-9de5-b6c9d958e7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feac4574-40fd-4358-aa96-f0ce82c29532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6339fd94-17f6-43b8-bb0d-e3bcc22c86a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d5b9f5-4e8a-4897-8b0b-a8da1174669f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83a2568-864b-4573-869d-8d191db0acbe",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f4ffd5-3cac-4c65-8ed6-0f4860f98d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c801e471-22fd-4c17-ba2b-ca5088dcfdcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac312948-7205-4ba4-a43f-42a911e6c851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a25f1326-1d6c-4edf-a224-46529d39149e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9d7f05-96ba-4554-8167-185ab790f0f2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76909b1a-b840-4597-b0ba-e7d8c00fa09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc54b6b3-6d1c-4204-9858-219ad045c15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef59c598-0673-4b91-b90a-2feb42f5b548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1302f020-06b2-43d8-83c9-3a16abda610c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d746d30-4f09-468d-b0b5-ad2f2a440c75",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86263ed-7ae8-4cc8-9190-15067e13d53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b4eb7c-28c4-4a06-920b-79c9ad30c209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d6faee-e717-4153-9203-c460b60a24c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc760174-9a61-4111-9ae6-bf1e3d3c2e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de32914e-1126-4ea8-b1ec-07f274c2382d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f46fa90-c2a1-4983-82bd-759cb889093d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a1fce08-9f55-4f07-a2d4-45c94611110b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d8a0aa-3f1b-4991-8248-0a7b59208004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fda3909-dd24-4d0e-9d74-4c394f6ac63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec70574c-61bd-4e0d-8475-91381ccfe13b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303e5407-d126-4094-8283-1dd61d328d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315380c2-8207-4555-abd1-571206ac03f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7502c5-f7a5-4911-9ca5-bd388711ffaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba7d823-71ee-4afa-96f2-d1c94e7ec6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a248cbf5-f081-471b-8282-22ece105c1d4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61282cf-d2fa-4a8b-b448-33a86754dbea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1036be20-2b82-40de-8b86-38cd6882a365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5660a821-830d-4bf6-9ae0-6ed0fcff61ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf871a4-2525-4590-a990-6a43a3b1b7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0ac84b-ed92-4c44-9863-c526132c02c4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9344aa-1ae1-48f6-9ab8-49fe406a8c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf57555-5012-4971-939b-39479ef50755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b0f0ae-9d77-4f76-80df-d648a1f29b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46489520-2030-40ec-88a9-43ff6a50504b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5041ecc8-9682-420f-b590-93f33b03da1d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1b2af0-725f-4147-a860-a64cac8b1d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3de13b-8205-4534-8528-52e5bf8e0637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4066399-af20-4efa-aa4d-374f7ef05f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc106943-10fe-4b3b-8f73-48ff0498be10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b49271-d291-42c3-ab63-176cacf522d8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6164501-1a53-4dae-b87c-068dbadb016d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c019db59-042a-46ba-9dbc-2d1806e34d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e95488c-a63e-46f1-a6ee-326b4c900b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d58ba8d-8aa7-4585-ac55-844bb91d321f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d091a00-8a3f-4e31-a6d7-c3edbcf5a8e4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f88a698-bf6d-4d0b-989f-0cc0ee575031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccff62d5-3960-4498-8f5c-fbc3d6263022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d598088b-2512-4b43-aa99-f522bcacf047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886b7c60-3cd6-44ec-b9ba-8c866c0fbbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2925c798-5f67-445a-8f4f-1bfba1b5ef3b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e0a92c-234d-4893-b456-a77d85d0db2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d437158-8a86-4873-805f-8bdba1a35ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a05494-f5dc-4a46-9c81-a69a17d552da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0da5810-243b-448c-988f-802b80d5d985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243f0504-7e5c-4218-9a43-7d2cc9efe8c9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16a3195-19e5-4de3-8673-81a5aacb7124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d135b899-a821-4db1-b421-2c26f8dec53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9878dd9-e63b-4ec8-b192-c877ed567ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc2b4a7-0821-4c9a-8d9e-ea528ea50985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc3d53d-427a-49bf-9298-14eb05a3267a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f589de3a-f2e0-4549-8e27-7645c90598ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50df68d4-16f4-4290-baf6-6654dc231a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead592c0-a8d0-488a-b7a7-9e790c3f864e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8fdf10c-d6a6-4333-9516-4284cb473a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2c04e3-bfd7-44ff-ba2b-4dbbdf9d915a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d349da5-74bb-498b-ba84-ac9beadebbad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332b39bd-b865-4995-bc85-1aace641916d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a883817-8e0e-4d77-9e61-759b7fb35c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b3f25c-b082-4bcf-b26a-828233fceeb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ee7b8b-b7a9-4b4f-b02f-459e73d82dd5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a122eca-193e-4b2a-8088-c69a263820ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd4a3433-26eb-486c-99db-768f811f4f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954dd86d-1233-4aaa-b3a7-2d7acc6d3107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee808b89-374e-44b8-b3ba-4bd584c908a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144503b7-250c-480c-937d-5f538f41ef93",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0fb0e3-62a2-413a-96c3-7a7221f5f60b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70ea97a8-5341-4f2f-bea1-b70ff465c66f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9523d3cf-fe51-4cd7-9d9c-d2867fd3b1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c4051c-8bd4-48bd-963a-bd3443b562cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7331b5ad-45ac-4843-9078-6660d7870524",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68b2716-cbe2-4e2d-93ea-f8b1e6e8cf78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e42a409-2b4f-438b-a512-76771d901c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363503e4-f500-4cf6-9f8b-a50dad2cf911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619ed42e-c202-4b9d-a974-180b9562d912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d34d2a-d68d-4ff7-80b2-574194414187",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a24836e-6c9b-4d70-88d6-5cb8fb3cba19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a46fd7e-76be-4141-8d35-61192a6f0bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b7429e-6817-49f7-bb15-6a9c62e47db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77f21d4-93b9-40ee-ab21-467ad652d1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af490191-a858-4065-9122-86cbc40f4928",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a0a375-fab0-4665-a73a-983ed4575842",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d4c2102-13ec-41fa-99e6-c5c32d825391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07ee7b7-e89b-4d1b-ab9d-b9b649371951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004abea8-481a-432d-9918-3a92b1929cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef6db65-7160-44e9-88c5-582679161bec",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32cb42b8-c047-4fd6-99bc-2b18cfdb3ccd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54ea5079-9786-4d77-b26d-b635449e258b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d161c32-d5f0-4288-9eb0-8063cc1cbd10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9103e2ea-a0e5-41ba-b0bf-226eaa21a90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05fd7587-8ffa-4c63-a144-0ae6fee6c389",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f3c073-d213-4185-bb62-9ef715cbcf99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92c54785-d070-49e4-b798-480bd5ffc12c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6443c5-eb1d-40d9-ad4e-5f70ecb3e653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e64f909-02bd-400c-babb-1f026b5281ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880cedcb-f23a-4e4f-aef6-0a4f6413455f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9caab263-0c23-4961-8d49-318fba9137bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ada849b6-8740-4b2f-8b08-43333e78cee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "859905d1-cf61-42d1-88e9-b6997ccb98a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2c96ae-6af8-4652-b29d-fc0bf74f3fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819a1ce7-5dd9-4cc2-910a-ad40ef0be749",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1295064a-e91b-402d-b37f-a995941b76b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc930182-2d4d-4c53-b8fa-bfe790fc45d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b801edb1-6674-4e55-b970-e4cc3369a314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7580d226-88ac-4c34-b73f-d4f274beedd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a6d4de-fff5-47c6-b720-f432b3d4d67d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a507c09d-9859-47cb-bd03-e048b39e95a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62877464-732d-4795-8369-e411bf14b39f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e967405-bd98-4f41-b100-b13cc281ab97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59568691-040f-4a3e-9f2a-e1f1700a59a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ceb6411-4c51-46d6-b817-cd0631afa154",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3806ed65-82c0-44da-9599-aa1b9f09e697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50dde277-9c05-4509-98da-1f2cad3b4672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "639a55db-dcea-4b63-a6e3-bb39f95ab6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fb6e70-a90d-4762-bf0a-df74be1b523d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febdfcd3-f156-42e0-b531-f2512822aa5f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76999da5-f10f-4556-927f-8d5a0631004a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1ce3ade-379a-473f-99bb-d5566d62957e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfb002f-6335-4943-80f0-0aa7ec184974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5412bd53-dbea-4bae-8ce1-32107cbafbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb5ed93-ee8e-4f5f-abf3-a1538d925807",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d281c2-1d75-4b8c-a61f-0e74b803bd66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3eb2bb7-d774-4eb1-9265-7ab11131859d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55036737-8def-472a-85ea-d01d5fea539a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb3d2f1-a14a-401a-819c-bf5016e3207d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738b04ce-6723-4d58-aa3a-dbdd09623db5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63686735-3221-44c3-b148-49f9cd528c93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f00f80a6-239d-4947-8f9e-88524710d9a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b35d926-c3bd-467d-a94e-081bce0214a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c75787-0849-4a02-8f08-8e062df86037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f0a4c4-d37a-473f-bdbe-183a8fdadc72",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a5201e-67bb-4c86-a60c-affcc612256f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8b7e03a-7059-4b00-9a2e-17ffab900c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fac48b-6e88-4ad3-952b-0777a3bdfff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2139bbd8-f5d1-4437-af1d-c27200d05410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9f3291-4e6c-4fe9-b550-ac757c0ffdd0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f86e60-02c0-4f3b-85f3-7fb00169c3d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdf90b2d-b4cf-437e-a089-228054bf1a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5764dfd7-00d2-41b0-a6ac-a78ebd608326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff0da16-13eb-4416-8631-02fd426ddeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c826b3-4a86-459f-88db-77f24e553fef",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fafe096-01a0-4be2-8b25-24c448cd3d63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a260b54-9a0b-4b31-8628-6c6ad35299ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "987b00d0-4ae0-41e5-ad91-ba7618c4586d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a61f088-4134-4600-a75a-a67a53ee05a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31116035-53b2-48bf-aeff-776f44005963",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c459a999-526f-498e-912c-745dc53cad12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11c00e96-1b3b-4986-a8d1-6e4d039fd147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bf6695-e628-43e8-b052-9e36010f30ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a1ce3a-d46f-48de-a82d-7ed36802c856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e766bb2a-9c00-4018-94f8-83c401fe4a0d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889aaaad-e60d-4381-aebe-692816c8f697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcb9decb-120a-4806-91a1-57a4ce41d3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3045bd8f-0abe-4397-b1cc-b8f1126dac91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd02b82-ed45-455d-8981-89637033d7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f42664-5650-488c-b5a8-6d94bdf4e95d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d2f74a-ab55-4acc-9843-39d9dcc0e636",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6257d36-4af6-4684-b5fa-d6e626bf319d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071dd3e2-df5b-4bdc-9472-3d7bd5d4168f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a883e0c2-ddc4-4b4a-bbed-742398eac593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803c13f9-60b6-4d97-9eed-1d83a714ee65",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b9304e-d692-48f2-a72d-e9611a941d6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab05b24e-eed2-408a-b2b4-4003c9e5f6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990f1824-88b1-400d-ab2e-b6dc79b8b262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86da76a1-1bb1-4ee8-a590-e9b32b1b91fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585ab997-8f10-4832-8c50-d8e81ec26212",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a7c9cb-4183-4314-9c12-d3223f8a745b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3abd5adb-5dcf-40c4-bbdb-c6ebf7eee266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4323a496-f7cb-495a-ace6-0e3f24868022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3772c61-251a-4949-b0b9-1d7d020f5b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f939642e-b601-4c0b-8a46-76941b826f0b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac096a6a-5bd1-4dd4-879c-0d32ae3f2cb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e323ff9f-5eb8-4b00-b640-fa086f7e8f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c001bd-4a55-4271-8c7c-d3d29f5def9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8fcab0-255d-4e53-aa12-abb0e21b43c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519b3d71-7edb-4e5e-9e39-43b362b45972",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a2d0ac-6742-4f2c-91d0-9c0e738e0006",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f01e19c-336a-4735-bf10-9c1a47578454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96df228-eb7b-4d72-a639-8e9350d43bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f707e7c0-a5f1-4199-854c-d01e2a5a3bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d3a612-abe4-4cce-8464-a143a431fe34",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e899a2-6e35-493a-b37c-00ce5d8c64ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89c0fd9d-edb2-4aae-8f17-b62eb3d5ca83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c119fc-f3ff-4c5e-b08a-4aede1de4482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f29d6aa-939e-444e-b52f-2b50494c4e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9b43c0-db5c-4387-88f3-ecce6c5853d6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a249938d-c722-4911-9681-88105485e03f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "667f5b89-d1f4-4c5e-b4f9-4c0a6d82b4bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9affffe9-de02-42f3-acc3-633278b1a0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f448aab-914e-422b-ad42-e3a07d7fa87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3826f0c-7739-4057-8d3a-38098fbbc0ca",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750dcd8d-72ae-4cbe-96ac-2bc05db04837",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea58245d-801e-4624-ac25-9cde0dae1e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95db2ba6-9f28-4efe-83df-8acaed77fdbb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c38457-62a9-4326-b909-40d96fff1e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b363b3-e1ca-4aa6-ac77-1d53e14a3820",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c815bc-3348-4c18-be98-d8558e3837d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5161877c-3208-4f0e-91d6-8ea8944a9f01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e816b091-0f91-4a64-b35d-333c9d67beed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54cebe4-5cb3-446b-ab45-2358930c1bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2debf4-082c-4b36-a3a5-f50dc263aa24",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee10b54-85c3-473a-98ff-78980ef1b900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "832162b9-1e89-4956-8f63-2c8d1eaab6ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8899ac58-dc72-48f8-bae2-1e3cdcc83fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24752b4a-bca6-4489-9cd9-89921eeb99b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae5194d-89b6-4d82-9c1b-7d154ab719c2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980e702e-f6e8-4849-9edf-36da1f280f9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "901a1025-1496-463b-b13b-240f4bea1952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1345e89-8b02-4ac9-91ed-16667cb1864e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7768a9-bffb-4ca7-9b05-1c615cc0cb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6732ef9f-9e8e-45e2-a580-995a4190b614",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f49970-3d98-49f7-b300-913836ab17b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e76be802-37cd-4f8e-8183-82704b5a1922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911ae0ab-73c0-49a9-b77b-ebafabd7bcb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92bafcee-3dc6-442c-9bd1-ee0866935d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745ba5f7-f21b-4c14-a8d3-dc0057c9ba62",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0c07dd-98df-40aa-aa3f-36ceb3e63753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7039bea8-c313-40ff-8883-2ce012bb5ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbeff715-f413-4cfa-8e97-31316a14764b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbef840c-3380-4120-b463-db366c66ea02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dfa1d4-3536-4e19-a989-1d32d084d682",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769c3aba-e3d8-47e4-9184-eb2aa4759f9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2859e560-3a03-4528-a933-d4f9151e2d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abdb8f1-f2a3-4240-a105-caa4c089c89e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05c5039-27ba-49f7-af84-053ee5736817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1dffe02-6805-4f89-9387-c393f1a398eb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab66ea8-261b-453b-b3d6-2760eadaf4d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab547e3c-03a8-46bc-93c6-acb99e0d2dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f091e61-6e22-4f10-9555-b567a24a8b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48984d7c-deb3-456c-b52b-dfca0c4aa33b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d04a3098-ae1c-4ffa-a44f-ff1bbb0d0a4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56755a54-945f-4c16-8c4d-754c1c7e71ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4ffc5a8-720c-4ebd-b5b6-fd5571a57da8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81e791d6-9e82-4159-8ca7-1cae4ea29e5f"
                    }
                  }
                ]
              },
              {
                "id": "0142d8e2-4a4e-43f8-8f96-80664178a914",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c083590d-87a1-4ee0-938d-90f3c3b5fb64",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42ff761-292a-4af9-ab6a-5781cad7d5b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e782f4ee-0e40-4bd8-96e5-d24f3abd44ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ec5ace-66c2-47ab-93fa-23a3a7bdb001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d586f15-a341-4c9c-8dae-fd01e3441e69"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59715974-a99e-4a5b-acc7-c5db8589f067",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57c0436d-b868-4105-bd18-83b5383dab07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "246daed8-ef69-49f7-8885-fc0cf0f9092c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1939465-2029-4d67-a4b0-c67f68425cc0"
                    }
                  }
                ]
              },
              {
                "id": "185ac2ef-4dc5-4a26-b51c-6dc6d1cb8b8a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c643f05d-488f-4f68-8f31-0a1e72272e0b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea3390f-64f4-47cc-a7a7-aa25c27b945c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "09c0e8f1-1a24-4b79-b985-2b61e980a44b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0ca06e-4cf9-4d66-b36b-0515065c1489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b52c1a-bf0f-42bc-9ed0-568cd38eea2b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ecf3791f-4b5f-4ad5-a149-da8c1b775a3e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8579abf6-5a79-470b-be06-7c4b9c3fbcda",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5784ef73-af69-416d-a18f-901146f59e3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dd55a3b8-42b6-40e2-b5fd-5b9f2b321ec5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5574af3f-abee-4ac0-a895-42fb4bc1e77a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abc5dc3b-c899-437c-ac69-229a17b8d72b"
                    }
                  }
                ]
              },
              {
                "id": "774ba7e4-5fb3-4ccd-85a5-7377819d49db",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68e2f41a-c462-47cf-93ad-3a867fdb0a3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c823e853-530e-4a3d-bef8-039effc0b3ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52b15154-883c-46c7-a13f-772b61f84367",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9456b9f8-9da2-470b-83af-5c53510a9e3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d330e951-2729-49d4-906c-79a9084eb57f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f6fb03d7-5d69-4d2f-bf33-3aee55daebfa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98d780ea-62bc-4711-bc11-5939d79f5b37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87967e1b-6136-4369-bfc9-935ec50c46e6"
            }
          }
        ]
      },
      {
        "id": "096b2995-36ed-4f60-a1e5-d33c674d0365",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d68c40fc-d6c1-4689-9e89-76086ff90fde",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ae12bdd-9dc0-45ab-a693-7f1cd6b7edbe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57d0a138-c265-49e1-9352-6979f58537e3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e672b3e-fd5f-478f-8d34-deb979cefc2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9e654168-ebf0-41a8-928a-fcab739d1786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99c4a15-7931-439e-8913-bc2e975a77e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c736c9e3-bd37-495d-8489-508222690f82"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecc2ceda-244a-4385-9903-6ce5ea78bd19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffc17b43-2864-45a5-b2c9-1a4655a9df14"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac7d5eda-a9fd-434b-b44e-4af1ade3c676",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "626c9869-c99f-44d2-94ad-b6628d45328d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a0c984f-4626-4621-8058-f5d01e937269",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ead001a4-bd4c-498b-a1e0-66bcd0bc765d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae1eac18-7f6e-4a49-bc3e-b1152042e16a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5ca7a94-927a-4493-a4c9-3aafdcdbb70c"
            }
          }
        ]
      },
      {
        "id": "c5eeae31-9553-4b15-9081-6408a02e47dd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "abf6ac96-b014-4721-8397-f18f59535464",
            "name": "Negative Testing",
            "item": [
              {
                "id": "906b0d12-4075-4768-a8ab-10260dbbf57b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66273fca-acfe-4fed-9664-b06c6aef225f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f42516-20cd-4d8e-a625-27d61d54da33",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4def69e-bab4-4dfe-8d98-733ecaeb8c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e696863f-48d9-4550-b54e-2bd4be1e7510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d384fcd3-5e2c-4ace-9be0-74725f4abb6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91f2e8a9-4d0c-496e-ae80-86e7d5aa4234",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8b85a25-196f-4cb8-9780-c796b6fdf862"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a4c16f5-ae9a-4f89-8cc7-3eb2959bc009",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3dd6819-cba9-455a-bdde-50209f8998b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "748f0610-1735-4746-9674-c21c408681a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6a8a7dc2-3330-4d17-b616-8624df9c490e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfc8cdad-26c3-4504-9277-709a0aaa19f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07a6f7a0-7f7d-4687-b0a3-4acb86e70110"
            }
          }
        ]
      },
      {
        "id": "7ed17334-bcf2-4829-9f6e-39ceac99da1f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ace379c7-38f6-44ea-9f80-e7c63d38e55c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bcc8b4fc-3182-459a-801f-753236b9dcdf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9f7603d-96c1-4663-b3fe-ae403a12b068",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d59d65-2fde-49cc-a529-cca71a4d7040",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a18f937-6000-4d17-b60e-310cbe2115e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb0f2cb-c757-473c-acd8-a6c2c4d1e3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d67422e-601b-438e-801b-d9de6f556e6e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a299af6c-8782-4fdb-a241-78a630bf2494",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b971fc1-6e9d-40b9-a630-a0d5f10a799f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "994271a3-c446-44b6-bafd-216d7c8c6eb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa94e878-4613-44c2-8b3c-5d469d9656b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a564436a-6667-4d5f-9780-a4060f6c8402",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7ba85452-c4e6-449f-8608-f1f6670b18cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd55d78b-f291-43b7-b5d1-1dceb1776a7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7edd2ed9-4a28-4ab2-8947-20219590237d"
            }
          }
        ]
      },
      {
        "id": "c5f2a209-0cc3-4cd4-aa29-28e4c71c160a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc570a82-396b-4f63-8731-45e718b3d0d6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a3bb8a4-5c25-458a-8250-a48b7821b815",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d9880225-c62c-4b02-b528-922930f73cba",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "135f339b-b212-4143-970d-4fe47c68dfe8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86c4cb98-da25-4198-b2ea-e5bec8b23f64",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 67.01403508771932,
      "responseMin": 4,
      "responseMax": 7467,
      "responseSd": 493.33830940067344,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1704414961859,
      "completed": 1704414990063
    },
    "executions": [
      {
        "id": "4c30e4bf-425c-4f7c-a344-5c5a6f7c5f2b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b7584bf2-db06-403a-affb-0da3f7f73286",
          "httpRequestId": "f620b54e-d8c4-4ec1-81a2-5f7d33dad70b"
        },
        "item": {
          "id": "4c30e4bf-425c-4f7c-a344-5c5a6f7c5f2b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "52552c30-0e13-455f-ac1e-c4ed2195db39",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "769f6270-999e-480e-b483-742984eaf990",
        "cursor": {
          "ref": "e44b1812-7509-457e-a0d4-d2b6ab4f9187",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f59f4876-296f-48d1-80b6-d961a515462b"
        },
        "item": {
          "id": "769f6270-999e-480e-b483-742984eaf990",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "81a7cb5f-657c-4029-b3c8-e120402c832c",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "c28c2106-1010-4c9c-bdcd-e95c864e6c82",
        "cursor": {
          "ref": "a21277a6-e981-4794-8598-7646523e7dcf",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "69407b8f-b3c3-4729-a595-2ab4d0848d01"
        },
        "item": {
          "id": "c28c2106-1010-4c9c-bdcd-e95c864e6c82",
          "name": "did_json"
        },
        "response": {
          "id": "de90e0ab-0969-4d5e-a296-7c1e9a775f3a",
          "status": "OK",
          "code": 200,
          "responseTime": 281,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bc9062-0415-4b34-a607-c4275460b79e",
        "cursor": {
          "ref": "c6398162-21df-4536-aae0-15ca7597d8b5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d3ddb600-2093-4b4f-8131-eca451b154be"
        },
        "item": {
          "id": "d2bc9062-0415-4b34-a607-c4275460b79e",
          "name": "did:invalid"
        },
        "response": {
          "id": "677814e5-2540-48e5-a8c8-32c192ee6a1b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 598,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bc9062-0415-4b34-a607-c4275460b79e",
        "cursor": {
          "ref": "c6398162-21df-4536-aae0-15ca7597d8b5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d3ddb600-2093-4b4f-8131-eca451b154be"
        },
        "item": {
          "id": "d2bc9062-0415-4b34-a607-c4275460b79e",
          "name": "did:invalid"
        },
        "response": {
          "id": "677814e5-2540-48e5-a8c8-32c192ee6a1b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 598,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8aa179-2afb-414f-9196-b6c01eddc032",
        "cursor": {
          "ref": "943cf091-e446-44c8-8378-d7713a2aebf3",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4b4336f4-3198-48eb-a503-8a4e9259cf91"
        },
        "item": {
          "id": "2c8aa179-2afb-414f-9196-b6c01eddc032",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fa0f2c5f-a411-42ee-b576-4bfb64f5cb8d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 14,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8933969b-1b41-4d78-80ee-342279dee5a6",
        "cursor": {
          "ref": "017b7846-4d45-47bf-b601-b7f988bcc902",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2dcc02b8-c5e7-4e43-8129-f65d73b0c03d"
        },
        "item": {
          "id": "8933969b-1b41-4d78-80ee-342279dee5a6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0ff67bfa-acda-4cba-96ac-d7cb31bea911",
          "status": "Not Found",
          "code": 404,
          "responseTime": 24,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb931a36-ffb9-4ab6-8035-c473b9e44342",
        "cursor": {
          "ref": "dc728e81-4ee1-4f6f-b0e6-1afca7c306a1",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1ebc32c3-f4da-424d-bd97-c1d2480aa28b"
        },
        "item": {
          "id": "eb931a36-ffb9-4ab6-8035-c473b9e44342",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ea9b8e31-db46-4edf-adaa-78bbf0c4bd35",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21037da-98b1-49c9-bf0e-6202db46f64f",
        "cursor": {
          "ref": "b6800de5-85a2-4504-b2b7-cc89626dfa81",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f21a55af-7b3e-414c-8f3c-491fc9800600"
        },
        "item": {
          "id": "b21037da-98b1-49c9-bf0e-6202db46f64f",
          "name": "identifiers"
        },
        "response": {
          "id": "940f401e-a5a6-435e-9d13-68287d80570d",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00e193c-3c3d-47c4-a76e-49b6749cb791",
        "cursor": {
          "ref": "ebaec1bd-7875-4dcf-a994-066c21ef1fda",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b1a3fb35-3833-41cd-a7e1-6264b1299c41"
        },
        "item": {
          "id": "e00e193c-3c3d-47c4-a76e-49b6749cb791",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2c13cd7d-ad99-43f1-84f3-4aa2103de9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ab1466-abf4-49e8-aec9-0ea752ff8b90",
        "cursor": {
          "ref": "ff5167c1-eb63-4a0a-8ea0-be1ca7c4f3b6",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9d2276f0-4e36-421d-8fbd-0cf98e675df7"
        },
        "item": {
          "id": "13ab1466-abf4-49e8-aec9-0ea752ff8b90",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "39c5b21a-f920-4c2e-9ba2-63f82023cb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab16cb75-b5f6-4034-a966-99709d31305b",
        "cursor": {
          "ref": "361e8898-0c66-4279-a818-f098d564baf2",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "025f5a24-9505-4bc0-aed6-2ae67eabd652"
        },
        "item": {
          "id": "ab16cb75-b5f6-4034-a966-99709d31305b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "198ebb8c-294a-4273-9af8-34709ba856fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03704ff-3b36-4719-bbf1-bf91dd08fcd3",
        "cursor": {
          "ref": "50bab220-0f29-498b-b156-70a2cc74ec06",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1ac8bbd8-2394-4f65-8a7b-997b1d3c39a8"
        },
        "item": {
          "id": "b03704ff-3b36-4719-bbf1-bf91dd08fcd3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "03350333-2330-42a6-8612-6b8f77d2637c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61a82b3-36f7-4b89-bff9-fe2a8f36eed4",
        "cursor": {
          "ref": "a4c8706b-4e93-4b4e-8633-a87f0cfae065",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ebfecc7f-6fb3-4c06-bf71-605817e374ab"
        },
        "item": {
          "id": "c61a82b3-36f7-4b89-bff9-fe2a8f36eed4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b725cdfe-2142-4ed9-9cf8-1d4186699831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f2515f-6eeb-45db-9639-db84835f2104",
        "cursor": {
          "ref": "83e3d6a7-bff6-420f-85b2-22693e87b69d",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b73cad7f-f168-4195-8d74-38fc8ae2a3d0"
        },
        "item": {
          "id": "a5f2515f-6eeb-45db-9639-db84835f2104",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fdf9b2dc-e26e-40fc-81ea-40075e0468b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5053434-4357-4490-88e8-1430e0e88771",
        "cursor": {
          "ref": "ccca9989-8899-4598-8524-cb08560b493f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5576d298-2224-42f2-bc80-24db21b4f37c"
        },
        "item": {
          "id": "f5053434-4357-4490-88e8-1430e0e88771",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ec59c0d5-647e-4a92-b723-9faadd51e148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62db26a-01de-4e1c-8680-5479face5fe0",
        "cursor": {
          "ref": "b129f72b-73e4-4f80-a9d7-2ed31bba1596",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0b9a7fe3-d2be-40f5-b89a-7fc7ef1a15e3"
        },
        "item": {
          "id": "d62db26a-01de-4e1c-8680-5479face5fe0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b5cfac52-2509-4970-8843-a6671b533adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdea8c9-9766-454c-86e4-a4fb23af2c47",
        "cursor": {
          "ref": "ca125c9d-713b-41d6-bae1-5691aa1ca5d7",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a82fdcd2-6468-469a-924e-1a60775bdf53"
        },
        "item": {
          "id": "0fdea8c9-9766-454c-86e4-a4fb23af2c47",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "65bf3d18-09d0-4f91-9d65-6e46b767cfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dae9082-2f59-4a39-8b4c-47c54c2fb3ef",
        "cursor": {
          "ref": "d3add922-5251-4494-8888-f1a574d92828",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "210307e4-0bf7-4a9a-a3c8-7caf01d56e79"
        },
        "item": {
          "id": "9dae9082-2f59-4a39-8b4c-47c54c2fb3ef",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6d5823af-5c7e-49ea-a36e-a23699353be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8f2bd5-5814-4739-acc0-b5665cbff365",
        "cursor": {
          "ref": "4f1919bc-8a3f-4ee1-9291-a29b263f48b7",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "82015c73-8e04-4209-9abc-5e7451981653"
        },
        "item": {
          "id": "4e8f2bd5-5814-4739-acc0-b5665cbff365",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "792e93ab-be6a-40cd-b7bc-cf9e47705f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822425da-9c33-487b-b22b-4f1c1cf75600",
        "cursor": {
          "ref": "31e0690e-534c-4cc9-a3de-51fd05e7b43a",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d1d797e9-c7be-44c2-9964-8a2428ba8ec4"
        },
        "item": {
          "id": "822425da-9c33-487b-b22b-4f1c1cf75600",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c7533017-aba0-4065-a4ff-61560a50edcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a551c395-c74d-41ed-906a-e04aa66a1d94",
        "cursor": {
          "ref": "62ecdf42-d0e9-4944-9ea5-696880ea10fe",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "20b2afb4-7cb1-4bb4-b4f4-bad485bff35f"
        },
        "item": {
          "id": "a551c395-c74d-41ed-906a-e04aa66a1d94",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "96a370a5-e6e9-4b45-bb82-7b3b5bac3e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b63953c-4fb5-4e7c-a0e6-a4ae66aa8b2a",
        "cursor": {
          "ref": "99228aaf-8b5e-40c4-a4b3-d54c2166d7a1",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ef77b5f5-662f-43e5-aaae-058419b63525"
        },
        "item": {
          "id": "4b63953c-4fb5-4e7c-a0e6-a4ae66aa8b2a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "59b7a273-71e6-4394-9806-e35514608503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becc794d-ba43-46e9-8e7e-918ecd154b45",
        "cursor": {
          "ref": "af4d33d9-7954-4727-b4e4-e736c1655092",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d36247c0-d0bb-4444-a71a-1569574adeb3"
        },
        "item": {
          "id": "becc794d-ba43-46e9-8e7e-918ecd154b45",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "30f7722b-b21a-43c1-b144-aa8610907740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37747693-31e4-467d-80dd-2ce34c383413",
        "cursor": {
          "ref": "d1e944a6-7259-467e-9b3a-2bc71be08021",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c7fc841d-2c53-4888-95ae-6ea1428a4071"
        },
        "item": {
          "id": "37747693-31e4-467d-80dd-2ce34c383413",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c001b967-b991-4c2c-9762-6b93c0950699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec15fe30-01fc-4ae7-8f8c-ae7e15d4bec8",
        "cursor": {
          "ref": "2501a16f-497b-41b9-bb5b-ab566c888957",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ad753ac5-4688-4e2b-85c7-f79d0c786d27"
        },
        "item": {
          "id": "ec15fe30-01fc-4ae7-8f8c-ae7e15d4bec8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "99b8bfb9-da5b-4467-8fa9-cf2227760b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db9566d-2bc1-4f89-8721-d07ca35b2de1",
        "cursor": {
          "ref": "29a66137-cfcd-4142-a8a8-2a9909d39b88",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a8bd8ce3-e405-4b9f-9b7b-625a877dd453"
        },
        "item": {
          "id": "4db9566d-2bc1-4f89-8721-d07ca35b2de1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8a1ca9fc-b58b-4f73-baf9-559acbfb5fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81678041-f553-410a-a7ba-faa40bbefd3f",
        "cursor": {
          "ref": "815c8e79-b53d-453d-b786-1197b645abbf",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6e9b091b-da9a-48a2-99df-f443c40b5673"
        },
        "item": {
          "id": "81678041-f553-410a-a7ba-faa40bbefd3f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8dc4c12f-5aa9-4f2f-8fa2-a8593efb6945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5035b0-56b2-496a-88fe-7b762a776347",
        "cursor": {
          "ref": "304ddcd7-a02c-44d9-a953-71830b22b61c",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "92b4f4ec-90fe-4368-bb32-32b0daf92a4a"
        },
        "item": {
          "id": "0c5035b0-56b2-496a-88fe-7b762a776347",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "795acbd5-7a06-4c9e-b3b7-83c4e9f1c3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a555376f-122b-43f7-bc5e-92598bb2f340",
        "cursor": {
          "ref": "e423d3f0-0195-4070-954a-a569c27ca006",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "990309cd-9ca3-4195-9403-7ed19370e505"
        },
        "item": {
          "id": "a555376f-122b-43f7-bc5e-92598bb2f340",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c301a4f8-53e2-4702-9f86-09ef2edfdd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ef1548-ab9c-4096-9a34-39a726d36e0a",
        "cursor": {
          "ref": "9c87ad4c-be9e-4f14-a63b-6a05dd7a549c",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "724620c2-b0f3-472e-867b-16ec4081172f"
        },
        "item": {
          "id": "f8ef1548-ab9c-4096-9a34-39a726d36e0a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5130a9d5-90e2-4be3-ade3-bf07c0219e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6505709-4ed5-4582-987a-b6ce1be15b3a",
        "cursor": {
          "ref": "77b0fbb3-5dd2-4796-b028-6f24a358d101",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8c439842-4ef8-49b1-986c-4e13715568cd"
        },
        "item": {
          "id": "e6505709-4ed5-4582-987a-b6ce1be15b3a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e8695cd3-b92c-4ea2-81eb-f49dcde7676d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c67ef7-311d-40f0-a4bc-7b18e5d22092",
        "cursor": {
          "ref": "39fced56-cb63-4342-974c-ef0a582f2e2c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "01c2d94a-1fe4-4678-a738-4c833e933bef"
        },
        "item": {
          "id": "78c67ef7-311d-40f0-a4bc-7b18e5d22092",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e9bbf687-b222-4000-b6d1-ebd1c7061afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1f934e-7847-4379-bfb4-4b57ff585f87",
        "cursor": {
          "ref": "63229963-9354-4651-b109-a5b81708ee97",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a60b114e-d5bd-415c-9709-6c1feb7d4a63"
        },
        "item": {
          "id": "4c1f934e-7847-4379-bfb4-4b57ff585f87",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "20abd8a6-989b-4944-bdbc-71b6b69e79a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557a2c61-2a21-47c5-9574-540726a4ab47",
        "cursor": {
          "ref": "842880b5-da9e-424a-afae-fcef71920113",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "10521650-663e-42ee-9024-020f9a6769f7"
        },
        "item": {
          "id": "557a2c61-2a21-47c5-9574-540726a4ab47",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6931ffe4-28b4-4d87-914d-3bbd12be2eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888adffb-b7b9-406d-aae6-1f52ddbb38a8",
        "cursor": {
          "ref": "2babbf56-3633-4bd4-935d-17a21f1b07a4",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a8a81d00-1a5e-452c-9df5-585e4fe4e77d"
        },
        "item": {
          "id": "888adffb-b7b9-406d-aae6-1f52ddbb38a8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "26fc2357-644b-481a-8e06-142017a62774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f713b92-e91c-4f24-ab94-5f622011488d",
        "cursor": {
          "ref": "f46038ad-ea32-4b99-ba24-871f61900ae2",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "91025005-b245-432b-ab00-7d55deaa5505"
        },
        "item": {
          "id": "1f713b92-e91c-4f24-ab94-5f622011488d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d17ad85b-ae40-473d-a391-3dad62150d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5695f25-7ff8-42a2-b2e0-68f882b3df96",
        "cursor": {
          "ref": "495e5413-7e2e-4dc3-a7a0-5e03045fa0fa",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d4463b34-e437-4b24-b38a-58a560de1d7e"
        },
        "item": {
          "id": "f5695f25-7ff8-42a2-b2e0-68f882b3df96",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f1e9fcac-3aef-48b2-b3ca-9c229953c001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ccc886-e14a-4d04-acd8-08f5333d6d8f",
        "cursor": {
          "ref": "7859e8c7-f25c-49da-85ca-acf775c22f78",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4481ab45-0213-4489-b764-a4b02faf861e"
        },
        "item": {
          "id": "b3ccc886-e14a-4d04-acd8-08f5333d6d8f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e851a038-7166-4163-8b4c-f5d6a20d7ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6585aa6a-673a-45c1-962d-107dafc293ac",
        "cursor": {
          "ref": "1e608f24-d1f8-4434-a052-e0a0553732cb",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "435bb2f5-7a2d-4f9f-b904-698c3517ee2d"
        },
        "item": {
          "id": "6585aa6a-673a-45c1-962d-107dafc293ac",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5b167b89-8010-4a30-bf92-18bac1ca31e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b638521-ddb2-4c7e-a0cf-3974ec12f841",
        "cursor": {
          "ref": "a3ffd293-1a9c-4aa7-8ff9-e2621c363fdc",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a9571f42-44a1-4d23-bf85-b658b2a5453b"
        },
        "item": {
          "id": "5b638521-ddb2-4c7e-a0cf-3974ec12f841",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2b764de1-cd8d-402d-986d-f903a9a9fe38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a960cd-9ebd-4c92-9989-d485f152f2ea",
        "cursor": {
          "ref": "d7e000a2-1f42-4921-8ecf-8b542f778470",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1041caeb-7272-4c5e-af8a-c758ccb03fa9"
        },
        "item": {
          "id": "b1a960cd-9ebd-4c92-9989-d485f152f2ea",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6f0c235a-28df-4984-9620-1019cbb6e16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49686192-6123-469a-850d-c29fba16732e",
        "cursor": {
          "ref": "a659a07b-4233-4da6-9a9c-548714f71316",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "efed6e0e-5374-406c-a34f-8dd9a7f98f4e"
        },
        "item": {
          "id": "49686192-6123-469a-850d-c29fba16732e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "caaa90a2-2368-48c6-a279-7d97000a29a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672f3028-b49b-4896-b971-c6729e3be190",
        "cursor": {
          "ref": "e8648496-d6c6-4229-980c-abc166e467d7",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6d2d2064-29d8-4d9e-b721-c7a7416355e4"
        },
        "item": {
          "id": "672f3028-b49b-4896-b971-c6729e3be190",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e2183d05-4f4a-4108-a0b2-1217efc28cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e226d8c5-ff4c-4441-8d57-adca1781a569",
        "cursor": {
          "ref": "d08657be-070b-4648-ac98-7d3776e66825",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "93bf7ff0-3d73-4707-bbea-8169ba09fabb"
        },
        "item": {
          "id": "e226d8c5-ff4c-4441-8d57-adca1781a569",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3735f626-2525-4a72-ad02-46ee4da984cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15508cbf-781b-4f30-92e2-c15127fa1baa",
        "cursor": {
          "ref": "38e53fa5-3899-4984-9922-80c6c3d362d7",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3cb56538-ce20-4826-875c-4a1279ab0d84"
        },
        "item": {
          "id": "15508cbf-781b-4f30-92e2-c15127fa1baa",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "727b81d0-3fa1-4bc9-a00d-2d3e022a874c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4179ab8-d1cb-4ee5-b5ac-d31191a6a591",
        "cursor": {
          "ref": "f4a1c8f5-8810-4371-a004-22f0f7af231f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ad4ae47e-1306-4e33-87ae-b270684b1de3"
        },
        "item": {
          "id": "f4179ab8-d1cb-4ee5-b5ac-d31191a6a591",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d3c21d33-648c-4926-be6c-412765d3d8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaa1ccf-60aa-4adc-a859-b7d71f23a4df",
        "cursor": {
          "ref": "7a85bb0b-90ff-4bb6-8fa4-612343b40ff6",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "88fd69b2-6513-432a-bbc0-d46483990888"
        },
        "item": {
          "id": "baaa1ccf-60aa-4adc-a859-b7d71f23a4df",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "81333fe8-6a6f-4371-bb4d-34ed282fdcb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54cb532-dfef-42b7-8765-5f8d5cac9cbd",
        "cursor": {
          "ref": "d31768f6-0b97-43f8-9609-cf513ba39abb",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cb21db68-b19b-49e6-8706-df203c3cb523"
        },
        "item": {
          "id": "d54cb532-dfef-42b7-8765-5f8d5cac9cbd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d4e163a5-e055-4b51-ae69-09803b326d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8be35df-0e45-4b4f-8feb-2f89ae95a0bf",
        "cursor": {
          "ref": "1bf64afa-d333-4663-8190-5e418f244853",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "76c7ee51-2caa-4db3-b765-d5d4d5e94310"
        },
        "item": {
          "id": "c8be35df-0e45-4b4f-8feb-2f89ae95a0bf",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "43dcf1f8-e2b5-4aef-9b65-6b06d261c9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e472eb-6acd-4d2e-aa22-8d143e404fc3",
        "cursor": {
          "ref": "f4d314f7-7a16-41f0-917d-36de06f215d8",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "14c99179-5cc3-45eb-96d5-7e0369396904"
        },
        "item": {
          "id": "08e472eb-6acd-4d2e-aa22-8d143e404fc3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "edbdd194-c86c-4293-ad77-a016a3d94d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96350fb9-1518-4d06-89ee-c63f7c19ecdf",
        "cursor": {
          "ref": "39a790f5-2901-47b6-8ce3-6e42aed2a4a4",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c93bc033-340f-4b57-9088-0fa46c38d542"
        },
        "item": {
          "id": "96350fb9-1518-4d06-89ee-c63f7c19ecdf",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "be105ed4-0d50-42e2-927a-1160bcbcfc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b1ca8c-0e65-4565-b218-2658de1faab3",
        "cursor": {
          "ref": "a253d432-607b-41ca-a605-3970f88a7e37",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "aa2c4b25-1510-410c-9445-06becd6217d9"
        },
        "item": {
          "id": "57b1ca8c-0e65-4565-b218-2658de1faab3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "008d804e-9c10-40ef-9371-19df04090373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4257a442-258e-46ea-b339-7cc254c49acd",
        "cursor": {
          "ref": "f2f6e48a-873f-4363-a031-8a11ad8808d0",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a1ff95d2-b44e-48d2-8b9d-6df123953891"
        },
        "item": {
          "id": "4257a442-258e-46ea-b339-7cc254c49acd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "861055fd-ab85-4b81-bb30-5c505a13e12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8f7953-dd67-41da-8181-a3ca5a59af57",
        "cursor": {
          "ref": "a22f449d-bcf9-4e31-893b-9453dc48c531",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "820991ad-b15c-4342-a387-a8f2e6283392"
        },
        "item": {
          "id": "4b8f7953-dd67-41da-8181-a3ca5a59af57",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2c41d4a6-c225-4fc2-badf-54f954144f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb65dec-3741-44cc-8bae-cae0cfc05403",
        "cursor": {
          "ref": "938f8371-56a8-4406-b0c7-c3c90b7a6a31",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bb81e9cc-0f12-48b7-9fca-0cf44673226a"
        },
        "item": {
          "id": "2eb65dec-3741-44cc-8bae-cae0cfc05403",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "791b0212-d0cb-4d56-9cbd-b68e9169c42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f997d5-0231-4374-bfa3-b28265d7bbc1",
        "cursor": {
          "ref": "5e5d4afe-9108-4222-85e7-501ca9b36662",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "28005615-fe11-40b5-888f-df95b366d70f"
        },
        "item": {
          "id": "e6f997d5-0231-4374-bfa3-b28265d7bbc1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "eefb0c5b-344c-498f-8911-af310daaef0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca536933-4f7f-4396-b806-97b9aa7ffe3e",
        "cursor": {
          "ref": "b099b387-e4a4-4b2b-aeed-030fe8d79934",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fb57f8f2-2dd3-4493-825f-86c1071df4cd"
        },
        "item": {
          "id": "ca536933-4f7f-4396-b806-97b9aa7ffe3e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "73fb8cfe-fad0-446c-8e80-7e6e9d8d87d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1765ccbd-0126-48fa-9dc4-0ab830377389",
        "cursor": {
          "ref": "cf296021-bcbc-4d5a-9ef6-69fedd7e282d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fd378515-3e06-4d17-a552-311ce818a16b"
        },
        "item": {
          "id": "1765ccbd-0126-48fa-9dc4-0ab830377389",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "84e85b9a-8d32-45a4-b741-6352d8565049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed961ef-2d2c-49ce-bacf-97bd6d159f85",
        "cursor": {
          "ref": "84b75cce-5d00-4b99-a83e-9b0a0396bf1c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ce365378-4b78-490a-bf95-c211c78bb125"
        },
        "item": {
          "id": "fed961ef-2d2c-49ce-bacf-97bd6d159f85",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bf68e364-c5b6-4df0-ac98-df23f8a896ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57c6213-2d7f-434b-ae6c-85af01d9ecb2",
        "cursor": {
          "ref": "229b2c2f-f5a5-4ea4-a5d1-26ef7d322396",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ee6ad946-026c-4251-9995-65f4c153da6c"
        },
        "item": {
          "id": "c57c6213-2d7f-434b-ae6c-85af01d9ecb2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0e8b7d09-62ec-445e-b583-69f2462e1305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071d95de-bad0-404a-a09f-2acebc70ee18",
        "cursor": {
          "ref": "dbebb59c-295b-47b8-91cd-eef6dd50bbde",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "375f4c2f-b1ad-487a-9b9e-fa644b030290"
        },
        "item": {
          "id": "071d95de-bad0-404a-a09f-2acebc70ee18",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e481d2f3-e609-4832-ae70-1ee6ae9d1520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07514c13-a407-4531-a147-e9ef0dad105f",
        "cursor": {
          "ref": "bdb226f5-3617-4f90-9001-60db1d38cb83",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3cea07cb-7ffa-4c20-b9ea-fedb80e35f5c"
        },
        "item": {
          "id": "07514c13-a407-4531-a147-e9ef0dad105f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a45e3a92-e180-452f-b102-a9f350b4d779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb9a696-a022-4d62-a3ba-880e5e683e7e",
        "cursor": {
          "ref": "6ff1a301-203b-4ac8-9904-86633d79d59f",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c4f92b1a-bc1d-49ed-b16e-9563659fb4fa"
        },
        "item": {
          "id": "4eb9a696-a022-4d62-a3ba-880e5e683e7e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fd16ddc9-c7f0-4dad-822a-8f18896626bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4f5d18-0b57-4fa2-a182-4b5cd44540de",
        "cursor": {
          "ref": "b8a5b829-af2b-47b6-bf0c-5bb61745b6bf",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4796707a-7c8a-4c0f-8e19-3d9ebda1aa24"
        },
        "item": {
          "id": "cd4f5d18-0b57-4fa2-a182-4b5cd44540de",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9073f931-8915-4013-8829-b7752868d212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd0cd4f-3610-4e53-abd9-fda895248344",
        "cursor": {
          "ref": "b46f60af-5712-41e3-a754-ee3d0ed1ef8a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "976098a5-3651-4a40-b8d7-c8088554eb41"
        },
        "item": {
          "id": "fcd0cd4f-3610-4e53-abd9-fda895248344",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4de2f253-c955-4ff1-88ce-796e89077292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb5c097-47d1-41f0-8d1b-c907fab4c218",
        "cursor": {
          "ref": "4510f206-721e-460e-9f84-8c20e6095780",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "960f67d4-9a1b-43e6-b638-2304be5a157a"
        },
        "item": {
          "id": "9bb5c097-47d1-41f0-8d1b-c907fab4c218",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fd17b47f-b821-431c-b3ab-7065a4a4bfd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43ef510-a76d-4e1a-ad33-cd8e698414a6",
        "cursor": {
          "ref": "b71622b8-c0c1-45e9-a608-c5c81c670ecc",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b1f3ff4d-aea6-444d-980d-bdb1058179f2"
        },
        "item": {
          "id": "b43ef510-a76d-4e1a-ad33-cd8e698414a6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2a77dcde-9299-4821-aadf-1361c7df2644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53480e3-3c69-4deb-a38d-cc92574f5233",
        "cursor": {
          "ref": "d801595f-c243-4706-b0c3-c63fb81dc7e0",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c7bb7091-cb92-495b-91ce-c85528a73f0d"
        },
        "item": {
          "id": "c53480e3-3c69-4deb-a38d-cc92574f5233",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8427557a-3e7b-408d-9e11-137ee99ab998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16c2f8d-8065-4ba2-a40b-83e4fc201635",
        "cursor": {
          "ref": "1b74c5a6-5459-4463-91f5-3f64e93108aa",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "983d46de-7750-449d-92c1-82c3578e659e"
        },
        "item": {
          "id": "c16c2f8d-8065-4ba2-a40b-83e4fc201635",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "56631095-f660-4748-9b4f-56a6d18c93a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0970716a-4aa4-4d8e-9d6c-78feb8e1dd64",
        "cursor": {
          "ref": "0504790a-8b43-4cf9-95c2-cbe078c33ace",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7ab21e7c-7373-4fec-b004-fcb1751e41d0"
        },
        "item": {
          "id": "0970716a-4aa4-4d8e-9d6c-78feb8e1dd64",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d922ecfa-4f2a-406c-8fef-ac9f37a1f235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b782bb-e38b-4193-b02d-acbc1d01b948",
        "cursor": {
          "ref": "154f8561-0659-41d9-b1d5-f95028b72c23",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "48249409-dc7c-4a18-acec-474445dcc832"
        },
        "item": {
          "id": "71b782bb-e38b-4193-b02d-acbc1d01b948",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "192896f4-85b3-4e9a-a1c1-2c5eaf2e5208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9974ca9d-3cf0-428f-9db6-7a16d623f1d6",
        "cursor": {
          "ref": "2c16ca71-9de1-4b12-bf47-6b6cc4fcfa57",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ac390aff-7b52-49e4-950c-8fcc8c6bd4e9"
        },
        "item": {
          "id": "9974ca9d-3cf0-428f-9db6-7a16d623f1d6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "de47ccdd-9cec-49a2-abcb-623f712b6b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99df2f21-51ea-4595-8b3a-2cb4462d9393",
        "cursor": {
          "ref": "accc677b-0f1e-4dac-a1bc-1703e64b4983",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1a330a67-2e8c-4496-a03d-6537b0046e92"
        },
        "item": {
          "id": "99df2f21-51ea-4595-8b3a-2cb4462d9393",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5984913e-0c81-4744-85ba-ad37e47b30ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90662df0-0260-4913-82b1-093d8260b8cc",
        "cursor": {
          "ref": "19c73423-b40c-4b7e-98b4-1f17cec72b46",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f3a7e921-8d64-4a6e-9102-33ec9f9f15a8"
        },
        "item": {
          "id": "90662df0-0260-4913-82b1-093d8260b8cc",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8e7eb37e-df81-4b4a-91e5-c7183d5b7e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a917fe-6750-4979-ae0c-2e3bc6f83dd5",
        "cursor": {
          "ref": "6ba6a677-6342-4f3a-957f-c4b1cab57f48",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a4c43e6c-44c3-403b-bbe5-023e360cae45"
        },
        "item": {
          "id": "19a917fe-6750-4979-ae0c-2e3bc6f83dd5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b684d2fd-0d51-426c-bbec-2134f34465b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e340f7a4-18a8-42bb-9fa7-293737cf097e",
        "cursor": {
          "ref": "a19791b1-3302-4ff1-aa92-5aacab6188b2",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8cf1c62c-5144-4bb3-945c-30a463f28e4f"
        },
        "item": {
          "id": "e340f7a4-18a8-42bb-9fa7-293737cf097e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d0fe01c6-b775-43b3-a068-de721c2a7e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11521b54-ff43-49c1-bf83-be7021112537",
        "cursor": {
          "ref": "6e766a7a-b811-4ab9-80cd-e72da4f0eac6",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a372c611-6e1a-4511-8c9d-d9defb6c2b6a"
        },
        "item": {
          "id": "11521b54-ff43-49c1-bf83-be7021112537",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "646f0bb6-050a-4bd9-a0b4-170fd4357cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d907487f-f911-4b78-9998-f115eb0d0ca6",
        "cursor": {
          "ref": "13f8764f-9e04-42ed-9037-01d809bf5363",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e54e1c86-8c79-4c83-afbe-34e65ca00bb1"
        },
        "item": {
          "id": "d907487f-f911-4b78-9998-f115eb0d0ca6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ccdf2e1a-f128-4e9e-81d8-30ac52171aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6f2b92-0948-4a9b-8ec0-f3442c5dff3f",
        "cursor": {
          "ref": "36798b1e-0faf-47f5-926b-3aa602332a14",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "43507c0a-608f-4f3e-b6f2-47cc482c06ce"
        },
        "item": {
          "id": "8d6f2b92-0948-4a9b-8ec0-f3442c5dff3f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8be58b50-6241-4c1c-97ea-ea9455851400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6859ea9-1145-487f-8064-c0fdf401e38c",
        "cursor": {
          "ref": "7ee8ec54-a240-4782-9226-2e1d0eca4c1c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "368e57b8-9ffa-4f20-8c05-06ad0e13a32d"
        },
        "item": {
          "id": "f6859ea9-1145-487f-8064-c0fdf401e38c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7f7c64a0-7c7e-48bf-a442-02e8579d58db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165722a1-d8aa-4222-b604-fb54a17d2b01",
        "cursor": {
          "ref": "48aa8641-1e38-4d7f-9478-cae5f0a04cf4",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0bf3ee00-995a-42f2-9479-b4e013de27d8"
        },
        "item": {
          "id": "165722a1-d8aa-4222-b604-fb54a17d2b01",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fb21f648-7604-4f25-a16c-d93a395409eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d18d2f2-0e1d-4d78-9062-764586251202",
        "cursor": {
          "ref": "9ef345f9-4a00-4ac2-8d45-c2f71bd60f4f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f9a0c77e-188c-4aa7-b628-14e51646ad36"
        },
        "item": {
          "id": "2d18d2f2-0e1d-4d78-9062-764586251202",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "57251dae-f82d-4aaa-ac9a-802745aaaa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ee401f-19b8-42f3-8ce8-521c5832c86f",
        "cursor": {
          "ref": "b039b08c-59a1-45f3-8913-09dc069fe1fa",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d22467ae-fad5-4cd3-bd3e-61f41e4d1c03"
        },
        "item": {
          "id": "81ee401f-19b8-42f3-8ce8-521c5832c86f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e3991a20-825a-4a44-9b49-5714c55c4168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1e0e02-2bab-41a0-8d10-a0665ef8dd48",
        "cursor": {
          "ref": "e386012c-d75c-4328-b73e-cc1a444944d3",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b06c9c0f-f1a0-4567-8479-d902131213b5"
        },
        "item": {
          "id": "0d1e0e02-2bab-41a0-8d10-a0665ef8dd48",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "76522dd9-f619-43a2-9839-67c764d1aacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4105b965-1c08-40ec-8c91-6b220ff9e201",
        "cursor": {
          "ref": "f5fae1be-1135-476e-b8b2-e70672a7890a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "423c81b5-856c-48a3-bf0c-b85b894e759f"
        },
        "item": {
          "id": "4105b965-1c08-40ec-8c91-6b220ff9e201",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "581b8ed1-ce54-491c-b8f0-442efbcd4d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4936b7de-ea68-4e7f-87c2-efc1f79f908d",
        "cursor": {
          "ref": "cb061776-b78f-467d-b9bb-49e519e8e46e",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f6b66af0-6c10-4cd8-afa8-8358db57f43b"
        },
        "item": {
          "id": "4936b7de-ea68-4e7f-87c2-efc1f79f908d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e74e8961-8897-4ed0-9568-5581581361f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b27c60-2009-456b-acaf-cc9cd63c64a1",
        "cursor": {
          "ref": "e60685be-2988-492f-8852-4da081517af0",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3dafa823-aa24-4d0f-bd03-574ba1f9d288"
        },
        "item": {
          "id": "13b27c60-2009-456b-acaf-cc9cd63c64a1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8c533dfa-a4e5-4d68-9970-733118b331e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986283e6-5d77-4169-94e8-886546010629",
        "cursor": {
          "ref": "2ece9f37-dc12-48e1-b9e7-b352892f3fe6",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a7104efc-73a5-450e-bcba-650da54950a8"
        },
        "item": {
          "id": "986283e6-5d77-4169-94e8-886546010629",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6bc4f06e-d1d5-4314-b9d1-839d85bbc3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7371241c-82ee-43c0-ab41-87ea65e17c94",
        "cursor": {
          "ref": "91a5214b-214e-4df7-ae02-ece58c20a916",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c787cfd5-01bd-4a8e-980e-e0de7c42b24c"
        },
        "item": {
          "id": "7371241c-82ee-43c0-ab41-87ea65e17c94",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b233d146-1e67-40b1-aec0-15af143c3676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a67af86-cfab-44cd-9ac8-b2fe35665f6f",
        "cursor": {
          "ref": "4f57335c-ec66-4947-b9c9-eadd49fc442d",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5ddf7c1f-175c-437a-a0ec-aba0497411fc"
        },
        "item": {
          "id": "4a67af86-cfab-44cd-9ac8-b2fe35665f6f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "51f2a056-dbda-4fb0-949d-ba60ac1b6b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4b7238-2b5b-4e63-aa97-f0db2bce37e7",
        "cursor": {
          "ref": "2250e57b-eba0-445d-adc2-cd71b8976d05",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "84cf0e7a-0a87-4ec1-ac37-7922d098ea44"
        },
        "item": {
          "id": "ec4b7238-2b5b-4e63-aa97-f0db2bce37e7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "832bf6b7-ed96-4f61-8566-98e869cce417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0d5526-95a5-4920-8b13-cf87906e2d6f",
        "cursor": {
          "ref": "5764bd86-4451-4bb2-9fe4-b0baba69a238",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "56f36020-969a-47df-a344-b48aec9fe60a"
        },
        "item": {
          "id": "ac0d5526-95a5-4920-8b13-cf87906e2d6f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4adc488b-7e1f-47e7-8f19-5475d613a5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a41b776-d11e-4304-9234-e2ec9fde59d6",
        "cursor": {
          "ref": "9511a533-6226-4003-b39e-2b78a51222c1",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "33839ea6-0d76-42cc-b4ef-108ed013606e"
        },
        "item": {
          "id": "6a41b776-d11e-4304-9234-e2ec9fde59d6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "816036db-37e6-4719-a873-91971c15f94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db114c42-9e3f-43ea-b1b8-df6171d969a4",
        "cursor": {
          "ref": "25f5ab73-f4a8-4442-9f46-a40421ab0ae0",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e83cf677-f7e6-46a3-870e-e74e691e3c4f"
        },
        "item": {
          "id": "db114c42-9e3f-43ea-b1b8-df6171d969a4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "451bd1dc-fc99-4a8c-b3b4-aa77402eabc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41c2935-77b5-40b0-84dc-442b63a8e99d",
        "cursor": {
          "ref": "aadf1ced-16fb-4dd5-b2ab-1749fe3e1ea8",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6351246c-0ad3-45e3-aa51-85f5ad712e4d"
        },
        "item": {
          "id": "e41c2935-77b5-40b0-84dc-442b63a8e99d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "42eaf8ca-2594-4461-be96-97b932dc0bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acc0cde-1d2e-4169-9814-8f39424fd8cd",
        "cursor": {
          "ref": "67047df3-f63e-40eb-8eef-ece094f62d72",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bf9b7c9a-df19-4f83-b589-53b26da3fb2c"
        },
        "item": {
          "id": "3acc0cde-1d2e-4169-9814-8f39424fd8cd",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e94c6564-fe5c-4a8d-b3a0-32c5a09655ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32e385d-ec49-4c9f-85dc-d9daa51aaac1",
        "cursor": {
          "ref": "5e809da0-c7a7-4cba-b0fc-13209e6a0deb",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1ea70ce3-1260-4fcc-99cf-8baadc42d39e"
        },
        "item": {
          "id": "f32e385d-ec49-4c9f-85dc-d9daa51aaac1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e322a192-be80-44b4-a118-2815cf96bf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a07225-03a3-4694-843e-65bbf789977c",
        "cursor": {
          "ref": "7f6eb029-175c-4a70-9176-1169c491c82d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e15d6341-07e9-46f5-996b-3fa1cce2e880"
        },
        "item": {
          "id": "50a07225-03a3-4694-843e-65bbf789977c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bf440cdd-8501-4783-9de3-dd879192ae7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c240056-5b6c-4189-a06c-272dd1e9b217",
        "cursor": {
          "ref": "159ca932-2708-48bf-a91c-9fa55c53e19c",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "242f403d-82e6-4584-9973-af56eea50ec1"
        },
        "item": {
          "id": "9c240056-5b6c-4189-a06c-272dd1e9b217",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9ce3b7cd-401e-471b-aa7b-3027f08f96be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9b0ad8-9c63-4f80-bd98-b2c00f45f687",
        "cursor": {
          "ref": "53c79f4c-a40b-4994-add0-b4653102d53d",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a85b2888-84ad-41e6-bd98-418ec36277d5"
        },
        "item": {
          "id": "9c9b0ad8-9c63-4f80-bd98-b2c00f45f687",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1c911776-aaf3-4da0-b0da-5e1277345652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b900840-cb17-4d32-887a-5ebeadd415f5",
        "cursor": {
          "ref": "f13367c9-8e27-4187-afe5-e8c27c073be0",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "49ed58b9-95a8-475b-9688-79efd5dd40b9"
        },
        "item": {
          "id": "2b900840-cb17-4d32-887a-5ebeadd415f5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5889a614-70ee-4119-9724-1d5e53f5b151",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7570dd6f-a98f-4a54-a95d-6f5777898cf4",
        "cursor": {
          "ref": "20bd6e76-1e94-4926-9332-3cc5928685a0",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5407477a-69dd-44e8-aa78-713cd864b461"
        },
        "item": {
          "id": "7570dd6f-a98f-4a54-a95d-6f5777898cf4",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0238add6-dfe1-4d6a-a715-9a31705e0d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "a3a4204b-af88-45ea-a1e6-a18a9c2db248",
        "cursor": {
          "ref": "db697479-b1ba-458e-bef0-dd66f2169451",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bf43f93d-48d0-44af-a4a4-205414a8bac9"
        },
        "item": {
          "id": "a3a4204b-af88-45ea-a1e6-a18a9c2db248",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1295ee43-4867-4921-be4f-be259a0dfe2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "2ca2670f-cb84-4f1d-8f9d-daf845ab66ed",
        "cursor": {
          "ref": "b2418160-2c5f-44d9-b651-23fddd9a379c",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c434496f-faf5-4423-b9ce-2133c859265f"
        },
        "item": {
          "id": "2ca2670f-cb84-4f1d-8f9d-daf845ab66ed",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "270cd6c5-3662-41c7-b797-dd77cbe49d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "60b9d58c-56c2-40c6-bead-ba53a1ea04e4",
        "cursor": {
          "ref": "a4b9a943-89a7-493b-9244-0a1687cf3845",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e2566202-374a-4a68-8ed9-f9481437fef9"
        },
        "item": {
          "id": "60b9d58c-56c2-40c6-bead-ba53a1ea04e4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "abde3c38-5930-42fc-bcd8-ac53e7bee019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e6880355-70f7-477b-a344-b760ec623207",
        "cursor": {
          "ref": "7687039f-9d89-4b35-8496-fdee44f7e07e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5889f683-a1d2-4b5d-81bc-74025f02186b"
        },
        "item": {
          "id": "e6880355-70f7-477b-a344-b760ec623207",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cffaf807-01e0-4c6a-80ea-abda475a0174",
          "status": "Created",
          "code": 201,
          "responseTime": 7467,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "28878941-ae81-4ab6-841f-a7594c52450c",
        "cursor": {
          "ref": "cae595f1-48a0-45c0-801f-e01d56895748",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0d869633-7ac2-45f4-a96c-a1b297df1ca0"
        },
        "item": {
          "id": "28878941-ae81-4ab6-841f-a7594c52450c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1784ef9b-8755-47c0-ac74-78d660ce3dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "15cb1d9e-1fb7-46ed-ad7c-045a49c2bdfd",
        "cursor": {
          "ref": "6aebb8d4-1233-44e1-9a11-b75dc6cfd72e",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "057e1c96-e99c-46ce-9d77-2fec6d780664"
        },
        "item": {
          "id": "15cb1d9e-1fb7-46ed-ad7c-045a49c2bdfd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "81378947-fce8-46d5-9f6f-a4f2bc62b63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "433ec31b-c9f1-4228-8a71-649a376b3113",
        "cursor": {
          "ref": "7f76b97e-8c39-4231-9391-81c3e6d9e268",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "74a387b7-8994-4b96-ba15-734fd785208c"
        },
        "item": {
          "id": "433ec31b-c9f1-4228-8a71-649a376b3113",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "20949cf9-f172-489c-999b-daa245c6319e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9424d3e1-fd9f-4357-ac3b-be5cd4be871b",
        "cursor": {
          "ref": "0c9223b5-78b6-434b-ae6f-f08798a49acd",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "10c2ddcc-ea3c-452c-8ebc-d26a81f1e9f2"
        },
        "item": {
          "id": "9424d3e1-fd9f-4357-ac3b-be5cd4be871b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9f5188f5-965a-454d-a0eb-7ad0fa769b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3f1ea2-f008-487b-96af-1b158570086b",
        "cursor": {
          "ref": "117377ed-07c7-4aab-8fd3-665239a44086",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0b4ce791-fb29-4135-b94c-322134fde51d"
        },
        "item": {
          "id": "bb3f1ea2-f008-487b-96af-1b158570086b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0dce35c0-cfb7-4ebc-8a1b-ed056929b227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a7b6f3-e83b-42a4-9c27-a38dc97283a8",
        "cursor": {
          "ref": "3baab392-1308-42fa-821c-ddc77731d077",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ecdb1fad-89fa-439b-a57f-61ad35afbfbc"
        },
        "item": {
          "id": "07a7b6f3-e83b-42a4-9c27-a38dc97283a8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f5388e50-28e5-4970-b3cd-3f8adf33352e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7265289f-76d9-42c1-9c8a-6ae4474fa1b1",
        "cursor": {
          "ref": "d03d1ae6-ea74-4686-9770-4e9e33f688a4",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4f389953-8980-41aa-9da7-eb84763a191a"
        },
        "item": {
          "id": "7265289f-76d9-42c1-9c8a-6ae4474fa1b1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fb3b96f0-eaba-4f8d-8960-68fefa6cebbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405dfeb9-41b8-4b62-bc7d-2ec09591b869",
        "cursor": {
          "ref": "591c0158-c9d9-4f83-9ce4-8aecda728828",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4b93435e-b8d0-4302-bc9e-79041d07e5f0"
        },
        "item": {
          "id": "405dfeb9-41b8-4b62-bc7d-2ec09591b869",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4bd12f4d-4498-461d-b50b-9a4838c8405b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54196443-4659-4660-859c-01e54f666575",
        "cursor": {
          "ref": "540299e9-5a6a-40f5-8110-89b1cda7a6a7",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1c68a87d-1455-4bd5-9acd-4952000bf427"
        },
        "item": {
          "id": "54196443-4659-4660-859c-01e54f666575",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ad9dcdf7-47f4-4a7f-81b0-16128f2c06f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0d61da-43d5-4ed5-a911-93f967adb867",
        "cursor": {
          "ref": "56cf5f8b-8d2c-495a-9f93-e17ad9159369",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0648d3fe-5de3-4195-9be3-449fd4a20993"
        },
        "item": {
          "id": "dc0d61da-43d5-4ed5-a911-93f967adb867",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d9f4f2c0-d59b-44df-8736-d1b92d4d76f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2b3214-2b3c-44f8-9266-cf5dc42260e6",
        "cursor": {
          "ref": "fbc62175-9f86-4018-ab3c-ad9c55c3a890",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "befa5378-d019-4292-acd3-722e9c114834"
        },
        "item": {
          "id": "2f2b3214-2b3c-44f8-9266-cf5dc42260e6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0fd41123-fc74-4722-b42d-ccb0fb381c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18360cf8-e7c9-4f52-aafc-6a0e8a0fa4a9",
        "cursor": {
          "ref": "b71ec81f-da10-4db0-aa9c-9d3a688db3cb",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5efe4b30-ad22-46fc-b1f7-404e752ae8cd"
        },
        "item": {
          "id": "18360cf8-e7c9-4f52-aafc-6a0e8a0fa4a9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1cefaa2e-d3ce-4178-b5bd-71679a020b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349d0e4f-780f-415b-82f1-0c0f28ad5aee",
        "cursor": {
          "ref": "067e3127-1ab1-43ce-83d6-1a6fc2b91388",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "70ca8191-bdbb-416c-bb08-706796ca64da"
        },
        "item": {
          "id": "349d0e4f-780f-415b-82f1-0c0f28ad5aee",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c78c1379-84d0-44dd-87ea-847e7647881d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b389c112-96fe-4580-9549-ae0b5eb7862c",
        "cursor": {
          "ref": "445ab6d7-1e1a-4cd7-a15f-036003ffdec2",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c98f2f31-da04-41af-8b74-ed0ba4b9ef32"
        },
        "item": {
          "id": "b389c112-96fe-4580-9549-ae0b5eb7862c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ce6bff91-2e08-4155-a9ac-44b8de56e564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d0810f-e75a-427c-b4e3-26849b3b31f6",
        "cursor": {
          "ref": "2d41ff56-8310-431f-afe6-e87bbe16811d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "956226c6-51dc-4598-9716-bb2ffdacc135"
        },
        "item": {
          "id": "32d0810f-e75a-427c-b4e3-26849b3b31f6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e351967b-8b94-4e11-a7a4-66a17dc75b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc33bcf3-5077-4020-b3c5-03c507ee62e8",
        "cursor": {
          "ref": "301e644f-ce65-49c9-a3f6-9992cc8a9260",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bf4166bb-93df-458e-a2b3-e1d8e0a3cdaa"
        },
        "item": {
          "id": "fc33bcf3-5077-4020-b3c5-03c507ee62e8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "95838efd-1e41-445a-84ad-28229aafaca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c17de4-1860-4b7a-8d90-e8fe5ab503f6",
        "cursor": {
          "ref": "f2ca4645-959c-4a2c-bf92-97cd8c6a6bf5",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "415ac42e-96ec-466e-aac4-d098649ed391"
        },
        "item": {
          "id": "64c17de4-1860-4b7a-8d90-e8fe5ab503f6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "127b1f08-11b3-406c-b45e-056bc7cd8767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c30d34a-7d28-471a-9f76-4a86bd593c07",
        "cursor": {
          "ref": "c76b049a-731a-4a50-8fa9-db65a0fa93a4",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d20daef6-b4b7-4397-bafc-472f162a9d4c"
        },
        "item": {
          "id": "3c30d34a-7d28-471a-9f76-4a86bd593c07",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "39a98f46-8ce7-4320-a6ca-994a4cff69d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d012686d-37c0-4347-8945-39c149bbf443",
        "cursor": {
          "ref": "b9ad0c62-a17d-4009-9643-e9875936131c",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4aae57ee-13f4-417a-aa87-96ce3a4571df"
        },
        "item": {
          "id": "d012686d-37c0-4347-8945-39c149bbf443",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ea3043d4-41fa-4aa3-98a5-1b74aab45ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db08b460-6d48-445d-b937-ab45b07139a6",
        "cursor": {
          "ref": "b249c9ac-1fd4-44ab-bce0-51dd5aa73095",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "73694a96-7ab3-43ae-a9e4-5ef1d5468906"
        },
        "item": {
          "id": "db08b460-6d48-445d-b937-ab45b07139a6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "97337ae6-c42f-4a3f-bc8a-79200500c43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31597720-f9f5-484f-bdfa-d88957cfba68",
        "cursor": {
          "ref": "f588579f-7022-4014-a0e0-46297bd498f9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "620475b4-9fa6-44aa-9c9b-8b5a68d39fc4"
        },
        "item": {
          "id": "31597720-f9f5-484f-bdfa-d88957cfba68",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d652ec36-c848-4ca3-8904-174f399cccc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4165eb0-de10-4185-a847-77b718f6d686",
        "cursor": {
          "ref": "cc4259f7-108e-4533-afc8-48e2db20d023",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a04bff69-5e17-4d25-9823-813589dc47a2"
        },
        "item": {
          "id": "b4165eb0-de10-4185-a847-77b718f6d686",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6a049a16-f64c-498f-8d10-70f8b7ceda54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f23540-018b-4e8a-8546-60eee900becc",
        "cursor": {
          "ref": "c1a39c1e-a1a9-45e8-b418-408851497200",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e12dc444-bc68-4540-8859-7f5584fbfa70"
        },
        "item": {
          "id": "48f23540-018b-4e8a-8546-60eee900becc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "203ac710-1707-47d3-8e3b-ed1cd947d7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca88e291-b727-441a-83db-8e5300a29989",
        "cursor": {
          "ref": "6df35e9c-fe86-4ab8-a1a0-f212d69fd410",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "47b19146-a1f4-4075-918a-3fbaccab5e02"
        },
        "item": {
          "id": "ca88e291-b727-441a-83db-8e5300a29989",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "de780ce7-d864-472b-b733-209b345fdd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e6c137-23be-4b9d-9077-e0d01f847205",
        "cursor": {
          "ref": "a85d1e89-002c-4aa8-9f8f-34f00bd66f14",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5ad4c1da-0650-4cec-af8e-285c05315843"
        },
        "item": {
          "id": "f1e6c137-23be-4b9d-9077-e0d01f847205",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7ca22f6a-bc5d-4174-8680-6d5fec0ab088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635d9890-cd2c-4be4-8451-71c4a62cc1e9",
        "cursor": {
          "ref": "ac7ac0fc-e5a3-427f-bd3b-885865d1968c",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "95213dd4-9002-4bd3-98ee-36dbdcfdec5c"
        },
        "item": {
          "id": "635d9890-cd2c-4be4-8451-71c4a62cc1e9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4e4f5853-faae-4305-87ba-aab4fc20b6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dfcf55-e7a3-4cc6-b84b-0d4bd4236642",
        "cursor": {
          "ref": "505783bf-b368-42b6-ab73-1afd64c995c4",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8be9b27a-2faa-46d4-bd16-a576eeae352e"
        },
        "item": {
          "id": "43dfcf55-e7a3-4cc6-b84b-0d4bd4236642",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "522a33e6-641c-43a2-8a8a-86e9336e98e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb0b8f9-f552-4b28-a366-ec3084e4cbf9",
        "cursor": {
          "ref": "3e80774a-7e9e-4534-aaf2-9429402631e5",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bb4a7c3e-fb23-4fd1-86cb-41f859f225e6"
        },
        "item": {
          "id": "7bb0b8f9-f552-4b28-a366-ec3084e4cbf9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2b34c503-37cf-4898-8131-678735e750b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9551a8-c50b-4d34-b4db-2ee0d3656c5e",
        "cursor": {
          "ref": "efe4e2c6-0c19-4b09-8214-921095fb69a8",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "07758d90-e908-4927-9a6c-0b83a030efe6"
        },
        "item": {
          "id": "5d9551a8-c50b-4d34-b4db-2ee0d3656c5e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1cd13148-8c80-45c3-9d0d-37c20efeeeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5788e920-0596-4da0-85f7-04d06a1161c2",
        "cursor": {
          "ref": "a856af3a-f5bf-4730-b12f-e003fffd9982",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f065e644-f9cc-4eca-af63-03b6f06e5845"
        },
        "item": {
          "id": "5788e920-0596-4da0-85f7-04d06a1161c2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9890121f-71ea-4498-a7d1-e323ebcef529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c5a14a-d457-4cba-91f9-32b30d1ab2b7",
        "cursor": {
          "ref": "ba4ce138-d7c6-4397-ab25-596a6072c495",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b1033d43-2ef3-41ac-871e-a10c89c25b03"
        },
        "item": {
          "id": "20c5a14a-d457-4cba-91f9-32b30d1ab2b7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b7b7ece9-53e0-4a5a-842f-a1b7ff20ef63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbf4e3b-4df1-4c2b-a43b-fbe920909c4b",
        "cursor": {
          "ref": "e5921d23-7e98-4b84-957f-823c9b266737",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "935618bb-f454-4a41-a550-2e3871dcce4a"
        },
        "item": {
          "id": "1fbf4e3b-4df1-4c2b-a43b-fbe920909c4b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "20f378bd-290f-46ec-ac1f-60e0262a5c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45bff51-b500-40ca-a1e4-ae5824ce19b2",
        "cursor": {
          "ref": "a6333182-813e-4052-9d26-1d39be5789b2",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a07e15aa-4546-4119-abe4-9b52860e3425"
        },
        "item": {
          "id": "a45bff51-b500-40ca-a1e4-ae5824ce19b2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cf2bebd2-594a-40d0-8927-8b276c2e3154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b896aebb-6cc8-4dd4-bd1b-3b783bd80c93",
        "cursor": {
          "ref": "54226b04-060d-4f6d-b6a0-0aafa1e98203",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "95c01d46-b898-44cd-bb9a-1c11cbacdc86"
        },
        "item": {
          "id": "b896aebb-6cc8-4dd4-bd1b-3b783bd80c93",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1d2f2218-71b9-4fcc-9fc9-78175920a7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68867868-f569-4338-973b-7b776b6ff99c",
        "cursor": {
          "ref": "7ef11473-4887-4c36-8742-28502b107615",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d52e3509-4583-43b6-82cc-bc591da0bff9"
        },
        "item": {
          "id": "68867868-f569-4338-973b-7b776b6ff99c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "54ef6172-82e0-4472-b360-4c3d0533b979",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82610561-e323-4b3f-a62b-c0d9a37adc31",
        "cursor": {
          "ref": "94a92da9-ad21-4e5e-8caa-7b07195ee986",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "30cb7c44-1c2e-4cc3-a79c-7f8aa5af86e2"
        },
        "item": {
          "id": "82610561-e323-4b3f-a62b-c0d9a37adc31",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7e024663-5837-433f-8f97-c5f744a70b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ce51c1-c676-46ed-9688-323ab8e4e8bc",
        "cursor": {
          "ref": "258e1f35-764f-4103-ad80-56dce85ceff9",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ae3aa8dd-45c6-4792-8d7d-676e8d617f48"
        },
        "item": {
          "id": "b2ce51c1-c676-46ed-9688-323ab8e4e8bc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f028c942-6fb4-43c8-9255-c6cee3834514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a45ff30-fec8-4e2f-b25a-6e6402c203b0",
        "cursor": {
          "ref": "f2c72860-e4b0-4789-881c-373a42b8c07e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "82b48b89-3412-4cfe-8088-3627505ec786"
        },
        "item": {
          "id": "1a45ff30-fec8-4e2f-b25a-6e6402c203b0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ccde3453-7de4-4c46-8d2f-5689d3580988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fbce8c-5c8c-40b2-b0cf-ab6e60f49106",
        "cursor": {
          "ref": "a3b2cf47-049b-4bb7-8e1b-0d9cdd1a2674",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2893fa6f-5bc3-4d71-be40-79591e88263e"
        },
        "item": {
          "id": "47fbce8c-5c8c-40b2-b0cf-ab6e60f49106",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4f92faa9-0667-4806-91a9-710a5d9cbe3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9c99e9-a7db-4be1-b99b-884564d20a37",
        "cursor": {
          "ref": "20a9841f-d41f-4445-b4c1-1345735a0e40",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9563e810-3923-4dfe-a019-042825d2a59b"
        },
        "item": {
          "id": "4d9c99e9-a7db-4be1-b99b-884564d20a37",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cee4aa12-5530-47c0-b665-e04daef5395b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0871737b-b748-4041-9a10-c2cb4e349268",
        "cursor": {
          "ref": "401960c6-0ce5-4c10-8f5d-6601afe18e29",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "357dac8b-6041-4da0-a46d-ba9b6286b07a"
        },
        "item": {
          "id": "0871737b-b748-4041-9a10-c2cb4e349268",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ce4572d2-fb94-4f16-b7b7-4dc738ebcc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83b1a58-eee2-43e3-b6c2-bc956ca5204a",
        "cursor": {
          "ref": "9797f6a3-e898-4300-866d-7b60f94069f3",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cd240329-f809-47fa-9df7-2deb7ff2bc02"
        },
        "item": {
          "id": "d83b1a58-eee2-43e3-b6c2-bc956ca5204a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "79ade1c9-577d-488f-b245-a53b310ad831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ce7acf-39ac-46b5-8cd2-fc21367684de",
        "cursor": {
          "ref": "cbf2ef22-b39c-4e9b-afd9-cb9a015f2049",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "614245cd-3582-4cbb-a7e8-77f78f4a7475"
        },
        "item": {
          "id": "68ce7acf-39ac-46b5-8cd2-fc21367684de",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f188da2f-7459-4a1b-9644-e7856bc44aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9037f3e-c96f-4b39-9bb6-d9c3fca3b4af",
        "cursor": {
          "ref": "9e6c063d-f6bc-4157-86ca-cde0f3218c3b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "54df484a-d29a-4d49-8e01-57c2b5fa5339"
        },
        "item": {
          "id": "d9037f3e-c96f-4b39-9bb6-d9c3fca3b4af",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fb18413a-1d5a-47ea-867e-61172f028088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfba53d0-1a78-4a84-8455-cd35602d4b56",
        "cursor": {
          "ref": "bd77c083-2b99-400f-a499-712f84bda641",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "00128402-3c5f-419f-9713-8f555183d197"
        },
        "item": {
          "id": "bfba53d0-1a78-4a84-8455-cd35602d4b56",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bd27fae1-eb7b-4fac-aa9b-354e97896fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922fb82d-6337-4605-8498-77d0669c6554",
        "cursor": {
          "ref": "2175d9a0-8fac-4b7f-bf1f-e99717561352",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "51c014fd-39f0-484c-b6c5-5a940e1c4b84"
        },
        "item": {
          "id": "922fb82d-6337-4605-8498-77d0669c6554",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aaa8d091-d4ff-4aaa-aa15-1e943f26d11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4eded22-507f-4a9b-b0d9-e4179fe6b22c",
        "cursor": {
          "ref": "4f29b091-fdc9-4dde-a194-ca1b0c6dfe95",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4645d74b-f615-4326-9755-8f488e1dad44"
        },
        "item": {
          "id": "b4eded22-507f-4a9b-b0d9-e4179fe6b22c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2d7a83e8-8ec1-40b2-ab14-2f96759d8480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7aafc41-6bcb-4a09-983f-b0b40c64a0cb",
        "cursor": {
          "ref": "1ffe8cb7-f6f5-40e1-991b-b328eb02b59b",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8d74b43e-a906-4e88-aa86-6cca1648261f"
        },
        "item": {
          "id": "a7aafc41-6bcb-4a09-983f-b0b40c64a0cb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8bb774ba-3869-4549-8763-e3a4b8783337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be122752-65ed-45f8-b12f-a527f7293787",
        "cursor": {
          "ref": "c1325a14-bc55-4dfe-8e86-e32153c270ca",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c26a14c1-e11d-4652-a01e-122589fbb6f5"
        },
        "item": {
          "id": "be122752-65ed-45f8-b12f-a527f7293787",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "490e8f64-1d16-4842-a50e-b83f827611f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdba53eb-601d-472d-b232-7fcd22a2fd5f",
        "cursor": {
          "ref": "544fd360-b05c-4cc0-9108-ec03c61dd3c1",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "717647c3-9eef-4a45-a548-a27cd5e78eab"
        },
        "item": {
          "id": "fdba53eb-601d-472d-b232-7fcd22a2fd5f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5fea1fb2-9fd9-4fc8-9f72-52a77ee41da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94aa79ff-9cdd-4166-bdc1-b292a51eafff",
        "cursor": {
          "ref": "9f1655e4-4123-4baf-b356-8e5d4871c746",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "38d5545c-3383-4a21-90f5-d1119fc8badf"
        },
        "item": {
          "id": "94aa79ff-9cdd-4166-bdc1-b292a51eafff",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ea4c5b7b-0d9c-47d7-87bc-cfa1eae318ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af3e441-38a6-45d3-a26c-2bf138f3246a",
        "cursor": {
          "ref": "fc7e63f6-f157-427d-834f-9ee4674004e1",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "02e21ac6-b114-4751-a36e-dc6b320d2915"
        },
        "item": {
          "id": "4af3e441-38a6-45d3-a26c-2bf138f3246a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e2203188-1c43-4ced-9a0a-23828a94bf3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df794410-fd2c-41af-b5d9-8bbdffb09a54",
        "cursor": {
          "ref": "5c09cc81-d6a2-4990-9624-08a048869265",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a73b00ae-528b-468b-92f6-a41caf13e284"
        },
        "item": {
          "id": "df794410-fd2c-41af-b5d9-8bbdffb09a54",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "47ffe0d0-db8c-4be5-805b-f1267d4361b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ad1770-cb46-4916-b028-9d8cca706ba8",
        "cursor": {
          "ref": "ff213371-af01-4c48-a9fc-7c4234b9b91b",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ae8d6a05-060d-4ccf-a17e-64850de64403"
        },
        "item": {
          "id": "d0ad1770-cb46-4916-b028-9d8cca706ba8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "66936775-2fd9-4f02-89c4-109661c74d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29777e07-cb5d-403b-ab3b-9c1e9e851df6",
        "cursor": {
          "ref": "96ad0b1a-686e-42e4-8640-a9b8648a5aad",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b494285f-0b43-4180-b10c-bd8a57f37930"
        },
        "item": {
          "id": "29777e07-cb5d-403b-ab3b-9c1e9e851df6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4bde8137-a588-4721-8cbb-46e6fe95aeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46ff632-3194-4e7a-979f-6a2089453e8e",
        "cursor": {
          "ref": "653c6647-619d-4a65-9ba5-8fb73a0aac59",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8d799f50-2564-486d-a86a-433f778b0a9c"
        },
        "item": {
          "id": "c46ff632-3194-4e7a-979f-6a2089453e8e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1c00aa11-eaaf-4ee4-904f-0451ea24a6f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b13470-945e-4312-af25-e45590fd7f2b",
        "cursor": {
          "ref": "5eab22e4-6b67-4d71-92c5-cfe54d1312ef",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4ca536e6-bd2b-4a5a-9765-4588b28fac49"
        },
        "item": {
          "id": "85b13470-945e-4312-af25-e45590fd7f2b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7544d830-6957-4cb7-8442-062b60f08dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70684ba9-4dc8-40f6-b9f3-e60b1be94473",
        "cursor": {
          "ref": "c77707d0-b66a-4653-aaf3-cd7651dc82ce",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4a2e0a77-719f-400f-8789-3c43a8a5b3d1"
        },
        "item": {
          "id": "70684ba9-4dc8-40f6-b9f3-e60b1be94473",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dbc4b4d9-82a7-4cb0-b3f7-9f091020e4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350458da-9a73-45fe-a82a-1fbc22fb23d4",
        "cursor": {
          "ref": "7ef1ec95-bb17-4319-849f-575fbcf07290",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "65445ff0-cfe8-4604-b5ff-d75fcc35c72c"
        },
        "item": {
          "id": "350458da-9a73-45fe-a82a-1fbc22fb23d4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c16a3246-bdb6-46dd-a965-7c7fccf5de6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6f89fb-2661-437e-86e9-ea90b0e2a739",
        "cursor": {
          "ref": "0571294c-1331-484e-9121-8d7c7a647b77",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3e1c40b7-9aba-4348-ac19-497a0ef81c9c"
        },
        "item": {
          "id": "af6f89fb-2661-437e-86e9-ea90b0e2a739",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "195ef748-d49b-4c1d-9249-4040fb006487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fbab26-0aec-43ba-9593-40e7fb73a68b",
        "cursor": {
          "ref": "3f151ae6-b238-47b6-a9b4-205c4e1ace25",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f7f522d8-194d-4161-9be2-6d139bea38f4"
        },
        "item": {
          "id": "93fbab26-0aec-43ba-9593-40e7fb73a68b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a59b5f5f-8a94-41e8-9493-69952f99d8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9957b5-3cc1-4454-acc1-732edb3fa2f1",
        "cursor": {
          "ref": "d350b849-e312-4d5f-a9d7-23ba516087e0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "edf07628-cbd2-471e-982a-983e79af07b2"
        },
        "item": {
          "id": "df9957b5-3cc1-4454-acc1-732edb3fa2f1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f6865c2d-509e-4b27-a5b3-917bb7f81e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c394bfb-9b11-4104-8b2d-25a851c264b0",
        "cursor": {
          "ref": "3169a194-7f90-4a98-955a-f22cd052f603",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e1ddfd83-936a-4c19-972d-f3914641d7ea"
        },
        "item": {
          "id": "8c394bfb-9b11-4104-8b2d-25a851c264b0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "28c973f1-55be-4b56-82cc-fe74c193412a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ce71f0-beeb-435b-a5c9-487a84c0e66d",
        "cursor": {
          "ref": "7030b384-281c-468b-af3d-4350eaa1b0ff",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a474a958-74d9-48e3-b4c0-2a9ce1c694a1"
        },
        "item": {
          "id": "03ce71f0-beeb-435b-a5c9-487a84c0e66d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "69244406-140c-44e8-b55c-f106dd25a37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d85263-f4fc-46f7-b248-93baa1e676eb",
        "cursor": {
          "ref": "6cb83775-5acf-4ebe-9cee-e5627d78e02b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8c905eb1-98e3-48af-aaa4-7df3db780362"
        },
        "item": {
          "id": "12d85263-f4fc-46f7-b248-93baa1e676eb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a6ccc402-4bd2-4ed4-8bd3-13258d704948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa7a469-a01b-4e02-8565-620b7687d92e",
        "cursor": {
          "ref": "71442107-aa69-4875-813a-a8b9a513f1a4",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f095d436-074d-47db-aa21-3bf1c02bdb8f"
        },
        "item": {
          "id": "cfa7a469-a01b-4e02-8565-620b7687d92e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7b5edb63-d690-4c2d-9b41-45f4edcdb78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907e7d68-f348-4de1-98d6-362c1b8d99a8",
        "cursor": {
          "ref": "be02d7c4-ce27-426b-a567-0e0b47707c92",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d9df8580-7fed-46d8-94d6-6607ede2aede"
        },
        "item": {
          "id": "907e7d68-f348-4de1-98d6-362c1b8d99a8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d36e6bcf-395f-4b45-becc-e9ee2cdabf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c667d9-2780-44fc-927e-0380f793d99b",
        "cursor": {
          "ref": "ad45383c-b486-4e12-8a13-206caf0afe77",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7fb6df0f-3b5b-4c2d-b86a-b37849a2898f"
        },
        "item": {
          "id": "c0c667d9-2780-44fc-927e-0380f793d99b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "517c6a38-6179-45ed-a4a9-bfafc4356fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da3dff5-341d-491a-ab23-c45aa7d6a90c",
        "cursor": {
          "ref": "7e331629-7105-4f79-ae5c-e580b0e4f0f0",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f14c11c5-b1f6-42cc-88d2-1650f40333c4"
        },
        "item": {
          "id": "5da3dff5-341d-491a-ab23-c45aa7d6a90c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e61e315d-d153-4c1b-a861-bd89d16b6eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e50d820-5d1a-4777-9833-ec31959991dc",
        "cursor": {
          "ref": "3112dd9a-53db-43cd-bac6-4e502429a432",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c46609dc-5277-4731-9ab6-98da79e597a3"
        },
        "item": {
          "id": "8e50d820-5d1a-4777-9833-ec31959991dc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e6068faa-de84-4380-ada4-681d437dc1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e745dc-2ffd-4ddc-8e32-8096d35fed92",
        "cursor": {
          "ref": "44a0a62c-4182-4eaa-ade3-0b02582b87b4",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9f16c4d5-64ea-4fc3-b75d-aceb79a8afda"
        },
        "item": {
          "id": "f1e745dc-2ffd-4ddc-8e32-8096d35fed92",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "895540d3-a18b-4e4b-ac42-05fb53914b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5ced18-ee5a-4d43-9d57-28400e2530e1",
        "cursor": {
          "ref": "31983fdc-1b13-4a4f-92f6-1da963c2d11a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "efb4bce2-eea1-4e5f-a5df-55e9f44fc9a6"
        },
        "item": {
          "id": "2c5ced18-ee5a-4d43-9d57-28400e2530e1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "37ce354e-1a0f-4d6f-9e6f-799b0d5d7eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f379b5a6-dbcf-4072-9658-587f2470706a",
        "cursor": {
          "ref": "9ae76b6d-b1de-4ff2-a7a7-acb0a6ef3912",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "be99709e-5fe6-40ed-8fa0-89be787ca4fb"
        },
        "item": {
          "id": "f379b5a6-dbcf-4072-9658-587f2470706a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "be1cc99a-da97-48ad-89b8-447c168c594d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2ef086-312c-45a5-8b25-8b07082b2f64",
        "cursor": {
          "ref": "77bc1ca3-a7f2-4d40-a7e0-2ca35d3a020f",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c2c849d8-09d6-43f2-b2d7-0810c6ee387b"
        },
        "item": {
          "id": "3f2ef086-312c-45a5-8b25-8b07082b2f64",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8468281c-db35-4dde-97c3-4b3a57281681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22228a18-c770-45cc-aca4-9aa025864baa",
        "cursor": {
          "ref": "df81c5aa-c654-472c-b114-b12e74ecaa88",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1f53eda8-9fc7-4a2f-bb5e-f1ef49733d01"
        },
        "item": {
          "id": "22228a18-c770-45cc-aca4-9aa025864baa",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "120545d3-c2a9-452e-b9b4-881b106398a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32fca7eb-93d4-4e1d-b8c3-21fcb6d2fcb0",
        "cursor": {
          "ref": "0f76a365-584d-45c1-88a0-0300e768a3f3",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9ad77526-b589-4d8f-b262-9c02d9a3c692"
        },
        "item": {
          "id": "32fca7eb-93d4-4e1d-b8c3-21fcb6d2fcb0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7720bfd1-500f-4ebd-8daa-f21a3a8ab99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ae9f0b-ddab-4f91-95c1-dc7821f7b5ba",
        "cursor": {
          "ref": "bbb6dbb8-0a3d-42cd-a0b0-fa75ffb5b107",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "981f5237-51cf-4bde-851e-e45e116c46ec"
        },
        "item": {
          "id": "35ae9f0b-ddab-4f91-95c1-dc7821f7b5ba",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "eca918ec-a3be-45c4-9e93-d379d66ac2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad09f46f-8df9-4081-9351-9c3ccaa811e6",
        "cursor": {
          "ref": "345393fa-6f0f-4ec9-b903-facb879b916b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2f48a91c-de5c-4401-953d-cfcbcb6d423e"
        },
        "item": {
          "id": "ad09f46f-8df9-4081-9351-9c3ccaa811e6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "53939019-035e-46b5-badd-7b139f48e657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fae1da2-eed0-4503-8037-119f30c5354f",
        "cursor": {
          "ref": "ba18b2f7-9338-4443-b71f-63826689d2c1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "56ff8920-7bb4-4eaf-aff8-86b8e2996859"
        },
        "item": {
          "id": "2fae1da2-eed0-4503-8037-119f30c5354f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b1e47b23-db86-4023-8982-fe103d87f1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc61a176-ff76-451e-a1d3-7d9c0edf648e",
        "cursor": {
          "ref": "c17f7393-f4f8-493b-b80a-928566bc0fc1",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e299b122-308e-4f7b-bb4f-87f3ca66e3be"
        },
        "item": {
          "id": "fc61a176-ff76-451e-a1d3-7d9c0edf648e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e4d50e30-cd38-4aff-bdf4-218e02ef750d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c64425f-b9e8-452b-abcf-89719469b50d",
        "cursor": {
          "ref": "450ee57a-3636-4f08-abae-ba4f7ce83a7e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8b6fe4b1-d2de-48d0-bf12-eb0f28f487a8"
        },
        "item": {
          "id": "0c64425f-b9e8-452b-abcf-89719469b50d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2acd3c77-6f67-4f64-a567-6644e258be30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b44bf5f-07f5-4dbf-9213-ed2c29c4bc84",
        "cursor": {
          "ref": "72ac9638-633a-4066-bd1c-a0dc03b0bcd1",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6b9a56ba-e45b-4555-bc18-1bfdb4bb5d7e"
        },
        "item": {
          "id": "2b44bf5f-07f5-4dbf-9213-ed2c29c4bc84",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0cb142ac-b8d9-4672-858b-425a0c9751ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc24e161-f99e-490e-abff-93d1048e1acf",
        "cursor": {
          "ref": "ca71e1d6-85aa-4857-b9a1-fec370b59269",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "742f0c0e-2acb-4fb8-8370-94b9bd4007bf"
        },
        "item": {
          "id": "cc24e161-f99e-490e-abff-93d1048e1acf",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "aab58b57-5c32-485a-a9d5-4d6af35c82e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d6a395-d17e-4f3c-aff2-7b5c269ecaf1",
        "cursor": {
          "ref": "71b1f271-c426-4332-a5c9-e99e1b19a697",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6b93953a-e7aa-4a11-a000-f3d458da1949"
        },
        "item": {
          "id": "02d6a395-d17e-4f3c-aff2-7b5c269ecaf1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d78af2c2-d245-47d4-86a8-f210975896fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c040d95d-8250-4cc8-97c5-66bb8894d8d5",
        "cursor": {
          "ref": "79a2c8f7-73de-4fd3-9980-5864a27a334e",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f01c28bd-18cf-4a0c-850b-de75e418b85b"
        },
        "item": {
          "id": "c040d95d-8250-4cc8-97c5-66bb8894d8d5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8a632d66-824e-4d00-a703-311b93d61051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b898a76e-20b3-44db-bd8f-97fa993f17f3",
        "cursor": {
          "ref": "4feccad5-20bb-46bd-9d8f-b38b5b3e5eda",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "56d600d7-b909-482e-9165-d4603fc35422"
        },
        "item": {
          "id": "b898a76e-20b3-44db-bd8f-97fa993f17f3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c59566b2-1549-4180-b600-d9e0d779dba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8eb6b98-ac06-474b-84d5-06538206278b",
        "cursor": {
          "ref": "7409ad75-9898-437e-9f86-75ae6b0f0020",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e5322f97-7d83-463f-854d-88e504b7fd56"
        },
        "item": {
          "id": "f8eb6b98-ac06-474b-84d5-06538206278b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "75269c5b-da9a-474e-972a-3f69991499ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb778f5b-ed3f-4249-9441-83a187a291fb",
        "cursor": {
          "ref": "0948485d-fb2a-43f0-a0b7-4a50f0d52207",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8c73f3cd-f31c-45c8-acf0-66a15d24aa10"
        },
        "item": {
          "id": "cb778f5b-ed3f-4249-9441-83a187a291fb",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "58600e97-a581-4083-90f7-4aa1d1187669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb11914c-817c-4b09-9cc2-3b4d82461fe7",
        "cursor": {
          "ref": "45b9b81a-c29b-4ecf-9ac3-58fbde893555",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8c0de409-65b7-4065-9a53-11ddc3eceef8"
        },
        "item": {
          "id": "fb11914c-817c-4b09-9cc2-3b4d82461fe7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c97ac3fe-1566-45f4-bead-eadb6ebaf574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e456a0-e41f-4d0b-b8b9-a622382d0d66",
        "cursor": {
          "ref": "fa53baca-a709-4538-80df-ec77afaf8659",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c3e122fa-0d38-4bd2-b84f-2ea68caf4127"
        },
        "item": {
          "id": "88e456a0-e41f-4d0b-b8b9-a622382d0d66",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "040c542c-7192-4002-99db-16c984981c95",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "afa5300e-1673-4455-93e0-2160ff0b6ba6",
        "cursor": {
          "ref": "8b3e4094-98eb-4856-8835-75d6b93cbef3",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "99c12159-d22f-4c06-8073-a48f5fffe44e"
        },
        "item": {
          "id": "afa5300e-1673-4455-93e0-2160ff0b6ba6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "94895236-7f60-40c7-90f2-759b70e4c76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57a5856-3b6d-4010-8644-4dd9758bd5ba",
        "cursor": {
          "ref": "66f9955d-4a08-4d9b-99a2-18051fc7bd49",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "32469bc3-6909-4019-b4ce-972c258edcbd"
        },
        "item": {
          "id": "b57a5856-3b6d-4010-8644-4dd9758bd5ba",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0b840395-616a-4140-9500-4b8e786eab12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d37add-2817-4b64-9311-75e408bc4db9",
        "cursor": {
          "ref": "bd082b23-b506-4425-97eb-95ad59090beb",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9b7ef637-40e1-4c22-97e7-c6f4a721df73"
        },
        "item": {
          "id": "a9d37add-2817-4b64-9311-75e408bc4db9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a325685a-4b98-413a-8a7b-1864dc5cd482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ad30b0-2ee7-4874-8550-68a2261f7a00",
        "cursor": {
          "ref": "3b6613d1-2e26-43c1-916d-66616f961c4b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "914b7d52-daae-4ae6-ae08-2c9dcdacac91"
        },
        "item": {
          "id": "11ad30b0-2ee7-4874-8550-68a2261f7a00",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "74d7800b-e8b7-4819-b0a9-654f418d45b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb348ca-22e8-45ee-94ef-497aed545574",
        "cursor": {
          "ref": "53038422-841a-49c1-a074-365d093b2bbd",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f9acda72-5694-4085-9a69-8c577178ab65"
        },
        "item": {
          "id": "dbb348ca-22e8-45ee-94ef-497aed545574",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "696de5a6-534b-42c3-ab9c-65d56d895072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb453ebd-076c-417a-a723-61d8d6366a67",
        "cursor": {
          "ref": "d99c0110-1618-480b-8ac5-63974b128a6a",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d72c6ccf-f39e-42de-8c9a-ed209967b22e"
        },
        "item": {
          "id": "eb453ebd-076c-417a-a723-61d8d6366a67",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b27940b8-5f97-413a-94ee-da56e31fd483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee7e719-3f1b-4fdb-8835-14e6ff5dc6bc",
        "cursor": {
          "ref": "c9ba3177-5a0d-48de-b948-ca6ede42dc40",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5feab7b1-6c83-4fe8-b573-4142a3d638ae"
        },
        "item": {
          "id": "4ee7e719-3f1b-4fdb-8835-14e6ff5dc6bc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "06bc4c46-391a-458d-a86f-ffe342f75c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8905861d-429c-44ef-b1cd-2f041c788f03",
        "cursor": {
          "ref": "762151c0-ae0d-4c77-8b8a-06765cd779b2",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b108cb34-2395-44e1-8d87-6998870eff3d"
        },
        "item": {
          "id": "8905861d-429c-44ef-b1cd-2f041c788f03",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f89d53fa-eb15-43d5-b358-82e5a02f7315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7315bd5a-c690-45da-bfda-96c9ae102589",
        "cursor": {
          "ref": "50de4904-35ab-4708-ba3c-5d1c50dd056a",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7c7cb143-3fed-477d-a5e7-5eeb4707dca2"
        },
        "item": {
          "id": "7315bd5a-c690-45da-bfda-96c9ae102589",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cabf4d1d-af7a-47bc-b40b-8f0d4b57ee7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193105d3-da64-4eb0-b85a-68f77c6bfad5",
        "cursor": {
          "ref": "7720a0a8-9a7e-4de9-93ff-199a9b36c600",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "044bfa62-8abf-459b-9ba6-47d43596c426"
        },
        "item": {
          "id": "193105d3-da64-4eb0-b85a-68f77c6bfad5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "18a913b9-db2a-476e-b529-725174213301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348c8d89-1e50-4ee9-87de-fab383291736",
        "cursor": {
          "ref": "2b128ca0-d3e1-4615-9793-53065c41803e",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "42758f38-1e9f-4906-b5eb-61406da2c7b0"
        },
        "item": {
          "id": "348c8d89-1e50-4ee9-87de-fab383291736",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "22272c90-5915-47a1-a016-19b0921114a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ada749-964d-4c82-b548-f8096d888006",
        "cursor": {
          "ref": "9e6550b5-3dd4-4dc8-9bf3-3037caf249b4",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "da7764e3-7a04-4b94-9bc5-9ed7fb6c5a7a"
        },
        "item": {
          "id": "40ada749-964d-4c82-b548-f8096d888006",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "57e8e781-e5b1-46cc-852f-f53237e1f748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13b4b20-97f4-49d5-acb4-e68d3bcb4d6a",
        "cursor": {
          "ref": "97e2106c-3ad4-4228-bfa6-4bbb7e8099fe",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "10fb7398-6ab7-4da8-8877-e5cd291cb16b"
        },
        "item": {
          "id": "a13b4b20-97f4-49d5-acb4-e68d3bcb4d6a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e3d9d9fd-ecc8-4b72-b468-25ea81ef5af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8726e5ec-75a4-4fa0-a0fc-c3c95c83e1ca",
        "cursor": {
          "ref": "eb7e982f-abb2-45da-9a64-35a8189b1eeb",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ac085953-915e-40c5-bf03-3f934e8826fb"
        },
        "item": {
          "id": "8726e5ec-75a4-4fa0-a0fc-c3c95c83e1ca",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "94e2ae9b-1dbc-45bd-8dd3-22f532a3009f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784cb1b8-8f98-43b4-ba07-4a5a663da014",
        "cursor": {
          "ref": "6caaaf12-0099-43c8-b9a7-9fba8eae9686",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c3b6a15d-3f4e-4758-864d-0db09c6fdbf3"
        },
        "item": {
          "id": "784cb1b8-8f98-43b4-ba07-4a5a663da014",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fa75b84d-728f-45c6-8310-0093e05d646a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1990d31-d093-4f04-8296-5901a882bfe2",
        "cursor": {
          "ref": "e1468625-6f7c-40f2-b8e0-1aa94dfc143c",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "935d942b-bb03-4ff3-93a4-bceb1e8ba4a6"
        },
        "item": {
          "id": "f1990d31-d093-4f04-8296-5901a882bfe2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f67bb681-728f-47ef-b3d1-9f97e1a4302b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1057a13c-d72c-4682-9e50-0194b52bcda5",
        "cursor": {
          "ref": "986ca45f-681b-4a55-bf71-42ebd382cc63",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f084495c-b70f-44fa-a75e-7efdec55ef3f"
        },
        "item": {
          "id": "1057a13c-d72c-4682-9e50-0194b52bcda5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "506f35a0-bb9d-4a17-94ee-a92cb65cfa75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aca91fc-1213-4d97-92d0-2bd16954b81a",
        "cursor": {
          "ref": "973315f8-0185-458d-92b6-8f3b473dd996",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a1e3b6c2-d81f-4294-a3b6-05fb4adb08df"
        },
        "item": {
          "id": "5aca91fc-1213-4d97-92d0-2bd16954b81a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7fe175e7-b638-4f3e-909e-433d4ca46a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c07268e-268c-478b-80b0-73bcea71cf71",
        "cursor": {
          "ref": "1c17d1a5-072a-4407-82c2-6c56590e2258",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fd8259d0-9090-4c72-ae46-8f20253de182"
        },
        "item": {
          "id": "8c07268e-268c-478b-80b0-73bcea71cf71",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ab422d3a-c56a-4707-8396-3e90e9164415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b72deb-d0ad-4df6-a494-f8b8a0d23425",
        "cursor": {
          "ref": "4604a66b-8cbe-4510-b203-ab5b5087e02b",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "12f7be32-c807-4e03-b784-cdf8c2998589"
        },
        "item": {
          "id": "86b72deb-d0ad-4df6-a494-f8b8a0d23425",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2cb45c98-e76b-4cd1-b1ae-6956f4d0f47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2f6baa-396c-4d59-8c43-3796450d1491",
        "cursor": {
          "ref": "80d0d9ec-fa9a-492d-b1aa-4b68554cac70",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "180093a1-f3d2-40cd-8265-192f585292ac"
        },
        "item": {
          "id": "bb2f6baa-396c-4d59-8c43-3796450d1491",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "483ac82b-3e5d-4762-b02a-6daab6430b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6fca6f-f605-42ad-bb0b-2707e03c939a",
        "cursor": {
          "ref": "3a7494fc-cd8d-4f27-81dc-1e59fbb75bc5",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "40d2ec53-b935-439e-8ecb-befe4d42a803"
        },
        "item": {
          "id": "7d6fca6f-f605-42ad-bb0b-2707e03c939a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "70c60abb-6f26-43cd-a695-b36853e1b19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5266c50-f3a7-453f-bb7a-0e8e0579d91b",
        "cursor": {
          "ref": "a37c9207-a1bc-4682-9f53-3875b7a3412e",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "30c61813-6c6d-45cd-a6fc-caa1c2660e7d"
        },
        "item": {
          "id": "f5266c50-f3a7-453f-bb7a-0e8e0579d91b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cfd8fbc6-329d-47ed-b06d-69f857b51f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33abeff-5329-4cd1-8e31-96531b149bc6",
        "cursor": {
          "ref": "465588b5-f346-4caf-9111-debb12730363",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fde8d2db-6973-40e7-abe9-b8e542114ae6"
        },
        "item": {
          "id": "b33abeff-5329-4cd1-8e31-96531b149bc6",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1f6784e3-f9c2-4e52-bf3a-e96e800436c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd575b9-0526-4401-a507-2a3dd13127d7",
        "cursor": {
          "ref": "69e276d4-1a00-4d72-ac5b-43f8f552ec0d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "69a408cd-6032-43d4-a6e7-63fcc8ad7b05"
        },
        "item": {
          "id": "bbd575b9-0526-4401-a507-2a3dd13127d7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a6e229c6-7d47-4c78-b9e6-adffecfbaedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cec0be-d009-4587-a93f-c8ecb1d79335",
        "cursor": {
          "ref": "db8cff33-8849-4057-94f5-3bcd3bab09b2",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "002a09e8-2a2c-4ed0-b993-34b12a3e8280"
        },
        "item": {
          "id": "05cec0be-d009-4587-a93f-c8ecb1d79335",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d4dd4ba8-f1fa-4f66-9ccb-9400d8fbd869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d3363e-8ebb-4c9d-9b6b-0ba5361d02aa",
        "cursor": {
          "ref": "123dae4d-923e-42db-bf34-a259f5b2637b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4b79f4fd-91f7-4fb7-99b2-04ed82a4997f"
        },
        "item": {
          "id": "88d3363e-8ebb-4c9d-9b6b-0ba5361d02aa",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "612c9d3f-5539-49a4-8e04-87166844b5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8575dff1-ac7e-4606-9bfc-39c01d4cf6d7",
        "cursor": {
          "ref": "144fcca1-2add-4a9f-9854-22b87fc855e4",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e49f68c7-a1b4-453c-873e-ec1a4a6f058b"
        },
        "item": {
          "id": "8575dff1-ac7e-4606-9bfc-39c01d4cf6d7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "26329e4d-7422-444c-a296-5a0821d05686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523d4929-97b0-43aa-8c49-34047c911da0",
        "cursor": {
          "ref": "40116637-3f70-4958-9729-b2554e5c81ac",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6b6c47ab-0383-49c7-bb5a-498955b77d57"
        },
        "item": {
          "id": "523d4929-97b0-43aa-8c49-34047c911da0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e1a1b9eb-cf01-430c-bcc1-d60a09b1ecb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a883e7-85e5-4c28-8cd8-ed9bd3200d8d",
        "cursor": {
          "ref": "613b143f-bae5-4e81-96eb-8ed64661c2ba",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "30c9f3af-3566-43ac-9fa1-e50e7905b7c0"
        },
        "item": {
          "id": "38a883e7-85e5-4c28-8cd8-ed9bd3200d8d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6eec373b-fa00-4341-96e1-bb220c25a95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d59bed-5f38-4ab0-b0d8-c0371dade417",
        "cursor": {
          "ref": "bd26c49b-a5a5-4e4b-98f7-cc8e900f704e",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fdde8765-fa85-4aac-8b2d-75fbd87e0132"
        },
        "item": {
          "id": "49d59bed-5f38-4ab0-b0d8-c0371dade417",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fc6a2825-57a2-456b-9a64-e04a350c3b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f88fede-5065-4e5a-86a5-4dc0903b9ce2",
        "cursor": {
          "ref": "e4216ee6-301f-418d-b6c0-87755a3b1b2e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bfc41b73-86d6-4a5e-b3b8-57e7f74d95a4"
        },
        "item": {
          "id": "1f88fede-5065-4e5a-86a5-4dc0903b9ce2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8f7512ed-02fd-408b-abee-d7fd2f21d3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83a2568-864b-4573-869d-8d191db0acbe",
        "cursor": {
          "ref": "23761ede-ad64-4b39-8efe-e2d23974fa17",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "975b4360-8589-4d78-ac74-f08d043e1094"
        },
        "item": {
          "id": "e83a2568-864b-4573-869d-8d191db0acbe",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "adbf0c2c-f80b-4285-a803-c39131142504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9d7f05-96ba-4554-8167-185ab790f0f2",
        "cursor": {
          "ref": "0b7c4909-1954-4899-81c8-268abd6fd8c9",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "125c9dec-50f6-4e28-a7a7-9d48da488103"
        },
        "item": {
          "id": "db9d7f05-96ba-4554-8167-185ab790f0f2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2a6bba46-6e88-40d1-8838-c7b1f96a9ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d746d30-4f09-468d-b0b5-ad2f2a440c75",
        "cursor": {
          "ref": "c79014eb-d64e-45d3-b70b-991627d1ba0f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ec6f47bb-3c02-48a9-bf25-89389771f572"
        },
        "item": {
          "id": "7d746d30-4f09-468d-b0b5-ad2f2a440c75",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a318d0f7-7ce2-4912-bc6e-82f87a8b3e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de32914e-1126-4ea8-b1ec-07f274c2382d",
        "cursor": {
          "ref": "a86b9228-7efe-4203-83f5-240ca20a7bdc",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4a79390f-19d5-4840-b3a9-a69648534c5b"
        },
        "item": {
          "id": "de32914e-1126-4ea8-b1ec-07f274c2382d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "819d799f-5167-4098-ad09-1513751a39f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec70574c-61bd-4e0d-8475-91381ccfe13b",
        "cursor": {
          "ref": "9107db90-56d3-4034-8c03-3db5af122db7",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4be74d9c-5208-46ac-8040-f92c93a95c32"
        },
        "item": {
          "id": "ec70574c-61bd-4e0d-8475-91381ccfe13b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e5f30c56-5eac-4bd7-a656-f8b6dce2987c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a248cbf5-f081-471b-8282-22ece105c1d4",
        "cursor": {
          "ref": "94e9c23f-fba4-4cca-b33a-eb044cb93443",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6c5beabb-b814-45ba-a6b5-5a1724606775"
        },
        "item": {
          "id": "a248cbf5-f081-471b-8282-22ece105c1d4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "47e908c3-80ba-46ec-87de-bc56ee33f5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0ac84b-ed92-4c44-9863-c526132c02c4",
        "cursor": {
          "ref": "6dd8818f-911c-4c9e-8fda-f91d5ed8c69b",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7f9cf423-714f-4619-b795-d093a0613b0e"
        },
        "item": {
          "id": "4c0ac84b-ed92-4c44-9863-c526132c02c4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "eae34222-67f0-40a0-98d8-4decd71f630a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5041ecc8-9682-420f-b590-93f33b03da1d",
        "cursor": {
          "ref": "2c5dc471-a63c-4c6f-b4a4-b51e25da94df",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f49846c4-7315-4243-bfff-4cb6affbcab6"
        },
        "item": {
          "id": "5041ecc8-9682-420f-b590-93f33b03da1d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bc917b8e-0477-4677-8c7a-22b14fcca2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b49271-d291-42c3-ab63-176cacf522d8",
        "cursor": {
          "ref": "2c750b7e-7d8b-4f6e-80f0-a32a3be6e1e4",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8a28be43-5d51-4b56-81dc-25c7234fef31"
        },
        "item": {
          "id": "58b49271-d291-42c3-ab63-176cacf522d8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c55e3a62-5313-476d-b903-df0862db3d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d091a00-8a3f-4e31-a6d7-c3edbcf5a8e4",
        "cursor": {
          "ref": "dca0ea0c-68e2-4136-b711-0221192d06f3",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a0ede6a7-e2ba-4a8a-9a10-f8d370c79e3b"
        },
        "item": {
          "id": "2d091a00-8a3f-4e31-a6d7-c3edbcf5a8e4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "05e6419e-5992-4991-abc7-b35e46ba795e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2925c798-5f67-445a-8f4f-1bfba1b5ef3b",
        "cursor": {
          "ref": "3e0d4cfe-3ff0-49d5-8f6a-2de21d21fd37",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1cd0e2f3-b75e-479a-a2bb-d951853b7f02"
        },
        "item": {
          "id": "2925c798-5f67-445a-8f4f-1bfba1b5ef3b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a9105b9b-01f7-411e-9400-01c32bba2f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243f0504-7e5c-4218-9a43-7d2cc9efe8c9",
        "cursor": {
          "ref": "f6bc7725-b540-455e-abf2-df4e3644925c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "46fb4dcc-7598-4367-9e72-ff8193cebdac"
        },
        "item": {
          "id": "243f0504-7e5c-4218-9a43-7d2cc9efe8c9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "df453221-8bfc-4f4d-bdbe-54b6ad658bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc3d53d-427a-49bf-9298-14eb05a3267a",
        "cursor": {
          "ref": "44bf1d60-af66-4637-8992-c6c2f9f093b7",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7d4951e7-1a96-471d-8901-c59706cbc19d"
        },
        "item": {
          "id": "3bc3d53d-427a-49bf-9298-14eb05a3267a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "35aa1077-c6ec-476b-8925-6f332fb47be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2c04e3-bfd7-44ff-ba2b-4dbbdf9d915a",
        "cursor": {
          "ref": "9eca35e1-f0d3-4ef6-8081-da4ec0a07cac",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1c381ac8-53da-4218-878c-0e46e4684cb7"
        },
        "item": {
          "id": "2e2c04e3-bfd7-44ff-ba2b-4dbbdf9d915a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8e8374f8-f4f6-40b8-b7be-f134a4a5c715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ee7b8b-b7a9-4b4f-b02f-459e73d82dd5",
        "cursor": {
          "ref": "4385a620-4b38-4e23-96cb-3c8c798b2f59",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b6164e35-89d6-4388-a0b2-acbf5cfdab30"
        },
        "item": {
          "id": "b2ee7b8b-b7a9-4b4f-b02f-459e73d82dd5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0f420262-b30c-4aa8-aecc-eb34a41493d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144503b7-250c-480c-937d-5f538f41ef93",
        "cursor": {
          "ref": "b7919716-e928-4afd-9807-4ca9d3b48976",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "658f0ed4-9218-4bde-bff8-a162ed104e5e"
        },
        "item": {
          "id": "144503b7-250c-480c-937d-5f538f41ef93",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a4566ab0-5930-4c23-956f-b6ffa13e4b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7331b5ad-45ac-4843-9078-6660d7870524",
        "cursor": {
          "ref": "fb337779-08b3-4cb6-89e1-3fcea046b4e9",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7726b784-441a-4b66-a475-c2379aed8742"
        },
        "item": {
          "id": "7331b5ad-45ac-4843-9078-6660d7870524",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2967f519-95af-4e00-818e-69e973dfcc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d34d2a-d68d-4ff7-80b2-574194414187",
        "cursor": {
          "ref": "57535ef2-4ecf-487e-b9fd-fc813f4405a5",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "decdc3ca-aafb-4d51-9383-de4e858b2cd7"
        },
        "item": {
          "id": "59d34d2a-d68d-4ff7-80b2-574194414187",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b3f81cc5-a051-4408-a17f-c060e30eb425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af490191-a858-4065-9122-86cbc40f4928",
        "cursor": {
          "ref": "f8513289-27c9-4be3-a043-3b2298b0db8d",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e5b69fd6-6dad-40d9-a7d7-2995804f2dbc"
        },
        "item": {
          "id": "af490191-a858-4065-9122-86cbc40f4928",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5590fd31-a8ea-4e67-b160-2c4b2bcec111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef6db65-7160-44e9-88c5-582679161bec",
        "cursor": {
          "ref": "17755280-2ea6-4678-9159-ad3e8585205a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "91f76570-6e6b-4d41-a239-f3932be1f90c"
        },
        "item": {
          "id": "9ef6db65-7160-44e9-88c5-582679161bec",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7056f4d6-f566-46b1-8365-c86c2166f883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05fd7587-8ffa-4c63-a144-0ae6fee6c389",
        "cursor": {
          "ref": "b696ab7a-af0f-4a4a-902b-81771addd6c3",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a370b634-15c8-45ac-9c03-91f91bd5c1b7"
        },
        "item": {
          "id": "05fd7587-8ffa-4c63-a144-0ae6fee6c389",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "98a7b438-ecff-42de-bd62-fff8f426f60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880cedcb-f23a-4e4f-aef6-0a4f6413455f",
        "cursor": {
          "ref": "02bdd916-0b35-4cb6-bca9-cdb8eac35cfb",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "edbe5051-9b7d-4a1d-815c-c5d95c0cc74e"
        },
        "item": {
          "id": "880cedcb-f23a-4e4f-aef6-0a4f6413455f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "59ad3984-0ffd-4135-afd4-c00a6254a17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819a1ce7-5dd9-4cc2-910a-ad40ef0be749",
        "cursor": {
          "ref": "9efc044b-4c00-4650-ac3b-8c00d36dabcf",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ecdec64d-b192-4645-a80e-2426113aeb7b"
        },
        "item": {
          "id": "819a1ce7-5dd9-4cc2-910a-ad40ef0be749",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b122168c-68c2-454e-81e6-4ca61dddc22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a6d4de-fff5-47c6-b720-f432b3d4d67d",
        "cursor": {
          "ref": "d5e75c70-7590-41ad-9e71-d0a5e4208ecf",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b361e959-0aed-4d23-aea9-3209017ee563"
        },
        "item": {
          "id": "61a6d4de-fff5-47c6-b720-f432b3d4d67d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "40842470-edfe-4c9c-89ab-1fa5536000e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ceb6411-4c51-46d6-b817-cd0631afa154",
        "cursor": {
          "ref": "0413cac4-5ad5-468b-9a81-1f8da0ff6a0a",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "dc53e4ba-2272-4511-b1fe-edf93c83a5b6"
        },
        "item": {
          "id": "4ceb6411-4c51-46d6-b817-cd0631afa154",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2f11e33a-e8c7-4301-b137-9f1f6dbb16b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febdfcd3-f156-42e0-b531-f2512822aa5f",
        "cursor": {
          "ref": "65ff8e01-eb12-4e4d-b257-e4d2a6a02ca9",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f9ec1c2d-352f-4ffb-94ba-d82ddfc0328f"
        },
        "item": {
          "id": "febdfcd3-f156-42e0-b531-f2512822aa5f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3d177ca4-d510-4d1a-9f2b-a65751143ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb5ed93-ee8e-4f5f-abf3-a1538d925807",
        "cursor": {
          "ref": "1a11f1fd-722d-4b3d-8347-75fe3f479046",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ac99433b-dded-41db-8d4a-cb1517338782"
        },
        "item": {
          "id": "6bb5ed93-ee8e-4f5f-abf3-a1538d925807",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "458b7f9c-527d-4538-916a-98e80b5e6968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738b04ce-6723-4d58-aa3a-dbdd09623db5",
        "cursor": {
          "ref": "84b6d4e1-0a56-43dd-ab2f-b17f7ee01f47",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c67cac42-6894-439b-9c0c-c9644802b34c"
        },
        "item": {
          "id": "738b04ce-6723-4d58-aa3a-dbdd09623db5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "880561de-f7e0-46fe-a2a7-163bb2eec38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f0a4c4-d37a-473f-bdbe-183a8fdadc72",
        "cursor": {
          "ref": "97d630de-7a1a-4687-95d4-462f789d4e8c",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f83307e7-f0df-4836-bd82-9f76683b10e9"
        },
        "item": {
          "id": "25f0a4c4-d37a-473f-bdbe-183a8fdadc72",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7a5975da-9c48-4435-b8be-6511af3e7cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9f3291-4e6c-4fe9-b550-ac757c0ffdd0",
        "cursor": {
          "ref": "b394bfd0-c7d2-435d-aacc-b3a3f0c2fc52",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7d5c7548-7e85-4667-b58c-7e1e035bea32"
        },
        "item": {
          "id": "eb9f3291-4e6c-4fe9-b550-ac757c0ffdd0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "07e193e2-26c5-4977-a09f-092c0be639d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c826b3-4a86-459f-88db-77f24e553fef",
        "cursor": {
          "ref": "00b2fe7d-cd98-4e95-8a0e-19eb519dcaf2",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "53f7aa68-c5ee-46ff-b2bb-ad97aa281b24"
        },
        "item": {
          "id": "c2c826b3-4a86-459f-88db-77f24e553fef",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ca56fbac-8293-4ae3-a21d-304121d54a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31116035-53b2-48bf-aeff-776f44005963",
        "cursor": {
          "ref": "ca4b31e4-4f1c-4d61-864a-5b45585f7494",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6b2d1a61-296d-438b-ba71-d0922e2b874e"
        },
        "item": {
          "id": "31116035-53b2-48bf-aeff-776f44005963",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e34a9ca1-db07-4a62-9a68-ea8d410ae680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e766bb2a-9c00-4018-94f8-83c401fe4a0d",
        "cursor": {
          "ref": "1670a895-ae52-4f66-bc42-77a7b255d065",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "83c6ff82-5c41-49be-875d-c78104e88aed"
        },
        "item": {
          "id": "e766bb2a-9c00-4018-94f8-83c401fe4a0d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ba3261f8-da26-4f76-af46-819965c1d476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f42664-5650-488c-b5a8-6d94bdf4e95d",
        "cursor": {
          "ref": "4caf64ac-f3ce-46b7-a4b8-572751b126e5",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "477ebd45-9427-4157-a326-979ca6fe5f9e"
        },
        "item": {
          "id": "a6f42664-5650-488c-b5a8-6d94bdf4e95d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "473924c6-13be-4d98-9568-5216ec79eb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803c13f9-60b6-4d97-9eed-1d83a714ee65",
        "cursor": {
          "ref": "dfcad22d-09c4-4b3e-acab-7da53ea58f46",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c718694b-1f5d-4788-abef-1f90d1c9d203"
        },
        "item": {
          "id": "803c13f9-60b6-4d97-9eed-1d83a714ee65",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a2f7c79e-fd85-4d42-b06b-4dfd1dc3dfc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585ab997-8f10-4832-8c50-d8e81ec26212",
        "cursor": {
          "ref": "bc48b601-2a7a-4391-8d8f-84ec8d4bf9e0",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6e8505dd-f8d7-4663-b7ae-51d48f03447b"
        },
        "item": {
          "id": "585ab997-8f10-4832-8c50-d8e81ec26212",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4d84da85-1180-4657-9691-ce3c0393afc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f939642e-b601-4c0b-8a46-76941b826f0b",
        "cursor": {
          "ref": "bf1985a7-46c3-479f-8b15-943b5aafc811",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9b21597d-fc21-411c-b8be-ca208c88ae9f"
        },
        "item": {
          "id": "f939642e-b601-4c0b-8a46-76941b826f0b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e29d333e-041a-4cdb-b493-f7a47c7a01bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519b3d71-7edb-4e5e-9e39-43b362b45972",
        "cursor": {
          "ref": "ebcdf05d-1e0d-4d67-b7c1-a71b7ba2017d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "1df97954-1f6c-40dc-82dd-e23d886958fd"
        },
        "item": {
          "id": "519b3d71-7edb-4e5e-9e39-43b362b45972",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a2feece8-d2a9-4c75-9aa0-594a3b7c4be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d3a612-abe4-4cce-8464-a143a431fe34",
        "cursor": {
          "ref": "b27302a7-3505-4653-a5b6-1d820c18dfac",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "110d457f-955b-4a66-8cac-e9de753338fb"
        },
        "item": {
          "id": "a5d3a612-abe4-4cce-8464-a143a431fe34",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0cfa1024-44d2-4234-927b-2b14eea11713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9b43c0-db5c-4387-88f3-ecce6c5853d6",
        "cursor": {
          "ref": "72c2bc24-bcc0-4417-af1a-b70f0f66bdfe",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "59c02280-6c6a-4fae-8830-441ea41787b2"
        },
        "item": {
          "id": "3e9b43c0-db5c-4387-88f3-ecce6c5853d6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d2a9020f-d901-4d5a-8ad2-1297af811219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3826f0c-7739-4057-8d3a-38098fbbc0ca",
        "cursor": {
          "ref": "b8ea3462-2f78-453d-b0a2-311079c400c0",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "92aab5ba-0e1f-44b4-9413-a510cbb535f2"
        },
        "item": {
          "id": "c3826f0c-7739-4057-8d3a-38098fbbc0ca",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cb096723-ceab-48a8-8389-6aa5e618c54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b363b3-e1ca-4aa6-ac77-1d53e14a3820",
        "cursor": {
          "ref": "4478ebf6-1956-4212-aeed-9432638866ec",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "da8b1933-8369-4456-9acb-27361e922f71"
        },
        "item": {
          "id": "70b363b3-e1ca-4aa6-ac77-1d53e14a3820",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8fbae91e-de0b-4939-90f3-9bac8ba47d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2debf4-082c-4b36-a3a5-f50dc263aa24",
        "cursor": {
          "ref": "c8836705-c453-41bb-9970-06092e7b2cc5",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3a544665-4639-4ca7-a980-fa976e8ac153"
        },
        "item": {
          "id": "9f2debf4-082c-4b36-a3a5-f50dc263aa24",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "27500bf7-70f8-4969-8d7a-89d920ccc2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae5194d-89b6-4d82-9c1b-7d154ab719c2",
        "cursor": {
          "ref": "4c3b40c6-6d6d-49c0-9f80-8b397a20d85d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f37ec247-6ded-4662-ae9a-abf14bbbaace"
        },
        "item": {
          "id": "3ae5194d-89b6-4d82-9c1b-7d154ab719c2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "caa35002-1f5c-4c13-82c8-f7ecd894e89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6732ef9f-9e8e-45e2-a580-995a4190b614",
        "cursor": {
          "ref": "39ad7f90-c2fd-4781-9aa3-07293f6937e7",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5696796d-5952-46cd-9119-8175cb68a922"
        },
        "item": {
          "id": "6732ef9f-9e8e-45e2-a580-995a4190b614",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c19b6154-8f76-4ad7-afe9-143aaf73b555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745ba5f7-f21b-4c14-a8d3-dc0057c9ba62",
        "cursor": {
          "ref": "bdc47130-3396-4618-8fea-fdf21a13431e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8607ca8f-ace4-4aab-ab7f-ba368ec7678d"
        },
        "item": {
          "id": "745ba5f7-f21b-4c14-a8d3-dc0057c9ba62",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6ee1af22-15d2-4471-8def-c0ee16b9172b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dfa1d4-3536-4e19-a989-1d32d084d682",
        "cursor": {
          "ref": "c073f8d7-d3c9-4e02-8c99-5bfe2f8db18f",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b526d40f-46f4-4495-bcf5-3bbbf0ff9603"
        },
        "item": {
          "id": "b5dfa1d4-3536-4e19-a989-1d32d084d682",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c999c3e8-345f-48e9-8e35-778507b650e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1dffe02-6805-4f89-9387-c393f1a398eb",
        "cursor": {
          "ref": "3d511ce2-ed8c-4b5d-ba9e-1a2630732c1d",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c79d622a-1c1d-4816-a07a-18610bea4606"
        },
        "item": {
          "id": "c1dffe02-6805-4f89-9387-c393f1a398eb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3a73f91e-a8f1-491f-974e-4bab4312cde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c083590d-87a1-4ee0-938d-90f3c3b5fb64",
        "cursor": {
          "ref": "d0b16342-e48f-4b60-9643-88ab1275b0c8",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "174cf750-a722-46e6-ba9f-cf4b18363cc5"
        },
        "item": {
          "id": "c083590d-87a1-4ee0-938d-90f3c3b5fb64",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3abf6dc9-8e20-4c7a-b996-5343b594c5ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c643f05d-488f-4f68-8f31-0a1e72272e0b",
        "cursor": {
          "ref": "f8951461-8fd4-4fdb-8409-2565c1e830e1",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "70a644ba-f22b-40f2-971f-d2b96fafb541"
        },
        "item": {
          "id": "c643f05d-488f-4f68-8f31-0a1e72272e0b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2921ddfe-1fe4-409d-a56c-e4083fb7ac72",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8579abf6-5a79-470b-be06-7c4b9c3fbcda",
        "cursor": {
          "ref": "0ef63d95-988a-4b6c-bdac-5fc36a7a21b8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e035e649-7afd-4d05-88d7-3ab6ee3b5095"
        },
        "item": {
          "id": "8579abf6-5a79-470b-be06-7c4b9c3fbcda",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2b050390-dde8-407a-9d6a-a723efb864e7",
          "status": "OK",
          "code": 200,
          "responseTime": 2501,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "774ba7e4-5fb3-4ccd-85a5-7377819d49db",
        "cursor": {
          "ref": "9771512a-25e5-42e5-a652-a0a8aedd4bd4",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0576806e-d099-4520-95a0-b2f3874d0336"
        },
        "item": {
          "id": "774ba7e4-5fb3-4ccd-85a5-7377819d49db",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3097abb0-53f2-4ed9-915d-25c64000504e",
          "status": "OK",
          "code": 200,
          "responseTime": 2694,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d0a138-c265-49e1-9352-6979f58537e3",
        "cursor": {
          "ref": "e10805fa-63ab-4924-993b-434976381231",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3bf7eafd-0ce0-4148-bd42-0ba0b3f35c98"
        },
        "item": {
          "id": "57d0a138-c265-49e1-9352-6979f58537e3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6efb83f0-c0fb-474b-b14f-d84ed8454e80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d0a138-c265-49e1-9352-6979f58537e3",
        "cursor": {
          "ref": "e10805fa-63ab-4924-993b-434976381231",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "3bf7eafd-0ce0-4148-bd42-0ba0b3f35c98"
        },
        "item": {
          "id": "57d0a138-c265-49e1-9352-6979f58537e3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6efb83f0-c0fb-474b-b14f-d84ed8454e80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66273fca-acfe-4fed-9664-b06c6aef225f",
        "cursor": {
          "ref": "9c117b18-0393-462a-ad28-e3d3073192d1",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "20d6bf9b-bda6-4d6a-9b57-45c0bff4325f"
        },
        "item": {
          "id": "66273fca-acfe-4fed-9664-b06c6aef225f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0fbe3a0b-c4a2-4a6c-a555-bede921dd4b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f7603d-96c1-4663-b3fe-ae403a12b068",
        "cursor": {
          "ref": "707b113c-adda-49b3-a27d-c57a26b57d34",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ebe82829-76b5-4c7b-a7e4-49ace0ee8bb1"
        },
        "item": {
          "id": "d9f7603d-96c1-4663-b3fe-ae403a12b068",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "068cc01b-49e9-4b93-890d-8868311aa08e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}