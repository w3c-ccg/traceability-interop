{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9ca15bce-22c3-4143-8aa9-6cf07e5fd3e9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ade4ae0f-2fa7-4481-9d0c-251f78f70577",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6fc9281a-ca17-444e-9e87-a25e75953144",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fbf789b4-b016-4fbd-99bb-cf78d5c29028"
                }
              }
            ]
          },
          {
            "id": "39bb5d2c-0f08-4d74-beea-7e53c2cb4023",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "daba377b-8c2d-4848-8afb-e804fd464260",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9fd8a8d0-3ea9-4a4c-88dd-3775df714e51"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6b382655-f5ed-4c58-94ff-8b3185419d0a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "41a2c902-442e-4dd1-ab39-97eeb1dc2013",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1a47270d-123b-4f02-9f16-6ac21006a316",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4509f84a-b949-40cb-af94-28b97bcf0894",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94f75f8b-7d3c-4e9d-9a44-12292340fe7d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c1517ea-0d53-4ab1-9286-dfac8dfcb88a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9bdd84d5-2702-44f7-a8db-8fd03644673a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "74f58d5b-0f82-4830-aa6d-ae37585e868e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8072b9a8-3160-429a-88a3-1234e81226d5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cd19976-902b-4e22-9b2f-4d7db6af6d1f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "13dcb668-a36c-4cdb-94ad-311e7a548a64"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3679cae5-48be-4d16-8f14-4a8a153eac3a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2cd325e0-e4e8-4daa-b468-d98b76b6adb5"
            }
          }
        ]
      },
      {
        "id": "9e4fb78f-8412-4ec1-870b-c662b64a7c51",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "50c6a70e-7606-4a6b-b6f0-9738e1ca6376",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89ab5284-81ed-4c47-9a2a-03a13463843b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f7e7a6f8-e523-4fb5-88a7-72a3e319f0ed",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0c7492-916c-4ed6-8431-6b41efabdf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4475af31-fea8-44fb-9671-4a4fb7a7bb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38495e89-aeee-48d9-8803-446063a84b63",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc61537-dcf7-46f3-a360-fd4aaa935b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93250c18-cf25-4488-8798-6fbe77021b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a68d72-b157-42f8-8096-e93deacee471",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4898b1-2cf3-483a-8b5f-71e30e9c63e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "541e3942-8c6d-4cbd-aab0-1cd5af628b4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9bcceb72-ae51-4ff1-a084-8ff363436e56",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a684199-dc47-4581-b78c-58394dae2eaa",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9b1d82-0423-48f5-8741-ea3c1d2a8ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "050286c0-5906-402a-ba5d-eb1544ecb718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319aa5cc-db9c-47be-8ef9-c9400e746f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb607f7-ad2c-4ee2-99b5-401a465cc9b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ca6d3a4e-79c3-4357-8fdb-982c8aad9f36",
            "name": "Positive Testing",
            "item": [
              {
                "id": "971a181a-c18b-4490-954e-6347cfc9ec8b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00d348a5-8bdc-4616-aae8-8ae20b2aaae2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "33070ac8-890c-4363-b4c0-f9cd0f150c4b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6d1fdd4-a601-4b1d-97e6-47d77481a83f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0b2a5b9c-7bcc-488c-a02f-46fcea8f37e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0e97482-06a6-436b-b798-875e61b55187",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f86cc0e2-9f3e-410c-99f6-f4dca5117f68"
            }
          }
        ]
      },
      {
        "id": "1f4f63c4-a9f6-4787-954c-9c0524e14690",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "52032827-b354-46d8-93d6-be1ad4739782",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e26401ed-f927-41db-be09-7224e9af14fe",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9eaa0d0e-25ed-4b31-ae8e-0934f8e05467",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf5eae2-07c3-431e-88a3-386bb070c812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545e1aaa-3146-4894-a3b1-6a1cbb4dc10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7c7d40-5035-475a-9fd3-69f217dcc669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ec37d61-ae56-4aac-83d1-f9e8e4754640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6b4a0e-8e22-4e61-abb6-b8123cb1eae6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf315e24-37f0-4b4f-8903-2f78b559d0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c06e9b3-31e2-470a-9c44-d993d4b277b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f55179-aa26-41c2-8a6d-1a63cb3a1870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b18b3c45-40b0-458d-8c28-d4cf3486c713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bac6708-c470-406f-8ecb-e2e004a87b28",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91db5e9d-9b4e-45e1-9432-b43595e5a792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b498a91-9ef7-47cd-8c0a-6ebf2b540d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c207256c-d7bd-4133-b0a9-75a9c2c1ec8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ec4f679-4d56-41ed-8062-b3da8221ba30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ec8a0d-faec-47b2-abcd-c402d02c4d48",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e738b5-48b3-416d-bfc6-64e0926dc27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a760dfd0-737d-402b-bd1f-d8f298533505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5ac0ba-9880-42f1-81ea-b10aaffcb180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ce8800f-3437-4d2b-b885-caaf9403997c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91c04b2-25e1-4715-b47a-038cc5b4fa16",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b74fdb9-7535-4ae2-9832-aa5f794b8cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4268765c-1afd-41ee-a841-3920ba1ef16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe98249-8906-49f1-b29e-10b068093537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b67148e8-f875-4e69-8b91-d55d735ee3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac48b1de-78cb-4751-8741-e772845eb933",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a868c724-3834-490f-b12a-e798734dbdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7c5c67-748d-4145-a1d9-9b7bda66cee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3594df2-a471-4417-b6df-5d161980aff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79702429-914d-42de-8f67-2c1232f05c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f36d56-40d1-47b3-b60a-e640d3dd34d9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1965b67d-e2c9-413e-8b9f-b8a6f78f6d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef223b8-722b-4d46-afdb-d038ef11990a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08de640a-8af3-4105-bbb4-4ba8c3aeb616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b75f7080-435e-490f-9927-e34570759597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849ad583-e92a-4676-b9c9-2b74a37abe93",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8775afa7-0ed6-430a-a923-5cff53decc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4fc9bf-0cf9-499a-990b-b76b0f0948fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426c3302-0cf7-4e47-ba3e-5632b7d0846f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d09f156-5285-46dd-800d-1f833fabf804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbf5b28-394b-4ce6-8a85-ccaad6147e27",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcadc13b-4c8b-4b4d-ae1c-efb9a62d2e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd18715-20da-478f-9261-24c5dbbb751f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d1cdbf-8851-43f3-955e-08feaf37fe6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad220793-8e17-4994-83c5-7eb87ed101a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfcc1d2-ba67-40a6-904b-4e3ba8d875eb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8482e193-f006-47d8-afd0-5d3ea89cfaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a219a92-e484-4f2c-af6f-0d754824b1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d493613-dfa2-4f84-b1a5-f62ce315304a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47e5273c-11d8-49b6-a16b-ab2cc6020b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75ea555-db1c-48cb-b569-3f874dcdd37c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1756d3d-127f-4548-8da5-d8847a003e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab4890f8-9c94-40cc-ae4c-ffb39a7537e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040b1891-ad3b-40d7-9d04-6a2346ee22c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca199095-f30d-4831-a914-0fe4b9d2234c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbeba5e-9519-4ca5-bb44-98323fc5044a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416e55a9-ff23-40fc-8500-1fd43cd82469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115b4ccf-c8ed-4472-a8f8-6d436ff0478a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba40b76-5dee-4796-b4ac-d92f2b9e4428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85ecb09e-a63e-41da-bc70-64e2a8492461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9019c3c8-bbf4-4580-a3b9-2d235b09393d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d746d9a-d50c-4707-a922-db84511ddf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ca19df-3505-400f-8723-a269ba97679f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70155ab9-1bb4-45ba-b36a-510f6e2a6ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06b7e0d7-e831-4879-8806-5483cfdf6b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26be2e5-7d25-4254-a504-1a6830095444",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d2d851-a208-4c61-84b9-f23125e328e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9891d8-125e-4bbc-89de-872aa7c77e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c08f3d5-0b52-4b2b-8014-9e7a5ae1238b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efa205cd-d448-4959-aceb-17a0c8f61cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1d97b7-d1d8-4b34-a9d7-9ede9606ec8e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb9dda6-67fe-455e-a719-0f2df55ec148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e74477-0b47-4c29-91f3-1b76ba642736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0aabdf4-a432-42bc-8a00-c5532c5d5363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2029fe1c-b055-4862-a65a-18feed6e9aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ed5048-5912-4152-acc6-5242c21aa705",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "defe3297-34cc-4a0f-ad5c-d2b5f816d061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dded39c1-8709-45c8-81f0-cd4ff795b9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ae91eb-c37d-4b46-8b8e-dcec98921c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e47b278-7fa4-4d1b-ae70-ccb1cd36ee1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a71dafc-5790-41ea-94b2-2a169ead585e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60af672f-2b21-4ea8-a3c1-ade916908224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e9988dc-4b7b-449c-ba56-bf57adee8b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12baedbb-6f5a-4f33-b46c-42a2b9b19887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "997dea0d-741b-4eb7-920a-d68541550345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f759954-188f-4916-8be7-e40abd1b6d86",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a13352a-a402-4bbd-86eb-80e45d5f4ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ac75d8-55d2-43cc-8d4d-12a883b15026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13c77fa-4f41-4863-9cd6-ab4a81240d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee9a82b-39bf-421f-baed-487fb2d61ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d6c3cb-bbed-49ae-abb2-a3204c3e2ce3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288503ef-fec1-4acd-95fd-5ffe44c784e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711d42a9-a512-4a75-84df-55ba2b3958cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a4f0ff-8da4-452c-8dbf-e2489d2ff25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e858d917-90c0-4450-9566-364300140e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b5859a-f90e-4fc6-912d-73b678820554",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35141dce-5346-4e03-8615-47a845473bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0a22f4-2726-4528-9c04-ea159abb7939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7342254-9d75-4904-8def-a0b9531f522e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c96e245-49ed-44b2-9a4b-7c531f40b1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bd3ee8-feba-4c20-a768-ce27d51b0150",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bc7c64-8939-4429-873e-1384f7be4ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef03b9c-7b2f-4906-9de5-5818cdbe0009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8016fb41-32e8-42c4-9ddf-4c6402df6781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "631352d9-3363-4e63-9033-0eeb73c50d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9788eb-c51b-41d5-8cb6-b04d69a76df9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63d08f9-b874-47e4-b1da-7651b1f28213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726c3480-215a-4688-b245-d2eb6e76f943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c34191-fbf2-4e9a-96c4-729e2372cde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7ea615-f99a-41ec-a9fc-c42420800fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42a81ee-d2c8-48d8-b09c-746bcd9b6ac3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5fd8a0-4e00-417f-a481-babd8f11a832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea36f69-6639-44f7-91eb-f38131d5e0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d19ed6a-f8aa-48b2-8eb7-72f67bfb893d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0047ba64-82c3-40c6-b752-44d28609ae3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03400ea1-a7ea-4259-ac3b-de9631861643",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa156b2-58b2-4620-abe2-ada334d062c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c507ee-39ae-4f41-9211-22dbea806c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5e4506-c7bc-4d6e-9bec-a8aee69f1b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c8a222-767a-4f80-90da-24d20040b480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b13b99c-4d51-4db6-aa4b-60997f5fae83",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1f852f-b68c-4337-91b0-a08d8603d9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9435e5ef-039a-43bb-bc2e-f6664a532d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee71906b-130e-46cc-9664-c1eeaf1701be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d04f9a6b-b298-44bb-9982-dd2372092199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75840a9b-9759-4b57-99f9-c24524a91012",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892aaeea-56ef-448e-bdab-2358492d3f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d36bf0-98cb-44c2-a222-00a9d00c64ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43fc66f-4455-48d4-99fd-71423439853d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e72fbe4-305f-4d98-8b50-a8475263232f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af60325e-5f7d-4535-ba1b-b485dbf0972b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d227c6df-c66c-4a5f-bafc-71f12775c3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13050be9-9d5e-4058-84b1-65c84451a20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bd0021-3cd8-4440-8ed7-6a9d1aa8888f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d78f7c50-e0df-4f39-ac0a-19726ded3c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6276bf3-c5a8-43d2-a49b-3774ebd21da1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce582c29-2a95-4aa8-baf3-9f66fe484f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46844be-0adf-40ac-8796-17f8e9057b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc4f851-48bb-4503-bc7f-c30a5d0675e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a57df64-4633-4acd-b794-7dac2b5d3d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab92fdc5-6189-4270-a54d-93dbbea13809",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e294f4c-b5a5-43bc-a1b8-9d8f548aeab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5f0883-e172-4e98-9968-0ecda4deafd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a40a6c-ca70-4d72-825d-d2cbd78559ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef0de92-9c68-405d-976e-d966ad6f4da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2cc22d-2d9e-4340-baa0-7d6b6cf3002e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8defe3-9762-4aeb-baca-fe56b8bb1abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a886c45-e438-4fa3-a78b-84748dd4bd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cb42ab-ef4c-497c-ba7a-1023e724d77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "74c68889-e9a5-4aa4-af8f-703e5e83e8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e68843e-80c1-4f6f-bd7b-aa4767204c32",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd88a93-1752-4a41-a369-b4da78d64306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfd57f3-0447-43d8-8f0c-0f52e9ea671c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b68612-7ad8-4969-807f-fef1cef634a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "321833d3-bb15-4b96-8535-98317c81f74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9720645-160f-4622-b6f4-8a8debf93f12",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5af65f-9cbc-424d-bfbe-f0b973f02d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae99de4a-2596-415a-9b5c-0eaff9f01986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4558f7-fa44-4eab-a21f-c5e043304ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96dbcbf3-157d-47b2-ac3c-34c4c69aff82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05cefb8-bb38-4e75-bc4e-64b7720a95d9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32e2d53-8c7d-45c1-bb09-3b5aaf073d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf25b0f1-838f-4eef-bf9c-0f6d8a5aea28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1f325d-7ebe-4d1b-a68d-53246be9a026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "808aea87-5a29-445a-9e94-240af6f2a353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2047c789-5325-446a-b4af-762aa97e7cdd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed6e1f1-c456-44af-be56-ab2424ea8c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca591e22-d7cf-4b2a-bac3-3fd19a3c566b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da1856d-1c0f-44ea-9aaf-ebb70d6a659d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e4a20a-30ed-4246-b8d1-0ca19192f880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc7127e-6395-4cb3-8a99-2555678104a1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856599fe-eecf-4978-aebc-1d82adc07342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf08096-d70a-48a4-a082-071f146bf7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896b624e-e884-4a11-a35f-54bf5a0d7360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "21d9f9e6-db88-4d39-bdc7-9963e74b9bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88599441-8269-4981-abdc-6549993e1aae",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fecc20-8cb6-454c-b201-ca07094f6acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b481fa7-dac0-42f7-a5de-a1a1a4c61172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8621653b-a835-4193-90d5-bf7fd32df395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd3390d-ec66-46ad-a99f-9a0bf8afb5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b5791d-77df-4bf3-8f23-4ddd0aadafca",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cdf100-7f0b-4e60-9d16-986a1aba9f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "785c46e5-ae78-436e-93b1-827c4009ec0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930fa8de-ae54-4a51-9644-9ae778afac6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a86ac9d3-733e-4d50-b571-26d33442b5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e47ff9-56a6-48e0-ba0e-b222a8456e77",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c403c0d3-58ad-42d8-aa58-fb93ae9e81f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9112ef44-8e5d-4de0-9544-ca3971319f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb1b742-8a13-408a-ba1f-72ebe3eb638f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1f0917-182d-45f8-8c8b-d6f6b10aa9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e8f2a1-034f-4881-933a-fcfd5cbdfaec",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde2e7b7-268a-41dc-baf3-ed4d4ccda8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb694df1-1ae5-4d91-a003-6ceeebf664a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bfbaef-64c5-4550-8b03-4921bb0003c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "01eb199c-5d8d-4e58-8e36-2945ab6e03c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7816db84-8b2b-42fc-a739-eefde6ca59d6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8a4667-dac9-4fd1-bab2-6cc17eec0ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ddab48-9f1a-4915-9067-d4334dba6557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b77f9ce-745e-439f-82bd-a81d8a280881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a065cb34-d0c3-4983-817e-a76c71e3f65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f09ff28-d51b-472d-8ea4-87791bb0b263",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d8dce3-33f8-45ac-ac51-2d9e85a90117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f405f339-1233-4023-8cf1-28b4c5c454e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3855400-c6c7-41bb-8cb8-5d1f398de9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "755033de-60f9-434e-9c9e-57ea031fdfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c73980-b6b7-4ff9-84d7-834436b3930d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d8ea66-6c60-438e-991e-b6f96bce9e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3a55b9-4104-423f-a683-b5999d4694e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94edb14a-b556-4a9a-828e-18773f2a1591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee60693-ba68-493c-bb24-79017dc2dde8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df17a05-d7cd-4d8e-afdb-2fe5e4901ee4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2721f5c0-e2e2-4dad-94b2-6bbb5ceaba79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3e5c97-26d6-4000-a5b4-fe5bc3a8cd67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3313df33-99b8-4c0b-b331-2544a7f09c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "97e99935-0e7e-4496-8ca7-c20c4472a457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfafa89d-38f6-43f4-b9db-e2c319deec75",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6927040-e151-4121-851f-1babad68e1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2da023-e751-4a61-81ba-e744aaca8d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad87a28-20f5-47da-9289-2bc8de6ca9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "97898392-3ca1-41d3-987e-77675813f5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d71d87-cc4a-43aa-86cb-7924b84d1d52",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245a25d9-4187-46ad-912b-60a978371507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210e8713-f8dd-4d05-b5da-d28d21e7e55e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d11ffd-d17c-400c-b720-bf1616132759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "709eab26-b19e-4461-9cf7-7ba960fe6555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682af249-e763-4377-8838-c57f9c1d349c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7899c7-9fd5-45c9-a46f-7a172622a820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a686e5-b30f-4f2e-ad75-55f94057098f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4330a788-23d3-4417-8058-5f0476e3f9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0ed02c-3a90-4a51-9a2f-b4237fb1ff51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f71257e-3cfb-49cf-ac07-c8dde603925b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60afe3cc-aeb7-4589-ae3a-78f3f9543939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053b821e-1169-41c6-b42c-7cd76d411d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b82428-cbb1-43ab-a21d-709b099e7539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "742c4ed5-cb01-4f0d-af63-d5a97b845f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc880531-6915-40ac-9337-6f2dcf5bed75",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b76223-9b51-443f-9e07-012f09748333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f505d0ea-af32-4f8f-beca-c2eb4aed3456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce88954a-83e5-4fbe-bab4-d11c3aeb7c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd031b1-ac01-4951-9cca-851bdebc7bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c98354-5252-4313-9c08-6fef458a3bec",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbdc0aa-3cd0-4e6e-8ff2-d787ce968eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46efd43f-5483-445e-aaaf-e4b00eacad67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3806184f-79f0-478f-8d5f-f9485289995c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb19e91-afc1-4e5c-b0c0-b2d29e19c95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df15edaf-2c09-4097-bbc5-0f7f649a2c44",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a20bee6-3548-4a62-b5d2-615c07b98881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d63926c-748d-46f7-a3e3-8988e5853e18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9308b6-db7f-4eb8-a8f1-8bcb2f97f164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "412c20ad-ee06-4588-b1ca-b520303c6666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6032d4-c782-48fc-834c-7a65d9b75ade",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f686e2-57bb-4bb2-bd70-81f7f3ca333c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19dd8006-a988-4a66-ac0e-b866952f418b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c0540f-80d8-409c-a322-e0684140a857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a14864b-659c-4045-91e0-4a9acc835e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf2e833-da7d-4661-a756-3d11468576fd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5050ac-7d4f-4e36-acfc-3f70b51c22ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993586f8-844c-4eb9-b7f9-12a8753339dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9619a22b-b68d-4412-8b1a-feb0a13256ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7cf22c-92a6-4021-87b0-6045a6df887c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493b4c86-5295-4ff8-bdf4-61747678986f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c366597-507c-42b0-8904-53bb97fc81a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb48bdcc-9c3d-4200-bdd8-1891712c252b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2535b566-e20a-43f2-8b5a-858584f6a8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63cde40c-a5e2-4151-b3ee-71871db3679b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad29ab1b-8c67-4ab8-9264-80e09a50ae1b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8673b65-98de-48a6-9f09-b58e289acb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d997263e-6d29-4ce1-9a1c-27d65b0ce91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c66a13-b861-4119-95f5-99141dc067ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0bd8db5-c393-4d0a-aab2-9f964fd5c5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e23cbd-a865-4a89-8556-0e80af4175f7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d92715-5533-42c2-8c2f-dcc4b4213296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7419e0-1420-4cc8-b101-e4696d623ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cec167c-bbdf-4b4d-ade1-5746f3bc7890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd43b5c-e0bb-406a-b27a-ac9bc33b9506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8441404c-2396-482e-90c4-18de88290590",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd56d70-64e9-495a-8f14-e16cda718439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c68263-3aee-47df-a460-6ea8687ee914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f8347f-3851-4d86-8d0e-ddc4bc06866c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ac23acb2-706a-49da-90ba-1b7152e99b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6090bb5f-08a8-4660-b830-94aacba6f712",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc05b19b-c875-45df-ba4d-6e05a0445968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ce0f70-11dc-4c1c-b43b-13462bbee755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f9760f-cfe7-4be8-9b05-99aa080c8506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "584bf8d2-9c8d-49a0-9231-57df87d24ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5671028e-a94e-44b5-a1ab-2f5be1342ee3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88134199-29f3-4f52-8ef8-9366ec2f5585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b153c17f-8308-4f4b-aae9-c4fc10f61aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b309323-2a1c-45af-8ae0-5f6373bf7ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "de1b8e54-fbca-4a71-bc91-1ad513b1c134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b14fe6-27f7-402e-869b-5925f5eacaff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dd2d8d-4743-4dd1-96fa-a7f9519a5bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e901c9f-8842-4810-8a9e-ec33172a826a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3961100b-089f-43ca-af72-2d8e67b44d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "80529fa8-a9ef-4c06-bdf3-8f85ed9720aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c02436-8442-430d-b0d6-690acd3ce36d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db12ca36-1dac-4b80-ab9d-dd0ac917bff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884179b4-04e2-4261-8784-a3673cd849ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b597084-7daa-4ce4-b8ce-f26b69d0c6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e30ef64c-8759-4d67-a85d-0ee13debafc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77479d8-a1eb-4ee5-aa13-dd2c70710fd0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a943f8b-36d4-4ce7-b086-397424764cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5bdf9c-df81-42c8-8d02-d132ad749596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbff3c18-02f3-41f9-a21a-0ec58e45d337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c92b3df8-9db8-4880-afd6-ec814b239a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61b557a-c6e7-4e3a-a464-5129859c18c8",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60aa47d-b962-417a-805d-e1e36d269c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b4a52e-3e0a-4952-9a38-962f26725af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca395b3-4dda-4f34-a121-efc95c622eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b43a06a-d955-4692-98b5-54a4fb9365d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a910a5-dd6c-4ee2-bd57-8de4f2138be6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc141bcb-5a6d-48c3-b686-8bd162a82264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29bc28f-d89f-44f6-b18a-d9e66ec65885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50d088f-ea06-47a7-adeb-7c636bd19f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb226b08-877d-4cb5-9ec3-b2fa2a479524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a94192-4b5d-4d73-a666-f48379950c97",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1196315-1060-4c9d-8cd0-d863ef27bb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b3b1485-6b9b-4ffe-b20f-9987f135f5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991a94d7-ec93-4c47-8b32-62470baf37dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b450bc96-a73a-454b-bcde-85c7127d6102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364ddab3-faf6-4f75-be94-f8ae253f70d7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a19e4e-bf00-40d5-ae4b-ac6794e8fba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407b39f0-3357-4121-a3fa-2f751e3559a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568aeb72-b929-441d-aad6-76db82cfbe4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fcc56e9-59db-44d3-8abe-5bac1191a41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a295cf05-2120-4fba-9449-e51e25575030",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec20367-c5ad-4382-83c3-3a9e2670ada9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4789b202-55f2-4c9d-8f0e-266369680cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f04fb04-224f-4b0e-9251-eb792f80a6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "809c5ab6-ee69-4d46-a15c-1482da3a9ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44980bf9-68fa-463b-a38c-6d5610c3aba6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fe95a1-f90f-4556-80dd-f66b69ff56e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e944b2-b2f0-4505-8439-472266bcddf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb39396a-a043-4777-af60-f7056ed262ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4939c2-5652-48ee-bad1-ffc952c6966c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb15177-f916-4798-a127-99acfaef29c3",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f47b4ae-29a1-4566-826b-7b3817100132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e5734c-baf8-4ca9-aeea-3c10778dfee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226bf8a4-b5b3-4b40-aa51-423ccb4aad70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbcfdcce-0ac8-4c43-b06c-146bde7c67ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b857eab2-3153-4cf4-a808-71f83201d707",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a770f0dc-4e91-4db5-8d7a-263edf444149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0813b1-43a4-4f85-ae57-c897cc82e8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbfece2-c8d2-4e37-8cbc-7fe326aa3906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8967c1-d2d3-4ee4-9f1e-01fb52221182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e9b166-c904-42be-9911-7af8eb691fe2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaabcc9e-74bb-4239-b6e2-d5ad55e8a756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1754244-6cd9-4a39-8189-bdb9bd5be650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f80001-9c4e-4a9b-8870-e740ed98d1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e354bb2d-8c0e-49ac-a27a-04c002658336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fceae0f6-d791-44c9-91ae-41a534e5b042",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53631c29-3c4d-4ecc-ae92-d496f01d2462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9382ff-d087-4fcf-ba68-bf4b3de6a5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ffdce4-0b49-4be2-bf2a-6e594e701847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6481670-6464-4765-9a92-ac2178793307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8f8c83-4d1f-4317-84f9-67bbec5a4dc7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4030703d-863b-4397-946f-1e3612196849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2162ce86-a42b-43f4-b686-477afe7439cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b40e37-0151-47c4-ba7c-2be6ff2d1a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a66ca61-bb3f-43f4-bc7c-a5a0b16765b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1190139-e626-46c1-b882-5de0f721f9cb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0029145-97e2-455a-8567-b9cbd58e777b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3bdb0d-eb8c-4ca2-8cc9-0644c5acd97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603f080d-4d2a-4df4-ad22-4282a6f05d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8934545e-b7e2-4b57-a4ae-d7a3bef822c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a5060d-c6dd-4036-9359-50ac80437945",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b915545-cc11-4ed9-8075-fb6a1397ea7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437cfd60-0038-4678-9ca4-31a8d132c6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca75330-84dc-4d4a-a863-2dc20b5facfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b2c86d-f98e-4642-9cac-c952cd4b9d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cfc096-cc58-4b06-bf81-e69f11430788",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32df5897-6db5-49e2-894e-2910dbc1572e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2340d6bd-5ef5-4a3c-9996-1e1334ee2848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb3b7ad-0e3d-48d4-96bf-c1ca34b7737f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf3d4ff-d92c-43e0-b26e-8007ba9eb63c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7674db37-8054-4752-9da8-0d1d6b09d7a5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655509f0-fa64-47ec-ace6-6037134a60dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f1a410-4842-4c2d-b849-632c0866f2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d512df7-0c9a-4d5d-af4f-fdeacd798b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c69687f6-dfce-4522-a122-3c6f8b07ab49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a5908a-2c16-44df-a73c-376eec5c62b1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05266354-3ed9-40ca-ace1-61e5f5735af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d63742-8a9b-4e4e-8e7b-566d85c66d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9be3189-5404-429b-8708-03412414f390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abda7a72-7b54-4fb3-9233-50ca5dfd1b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70469e70-9724-4e76-9e0e-dd6c05cfc133",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cc27e0-fe4b-4d70-a13e-7a9bfd4f63d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c655258-1804-4ccc-b5c9-4c8a795b9b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa087dfa-84f8-431d-9cd8-833e297aff64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06382c5f-a3bf-4d0c-9ee9-f405271779ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce974fba-c402-4d44-8f8c-9f7b91195393",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e6dc72-82fd-4530-8bb6-747bf5352499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db953b9-f7cd-45fe-b01c-4be412dac550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4921e3c-e4a6-4bff-917a-2300c03818aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec17f57-565e-4f69-9f9d-0b0eed46add4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fd7606-b8b4-4260-ad04-78f72200bb3e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c159422a-8ff7-4b94-bd32-a8d31930530b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "175f5ba7-db60-499b-b98b-7bf4e032e428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8c6414-4bb3-4392-8f47-23cbad9fef38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcafa2db-cd7b-4370-a1ee-4bba1dd9f481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46dabc1-93a5-43c3-a024-75633d0699a1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04675d6-99e4-4268-a7d5-9bff000fdd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7208f4-e9cc-4160-a600-086d466502e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b068d0ac-0abb-4514-a759-c2ba5caf9931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3249e9a-07d2-4587-9e22-aec9b1b86ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c58f2d-f194-416b-8e42-787182a46c8d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc4a053-6052-4f75-93f1-707f460fbd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c310285-95d7-4f27-bcd6-ea974b2f9d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb27ed86-27df-4219-addf-95d9f334b12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a389b3-9c69-49fd-9aaa-0e0004af282e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd4d849-e205-4d79-8924-809d778cfefa",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9f04b0-6f1d-4829-88a0-64c44b2bfbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e88c56b-fbfe-403c-ba48-7c7504b6d3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab4cf3f-9893-4a9d-9ec0-7f7990616b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c33f319e-43a1-4353-afd1-baa066fbe106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c52e878-57ed-45a4-acfe-4a729817d95a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d13e51b-62df-4493-af25-313945b94aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2d5224-501b-4b6e-8cb8-bc34d854f2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8798e712-0a1d-48ae-8bb7-2e1a20979ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8836b83b-cb6c-4ba5-addd-da061128afd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc12c6ec-7dd7-4ceb-9224-b6018e2f3f15",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3a0e77-14d7-4fcd-bcc2-87d5d10bd409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d117341e-5b2e-4a61-94a7-e64b84ce38a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fab8e8-e58a-47f6-8073-2256cf68b250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d1e6e1-651e-460b-b9d5-89078fcd0b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda4f4dd-8407-4f20-96f8-e8f193b5dc28",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecc4534-d878-4c5b-9619-b9e585faec04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13daca11-a9eb-4659-8b25-21e4ce52c8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a277a0-a48c-4614-8ea6-11cde2e392e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8085d22e-5975-4b8b-a78c-669c8160e4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66790733-d428-41f2-a85f-8b0ecc9465cd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279776dc-cfb3-4f82-aeb4-ac0838f95725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9538eae6-40be-42d7-9769-c77bc75a9c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73384c33-42d1-482a-85e2-50524686435e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4664fec1-00e4-4c01-b5b6-c5a14ad15b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06097a2c-60fc-450d-98b4-33836c484e34",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337e1deb-4085-4aa6-8cd9-36e802120ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b72bc3c-36fa-4eb5-a277-c1cd346bc09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6d5d64-3114-4a42-800b-bf29701a888b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f42d19-20e5-452c-8c26-5568dfb68c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6141e0-737a-4d13-b9be-a5a1c3a9ac1f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c814fbe-7e81-4285-a105-92b8b53223cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed5d33fd-3ccd-4931-99db-0c87e9e26ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96db3d0c-1424-4dfd-b197-aeda4fee3ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c29daab-6c9d-4669-9a96-98fdf32a67a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a750f983-2ded-47e5-b5f9-93c89a18757c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d3c042-4537-4b42-9564-a9532ac7d33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b2a1a6-68d3-4c2c-8980-1b1c5616901d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89afbbdd-071f-4f5f-8cd7-d9458be77d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "01c46827-0ff7-41f9-ba04-c80c804fe354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd10d2a8-bae5-41d1-91f6-7169bd361857",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12459180-2365-450a-badb-0bf556abc2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6310e0db-9a60-47b9-88b0-3f96bfa15b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0596f075-a341-4a0b-8d42-53d42a77eda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "afa6c604-baf9-400d-988d-cd962f14a029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1393cbdc-9272-4253-9b53-a674166e5f1a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd17d2bb-0fc0-4ba1-bb7c-a0340c2c8c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "df867b71-dafc-4f5a-90f6-17faa3df3759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6825bc33-12bb-401a-882a-3e2dd7b3327b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e803ec29-9f92-442e-ae0a-5519639a6f5d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c448554c-a3a3-4274-a215-bcbe63b9328a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ed89699-a0b0-4a74-a5b3-5ea02a508c41",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdf3c92-4311-4c51-8e3c-55a47658ea70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db705525-1c0f-40d9-90ae-e220519c0d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e225d07-9038-4569-b222-229f6c319654",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0e9259f-e0ad-469e-b452-b1bedf9753fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a161aed2-0a4e-48fe-a3d8-1b90e7f4d42c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36748080-c00e-4551-abd7-228057ad43a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cf6a614-97d9-4d01-bc40-fe378440333e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83994180-57c7-4b70-97a1-3d41c0b5bbbb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "14ecf7e0-aa59-419c-a5be-48a2251c5923",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e4776bee-ac9e-4cbf-8ab4-582c8701b246"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7b783b1-e0be-4139-ac89-70c0d21f216e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3bfde238-ad46-4755-b7c7-4077820ef416"
                }
              }
            ]
          },
          {
            "id": "10700e5f-2166-46cf-a4ed-0fd07095e475",
            "name": "Positive Testing",
            "item": [
              {
                "id": "079b9286-99e9-44de-a0b9-5030bdb69680",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7d775489-ba9b-40ff-9cf5-6eb7635b0931",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8e1500-d0d6-4855-9b5f-e671750721a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "985c0be0-df08-4f6d-a3af-e061b19a57e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ef1352-102f-4746-9366-94510f30bfcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ae6617-e996-4a19-8fc3-ca746f36893e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "74810077-49db-4702-adae-bd8e65a082c5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "619793e0-67ec-441f-a6e9-fd15c5c4df7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "840ceedc-5c97-4558-9916-2f560e843936"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13d0a40a-e8db-49e7-9ac9-edb90f4f17e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0019766b-5bbc-448d-a2fb-fdf8daeefba3"
                    }
                  }
                ]
              },
              {
                "id": "c4f275d4-828d-46c4-93b2-4d3e081c0d02",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31b37093-0045-45c4-9ce5-2953198c2a50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b948bfca-b7c8-449e-994f-da9cd1a006cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0375a2c7-1cdc-4bdf-90c7-543954a54d39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d0d96d55-95e7-4461-93ca-1677f20fe0c5"
                    }
                  }
                ]
              },
              {
                "id": "67ea9932-cec0-4af9-a32e-f5c5d6f69576",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4269c211-16c7-4f5f-953a-17127baef97b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4181d3f0-6480-4353-9371-e27c1c6d1345"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eec3bf40-d42b-49ed-b0c0-589b96aa791e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b1c28197-0319-49ce-882b-54c2e7f81818"
                    }
                  }
                ]
              },
              {
                "id": "1f396c63-cad8-4cb0-8154-ae9e186c408c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d383156-1f08-495f-87ed-17538da6ea5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4a4fca8-2e63-4146-a428-e97a86ceb0cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c86b33c2-1e6a-4b78-acd1-57728b67bf95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "52f03f2e-f606-4977-a231-40480d37b062"
                    }
                  }
                ]
              },
              {
                "id": "b9f64b59-3ece-41af-aa82-601068c15b44",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7793ff33-94d7-4755-8ad7-25810dbe50a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bdd4d9c1-ab04-4804-a4b1-69d20df12b8a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8aabf2a5-da35-4005-ac68-cc28f36e754b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bec27b45-030c-4ffe-a45d-c49e733c1d94"
                    }
                  }
                ]
              },
              {
                "id": "42091c57-3202-4acc-b549-8573132df39d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75d69c6f-b5b7-4ebc-b39d-ebed73d37078",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e52bd94f-8a43-448f-8198-e6a39fc365aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18ce807f-d45d-4b6c-9934-56047aca836e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2f84f7e3-9cef-45de-85f4-83ef1df8d1ad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9bbb01e6-2ab4-45a1-88be-586530e86be5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ad7c055-590f-4b3c-8a29-5acf5cbfca25"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0367e357-e119-4c06-9db7-ae89750f3e4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4670dce0-1f32-46c3-a6cb-9b82e56c49b8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d33b5c6e-d97c-4c73-b73e-b62fe8a51207",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e5806edb-2474-461d-9308-8e862b0329ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60cec1d2-f1d3-4c48-8b05-e6107aa1c0d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52907c98-73bb-4ee7-b122-934b174c510b"
            }
          }
        ]
      },
      {
        "id": "61a85f74-fda5-4e73-904c-c54f2b5d9395",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "62b0da5a-215a-4a4e-ba70-dc05b1a04002",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b5bef33-d3a4-4bbc-ba0d-c6db4269c15d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9195b00f-47d4-4436-a20a-2b98dc28c757",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958b4202-8927-4dee-b1b9-bd26de9766e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf8cace-b3d9-4288-a001-846439a12cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec8e8d5-321a-48b3-843f-77f53ee7f918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a51805ed-6b60-4b13-8a15-99eaa5a2c797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bb1d82-27da-4bbf-94a5-1d9ce38e93f0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00407ff3-59aa-41ff-959d-fef4a494f678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a02c5e-0c5d-4f15-911b-008098a3c7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a4a5cf-a7f5-4177-8db0-e75c511ecbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f76de84-bdde-4268-9c2d-c051b5d7cf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c049d3-200d-4e12-b6b7-ff743ef3c87c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a62be6-aaab-4a4b-8ea5-3f007830570a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097a9e49-b4f9-42db-be79-1b69a246a8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9213924-049e-40cc-a0cb-f0a9316aed7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f093122-8de0-416b-8669-773f5e234a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7debb65b-65a5-4b35-8175-cbdcc0a28496",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56eb3b4b-b31a-41ee-ac04-cac015501bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd235e2-9666-4a1c-92c9-32152b13fd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f4e969-85d9-418e-bb22-0ccfa89452e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9f9e45-08ee-46e0-92eb-a000dee2c6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c289fa-fcdf-4183-88d5-34bca7a58a3b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa1c3fb-fa1b-4811-9bc2-23a26c6f8b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d3590c-8fe6-4e85-b1ad-bc125a23fb0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc05d99-8c15-4406-88a1-5c77143e6b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e63ae2e-60c9-4298-afdf-bf80d1aa2dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2507886-d07b-4c7a-a898-bb5bf9c413e6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acc6f00-48f2-4ba5-b0f0-6992626c3fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c0369c-696b-4eec-8c59-e824c862ced6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f675572a-6f8d-4840-8d98-a0d0ebc7899b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4653fe4c-344c-402d-8ea0-b4cc673af316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf91134-4a40-416c-917d-659190d16e46",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788270d9-866f-432e-a3a8-41f127d7b598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca01606-978f-42d3-8c09-d0b10e6e08d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7207be-9702-4ec9-8db9-ee648fd8343c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a73c247b-bf95-4166-acf3-0070052f126e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce2e6ec-eaea-4329-aad3-72097922f97d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa26c558-287f-432c-8fbf-3c99939a2c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4a3e65-32e5-44bb-9140-919b5f6b1ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3293cd6-fce8-41bc-96f8-f1c35e2c3d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3948e868-e625-48f8-939a-f9f7ae0f66c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d087062f-a918-413c-b640-8aa6ea761751",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10701dd5-a05d-4efc-823f-9b4e34a42501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3c79ef-8078-416e-84e9-4f668b49df1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6757eb7a-307e-4eee-a3a3-fc6779f3dcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e439c695-29fd-440d-888b-199e8c68f2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104728a8-221a-4be0-9222-ab7d640c9cdc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e283ce8-d304-4a8c-bd59-8344a853290c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c24869-e4ac-41d6-965d-9afd1a06a711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c23f29-0d16-4233-b177-39f1047dd3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "774b2dd0-3323-4ea8-9b29-3f37f8ff34a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363c5e9c-2c0d-4e40-bbfb-0fe135127063",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc8d49b-a1e7-492f-8a87-a587cb56e149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a696ac-d321-4f0b-892f-b9c309476ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d84e97-3d1d-4d9f-a02a-0378f7d9ecfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbab32a-2964-4573-8515-501467ec6bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "178a04e1-ccac-4c05-ae85-e9c2eb6d26d9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f14057-70cd-4e3a-a48e-909347b83a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401a730a-4110-47b5-a229-5b906b4e6834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f764ace0-0bee-440e-91f6-f69e840829b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "995cb90b-9271-4d2f-854d-013244b944b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474a9a5d-80b8-46f6-ba84-35bf58862ac2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5eb7c4-7ceb-44e1-be90-149201fa9a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb81faf5-825e-4ede-9079-22ef0fc1d117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce4ed2e-e742-4aff-a486-43ed48afa5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb47c6e-8441-4ca7-af3b-8aea4927a65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de6873f-6523-4be9-805a-3bbdd0aee779",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff45a8f-79a8-448e-a500-13aad7939844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbfdeebd-e46e-434c-a989-f952c02631c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e8bab2-f11c-440f-a774-4b60183d71d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2bff45-75cf-4f4b-82a3-c9a7cdf43ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a277777-9b36-4547-9afa-6439160bf887",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c597bf8-7453-4945-b6e7-aeb9e9d0fb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc99be39-b1dc-42f4-bded-54f3012b8c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2553ffc8-fc00-486b-be32-f81eae8a94d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "35663ffd-2b29-4c2e-91ba-6bcb350dff03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da869ba-66b8-447d-8b87-4769e5565601",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab01b07d-63d7-4e71-9f25-99ec2154bd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79481255-239a-49cf-a4ff-bd6ca071af77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de496468-d247-4d2e-a44c-94419e04b2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "66159dd7-90ce-4480-9488-aeba96e41d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c369cff5-d52d-4dfc-b04b-d0360ea3b7a7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef25297-c73a-44c9-9df5-8474f26208ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1185b70-3398-44bf-af5c-b90b94b9e10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77112c6-7ab4-4420-b93c-d6f23dedb989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c6ebd7-c004-487c-b153-79a918480bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9b2aa4-aa13-403d-89f4-3a3f74772dca",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e480f14a-6839-47dc-b61b-817b63632b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b828bc4-1233-4a19-867e-8c630d488223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9620ada9-c2f7-489b-9c5b-5cd460d1682e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbeb8bcc-b210-4eb1-a6d7-8dff2823833a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef8ebd4-592f-4bbf-9b60-4839c950183f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3608521e-05e0-470f-a3e5-805f781fa426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f560de2-d789-466a-bcfd-23b465f1787c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb79203-01df-43d3-adaf-0c2a8a935bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3adf96-d45e-4622-a07e-a9020dafd97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18318e95-0190-46e6-ac40-000610f86d63",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fa5f53-89a6-4763-ab85-6fb4dea0cc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9307f200-86c4-476f-878d-eca2c42002c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83750e4d-1288-4e4e-915f-17d89c6f7b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59db1838-f39c-467d-93f3-84b5a392ace4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86ac392-7164-40a0-9797-f3184d5f198b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106f5c71-76b7-454e-85bd-5ceb16828fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e9b4ed-c77f-403f-9b38-0f764a26a357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecaaced-3729-4989-915c-48e9148a6f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f483386a-3cb7-4bb9-801a-a746afce0454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d2f1ae-df4f-4b5d-8f77-afaba48ca831",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44915606-167b-4321-a747-d69a9f6b360b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d9ba57-3aef-4892-a79c-47e00dca8e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec6447e-3fc8-449c-946b-e84a7e8725b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8efb703e-1de2-43ae-a33a-290da8147e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52fce24-2d7e-49ca-89bc-262390992086",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c671779-b2c4-4a8f-aaeb-ca6cd305894a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373b4b05-7822-4958-85f5-015524451629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e5b2be-ca32-48c0-90da-c49277aa1ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c052dda-204c-49e1-928a-335637737279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abc4f00-e4a8-4a3d-9b66-11784eb29d11",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f855d0b-f928-4af2-8b51-6997674c7c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6099d4-d747-44d5-9ea5-1dd420899440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251b8fa3-bcb5-43eb-9855-a19babe4ea96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed231d1-5e19-44e6-be97-82d63743def9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85745772-997f-4074-b970-1c698ba73859",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74254613-5ab0-4dfb-bfde-e7103ce25a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb37b76-4b54-49d7-9b35-ab0feb0fe86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5ec997-3749-47ae-b23c-e6815030f295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbaf3f4-f375-47ed-967a-b34f9dd77f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de54ba17-2748-48e9-b888-481c1da78f98",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c054cd1b-7b96-4f34-be4b-493b606599b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6356e0db-4d3f-431f-81bf-7b3358675b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7e499e-3c7e-423d-8d9d-67e0ca73b432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f936e66-767d-4256-b97b-b4b593dd1930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246708ca-35ac-450d-ba41-f50c14daa15c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d887269-c87e-4656-af36-23b89d0f6f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abaaaf25-ef78-4207-b344-8fba8f39e79a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af2d4d4-9306-4535-ac07-cefe2b91e47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34927384-47b3-4d5b-8eb0-1b5932d335c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96490fc7-b104-43b7-b420-41de20624ed2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de721b7-ff49-48bf-a8b1-11224d6acdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee012d0a-8362-4d45-abf8-1f496cfd2502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7f9989-8488-4e4e-8401-8abbd0668f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8758b0d-fd66-46ad-aa04-54ae8c4d7dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ff4cd1-3445-4b77-8f78-8fb11b1a2c89",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52857ae-c44b-46a4-9749-8fdba2b319b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8473bfb-6bb5-4785-b95b-455b40a6de85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d432c1a6-3327-4df7-96ac-b113dd745287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "904d839f-c731-4c15-9de3-cf842ae15b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f8df46-f53d-4e9b-8d4d-0ab98bfba4f4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bddbc7e-4851-4960-a1ad-62842e917f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f227c1-5980-4b5f-99e6-8bd639755f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "695b89a4-cb24-436b-ac13-5f7c51279bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0517cf68-1b1a-420d-8bf7-65de03a12a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c142a7d-fc23-4c13-9cbc-14060fc792e2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a11ba4-c8e0-4c38-86d7-f9322a7f4d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b962c7c8-f76e-4d9b-b796-58fb0ad48ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a1d1ec-a80e-45cb-90e6-21808ed9797b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c1bc3f0-98c9-4bec-9199-e2660c587db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed77f7c8-75f6-4459-9de9-8a6cc54a35be",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50738895-c252-42c4-b560-fc8c6c86b22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f164f02-0cc8-43fd-b019-b39df65334ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6058356-e6f8-44c6-98f4-b22bc8a38772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01e7b98b-7a96-459c-a193-d98fbafa3290"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3e41f7c0-f0c1-4527-8572-9ea7be4e79fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "286b1140-b919-4a9b-9422-d6c4f866c3d9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59edd024-4565-4f65-91cd-331d5b1c2035",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5c47e751-abf6-4a41-8d31-43f889248626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7d9e6c-b8f4-40df-bb66-bc94007b27a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f827f2d-9df3-4311-973e-4a61781e8001"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7165f2dd-559e-476c-af75-bce6c9f2647e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10734099-383a-4b96-a8df-68f978a1833a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7713ae7-a06f-445f-ad9e-d0be3be019b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "533758c6-d958-4f63-a286-9ce58e98b38d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3cd380ed-e653-4ec0-bb9b-056c0c16f728",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5ff99832-56ea-4028-aa27-03a77ee1cd68"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b8efa45-7f90-4875-bbd6-aa3582f8b81e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c372fe3c-42a0-49c4-b338-de50bdde6cd3"
            }
          }
        ]
      },
      {
        "id": "41265423-4375-4018-94b5-228951040b88",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "056d0d30-d85a-4ed7-ad85-728b17f46900",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d551fe0d-fb08-4828-9002-334b13a1848f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "939836be-74ba-4c19-af1e-364e9d12c802",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9acf9db-8609-45be-8ff2-bfdfd49aff1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04b30a2-dc20-4e93-9be5-e138e728688c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2d00d2-9e5d-456c-938d-5a4216506014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "28a997dd-6268-4f96-b410-82253d05e28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd04da45-0540-45ab-8728-efd43e8b686b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42ce84d-1814-43af-a5f4-c3511814902a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7c7550-2926-4a9f-9c7b-37530f2620e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d66cc4-698e-42e2-9eeb-13f5e6c91b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "504ddf24-81d8-4098-a0c2-f9502ab3c4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2653bb07-4b8e-460b-8290-7f189e9ae51b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6caa480-a2b3-4309-b524-76108e4cb17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5059985f-fe16-41e8-b165-ee2b749f9612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4a0c0e-22c8-406b-900e-b7f355688b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31714c27-e633-4fca-a13e-e223e1541e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696f18f5-8f5b-4025-9191-3bc22672f729",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1254131-347b-495a-990b-313ba32a77fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8769a5c-4b7a-48d4-9ec9-5d0e53288d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c0d250-ba72-4eb4-bb87-54d556ff5a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc319fa-a76b-41b8-8d7a-2f2c6273a704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f117a38-b756-48fd-a44e-f6b92f05ec3c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00357542-63b9-4978-a3fd-d19a94e97223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07860cbc-86f1-4b12-9c66-09217cafaef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3abc67-654d-4307-b35e-ae73817104dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc0356b-b543-4ef4-b1ec-4960563a9401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b2c148-e396-4490-ba72-6dd61511a582",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b61c058-5d76-47cb-ae16-382c3c22027b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0584a0aa-cf9a-4f2c-9d2c-64d4fa48ec74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c099694f-888b-44b3-a597-6ed7d468b750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12a65c50-a91d-43e4-8e51-08d5372c2b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb72f43-7932-4460-abfd-de3626c50fbf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4e40c1-6013-41fa-933d-82f407e2e720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31b329a-38a4-49f6-8ec7-98e1c2daadf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aada4d7-9ac9-4df1-ba16-84d903f22b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3160ebd6-4d68-46b1-8173-2d234b0338fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d5432d-f8f0-4827-ba62-780844438a20",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc78eba-b5cd-4894-a577-43c3964e353e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af19b87-17a3-4202-bf52-4e551e6e5dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368c03b0-ee15-4c72-b42b-662f5c8d1c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "988ecc95-8cf4-4878-827f-753b6f6d3390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df31f76-6ed6-4223-8a52-2551f4dfbca8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc1b5ac-019b-4d29-9870-5ec8b3a24a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de95be89-002c-4b33-b9c9-a5609526cf36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a346439a-62a3-48f7-83d7-ad2516a63a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de61f05f-1243-40d6-87e5-7579fe4eb682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403567f0-224e-4499-a600-14999ea14827",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbc7cc8-6e39-4880-ad2c-b24778ceaeca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330c4244-6e1d-40f1-9adb-ae51cc39d84f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b3e161-4841-4dc9-b73e-e0ce71aa91a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87cf88bc-a34d-4f13-96b1-9af7e84f3f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e744a037-a347-49a3-b876-292b1f11448f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38b6d0f-d3cd-44e8-a8f9-3a91399e45f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7809609-84d9-4216-b506-d692428d9b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703a5637-db55-444b-8b54-2eff885930f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4a86e444-d527-4a4c-ae4e-df91f4084fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6800159f-74f3-46b7-8418-0f2caf6a6516",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4292d30a-34f6-4f66-bda4-145cb0eb8563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab2a7ca2-a36b-4df5-8bcb-97e93ca8fcdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bdf5134-fd57-482b-9670-bae2147e6abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "366925e6-1ce8-490a-a7b6-f9db3e818cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d5a486-c113-4ee1-bae3-e301bb32eaa8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d52fb1-f243-4d17-bda1-d80572c38c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ad51f8-59c6-441e-b25a-c5b29cdec91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104ea438-8b43-4408-a071-7dddc754197a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bac988a7-fe55-4b05-ac48-57086ba96f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4b992e-a198-42ff-b5c9-ff56bfefdac8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0168370-c2be-424c-b9e4-9bb234262829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee9c514-8aec-48b4-b466-2fd075d1036a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595159c8-2641-46e0-9ca0-12e5084881cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac052251-277e-4dd2-8305-99c20852a668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23358372-9eae-4496-aef4-9b80b8829212",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331bd97b-0c34-4b10-9a3c-dda7b99d44ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14702e3-b587-4d60-ae96-9af0c9c8fd51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9404d425-934a-47a6-adab-1325d0a217dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "99f23fdf-0bba-40f1-823d-5d9d4e234a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168322f2-4b18-4ba7-af18-3d764534d276",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eecdf44-a8b1-42f6-944b-9e1613c03532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c808ffa2-d0a0-436d-9541-73d3afcc0385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70523be-4550-4bd5-bbce-7084256a6e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0666257a-9004-4870-ac3d-92a0e2a2d810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f22a69-a3b4-406f-bc81-fb0e532ae815",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34564cc4-e64b-4250-9dcc-4e359c55f0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c4868c-23cd-4dce-ac1b-2598620c429b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e1ceb2-8a2d-4ecb-bbdc-0bc4373698c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5910d47c-fc66-441a-ac30-5eec93152f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1ed00e-275e-4af9-95e4-418fa84572ba",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e5a771-81ca-43cb-8fca-feccaeb8792a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b9b8cf-8c78-4981-bee5-facc2650b261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3504f75-2f40-413d-8cee-54f224ee6a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e725419c-974f-4a87-a2af-06d3cfd46137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a96414-9252-4bd7-abbe-5450286713d2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fa377e-cbd4-489b-ae6f-9759b2bf9ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208082cd-f6f7-4f96-83e7-5a5222f59b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95975a3-5f3f-49a5-9d07-c6ff63c56469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6300a797-60a6-4500-b43b-524daa092b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d211604d-5573-4594-8342-0a3d04f43742",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a35224-67a9-48f7-8917-0e89da3dfb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b62265-2fee-4cc2-8f10-cce60406bcb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28caf42-f383-4d93-9711-2bbdb74c9fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f71238d-6100-402c-8329-cbaa7a0b0e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae918acd-2ef3-487d-b3be-53653c102fcd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc04b27d-c487-4b3a-b5c0-1c6bfa5b8f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4994ba5b-c6f7-4701-a101-e1bd6e292378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0073da16-3d5d-405d-9a53-35d9d41154c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73f2638a-7426-4e45-b9bf-2e7460eab4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4997653-7980-443b-9dfe-2dd3b6ee94b4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b149c0-f3ab-41a4-9698-5021a2706c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca6d3ce-eeba-44d5-9851-81e5582c0bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5a8c93-5c62-4a55-8dec-b7a0d2da87ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f807b6f-b800-4ba9-abe9-240efb7f09aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88074819-dfe7-47fb-a5eb-f95dcb2d9d34",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e227dc-b30d-4a21-8bb6-99529186ae7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4059cc8b-8430-4d8d-a161-45866874d6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df277845-ec87-4a53-9d95-9a903ffb429a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b363b92-37b3-45f6-8fb2-9074eb8cd565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4578c5dd-b51c-4d29-8843-010553b67f37",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d159c821-e5a8-463c-8add-c0ee5ca05628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50175ab6-961e-41a9-af56-30125e764a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841e6007-57ae-469e-a339-e7cd02de7284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "715c5646-6fed-4cda-9111-fa97fd0e6be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bc3c3d-6b77-4800-8948-2cbb83629532",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9a09a4-7b6d-44ba-aa68-fcfafb795e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68442cd-0fde-4425-b12b-971c5eb7c314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc223852-c2cc-419d-b4fd-a9db2d64db23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa22fdd5-140f-4e86-b184-86dcf4baec83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c977f8-a50e-4354-b220-420ebe2cd530",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed685825-e3b7-46e5-8ec9-70affaa9bf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959b7b12-2197-4798-b8c1-2d159379e2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d3bfea-66d8-438b-af2a-925488d5f52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e194e709-9652-4982-a119-a4e578c2a6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e39b7f9-f735-40f2-9f3f-de2f00ce69fc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56dcb84-265a-4304-b509-ce60bbbb475a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e42407-3888-4e2e-a5c6-5782d888a5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec87d16-06ae-4951-ac93-c81cbc9654e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a941b2d0-456f-402d-8dfc-056dcffdfc99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3661fc9-1ab3-4879-85f2-70ba3865cc3b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9499b6a-e13d-48e5-9f87-fc4ec476ca13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4baf1438-a883-495f-b21d-e304b33449b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1cff63-4e01-45b3-97a8-877c5a906b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "602781e4-2fad-4576-966c-e4af5c4720d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63078f35-cf99-43d2-9edb-ddad97f86b9e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc5f84e-37f3-4394-9fea-e15815e00d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c05c48-90c6-4abb-b8e5-326ced3e8359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199763a4-12ac-42a5-80a7-e91ca6fbf427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9bec02-35e3-4bc9-bd09-f6ff36354baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659d488e-d2a1-438f-a8f9-085777dadb32",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93d461f-2d69-461c-a664-e28b4c9af3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6eb1ec6-b175-485a-83d0-0534eb5396ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3644598-c57f-4376-a693-1a8f20c140b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8949d2e1-7d83-4255-98f2-1cf0e50e004b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcdcfc0-30ab-485b-a7fc-72ebf872d033",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd534c93-4bbe-4560-bb02-3fe245d7ca7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6397ee98-33fa-4fc9-939e-ae4f1e658733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0f1b2f-7971-4ac7-a999-86f0c18c94a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1b3b98-b3e7-41a9-9f94-b111b9056373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f41af26-0ebf-4540-a810-2a1eb8845845",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c064ff0-5a7f-4be0-9959-0b308b8f00ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2fb345-53f9-4cd1-8fa8-f5b3039b6bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61889b7-2680-4e38-8e17-d7c536d9696d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88e088dc-2eb2-47da-ae1f-36aca4717a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6306efdb-c09f-4bb6-bb2b-698c0d4ba983",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04249b1a-24f6-4a05-856b-e80ccada8215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f851e24-bee8-48e6-a9a2-8430c74ec25b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3491114e-615e-4c07-bb2d-e0f63adc7383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb79049-8d91-4de0-9801-e9a4b8a81eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c85469d-2a01-46fd-af9b-176ad20d0e51",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42c6e16-1314-4a52-a53a-50f247922d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed287e5-ca76-45e3-9e16-68ba12c8b59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf22f8c5-7197-4190-8bae-44fd3762aeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "289ea6b9-78ed-4679-a84b-58bc81a190bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57206f38-6c92-4dca-9845-a590c1865361",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b19b52f-7e95-44eb-aee8-403bc96f59fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4285dc90-0904-4942-9c68-644d8e8803a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ef7edb-8228-4093-918e-b91c56333b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0718e0-8cbf-4056-8e63-56f2dd793f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d402e40c-763a-4c55-a64b-1c393d730d45",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdda1dc0-b823-400c-8f06-ed2a67335b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf16ddf-7d40-48d9-8ecf-60093ed54ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49261f1b-18b3-4616-bed6-301541d1167e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90d418c8-8419-42b5-83c4-178548ab3eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a2342f-ddcf-4d14-a11e-517dc54a26cb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e24bd18-cba5-454f-aeba-b47b1b836289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429b1538-7717-433e-9560-80bd498a3915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b483663-ddf3-42ce-bccb-0ae8dc7c6a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90124ff2-a464-4092-b21e-6e001ef25092"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c4077a1f-ef08-439a-95e2-f195ae3d88c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b64c987e-a026-489d-bf3a-d8bb77e40928",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21add5f6-613e-4e0b-9f55-c321fa98d736",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "24e95beb-4509-4547-8b6f-2093d51f8682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22e98ed-a2f8-4c89-894a-9e161d4ac191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01b0399c-8d0f-4618-8975-ffaba302184d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee011d2a-9b76-423a-853a-385c9ab8399c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9aded2cc-a019-48b9-b264-b6793364cd7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41a020b5-3091-43fc-824e-18306acedc8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d49a0f1e-2a4b-4b43-b793-1eb994e1896d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a280cb87-d75b-44c2-a07e-b078d9a19b8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "834ffd44-a652-4749-adaf-9b3ebad438d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7c16e2d-bf1d-4c61-ad67-a7ace99b3a38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a79a531f-fb6e-45fb-a4c4-aedaab78fb8b"
            }
          }
        ]
      },
      {
        "id": "4b460dcf-8b82-49ef-b727-ee8a7a117580",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5eeaddbf-468d-4ec9-bbd2-85d37b0d73cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05b56434-3880-431e-86fe-68da7cbce550",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a651cb1a-6a26-4664-8af8-a7f2a60c5d0e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76ed937-1269-4525-a427-a5e8e1b4c520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da2ef30-f815-4ba5-8c0f-65c0c446a316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fcd97e-464d-4edf-8760-ceaa0477366b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b066f5-942f-4711-801e-b46d959f5cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e60e45-2512-48dd-9fc6-5e1b4100f4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1310128a-872b-4075-b3fa-4643af60db9b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3e3331-78e7-4db0-a314-9bbd25011df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b218cd05-158f-4928-9206-806c97930516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7f6bab-c2d4-4666-962e-1a60c7af58c3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2a5fa6-a5bf-4496-b6d3-d1477ddcbda2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c75c0b8-eb38-42ee-acda-f889683c2ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b71370-1a66-465a-a82a-f39f515dfe96",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55294da4-372f-42c9-a973-1ccb1caa16b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4654dc20-b10d-4d1d-876b-084312101207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576992f9-4db8-4c49-b74d-47fcd5427401",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16516c3e-8579-492e-b356-ad0e669dd5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6833068f-6f95-49c8-ace1-81c2ef3386a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430f8be0-a622-4893-8ae8-0f57d38126a2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f9b81e-cb49-40cf-b1b9-ec0970604932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bf5d9c-1733-4ba6-8e74-8a7b0378eb75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4e3bfa-510c-4ccb-9615-5520f93de522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8ae2b3-51a0-4733-a8ac-6c380848998c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666b975b-7d45-4a14-8606-79f51773dad5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b5b0b0-f873-4c62-a287-1d140509f367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaff108d-7f05-40e5-a784-2d109fc9a23c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d938b00-65ab-43ed-8b52-a4474c75fadc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807fa828-7b2d-47c8-985f-8d55d40a306a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f05d5a-7c8b-4bca-802e-c9c80078a69d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7aac13-47b3-4336-8529-052d22507fc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "806c3891-5ffc-470c-9404-90d3f7a71367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "689c2b18-702d-455b-be87-092da655af49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b39522-f3cd-41e5-9b2c-174123550fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a338c6-2aa5-479c-8d89-4745c0031b01",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4fc5d1-7cb0-4f93-b7da-e44d68a22511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "638c9f01-1586-46de-882f-f9afce94472b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8664da-6317-44c7-b979-e22a223080b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578b80ee-b184-4dc2-a436-dd8cc0914ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2b5821-16de-4ac1-988b-cb9e39364322",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1475b0f-450c-4c66-9ff1-62d171366676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227f5c10-4e13-46df-847b-1f94b6e1ae4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f4da03-f1b1-466b-9d70-969f4296d972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a58dc0-ac4c-4e8f-8dea-b6ad7a818762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd752c44-a316-4472-a37e-cc9cbfce73c1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0e3546-3e5c-436d-ab02-40d79c8eee2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0e6a63-812e-47b9-a991-ee58afa92b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b129fe84-2ef8-4dc0-90bb-da74ee927912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e6c870-2fbf-44f9-82d3-1c3618eba538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c721a6a1-3cf6-4251-9773-c45bef6f83ca",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f7d837-d544-4052-81c1-e753e368bbe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6645464-1836-455f-9a6a-5fc6ed362c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f717924-a5b6-4d13-bf97-eb036c21aeec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b80a3b-30a0-4fa1-93fc-9116b87c856b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257913b2-342d-4c7b-84e1-66e4645c6c9c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033ad9f3-07a6-419a-9a3e-e03d5c56d716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57f3d24d-f0b0-461e-9ae7-90a2399930fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0bdfcc-12c4-4e34-85dc-5330c633f0e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4dc607-e29c-48f6-9946-8639eed36efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e02348e-c7a8-44ed-8e3d-22dc92cac786",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9858d4e8-2b99-4a98-bd11-bdcca21e6f0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceeb927c-6161-4561-8c50-a205fba90034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7698202c-b010-4d0a-9cdc-4a71020844c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c73eb9f-273b-47ac-bb73-bb01acfdcc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd12449-cf4a-4f09-b90d-d3882276ef85",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1c1de6-cee9-4841-8e88-08d479ad964d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c34adb55-cda1-4439-9a87-627f3fc846dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0700546-5922-4e4f-ae27-bd4e961d3a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4310bf6b-f373-4506-b9ce-6d8d82c369c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f12c86-d7f0-43fa-8a5a-f959fcf31e25",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221d66a6-2522-4e09-b30a-d49b824778db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1038d36c-4d27-496f-ba09-261c549e19e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f01a78-3883-4bcf-9b3e-cab3df905628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87bc4e4-e5a6-41d7-8694-7ed071badac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b9c284-3acc-4084-9ddd-99dc06b17588",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bf831c-227f-4644-b26d-bf526e03061f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1550c44c-9683-42af-a882-9a54e63600cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2302a3b-1480-476b-8511-dd736cbbf466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b363d6-b27a-4dd1-8efd-08b94470c220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33facac-ce0d-4e53-8f87-b30be1860972",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed94753-e0fa-4d57-a282-634c4f0c2757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8290aba2-45c8-4b2a-bace-3eb479f77cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814060c1-e707-48d9-a473-69f2b61c37f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24707a60-8632-4bfd-9b8c-4adcc2adfddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8eeaf6-2088-4d4d-a3f0-1c6d94dc8887",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638c93a4-8595-4b24-8bd8-0a40e496d42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bcfae6c-2747-4143-8ec7-5aa423838fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40d0e18-924f-43d3-95ac-85dab8072f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb319b82-18ef-4898-bc61-2da35401ab62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58215a5-3817-4567-a688-4aac0f065756",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6c145c-9a1a-4e77-a36a-5c51f7495981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40240517-d5ce-4d56-a59d-9294b91b9596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3ead9c-ea18-4a50-aeac-579cb858f3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74212cd6-b4db-4ccb-b811-a23a6135a935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc09f6b-5ea4-4878-a6be-5da7e1ba493d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279b1d47-cfc5-4003-8246-d2ff34d711b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7a4ec3-1152-473d-9a7e-72eea0e1ff1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160f3194-7683-4960-9069-37e6c0a80754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8449b5-a954-42e3-b114-b361028cd250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a03084-40a5-462e-9c83-169f85330c8b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e45298c-d8dc-4d61-919f-aaa8af01d6c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd06845-c5af-4297-a27c-1ebcc2e5b801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e066a12a-54bb-4098-a728-b90550bb8d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ba0658-dd14-4422-8982-52d7ba737f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beac6ec5-332a-45be-815c-4f3681482eaf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da011bb5-93ac-4886-ba63-7de9e1de65e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11e918d8-b4b6-4ccf-b738-1ff7a40b7254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324b820b-60b4-4217-b7e7-63d6388db1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587d8611-d14f-4eac-bd2a-ea19cad250bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a053ee47-cfe0-4358-aee5-9c2693fae068",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def6bd8e-7a8a-43fc-95bd-9503628fc196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c587134-36ff-482e-b531-545f23694e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38eaa027-ca57-4625-a7ff-5c9c5ef1fda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ac21d7-c627-430a-9b03-f56a0039867f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5942dff9-6538-4ed9-8fa6-e9f39dec99c2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dae45e-bd03-4202-9512-3d6454cd1073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e99288d2-169f-460a-9108-0d9be4b563b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a50104-3109-4a0e-a5bf-e8fdbff11136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9ad6451-91db-4cf3-8dc8-6ebba834bdc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cdc8f6-db86-49b6-b9f2-5182b0cfc517",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6d1337-50b9-480a-a76e-5b3bdd16c801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4b92b27-596d-45f3-a8db-61bc8b47d852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb62367-ab33-42a1-bfca-d59f20cd1ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063a6b23-340f-4874-96c8-b45e8f42dafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3423f007-8869-4df8-9279-6c5131766754",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3a9e20-a4b2-45b9-b5d9-edcb91178402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5834ee85-fba5-4079-aaa6-64951a17393d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd10fd9-ba55-432c-9cba-333bfbdfe529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ef9b61-a00e-44f4-8ffc-1da7a4ecb6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efcd7a4-8dd0-4edd-ae0b-1f0bcb06ee98",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c67fed7-0b99-41d9-97c8-5f43f4dc3cef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f4c7fdf-8ac8-4a14-8c4c-7cf6a0f91bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd10c3a6-a4c6-41b4-9fd8-3059a1d3e13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f6d090-cca0-440b-8016-87107f0ce7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f74c462-5837-496f-8423-a2de6439d50c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ae392d-0440-4af1-a9ff-53909b65f7c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f8f4774-be6a-44c9-99ee-312a94455099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd966efa-0624-43e7-85cf-f3b07436437a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8e8a9e-b426-477f-82ae-00f15870a931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8391aac3-c193-43d0-a286-90f003c553c7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d42be2-223e-4091-811e-9624e732b633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ae28e93-7efe-48f4-98d3-7637519ea879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8de7641-9501-4c35-b711-c3da7b32783d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24665c1b-673b-4330-b747-58b6a4019085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa43e71-bbc8-46c3-94bb-8355dbdbdd31",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3646ca-e7a7-4f1c-a6e4-f75c49d89dbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b940917d-c08e-45b1-b2d4-71cd81f0e53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22e3409-83e1-4bf3-832c-f6f67618c4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8bdb2a3-fb8a-4b73-8397-a6ccb80a56d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c94d2c-8a60-4927-9bdc-4b2f7abc7894",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6ec741-5371-4c10-ace2-79c0bedd14d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d07eb29-15d2-4aca-b30e-7ab31d1ce7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6676c5-204c-4996-8bd9-e1656c1a7a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a55ff2c-8175-455d-b1bd-41875d254e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044ee147-17e7-4e5b-9967-9cee79b3d29a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279810ba-041f-4791-bd14-e5e0e866d635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a95691f9-a560-4436-8f99-b740842f31a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f13eb1-663e-4397-b60a-9870f19b8741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0299a59-cf31-433e-b73b-dde5f010ec85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b864b6-9c2e-45ff-96f1-fab266c0805e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0dcdc4-8a04-48ac-a539-137fc72100ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e15390b-a9ba-42c1-b2d0-46dab3d2e92c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d1695a-8259-44bc-9ccd-324a67666dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6311b448-3da9-4a79-af2f-0b94128091a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa315639-723e-4a8e-bb97-27d026d15304",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17c7aba-2171-4ded-af88-e7a6585b5024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83009353-0c80-40e4-bda4-f308e85d53c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647cc608-6489-46fb-a32b-8d723329aeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77896040-d0d8-40ea-bfc7-3e637374d691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd05673-c95d-49bf-8e37-d924a0cec0c4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff36c41a-5080-473e-8cb6-c6751e0013c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e5f641-1156-458a-a7bf-2d6201162472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688201d4-0052-4f5d-b484-e59f5d9b431a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ecb93b5-96ca-449c-822f-ad389b7ba2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0925c304-dbdf-4d53-a90f-27a8709608fb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8876ef3c-35d4-4df2-9af4-f13ac7734966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc94336-6b9c-430f-bcc7-680a2c6c889d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fffc4c-f4f6-47bf-b529-532c852bdcc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b5cc2b-acd6-49e0-a842-b788f77fb6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e7587e-ecc7-4cdf-97db-9f8ad9db92bd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe09bb7-badc-4648-88c1-23722f657e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5eb59bc-b1f1-4e2f-a74c-2ee59edab4d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "899cd17c-26d4-4edf-9732-29228cce0b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6ecba2f-3771-4333-96ad-8ff2676a046d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d548ffa-72e3-4ec8-91ea-9411c84e7af9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873ab1a7-8cdf-454c-bc1d-2fddcdd8b005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f98c710-1ca6-4472-a8b5-96ef49d7da6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20747a7-1fb0-4861-9a5d-9dd905f8f5ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54be93dc-4b94-42db-83af-337fc1e2a822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23557f0-a481-409e-99ea-f7311e52ea89",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0441e539-a007-40bd-be50-dd60e9669fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533d955f-fd78-4b4a-9319-3e9f2d3b2553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89586d3a-b677-4fcc-9543-12f607895317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d883ff95-ad8e-4e07-8382-586d5f39f95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c5ccb4-085d-4c14-b3af-db0f51ab2da6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060a775c-9951-4987-a1cc-d819f084be83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8979a2c0-75f7-41d3-b956-c3f33cb9a3ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d02c90f-cd9a-4eef-bf9e-9a3576855f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891faa75-702f-45f4-8253-d861a0d29a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89eba21c-c89b-426a-88c4-162535dd1f1c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3561e7f-4acf-4a1f-8217-343b9f1646b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31d12f1-fd62-4c45-beed-9ff511cf8a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "730882d2-8dde-43a7-9f7b-16812c6d97f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc6a41b-dbd4-4809-8a6e-b1ba08d2ebe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edefc586-0585-44fd-8f31-45a2a998d7ea",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad40074-d0b5-4fd7-8f18-67aa5b39d961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0efe95e1-0e99-42ac-8e37-f0df0fc49f3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26d8821-bfd3-470b-8c90-9d479677c19a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d74187-2b04-4c5d-aec9-d6073e57b7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb86ca6-b81a-428a-bdeb-1aad3dcf1621",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050573f9-07a0-43a5-9091-99a8b39d7224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c5c5c9-4357-4102-a80d-14d74f5cf0c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9821413-459b-48ff-b94f-bc19195b10d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b746127-790a-4cac-8239-42575234e9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d83125-cb1a-4571-9bd7-ee73d111cf63",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8139d2df-1af5-4a37-bacf-a0c3944aa62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d44ab9f-29d9-44c8-91df-87240442755e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fccf201-827a-4576-9c2c-7a880ef30113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d166a6f1-edc6-4a9b-b45c-4e1ea1e4e475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed03793a-ddd2-4b28-ae47-865e359918af",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c54a50-7286-49ee-9e95-08fe664af74e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b765283-8b9d-44a2-9b8a-a6040cf3cdf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b0775e-7f42-4b42-a3c3-ce8e42f4e4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc8a087-6435-43eb-b79e-cc2aaf4e0517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4c45ba-290e-4991-9b3b-5b1203163237",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b078a608-665b-4b97-9dc6-3a9395f7a97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdda2e3f-e885-4c81-9315-9088fc6fd01f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557edc5d-8147-4711-91fd-9c4c4532b12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f0dc92d-cd97-42b7-87dd-09bd1e1e371b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c694cc63-d141-4488-bc45-a21124ded299",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c13f375-1991-4249-94b6-8d791f58e8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718c9420-6edc-4505-ab66-e29510303eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f25cb7-202c-4add-87a5-bd6b3833e756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afefa2ee-2b8a-4360-b57a-d48eae065595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a6b498-6ecd-409b-a92a-ee1e2e31bd7c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd663d4-4114-4d60-b4ec-a7d1ad0e9af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2dc8dd6-86e1-49fb-95d6-86685f9cbd70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f09f966-8270-4c43-88d1-53b1e591a0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7b6c29-44f9-4b12-852c-f8235e457365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cffaf53d-874c-4137-8871-491efb79e77b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a6b473-db9b-4a11-83ad-9c0e9efba866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d71c35a-cd88-44f5-862d-4f4cc4f7da56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d0fd61-65d4-47e4-b97c-35af326cd19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0dc91c-305d-4623-b41c-bd94ec2e9ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7504d49-e576-420c-a280-038c82922a1f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54431ac-11cb-4222-8b93-dd13786cf64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5875b80-18c0-4d79-bd8f-e81c89357f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1337d301-79d4-46e5-bda6-34932f582d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c90899-0766-4457-8371-30668323f12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18065a57-0346-4780-968c-9b526063d930",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67d1ff1-8549-4191-9e2a-f1c17a05ba1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cbf89cc-eef4-4a43-afbc-814ae1e0e9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab50cec-a6a7-4aaa-9508-81a720a13d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1392f843-cd53-4840-a3bf-ceec74210fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecc7fe1-26ab-4048-ac90-0d3e166f0924",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39332dbf-cdff-4540-bec4-ff81eb33adf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94bc4770-b81e-477b-ada3-6051e9bc5be2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed3f1d4-3b0c-4c3d-9177-89af696cbabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd6bf6b-c858-47e6-84c6-3eb0fdb05d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26cd260-73eb-4f43-bd47-4528990b2124",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70fc4b9-c23b-462e-b849-b53a2ba6067e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd46c85-3974-4c93-a887-c18e8762995f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac9e827-1d78-4485-aa17-df9147fafe74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874aa44b-5765-4e3a-8711-dd8c8154b551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4545d8b0-fff6-4d63-a865-67ad4a2559e1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc93f37-6145-469c-a937-fee1ff6941a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63387f2f-bb62-43f4-9bf7-41a0aaa90e80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "402d65d5-47c8-48d4-ba93-6c4390e1252b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b6dd3c-1095-4722-adf9-59c85c92d6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fb16b2-88b3-4275-a886-0ee3b550a6b5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974c2f4e-582e-4d6f-8302-57af20c60166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e541cfb4-f91d-459f-8c82-8e78d8d4e083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba16604-e780-4fe3-a51f-dd6269ee135b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67eb4b7a-7b78-45e8-b926-dc735ac7788e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636050ca-f339-498c-8512-1d58427bf37f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c2452e-5787-414d-a0ea-edfa2a55fc61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dfa5d8e-1c92-4789-8e08-7c1114d50368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a5da3b-98b7-468e-bbb4-1fbf950b680a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b41d30c-333b-4982-a871-03d69eee818f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3f9da9-605d-4bc5-977f-b84d633c173f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71443720-738f-421e-9829-f39fb2f55629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542c1cc4-fd4a-4d00-80f9-f7fe1c9d827e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff715c9b-1595-4232-9b4f-9523f39013e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ae5bd9-76e5-4f98-a2f7-0ca86238103e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a7a5ef-fec1-4417-84d5-4c91468554bb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c6efa3-0ef5-4b29-874f-7228f716b9fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060e3cba-39ae-4d01-a88e-cb726f1dcb95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c8ecbd-c2ce-45f1-8ffb-53492cf01fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a1d9fb-5e8c-42ee-afcf-2d8e1dc2b539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31514be8-f5f5-462b-bb87-177883ef2bab",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b094672d-fbb6-4c87-8931-b2d6b0a8183c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1639792e-9dbf-4b61-9255-4e9fea502c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b827d109-bb40-4036-b889-b4657f89bf1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca9e8ca2-8998-4ec2-a1e8-a4c4d90f91ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0a6d81-f45c-4791-9c9d-b269858484f6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45cdfb8-b524-4a8c-aad7-b044bdee1e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acde7227-c2e2-49b5-81f6-ef0a8eaef2ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f38194-acce-4261-896f-a952484eda8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd1cc931-46da-465f-87ba-75c2c1d0d7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00bae4f-2a48-4e7e-bc36-cdec4feb8203",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c16de8e-b568-4a35-84cd-419a39069f3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63dec2f1-cda2-4bd6-869f-18120874684a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a389a184-b99c-421f-85b6-04f974fe0ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0417188b-2c65-4c90-97b3-3a67cbf1a9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc95ae7-f7e4-4b8e-82a5-d5ac828c47fe",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0005fc2e-7a0a-4e6d-8a31-3fc8abda9ba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bb50d00-904d-4917-ab76-d0dd14c08f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a8233a-d2da-4010-9a88-62c8957bd829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74307d9-a72b-4a7f-bc0c-07f2f750ffed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6e3764-7aac-40a6-bfb2-9214d538ed11",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ebce3c-a430-45c6-a6c8-84aa47e88212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9afc64b-a760-4a30-a0d9-574752d8c53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86560a9-e2d0-4168-aa29-61485db5c740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc882768-3557-4985-95a3-1a85833c2133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfe9738-e250-4d67-8ea1-35410dda1af5",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e83570-f58f-4494-bb1b-5641b7992c77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4b30b0e-79c6-41aa-b89a-67f477154be4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62bd632-0603-42fa-adf4-8a7c609c7c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3c924d-d33c-40c7-9e9b-d3bc5dea6254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23170767-03df-49d0-929e-a641e60273aa",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e5230b-db8c-40f4-a491-b46cc5cbc93a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d640ba3e-7da7-44d1-822a-a3a6a4e293ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d4952e-bb40-496b-98be-6c3db778b6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7192a1c-e02e-4c1a-8b59-250129a960b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d78d3c4-9670-45a1-ad5f-54273797b441",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72315d9d-c3b9-4e0e-b843-7cf184850374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4470e166-846c-4670-9353-1aed5d10a608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7788d1b9-6a33-48bc-b225-e553223723b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edac809-839e-4880-b49b-3f24ce51fcc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcf83f3-c8bb-4096-8b85-8e21544a1cd4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8323b24-7ca6-4d25-8e3b-66a3262cf1d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7abe803d-25d8-4001-81b2-a4ac3b77f345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2f71d5-8b2d-4e0f-9021-469db2c6342e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3ec2ba-c9bb-4f10-bc40-ffebeb0cc9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a98a47a-3ecd-49b0-8231-22651aa342bc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8661304c-f3e0-4f61-ae63-3c80afb73e1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb0b28d-f28a-403f-9c09-0d0e6f1a9376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9344dee3-fc6f-4355-8fc9-88f82c2a56d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3520c497-d8a9-4079-93f2-d2dba238d3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d43b47-813a-4739-b41b-d92b65c2baec",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395f86c4-7110-4cb8-bf6a-27abc246f88a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c0b02f-36e0-4db4-bd22-4f98fbfe6851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb053543-c155-48d4-afe1-88b38fdd8810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d2f59d-13d1-498d-8cf5-2a61b116619e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df22c09-dd9d-4d52-adfb-203f2bd92ac5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e7b662-af95-4351-b935-31fd4b31f67b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0b581be-5f63-4477-9979-9e25a996f151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42045bfd-2db9-4ca9-aeac-37c2542f9885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb48819-3373-4e94-bb40-1af9355cd607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9657008e-e1d1-4150-b2fe-448b24f85c20",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55d99ee-f619-4f26-8d0f-33c87bb354ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b04f00f0-2b9c-4a6e-a111-78a0eb30001b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44e4515-6272-49c1-b818-4064271e77f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a19b00b8-6d4e-45b9-848e-5a5922fea709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916bdec3-0888-42b4-baa3-2cfde113829a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd2c15b-a678-432c-ada5-9dbb31b016d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30841248-4e24-4f0e-9522-3befcb173bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b253b3-7977-4b03-903b-966072c21e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc773a1c-029e-4099-b9d3-efe2ce1ba78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949ce44b-cb27-47c1-84f8-2414357bee3e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcab60f-d8a3-4c9f-9b31-412dbce60b33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45f3b25d-c361-4ebb-8f58-d13ac98c0abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81744176-9c02-453f-b8b7-08930d6d487e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f497d2c-3a7c-43ba-8187-2d38a4f253a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3965746a-312c-407c-9a98-4bab751eccab",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54aff710-130c-48c5-8c77-54a98e17587f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "459cc5b5-ab23-4c3b-a545-c730f96ae049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cee7e3b-9d70-4ad2-9a72-7b92074b44b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb19238b-9f6e-4bdb-a18e-fe26cdf37f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162dc817-545c-46ee-81e9-8fbf200ed3f7",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a0b9f9-6f7b-4331-9e53-b6957e6aa3d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a0251a2-5b36-46e3-b777-dc0c287972e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "884fbd9d-be1b-4fc7-858b-77a3590d4895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2f811c-4309-41ad-a476-51508c982063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55287129-d53d-48d2-99ab-ad5d954136d0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c961f5-1427-4f86-992e-a17aafc3105e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7edda019-4cf2-498f-ae02-604d66eeaa55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9daaef1-3baf-4b77-aed9-5e0233ffc8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b3841e-c511-4eb9-b469-0b4eb1553e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559e72b0-fe60-4791-8b03-0b305c5de498",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39121bff-aa75-4211-9389-14f3fc03e1b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92d57ece-6106-49af-88fb-f279f76cfe69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3f0659-2547-4fd4-8a65-def2f3da4ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc0a1d9-b109-4bfd-9b6d-ba6872b052ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e828f6-dac9-4d83-86e3-b8026283bd97",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d6b440-71d1-4cf9-b2cf-2847f1258909",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b85ea52b-0e1e-470b-bbb8-17cc22fd0416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c21cb36-4290-40a1-8212-54464410d21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ae07b8-0dc6-45d0-a39c-ee7b672c69e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da398c19-df8b-4220-8caa-3d64427ab284",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8310e6a0-647c-42d1-8dbe-ca892e64fab1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cbb45ce-2084-4c43-b8cc-3577cc9a5e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2924183d-90ad-4908-8ba2-5e45d6c6acd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985b3bd7-86c1-4622-8984-bb74aa9392bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cda2ce-dfa2-4043-8cba-b68508b13d62",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12bd668-ad8d-4b5a-8a90-981ef6767851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ce066b-2bd6-4869-89fc-efda072ef010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18f2d4f-0b8e-4851-9dd4-09e62a24c2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6811ee42-8c3c-498d-a3c0-06af23f8c8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2788235-81dc-4976-b2d1-141406960476",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904895d7-75e3-4ea1-b7b8-010db2be5472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5003628-5f45-4184-9b16-0feaac8c35b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02f2415-a33c-4103-94bd-ce057c9efda4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204210b5-5972-4651-b12a-00b57129f8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec88b3a-8342-4cd2-bdcd-27e2d24b2fd8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37efde0c-0a69-4169-98a4-ea116bf4d321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef2fcedf-f22d-4780-b3d8-50b1fea17c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb95230c-0488-4bf2-a9a5-86b01f992c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee3ac08-ae6f-47b5-b349-beedf88bb786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61968faa-90d2-460d-a574-072fdef5f1e8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13d0ae7-86ed-4356-8cbb-3eec93211d4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d06fdaa2-0716-41ed-a159-dbcf1dde558c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1887f9ee-8dc5-4079-8a99-8031ee5ccfb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4121923e-adc4-4a29-b151-ae3360098832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f99271e4-9066-4fc9-a288-7dc3777cd5ef",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99f3e4f-dbde-439b-8fd9-c69dfb9e322b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3693fde2-eb21-4e1c-a1b2-3b8b6a70049a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e7689e-d2e7-4264-af0e-33689a7191de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ec004e-a450-439b-ab95-e6a6b58ed8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84759c74-8df6-456f-98df-9c6aca1bf450",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423cfd32-dabc-4a2b-b3e4-df9c0bc5fdc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e71d3dcd-f853-4402-9e48-063f9423815e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3390549-9728-4cbd-b90d-40d16725d153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1c7db8-9817-4947-acd1-4c447690bca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e0346a-a6b7-4b29-9a97-e00f186f1d41",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ef14c2-e949-4a39-8f53-20e7fdbf47d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b91efcdf-31f3-4b52-9e6f-4bbcb14c3e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350cc470-0372-4819-8fd1-444528cc4692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f65e2f-0341-44df-bb1a-eb8829da50d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7946a4e5-34ae-47ce-ac42-eb9a98e7d805",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6070d19b-2876-43ee-8d60-ac85c01c920e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf61c406-ed73-4647-bf17-44d499962f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac5d124-1706-48df-8286-0c45d7d46e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14029800-bf85-418c-8934-92b1cb118143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f236e531-6fb2-4790-bf23-01acc17c3ee2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcd62a2-7588-47f2-9338-f172920d28be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e57ec29a-e582-4b0e-be16-04a0ec388fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69d78c5-883e-43db-8e78-5174eb2c3c1b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9ca453-3ddd-4a06-b843-5b7ab8f19f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a39e6a5-b24b-45ff-87c3-00a408fdb4e5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995cf1b9-911e-4083-bc2d-1f18f9f3c75d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba9147e0-f29f-49fb-bc62-bd06ff4116af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9c9ada-01bb-4c6e-be8f-9d9f780254f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3899f95-6b29-4bd9-9174-2fd3bee56b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28320326-a264-4314-a332-37d1d36a11a2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236a4d89-4319-4155-9365-0d041a6724ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a04bd69-8f7c-45ee-97d4-2a8298702d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3c3304-cb76-4e0a-bfd1-0d35419a3d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016c9023-ca3c-4eab-aede-70eebce0a71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9665f8-0efe-4a87-8498-91d23f124d1d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bf6f91-3c18-4066-b526-81badc892902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "901390c7-db86-4505-84c8-359199cdba49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947c9af7-77b7-4dfb-b996-05866f1cce6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a03b6215-ed28-45c9-9897-f806e60ddde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef45f35-fe11-4aa7-95d8-34dada858a78",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5021901-06a0-49cf-8247-62700145ecf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b38c58d6-8d6a-4298-91ca-a45e2f8012c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3511548c-aaf1-4b93-a04b-e0bef95ac629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fe3234-0963-4d59-9e1f-7dbba34a211a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe4462b-d808-4d9e-a621-90b8328a2221",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4246095-a3f5-42e1-83f4-f2841bf06072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d175a203-d56a-43be-b4ec-8b8cd93628a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33898268-a411-4717-a4d9-6b4963285d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8ab294-cb80-48bd-a4c7-97a88cdf0134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4252d9b7-a261-4d5f-b854-0817ce1a3f80",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba1185d-5dc9-476b-bf8e-667ad04a61d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b3a9452-5d9d-4685-a47f-9bd1f47e9f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "469cefe1-3e3e-48c2-9545-54f671f42d73",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6d27a8-856c-4c85-aa4c-d6eab604e6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a26516-b423-4e31-9160-6f249f525bd2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b794c3aa-eb67-49c5-a9c6-ce641d641fa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fb03fb2-0b59-42d6-8d97-436cbdbb6a08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e864f0-2178-4aa9-bd6a-4acec418deda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47eb6655-70c1-4202-a7d2-25a08df147f0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fc05fcd-773d-4bf4-9f06-4687003cdcfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82ba6807-2bd0-4f19-83e4-80fd987fbfb3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a796bc0-3eb5-4b6e-a642-6d545c3f4d36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24c861dd-f7e9-458d-95ec-f571a03044a9"
                    }
                  }
                ]
              },
              {
                "id": "86f0db2d-dda4-45bd-a400-8aa778ebc9a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30e35f7f-8e06-4c31-aab3-d6dccb6b6442",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377a23d6-eb23-4079-836c-9bbbbba03d58",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e5acf2f2-2fdd-461a-9c61-3d6b51229301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "623c4f3a-befe-4c6f-a55c-6f3b20a9ab74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "230f20c4-c52e-4876-ba54-e726afcb7d30"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be847fb4-3069-4d50-9a02-42eee14bc562",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01940b23-0789-4bfe-809d-87f73b1ea5b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc48b0fa-fdb2-4cd0-8c6d-3b7dd92eb43d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de2d1fb6-061c-4917-960c-d8cb523b8db4"
                    }
                  }
                ]
              },
              {
                "id": "2b378d6c-eb04-4a57-86b3-71d6aca0fb9e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "12a277f8-5cf9-48b5-822b-aeda973b6966",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f84fc4-d257-44e8-982f-744aa3788010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6b14e03d-713a-43f6-bc1f-a94f155b1abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecaefe6-536b-4018-8bc4-edd13a91077e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b2fc30-4927-473c-94cc-ffd56c64e652"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9f96b9ff-02d4-47bf-8845-5b87889b61b7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cdc5e813-e01d-4e16-bbaf-795bb1d17b9f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37b775dd-f3c5-4ab5-a873-25c8c3d5cf3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "10266e82-46c1-4b27-a271-0e615a6845c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd92cbf4-1f59-444a-aaf7-3afa1919a7fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32544088-70e4-4d87-927f-4ed2564eb264"
                    }
                  }
                ]
              },
              {
                "id": "7b364873-8b1d-4091-ba2e-94e39ab615ab",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59c2e513-d418-4fe0-868b-59eef8e5ca91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dc222225-5e69-4a8b-b848-28b940844861"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b34d8a97-bc91-4c0a-923b-60d207cebd65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3a41dad-8c8f-4fbe-8410-56fb5db430d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "881cfc6b-cf4b-42b4-b095-780ea174092e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "59a9d6b0-3663-46b1-bfdb-e6ee2f09244d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ff3bc0c-dab4-451a-b0f3-4882b22083fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9af5378-0fbc-4ca8-8a44-d463be7361b5"
            }
          }
        ]
      },
      {
        "id": "d1149f78-eb8e-4b89-9b90-355242951af6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0205ce76-003e-4531-b735-229f585fdf2e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04c67faa-687f-47ea-a870-d86fe412ddc4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0e50bde-d4e4-4115-9b3f-dc7752761f6d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9046940b-50a2-42b7-a732-f4af6a067473",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5b81247b-be79-41ef-8285-16514f540792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0fcd24-d73c-4f84-b31d-9f40e7049c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cb1cabf-6158-4056-80f7-4ac6f835b4ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bdaaba47-14bc-4df0-bc8b-f56f58d27609",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a26b75bd-641b-42dd-9602-2879ef8f766b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46c0d77c-918c-4b97-8db4-d139c7014d5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b43aa737-8c3b-4045-813a-7cea22b1e194"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd38039b-3766-471f-a0cc-c384b5aafeb5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3c777315-e71e-40b8-b71e-9421970e99dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fd95127-7eb2-4d53-8495-faeef6f577bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85ee3a4e-d747-488b-9bf2-219a0df8babd"
            }
          }
        ]
      },
      {
        "id": "468b4044-a9e0-41f9-990f-52f4aca1f5d3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "04e4c11e-93b9-431f-b469-98eb9beb2b83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "45300d2e-d026-4889-8e56-40e32abe85c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c136b8fc-9aa6-42ce-954b-db267b111f0c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108ee9a7-094d-45c5-b2dd-f2acc008d5fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "148bd1b0-6cca-4b65-9dc3-c1d1b037ce47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9ae583-009b-4d12-8ba0-f09eb25667d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "909de57c-3cfc-401d-9086-113f95548306"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "571fbccb-b517-4158-9cef-ff07c54c1d31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f43e19b-2033-438b-a29c-8c4353de9c71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed4a1380-95a9-4066-8eea-6bac9ad94018",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e1fbfc2-6784-4ff0-8bef-1f513a555496"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9518144e-5111-4a7f-96ff-bb14c9a619b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c21c2ae1-eec4-4237-aedf-2743caeed19e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9e33b22-62b3-49ab-9efc-8bb0bd7cf3ee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2e651f3-1174-402e-8a5d-021fb5f79f81"
            }
          }
        ]
      },
      {
        "id": "cef85dcb-7d1b-4cc0-8a6e-466bc1e4023a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7dd07542-36c7-4de0-a06d-d8c8f2a2e49f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "337817a8-5e64-4ef4-bf4d-d7ad0be1ab21",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cfc192a5-e0c7-4f34-974c-8619eb8ec375",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7765cc7-58ef-4f6a-a343-80dbbb49dde9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f115383-582e-487a-abc8-006aadaebfb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48402375-c55f-4d99-bb71-3a441e2e8c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df6c46f4-cdcf-476b-9691-78a287964348"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7dac7c1-a351-4153-aa88-45cf00428761",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4989d445-b53d-4582-b00e-6d538d370039"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ef45e16-fdaf-4340-93f2-95dc5d3a6665",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "026a3c9b-0d6e-4ad4-aa79-a7b19104ef4c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7cbdac5-1924-423c-b805-eda349c3ad15",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0c3d3d35-1700-4470-9f90-81a3d1cab264"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aaa78611-f7b8-469a-b5da-4b979e11f414",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "125c66b7-f30e-47fb-bd11-d394b4b875da"
            }
          }
        ]
      },
      {
        "id": "fa9311ef-3e4a-4404-a189-1445785a0ed1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e76b51bd-f8f7-414f-8756-9b52ae6834c4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86a1d5d2-dd5a-4a0e-a155-36cba2c73fdc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "adcbf91a-eebf-483f-9fa7-c19b44f8f24f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b808bf2e-0f0e-4843-b938-dc575f12e08f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ec6c4c3-01ca-4311-868f-0bad93b40923",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 123.91228070175428,
      "responseMin": 8,
      "responseMax": 3456,
      "responseSd": 380.00315237389384,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703205308726,
      "completed": 1703205353287
    },
    "executions": [
      {
        "id": "ade4ae0f-2fa7-4481-9d0c-251f78f70577",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8ff5d294-0704-4bd8-8b54-1cd5d2a85e87",
          "httpRequestId": "f7a972cd-6cfb-49b0-84d2-94241234330a"
        },
        "item": {
          "id": "ade4ae0f-2fa7-4481-9d0c-251f78f70577",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "31cd70cc-7231-49fe-8c5e-4ac2ae873d53",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "39bb5d2c-0f08-4d74-beea-7e53c2cb4023",
        "cursor": {
          "ref": "1bf6e027-1fc9-4e2c-ac10-52c13f472610",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2932df87-76a9-42b2-aaf2-297f88d9b8cc"
        },
        "item": {
          "id": "39bb5d2c-0f08-4d74-beea-7e53c2cb4023",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "79967384-badc-47ba-9f3c-5102740f9140",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "1a47270d-123b-4f02-9f16-6ac21006a316",
        "cursor": {
          "ref": "8c020844-abfc-4e15-b9bc-2e83609c9012",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bb157bcc-d0b7-4252-9b47-95244d44c212"
        },
        "item": {
          "id": "1a47270d-123b-4f02-9f16-6ac21006a316",
          "name": "did_json"
        },
        "response": {
          "id": "2e609048-6756-4eee-a9ae-85eccf031bdd",
          "status": "OK",
          "code": 200,
          "responseTime": 761,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e7a6f8-e523-4fb5-88a7-72a3e319f0ed",
        "cursor": {
          "ref": "1b1daee1-0aa6-421e-afdc-84e896e549f5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a03e2eec-2b41-48fb-a4bf-e0d24d2b8f14"
        },
        "item": {
          "id": "f7e7a6f8-e523-4fb5-88a7-72a3e319f0ed",
          "name": "did:invalid"
        },
        "response": {
          "id": "28e5ebc4-9766-41ce-b97c-f8625be1542e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e7a6f8-e523-4fb5-88a7-72a3e319f0ed",
        "cursor": {
          "ref": "1b1daee1-0aa6-421e-afdc-84e896e549f5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a03e2eec-2b41-48fb-a4bf-e0d24d2b8f14"
        },
        "item": {
          "id": "f7e7a6f8-e523-4fb5-88a7-72a3e319f0ed",
          "name": "did:invalid"
        },
        "response": {
          "id": "28e5ebc4-9766-41ce-b97c-f8625be1542e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38495e89-aeee-48d9-8803-446063a84b63",
        "cursor": {
          "ref": "880e2aec-17c1-41fe-a700-48d55b3addf3",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4f86065b-1907-46cd-b6be-60d8718e50bf"
        },
        "item": {
          "id": "38495e89-aeee-48d9-8803-446063a84b63",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6f5fcf47-dde1-42fe-82db-c3d282ae20d3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 165,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a68d72-b157-42f8-8096-e93deacee471",
        "cursor": {
          "ref": "8d11a291-87f2-432c-85d2-2e602f877f21",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ee2e3efb-7ac4-4805-9d64-6a27a2c1f2f9"
        },
        "item": {
          "id": "29a68d72-b157-42f8-8096-e93deacee471",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "603623a9-782f-48a8-aa2b-088720849955",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a684199-dc47-4581-b78c-58394dae2eaa",
        "cursor": {
          "ref": "b49b432b-9374-4ecb-a0d1-4c08f3776ef4",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0b4ef378-12a6-4a71-8182-57b3237d267f"
        },
        "item": {
          "id": "5a684199-dc47-4581-b78c-58394dae2eaa",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6277176b-34ec-4e23-a5f8-4caca45fcbc0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971a181a-c18b-4490-954e-6347cfc9ec8b",
        "cursor": {
          "ref": "8f541d66-221d-4a45-b5d2-eee5837ee2db",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cb956678-0207-46fe-acb7-e2633db941a7"
        },
        "item": {
          "id": "971a181a-c18b-4490-954e-6347cfc9ec8b",
          "name": "identifiers"
        },
        "response": {
          "id": "7751018f-967f-4929-a39c-a3d779171fe8",
          "status": "OK",
          "code": 200,
          "responseTime": 343,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eaa0d0e-25ed-4b31-ae8e-0934f8e05467",
        "cursor": {
          "ref": "4bc5eb8b-2200-4926-b524-9ee49b6840bd",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b384c7d8-b8a4-4734-875f-8f19823c0722"
        },
        "item": {
          "id": "9eaa0d0e-25ed-4b31-ae8e-0934f8e05467",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5dac1d38-47cd-43c6-a60d-45f0b976c70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6b4a0e-8e22-4e61-abb6-b8123cb1eae6",
        "cursor": {
          "ref": "7f115f5e-9e4c-42d7-868d-2b752ec68bfe",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f21ea129-43fe-421d-b68b-6078557e13e7"
        },
        "item": {
          "id": "fd6b4a0e-8e22-4e61-abb6-b8123cb1eae6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c21eff49-a3bd-4bd0-bed0-ecbd9549fcaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bac6708-c470-406f-8ecb-e2e004a87b28",
        "cursor": {
          "ref": "4c528cd1-dfad-430e-9b59-0a3e18069bc8",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5bafbdc5-3c7d-4106-96f6-97949a40d421"
        },
        "item": {
          "id": "6bac6708-c470-406f-8ecb-e2e004a87b28",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "149aab4a-fe13-46b9-aef4-739d65d7cd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ec8a0d-faec-47b2-abcd-c402d02c4d48",
        "cursor": {
          "ref": "ad88b7cf-ad92-42ae-aae3-05739423e39b",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2b1edcdf-c1aa-4578-a13b-e975686e1467"
        },
        "item": {
          "id": "47ec8a0d-faec-47b2-abcd-c402d02c4d48",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2a76418c-eb48-4370-9af8-87142122ae53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91c04b2-25e1-4715-b47a-038cc5b4fa16",
        "cursor": {
          "ref": "aa5ead1c-eaaa-4c12-9157-d1a706d0dd3a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2aa79d94-f9a7-4991-a98c-b42daea6f299"
        },
        "item": {
          "id": "c91c04b2-25e1-4715-b47a-038cc5b4fa16",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d9382705-29d7-4845-81d0-9fd73dfe657c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac48b1de-78cb-4751-8741-e772845eb933",
        "cursor": {
          "ref": "01aa95e2-36e5-447b-bdc7-df9c96536db5",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2c3b3b32-1d06-43ba-a68b-bcb8a3f852c4"
        },
        "item": {
          "id": "ac48b1de-78cb-4751-8741-e772845eb933",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b2224b4e-bd33-4d0c-9044-95338c25c8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f36d56-40d1-47b3-b60a-e640d3dd34d9",
        "cursor": {
          "ref": "238f42e0-cfb7-49f4-828a-e445b6927837",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6f69d0fb-7f13-4830-b205-3d7c88a50cfc"
        },
        "item": {
          "id": "e8f36d56-40d1-47b3-b60a-e640d3dd34d9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "29a1d288-6246-427e-bf78-1617309afa8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849ad583-e92a-4676-b9c9-2b74a37abe93",
        "cursor": {
          "ref": "a89663b4-f3a5-41d9-9f34-8b1729f381cd",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1e2b289e-a0a7-4fbd-a277-b903a085fd71"
        },
        "item": {
          "id": "849ad583-e92a-4676-b9c9-2b74a37abe93",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d76029f1-2ce6-4d55-890c-060b7077d3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbf5b28-394b-4ce6-8a85-ccaad6147e27",
        "cursor": {
          "ref": "9044b742-d10f-4a04-b913-05707105ee22",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a71faf42-4a5c-446a-90da-f8085dd8d99e"
        },
        "item": {
          "id": "3cbf5b28-394b-4ce6-8a85-ccaad6147e27",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "de38d4de-05ec-47dd-afdb-cc020121fd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfcc1d2-ba67-40a6-904b-4e3ba8d875eb",
        "cursor": {
          "ref": "58100fb5-c3f7-4a0c-a8b0-9396642851a7",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "780ed351-5f00-456f-9fd4-26d6e5900094"
        },
        "item": {
          "id": "fdfcc1d2-ba67-40a6-904b-4e3ba8d875eb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "af465f4c-17a7-45de-8a77-9a4d9eabf2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75ea555-db1c-48cb-b569-3f874dcdd37c",
        "cursor": {
          "ref": "0670ab31-077e-42ac-bafd-ca1ad9d037fc",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ffe23383-f5a6-4757-9a85-4438c0da1c40"
        },
        "item": {
          "id": "a75ea555-db1c-48cb-b569-3f874dcdd37c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a4bc25a4-a8dc-44d6-bdd2-fb4fa5872e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbeba5e-9519-4ca5-bb44-98323fc5044a",
        "cursor": {
          "ref": "d560d99c-cfd6-4136-ac0d-5756069ecb09",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e522f16b-3143-4962-99e3-fc4ccf2bf7c9"
        },
        "item": {
          "id": "ccbeba5e-9519-4ca5-bb44-98323fc5044a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8c203fb3-712d-45b3-8c85-e15c915c91e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9019c3c8-bbf4-4580-a3b9-2d235b09393d",
        "cursor": {
          "ref": "8166471a-e013-44db-995d-05a968879932",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bc0f7f2d-7cea-4b7e-8fac-6b7ec4f13e57"
        },
        "item": {
          "id": "9019c3c8-bbf4-4580-a3b9-2d235b09393d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c8f4422f-80c9-4581-ac06-87937e83625f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26be2e5-7d25-4254-a504-1a6830095444",
        "cursor": {
          "ref": "daad28ae-dcbf-4f89-8a08-f924fab55e2b",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d71676be-abe2-4020-9457-31173b0fac85"
        },
        "item": {
          "id": "a26be2e5-7d25-4254-a504-1a6830095444",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2ae36a08-b97b-43c6-99dc-afe707f70c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1d97b7-d1d8-4b34-a9d7-9ede9606ec8e",
        "cursor": {
          "ref": "9c413f2e-e4ef-4949-aa83-b810b26c7c76",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1cc403d7-4e49-4325-ab3f-51c37bf679ec"
        },
        "item": {
          "id": "ba1d97b7-d1d8-4b34-a9d7-9ede9606ec8e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ee3eef1d-9da0-4381-af73-dd469c23312c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ed5048-5912-4152-acc6-5242c21aa705",
        "cursor": {
          "ref": "d4508d8b-90aa-464c-b9dc-d922105c8e67",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2761dc4e-b187-4509-9c4c-c5aef4a40af8"
        },
        "item": {
          "id": "a7ed5048-5912-4152-acc6-5242c21aa705",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e7b76bc6-c6db-48c2-9b61-b61157c6d1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a71dafc-5790-41ea-94b2-2a169ead585e",
        "cursor": {
          "ref": "157758cc-2f3c-4983-8db0-b3f2a7d8baee",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c72b5237-e867-4cf9-9982-ac8cf53844e0"
        },
        "item": {
          "id": "0a71dafc-5790-41ea-94b2-2a169ead585e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8c64b72c-b536-4e31-ae15-1ce01bd54905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f759954-188f-4916-8be7-e40abd1b6d86",
        "cursor": {
          "ref": "3c0e452a-1cd5-4cde-ba3a-76638fc0070a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8be30f6a-81c0-435c-a490-5a443402dcc4"
        },
        "item": {
          "id": "4f759954-188f-4916-8be7-e40abd1b6d86",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a00e0293-794f-4abd-8501-2daca5ae8cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d6c3cb-bbed-49ae-abb2-a3204c3e2ce3",
        "cursor": {
          "ref": "a128087c-b254-4d86-869a-8dc60af9c280",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "62a1ca14-4ec8-4863-b99b-d4ac55216273"
        },
        "item": {
          "id": "86d6c3cb-bbed-49ae-abb2-a3204c3e2ce3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b21151b0-5b0a-42dc-8e4c-06b90d3bd540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b5859a-f90e-4fc6-912d-73b678820554",
        "cursor": {
          "ref": "a1cac635-b172-4b20-8df3-2c6d6dff2f06",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1b50627c-d425-4041-aa05-e4cc5c20574d"
        },
        "item": {
          "id": "44b5859a-f90e-4fc6-912d-73b678820554",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d751a71f-2e09-4114-b83b-b6afcbbdca70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bd3ee8-feba-4c20-a768-ce27d51b0150",
        "cursor": {
          "ref": "f6cdd07a-8c1c-4209-91c7-39236ca52594",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c3375187-64e2-43f9-a39f-5150aace31f9"
        },
        "item": {
          "id": "d4bd3ee8-feba-4c20-a768-ce27d51b0150",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "184efb94-e9c7-46a4-b8d3-98c1fc5ea9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9788eb-c51b-41d5-8cb6-b04d69a76df9",
        "cursor": {
          "ref": "53d2dc2f-63d8-49b5-9e53-239384414c25",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c1f95eea-703f-4797-aece-6a7999cb4116"
        },
        "item": {
          "id": "5a9788eb-c51b-41d5-8cb6-b04d69a76df9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6b302965-5dd9-4b8e-b982-a5ef23c982ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42a81ee-d2c8-48d8-b09c-746bcd9b6ac3",
        "cursor": {
          "ref": "4de5e11a-da5c-416d-b74f-8d39b953ebb1",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "39948c37-e69c-4bbf-9bec-dde968c9609b"
        },
        "item": {
          "id": "d42a81ee-d2c8-48d8-b09c-746bcd9b6ac3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7bd93953-e82b-4eca-ac7e-780441078ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03400ea1-a7ea-4259-ac3b-de9631861643",
        "cursor": {
          "ref": "389b16ad-3fa9-4b95-b38f-9891338227f8",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0ea36388-1f4d-4ec9-87de-3224414ec519"
        },
        "item": {
          "id": "03400ea1-a7ea-4259-ac3b-de9631861643",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b210d11b-ab3a-493c-aa4a-8e083b007c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b13b99c-4d51-4db6-aa4b-60997f5fae83",
        "cursor": {
          "ref": "9cb76cd6-0385-4e32-88f1-ebda454a3a21",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "25f526ae-c75f-490c-bdc9-66691b31a6a3"
        },
        "item": {
          "id": "0b13b99c-4d51-4db6-aa4b-60997f5fae83",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2ee05195-0ad6-4a35-9b6d-4e48fdd21337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75840a9b-9759-4b57-99f9-c24524a91012",
        "cursor": {
          "ref": "79dfbaaf-afbb-4a4d-823b-fe3c16a6b9e5",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "07ee547f-4d8a-4e23-8afc-e2b769855d00"
        },
        "item": {
          "id": "75840a9b-9759-4b57-99f9-c24524a91012",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b915a582-1810-4027-a272-9792cad685df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af60325e-5f7d-4535-ba1b-b485dbf0972b",
        "cursor": {
          "ref": "8955ed95-3192-4349-9c97-37a9a6e6754d",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "04670f76-beb0-4405-8221-f48693010da6"
        },
        "item": {
          "id": "af60325e-5f7d-4535-ba1b-b485dbf0972b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ba162187-5cf7-4442-99f6-c222a6cae205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6276bf3-c5a8-43d2-a49b-3774ebd21da1",
        "cursor": {
          "ref": "19e6b924-2407-45ec-ac20-642f13e3e8bf",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7f7df4db-e9ea-4283-8f33-1278dc10989a"
        },
        "item": {
          "id": "d6276bf3-c5a8-43d2-a49b-3774ebd21da1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e1d34973-7f28-4547-8664-54f374c77cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab92fdc5-6189-4270-a54d-93dbbea13809",
        "cursor": {
          "ref": "7367294d-4cda-4f6c-beda-52ef28fa8432",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "080fe7f1-e8c7-4bc0-8750-905b8d59d5f2"
        },
        "item": {
          "id": "ab92fdc5-6189-4270-a54d-93dbbea13809",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a909b2d6-c07e-4520-8825-02b6d5c1d644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2cc22d-2d9e-4340-baa0-7d6b6cf3002e",
        "cursor": {
          "ref": "d3b68697-f23e-4a47-99ad-8f1d78bb025e",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c9a1c95c-13a3-4d24-98f1-d4cb3b87a12a"
        },
        "item": {
          "id": "9c2cc22d-2d9e-4340-baa0-7d6b6cf3002e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e6017b14-2c7d-484d-a2b9-d5e71666e4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e68843e-80c1-4f6f-bd7b-aa4767204c32",
        "cursor": {
          "ref": "5d5b9b7f-0a71-4388-9c78-4ec86b05ae7a",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2b0b77c5-5721-4c14-9a6c-0930c7e850d5"
        },
        "item": {
          "id": "6e68843e-80c1-4f6f-bd7b-aa4767204c32",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f46295db-d0a4-4a6e-88b2-5dd6915bd6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9720645-160f-4622-b6f4-8a8debf93f12",
        "cursor": {
          "ref": "2ece4da0-a5dd-4078-b1ad-f2e0104b13ef",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a0aaaa40-7684-48c0-b245-fac17c732d3f"
        },
        "item": {
          "id": "e9720645-160f-4622-b6f4-8a8debf93f12",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b63b72f3-a8c9-4c58-a182-1270b72ed43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05cefb8-bb38-4e75-bc4e-64b7720a95d9",
        "cursor": {
          "ref": "9e930920-f2ac-4544-898b-e8dc4ebc8bf2",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7f633178-e9f3-4af6-8730-c1f828c9160d"
        },
        "item": {
          "id": "f05cefb8-bb38-4e75-bc4e-64b7720a95d9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b3fbdff7-d326-4b87-8492-d81e3c4bf6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2047c789-5325-446a-b4af-762aa97e7cdd",
        "cursor": {
          "ref": "0260e4a0-069e-4787-a354-cd3503dc9d39",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4c29270d-3251-4be8-8711-f9119087893f"
        },
        "item": {
          "id": "2047c789-5325-446a-b4af-762aa97e7cdd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7c61f752-8dd9-4999-9c34-7a5a6c708d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc7127e-6395-4cb3-8a99-2555678104a1",
        "cursor": {
          "ref": "558c076e-b3b2-4491-ab80-cbdeea05deb0",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "eb3f090e-cc73-45b5-b1fd-279a75d5fa85"
        },
        "item": {
          "id": "8cc7127e-6395-4cb3-8a99-2555678104a1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1d203473-f83c-41d4-8eb0-aad88b8e8920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88599441-8269-4981-abdc-6549993e1aae",
        "cursor": {
          "ref": "d928d5f0-7875-4411-906a-c4875d5aa9aa",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d0e5b97a-d4d3-4c38-9e2d-00093c0b6649"
        },
        "item": {
          "id": "88599441-8269-4981-abdc-6549993e1aae",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8965f4d5-d5b9-4d31-9539-48ad3a033637",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 351,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b5791d-77df-4bf3-8f23-4ddd0aadafca",
        "cursor": {
          "ref": "0678e5da-d36e-4402-82f7-633be4e81bd6",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8cafacf4-9d64-4e4d-848b-6f5bc8bcbe29"
        },
        "item": {
          "id": "44b5791d-77df-4bf3-8f23-4ddd0aadafca",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a87c27f7-12c4-4f45-a060-c6d3caac97c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e47ff9-56a6-48e0-ba0e-b222a8456e77",
        "cursor": {
          "ref": "9ceccd3e-b609-449b-99cb-bcb40163754b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "352e5dac-c388-4cb0-9477-674ad0eadefd"
        },
        "item": {
          "id": "33e47ff9-56a6-48e0-ba0e-b222a8456e77",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1f399f79-3590-4f2b-a885-5515789c2bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e8f2a1-034f-4881-933a-fcfd5cbdfaec",
        "cursor": {
          "ref": "7b9cd504-06b7-4e49-b3a8-89e9ab70bb25",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c12291ce-3143-49d0-b167-9f5cd522cb47"
        },
        "item": {
          "id": "37e8f2a1-034f-4881-933a-fcfd5cbdfaec",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4d6224ee-9e99-4b47-b622-8961455e1e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7816db84-8b2b-42fc-a739-eefde6ca59d6",
        "cursor": {
          "ref": "cf4a95a2-4dee-4ce5-ab4a-56bea0a1f2db",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "86346162-188c-47ed-8266-e79ccbc73a18"
        },
        "item": {
          "id": "7816db84-8b2b-42fc-a739-eefde6ca59d6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "052b6c10-a74d-4865-a099-9af76756976b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f09ff28-d51b-472d-8ea4-87791bb0b263",
        "cursor": {
          "ref": "ac85fd79-1f1b-4d62-b293-264cfe80035c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "773d3648-b330-4b8b-8096-3b52e014e9b4"
        },
        "item": {
          "id": "9f09ff28-d51b-472d-8ea4-87791bb0b263",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c06d85f6-7826-4003-9e14-f0d0fc947c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c73980-b6b7-4ff9-84d7-834436b3930d",
        "cursor": {
          "ref": "55a606ce-7cba-4259-8ab1-477c128e8f26",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "30279b1a-0ca3-49eb-9575-a74760be4d96"
        },
        "item": {
          "id": "18c73980-b6b7-4ff9-84d7-834436b3930d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "37639b1d-9ab1-433a-85d8-545829659219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df17a05-d7cd-4d8e-afdb-2fe5e4901ee4",
        "cursor": {
          "ref": "6afa5f33-ee98-45bb-a565-4846c562f76b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3bda309e-ac0a-42ac-a321-8869ba3d3c37"
        },
        "item": {
          "id": "4df17a05-d7cd-4d8e-afdb-2fe5e4901ee4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "78ed5f18-fb20-49e2-b281-80e135c7a9a2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 330,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfafa89d-38f6-43f4-b9db-e2c319deec75",
        "cursor": {
          "ref": "4fd69622-8596-4753-921d-1540171844c0",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0ca90a53-158b-453b-a91f-af2ac405d701"
        },
        "item": {
          "id": "bfafa89d-38f6-43f4-b9db-e2c319deec75",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d86ca2ae-0061-44d5-a85a-81c56c103dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d71d87-cc4a-43aa-86cb-7924b84d1d52",
        "cursor": {
          "ref": "25531ae3-405b-4494-9b6f-168b559b415c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a2b595df-be71-4cfb-ab13-1276fbc00951"
        },
        "item": {
          "id": "87d71d87-cc4a-43aa-86cb-7924b84d1d52",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cdf0ed02-f019-48f8-97f9-31d86c4684c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682af249-e763-4377-8838-c57f9c1d349c",
        "cursor": {
          "ref": "cdb639f3-2dd0-4415-8953-e2c275f0cc74",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "73e967d8-8e85-40cb-96e7-dd8347e5cc45"
        },
        "item": {
          "id": "682af249-e763-4377-8838-c57f9c1d349c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0cac2851-46e4-480d-a7fb-be743337de9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f71257e-3cfb-49cf-ac07-c8dde603925b",
        "cursor": {
          "ref": "798363d5-7a74-4b78-bc81-aa112a5d3a70",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2a92d7b7-66b8-41f7-8806-73b7b8b4695e"
        },
        "item": {
          "id": "5f71257e-3cfb-49cf-ac07-c8dde603925b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "703bff4f-d61a-437d-9a3e-106f3a316ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc880531-6915-40ac-9337-6f2dcf5bed75",
        "cursor": {
          "ref": "891d1142-462a-48f5-bb98-f9d3b62ed56d",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "02081988-bd78-408c-adf4-cf189d752785"
        },
        "item": {
          "id": "dc880531-6915-40ac-9337-6f2dcf5bed75",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "685936f3-d442-4687-beb9-b0a60eb479e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c98354-5252-4313-9c08-6fef458a3bec",
        "cursor": {
          "ref": "b9d85024-7786-4067-a1c5-540aacae4999",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "626e71c0-69c4-4dac-8fa7-eb908b585954"
        },
        "item": {
          "id": "e9c98354-5252-4313-9c08-6fef458a3bec",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "082ad685-9b19-4ee9-b6e1-58f7e1fc0370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df15edaf-2c09-4097-bbc5-0f7f649a2c44",
        "cursor": {
          "ref": "6be9cc98-520b-48c1-ae56-aba31eb2fd4d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d88523a5-8c3e-4c72-91e7-0297f7b9c083"
        },
        "item": {
          "id": "df15edaf-2c09-4097-bbc5-0f7f649a2c44",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5ab38ed8-36c0-4289-9d1b-063ebf8cda38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6032d4-c782-48fc-834c-7a65d9b75ade",
        "cursor": {
          "ref": "cab13c11-91c7-42bc-af67-1782cad61bc8",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ebaba963-131e-4be9-88df-bbd083a58142"
        },
        "item": {
          "id": "4e6032d4-c782-48fc-834c-7a65d9b75ade",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ac04cb8f-5447-4d25-b1af-d5f0810a5367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf2e833-da7d-4661-a756-3d11468576fd",
        "cursor": {
          "ref": "ae99af4a-7d0f-4daa-a4dd-ccb1ac24ab49",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e910e99a-f322-4a3b-9c07-78bd0ceac473"
        },
        "item": {
          "id": "4cf2e833-da7d-4661-a756-3d11468576fd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5ab01e24-bc61-4614-a6ed-f317113fd459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493b4c86-5295-4ff8-bdf4-61747678986f",
        "cursor": {
          "ref": "ef388385-8e49-4f36-85ef-9d9101d1ef0c",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "354c7262-cbc9-4564-87f7-1a9497e8ec86"
        },
        "item": {
          "id": "493b4c86-5295-4ff8-bdf4-61747678986f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b979d236-1c99-4382-8a6a-d16e732a9af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad29ab1b-8c67-4ab8-9264-80e09a50ae1b",
        "cursor": {
          "ref": "aa5cd165-89a3-4423-83de-7bf25be2adab",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e09f4b8a-72f9-4ce9-8210-3209c6dbb6e0"
        },
        "item": {
          "id": "ad29ab1b-8c67-4ab8-9264-80e09a50ae1b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "158f1f22-299b-448d-a079-1adf84fa3f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e23cbd-a865-4a89-8556-0e80af4175f7",
        "cursor": {
          "ref": "d9798a5f-0ea4-40c4-b8ad-c41505ef63aa",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2fd1c67a-8795-4652-a12e-bf2d969b9071"
        },
        "item": {
          "id": "08e23cbd-a865-4a89-8556-0e80af4175f7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9434a36c-a32b-48e0-a202-635b905e6b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8441404c-2396-482e-90c4-18de88290590",
        "cursor": {
          "ref": "a2455f98-9e9c-4355-926f-6f90fa3b62fe",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e2092a66-4895-4ae7-91fb-aea477faafd3"
        },
        "item": {
          "id": "8441404c-2396-482e-90c4-18de88290590",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1c9460cf-157a-40a0-ab8c-b820a85990a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6090bb5f-08a8-4660-b830-94aacba6f712",
        "cursor": {
          "ref": "121c83cb-ff0a-4e40-bfe6-f0082cbf36cf",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "45e167c2-050e-47df-9c3a-4b7feb1ce194"
        },
        "item": {
          "id": "6090bb5f-08a8-4660-b830-94aacba6f712",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "75602bd3-b17c-4f4c-8411-60c50270fb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5671028e-a94e-44b5-a1ab-2f5be1342ee3",
        "cursor": {
          "ref": "49e2ff5d-997f-446f-aa74-223e6ad9848b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "722d29e1-b08a-4490-af33-b944e3a8127b"
        },
        "item": {
          "id": "5671028e-a94e-44b5-a1ab-2f5be1342ee3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b31bc33c-930d-4e65-bbbc-9ecf4e974a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b14fe6-27f7-402e-869b-5925f5eacaff",
        "cursor": {
          "ref": "df191387-8817-4fbf-a89a-ec615b3ec4ee",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "7effe004-0fdc-4183-a553-346e8338a196"
        },
        "item": {
          "id": "90b14fe6-27f7-402e-869b-5925f5eacaff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8727056f-b50c-4eaa-9490-7acdb56d671c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c02436-8442-430d-b0d6-690acd3ce36d",
        "cursor": {
          "ref": "446894cc-bc0b-4678-a6eb-d576d387fe5a",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3d90d4ec-db41-43eb-b474-08ec2ff3d81b"
        },
        "item": {
          "id": "f0c02436-8442-430d-b0d6-690acd3ce36d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3b3a6eb0-9d6b-4c66-a887-eb5fbdbfca33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77479d8-a1eb-4ee5-aa13-dd2c70710fd0",
        "cursor": {
          "ref": "3f559899-cb4d-425b-a07f-0e671fe7a13a",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "848edff7-0b84-4088-ac2a-fa42b40ed104"
        },
        "item": {
          "id": "f77479d8-a1eb-4ee5-aa13-dd2c70710fd0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0639939c-81c5-4a19-a697-3becf19b63bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61b557a-c6e7-4e3a-a464-5129859c18c8",
        "cursor": {
          "ref": "a9eaf087-9915-4229-99eb-8b14a976404f",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c1279555-f6ee-44b9-9b0c-f6a701e6b092"
        },
        "item": {
          "id": "f61b557a-c6e7-4e3a-a464-5129859c18c8",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5d757931-7c6a-4acf-97b8-db2ff295daf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a910a5-dd6c-4ee2-bd57-8de4f2138be6",
        "cursor": {
          "ref": "d118db51-e6f4-4d22-85b2-61202dc76a52",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2ab74862-dd7f-4b2f-b8e3-9aff59a03fc3"
        },
        "item": {
          "id": "67a910a5-dd6c-4ee2-bd57-8de4f2138be6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "22012012-7ef8-4b7f-bb3a-a1c41beb6d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a94192-4b5d-4d73-a666-f48379950c97",
        "cursor": {
          "ref": "656e2efc-ffb4-4631-863c-3f4f373001e4",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b3354271-9dca-47f5-864b-3eeef6cf04e1"
        },
        "item": {
          "id": "99a94192-4b5d-4d73-a666-f48379950c97",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "67150ca8-ddd4-43df-913b-37d9e15bbeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364ddab3-faf6-4f75-be94-f8ae253f70d7",
        "cursor": {
          "ref": "115c123c-8712-4ed9-8bae-3b381dd506dc",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a95f5e71-54f6-4af4-ba2c-3f63b0882799"
        },
        "item": {
          "id": "364ddab3-faf6-4f75-be94-f8ae253f70d7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "378067aa-bc79-463f-8166-56d8eda50f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a295cf05-2120-4fba-9449-e51e25575030",
        "cursor": {
          "ref": "dd0a8472-881f-4b9f-bbeb-ba42ee2e4cb1",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "aa15b92e-95c9-49ae-bea4-a6362e678bcc"
        },
        "item": {
          "id": "a295cf05-2120-4fba-9449-e51e25575030",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3be0c1d4-77b6-4d67-9483-ed63de6baedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44980bf9-68fa-463b-a38c-6d5610c3aba6",
        "cursor": {
          "ref": "e2b98203-f2f5-479c-96f6-4dcc92154d54",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3cfaec4b-d305-4880-8456-22e5d2bc772f"
        },
        "item": {
          "id": "44980bf9-68fa-463b-a38c-6d5610c3aba6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "29951b17-2155-493a-a3dd-ffc3640ee468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb15177-f916-4798-a127-99acfaef29c3",
        "cursor": {
          "ref": "bb40d72c-4bb9-45d0-9c1c-102df6e7db0a",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "27166215-824e-4540-8d2b-e142ce81f9b7"
        },
        "item": {
          "id": "aeb15177-f916-4798-a127-99acfaef29c3",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "32f5950f-29e8-43e7-b1f1-28637457f9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b857eab2-3153-4cf4-a808-71f83201d707",
        "cursor": {
          "ref": "015ee9d5-7263-45c6-8917-de406601d521",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "226363d0-c0b3-44bf-9de3-d51f39bd5605"
        },
        "item": {
          "id": "b857eab2-3153-4cf4-a808-71f83201d707",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "43a5b1ff-a7c2-44c7-b165-51714865c6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e9b166-c904-42be-9911-7af8eb691fe2",
        "cursor": {
          "ref": "24b7d069-0db7-4bc7-bf73-3daea6f870cc",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5dba0a44-845e-4f23-80e2-058464dcff48"
        },
        "item": {
          "id": "46e9b166-c904-42be-9911-7af8eb691fe2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5cfc4ec1-9f94-4ce7-af74-8b200f8adac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fceae0f6-d791-44c9-91ae-41a534e5b042",
        "cursor": {
          "ref": "74c986d0-b2fa-4c38-869b-83b22b5c2c0a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d25aa93e-63e2-4a4f-8491-7f7f7d54988e"
        },
        "item": {
          "id": "fceae0f6-d791-44c9-91ae-41a534e5b042",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e4d94fa7-2467-4061-8db4-cca557da8313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8f8c83-4d1f-4317-84f9-67bbec5a4dc7",
        "cursor": {
          "ref": "b395876a-7ef7-4abb-b489-918241d93f28",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4cae48f4-5058-41d7-b99c-996580bf959b"
        },
        "item": {
          "id": "fc8f8c83-4d1f-4317-84f9-67bbec5a4dc7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4974f708-ba1e-4b7a-bcfe-b64292be8b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1190139-e626-46c1-b882-5de0f721f9cb",
        "cursor": {
          "ref": "84215e34-172a-4f80-9d67-88ca4119a1ef",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "04173f66-402b-4091-9cbd-65eb52bb25ec"
        },
        "item": {
          "id": "d1190139-e626-46c1-b882-5de0f721f9cb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "409800f4-ffdb-4f19-a59f-4b1f7b9548bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a5060d-c6dd-4036-9359-50ac80437945",
        "cursor": {
          "ref": "8132994b-f6e3-4f9c-a09b-db9f2291b41e",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a3df3310-65df-4dbe-bd14-2a8fc11857fd"
        },
        "item": {
          "id": "83a5060d-c6dd-4036-9359-50ac80437945",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ee35eb66-d9cc-4b4b-b2e4-2a92cd956899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cfc096-cc58-4b06-bf81-e69f11430788",
        "cursor": {
          "ref": "686d7187-1403-4e96-abac-7f664dfd5537",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "13f0c56c-74c9-4ab6-9f33-be96e564bfd0"
        },
        "item": {
          "id": "38cfc096-cc58-4b06-bf81-e69f11430788",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ec8f4d8b-ba64-46ae-b830-e654aecb5b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7674db37-8054-4752-9da8-0d1d6b09d7a5",
        "cursor": {
          "ref": "5cf128b5-f3ec-4a5d-8c95-f5b0a6d67b90",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "42993b7f-cc4d-4e99-a353-c28e4bf9a44b"
        },
        "item": {
          "id": "7674db37-8054-4752-9da8-0d1d6b09d7a5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a9b759a5-d266-4aed-a04b-102d3f4b5bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a5908a-2c16-44df-a73c-376eec5c62b1",
        "cursor": {
          "ref": "21aa51e7-cc33-4c94-9695-c23fe1668d15",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1dfca63c-9de9-4de6-8ec5-24030a61f8ef"
        },
        "item": {
          "id": "51a5908a-2c16-44df-a73c-376eec5c62b1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "eec891cb-9fa0-4d67-b550-829d394a9fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70469e70-9724-4e76-9e0e-dd6c05cfc133",
        "cursor": {
          "ref": "a5681b04-f200-4210-9997-a24ef039fc14",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ce1e2598-cabc-4f63-8c04-44b5533110f5"
        },
        "item": {
          "id": "70469e70-9724-4e76-9e0e-dd6c05cfc133",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "66a076be-895f-4e5a-bbcd-60887a8494ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce974fba-c402-4d44-8f8c-9f7b91195393",
        "cursor": {
          "ref": "010fed90-2fa7-4619-924f-cb08d6d8a5f9",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b6bd97f2-33af-424c-a861-c231e2c096e3"
        },
        "item": {
          "id": "ce974fba-c402-4d44-8f8c-9f7b91195393",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "39c87a2c-fad9-455d-8a11-b34227f0c0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fd7606-b8b4-4260-ad04-78f72200bb3e",
        "cursor": {
          "ref": "a315d6e8-0510-427e-b993-ac793111733d",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "25cbbc62-ebe0-4921-9406-359748f52470"
        },
        "item": {
          "id": "85fd7606-b8b4-4260-ad04-78f72200bb3e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2baacda0-0500-4997-ae48-1fde17b01f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46dabc1-93a5-43c3-a024-75633d0699a1",
        "cursor": {
          "ref": "0874a722-cd6b-4e55-825f-f08ab2d252ee",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "630fcec1-78d4-48af-86d8-b9c9e2c21552"
        },
        "item": {
          "id": "f46dabc1-93a5-43c3-a024-75633d0699a1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "57925556-94bf-40ff-b2d1-8f8a4c2e1309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c58f2d-f194-416b-8e42-787182a46c8d",
        "cursor": {
          "ref": "fddedf54-6ff9-4dd8-b007-4fa7b190402e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6f34a018-1e34-42d8-b56c-88e0dcce4b95"
        },
        "item": {
          "id": "84c58f2d-f194-416b-8e42-787182a46c8d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d49b9a68-3e3d-444e-9851-e7ba96b638a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd4d849-e205-4d79-8924-809d778cfefa",
        "cursor": {
          "ref": "fda2078e-57a6-40bf-9c92-08773d05bf9e",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "85529cca-e802-4a1b-b24a-c0fe0b4222fe"
        },
        "item": {
          "id": "ecd4d849-e205-4d79-8924-809d778cfefa",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "aeebdae3-5efd-4999-903a-9ec21e88229b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c52e878-57ed-45a4-acfe-4a729817d95a",
        "cursor": {
          "ref": "2c4c46e8-d7e3-4679-9956-1f3c3fc6bf95",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7af3fedb-88d8-4f2e-90a0-9a244483d184"
        },
        "item": {
          "id": "1c52e878-57ed-45a4-acfe-4a729817d95a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "542ff98f-bc5b-4297-8847-a373b1f73b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc12c6ec-7dd7-4ceb-9224-b6018e2f3f15",
        "cursor": {
          "ref": "aaf0c6ef-79f3-4965-a32f-b05b39dba77d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "012f1b14-db4d-4d9f-b9e6-568696814cc1"
        },
        "item": {
          "id": "dc12c6ec-7dd7-4ceb-9224-b6018e2f3f15",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f8c322cd-cf45-4e5f-9a80-ac34e0564bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda4f4dd-8407-4f20-96f8-e8f193b5dc28",
        "cursor": {
          "ref": "68968fbe-c652-4207-af55-b8a8089d2d18",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ddd1a465-1508-46f4-b7ef-188049300d7e"
        },
        "item": {
          "id": "eda4f4dd-8407-4f20-96f8-e8f193b5dc28",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "52cc28e2-e29e-4c58-8e8a-f90d29f70ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66790733-d428-41f2-a85f-8b0ecc9465cd",
        "cursor": {
          "ref": "24973ff4-8c06-4b30-b051-19e40b785ad7",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c7912c87-e931-454d-859b-9db509eb962a"
        },
        "item": {
          "id": "66790733-d428-41f2-a85f-8b0ecc9465cd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6c79f7f5-b2b6-46fc-a76a-fcaf0372cf03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06097a2c-60fc-450d-98b4-33836c484e34",
        "cursor": {
          "ref": "1f0de8c4-f780-487f-92ae-3769c94b9b2f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "906ab618-9e3c-4667-ad02-454589b9d56b"
        },
        "item": {
          "id": "06097a2c-60fc-450d-98b4-33836c484e34",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6bca9243-cd10-4591-b118-cd4b97c95244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6141e0-737a-4d13-b9be-a5a1c3a9ac1f",
        "cursor": {
          "ref": "6694fc95-4c4d-40e8-a53e-6a3f4c797fe9",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e3968f43-5b2d-4ac6-b26e-3e30840cb01c"
        },
        "item": {
          "id": "aa6141e0-737a-4d13-b9be-a5a1c3a9ac1f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "25c579b8-f192-4029-bf9a-6a79dbaf6988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a750f983-2ded-47e5-b5f9-93c89a18757c",
        "cursor": {
          "ref": "eae27275-592e-4fbc-b64b-b2d2ebe58f06",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3108aa39-36b6-487a-9225-e8bbf1259583"
        },
        "item": {
          "id": "a750f983-2ded-47e5-b5f9-93c89a18757c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4d703167-6c09-4e82-869a-66ac0bcba8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd10d2a8-bae5-41d1-91f6-7169bd361857",
        "cursor": {
          "ref": "18669f2e-ee7a-4411-867d-fd5cf0d8e719",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "deecc364-fa02-4d56-8a5d-f3eabb263c56"
        },
        "item": {
          "id": "cd10d2a8-bae5-41d1-91f6-7169bd361857",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2f4a79a8-ca18-42c3-a9b1-258fde93e8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1393cbdc-9272-4253-9b53-a674166e5f1a",
        "cursor": {
          "ref": "a6f28020-7237-4441-84b6-7154a2480b8c",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1a7f1b17-4337-4ae2-88f2-fa60b3ebd5aa"
        },
        "item": {
          "id": "1393cbdc-9272-4253-9b53-a674166e5f1a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3e621337-5b12-48e7-9a14-aae8a45bd967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed89699-a0b0-4a74-a5b3-5ea02a508c41",
        "cursor": {
          "ref": "5e890e81-efc7-40b2-a7a1-798c666d965a",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2a17b8ea-0dce-4111-ab78-7b3068214b10"
        },
        "item": {
          "id": "2ed89699-a0b0-4a74-a5b3-5ea02a508c41",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "aebd0406-81e5-463f-973f-6892d8d33b01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d775489-ba9b-40ff-9cf5-6eb7635b0931",
        "cursor": {
          "ref": "5e053928-fcab-45fb-a04b-cdc130880dc0",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a8f3661f-2b9f-4239-82c2-6eb5dfea4ddc"
        },
        "item": {
          "id": "7d775489-ba9b-40ff-9cf5-6eb7635b0931",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "592e674c-b5d4-450e-b51d-8f1fc47fad8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "74810077-49db-4702-adae-bd8e65a082c5",
        "cursor": {
          "ref": "0687c1a5-31ce-4838-a718-278108ba15a8",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0e657bdd-2235-4640-b172-831d3ff77727"
        },
        "item": {
          "id": "74810077-49db-4702-adae-bd8e65a082c5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7c45ea15-62b8-48d4-a905-1528fcbd26fa",
          "status": "Created",
          "code": 201,
          "responseTime": 2900,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f275d4-828d-46c4-93b2-4d3e081c0d02",
        "cursor": {
          "ref": "cb5cef08-e323-4c4a-ab89-50c8621ebd94",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c2596194-7414-4bb2-9f9b-5aa454279c33"
        },
        "item": {
          "id": "c4f275d4-828d-46c4-93b2-4d3e081c0d02",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9e7bc960-516e-42cf-9f0b-02634cb4d25f",
          "status": "Created",
          "code": 201,
          "responseTime": 3456,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ea9932-cec0-4af9-a32e-f5c5d6f69576",
        "cursor": {
          "ref": "76bec08f-c1df-4bd6-923b-1ffd3fc4210b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e96ec50d-1c10-45ea-9f38-1f348ecf1b41"
        },
        "item": {
          "id": "67ea9932-cec0-4af9-a32e-f5c5d6f69576",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5f07939b-4ec2-42e2-93de-d968ecbb4a43",
          "status": "Created",
          "code": 201,
          "responseTime": 2409,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f396c63-cad8-4cb0-8154-ae9e186c408c",
        "cursor": {
          "ref": "51601570-3560-4085-8086-7af8ed43c13b",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fd4a2c2a-d8c6-4039-9a03-cc9e87d99cea"
        },
        "item": {
          "id": "1f396c63-cad8-4cb0-8154-ae9e186c408c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1a87fc16-bbd4-4aed-b985-c160d06427d6",
          "status": "Created",
          "code": 201,
          "responseTime": 2347,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f64b59-3ece-41af-aa82-601068c15b44",
        "cursor": {
          "ref": "63f03eae-be65-430c-8140-e259cd6173d9",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "12939229-a5c3-41bf-a247-e0bc34419ff9"
        },
        "item": {
          "id": "b9f64b59-3ece-41af-aa82-601068c15b44",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1becabf5-9cb9-4d11-8844-f8881877aa80",
          "status": "Created",
          "code": 201,
          "responseTime": 2677,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "42091c57-3202-4acc-b549-8573132df39d",
        "cursor": {
          "ref": "52043053-5d36-4edc-a16e-4ff74399a24b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9c9774fb-2832-4a52-9c29-c557ac79e0da"
        },
        "item": {
          "id": "42091c57-3202-4acc-b549-8573132df39d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "12a6b2f0-37b9-43d4-9f93-2f75a707da89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9195b00f-47d4-4436-a20a-2b98dc28c757",
        "cursor": {
          "ref": "81fa082f-745e-48af-a75a-1807c20d50d6",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b63b0024-b1a5-4fb6-a306-eac54f33b050"
        },
        "item": {
          "id": "9195b00f-47d4-4436-a20a-2b98dc28c757",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6acade0c-50af-4600-812f-b6f29ebd4691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bb1d82-27da-4bbf-94a5-1d9ce38e93f0",
        "cursor": {
          "ref": "7760e3dd-3ae7-4dde-a590-9641691fcf5a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e6fd967f-0b07-4520-8b4a-62da1ee04d38"
        },
        "item": {
          "id": "c2bb1d82-27da-4bbf-94a5-1d9ce38e93f0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "17748e68-bd33-4b73-8275-4b09592d51ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c049d3-200d-4e12-b6b7-ff743ef3c87c",
        "cursor": {
          "ref": "5524a066-76e4-4fb4-89aa-bb419a0e9093",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f5e11a8c-fef9-4888-ab44-b964118585c4"
        },
        "item": {
          "id": "e2c049d3-200d-4e12-b6b7-ff743ef3c87c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0e9097d4-b0ff-482d-b1ef-cbbefd92e298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7debb65b-65a5-4b35-8175-cbdcc0a28496",
        "cursor": {
          "ref": "7304b3da-ef34-4f65-924f-60e0cb6a6a0f",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e8672977-50ae-4ca0-bdbb-a3d0f281a862"
        },
        "item": {
          "id": "7debb65b-65a5-4b35-8175-cbdcc0a28496",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "606d536d-8df8-4015-9e97-58a034ce5bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c289fa-fcdf-4183-88d5-34bca7a58a3b",
        "cursor": {
          "ref": "80a691e0-6f96-4f54-9c07-9bffb2c6d685",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1d1a5b03-9d28-4a63-aca4-adae3c42826e"
        },
        "item": {
          "id": "94c289fa-fcdf-4183-88d5-34bca7a58a3b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "be2ce052-cd0d-4bda-b084-62e325eab35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2507886-d07b-4c7a-a898-bb5bf9c413e6",
        "cursor": {
          "ref": "ce058d88-489c-464f-bb54-b98ef42eb938",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b3bdf0a5-ea2b-4dfe-ac01-a0fa290d2b3b"
        },
        "item": {
          "id": "a2507886-d07b-4c7a-a898-bb5bf9c413e6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4fbe3933-d413-40f0-90fd-014eac03a265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf91134-4a40-416c-917d-659190d16e46",
        "cursor": {
          "ref": "9345403b-6596-4eb0-b472-5eb64ab5178c",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "59c8ca64-df9b-4448-acbe-c9d370408900"
        },
        "item": {
          "id": "0bf91134-4a40-416c-917d-659190d16e46",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "344136e2-d834-482b-adbd-c58b5636e3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce2e6ec-eaea-4329-aad3-72097922f97d",
        "cursor": {
          "ref": "5209c846-c5d7-4bb5-b377-9bc3566cff70",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b5561dfc-0616-42d9-b17a-a972c9934dbf"
        },
        "item": {
          "id": "2ce2e6ec-eaea-4329-aad3-72097922f97d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1b50bc4d-7a0c-4b83-8df1-9a6f27259607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d087062f-a918-413c-b640-8aa6ea761751",
        "cursor": {
          "ref": "c08fa3d9-eac4-433f-a553-d5a84b46a0ab",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bf071b8b-0141-4f09-bda8-fabe58a0b2ff"
        },
        "item": {
          "id": "d087062f-a918-413c-b640-8aa6ea761751",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e978753f-630d-4c99-aef9-a9f1abbe0a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104728a8-221a-4be0-9222-ab7d640c9cdc",
        "cursor": {
          "ref": "cb19d94f-f8e0-40ea-bbb2-3aaed223de83",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9c8896ca-1e92-403f-ab1d-9e88b06aa7a7"
        },
        "item": {
          "id": "104728a8-221a-4be0-9222-ab7d640c9cdc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "400cd065-7f2f-47e2-8826-20e823434fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363c5e9c-2c0d-4e40-bbfb-0fe135127063",
        "cursor": {
          "ref": "8a410f32-3723-4a7f-b070-de54c6305253",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "39041708-c7ac-425f-82fa-ea68ed8ab1da"
        },
        "item": {
          "id": "363c5e9c-2c0d-4e40-bbfb-0fe135127063",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d9d903df-1665-4f14-8735-a1b65e8aa764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "178a04e1-ccac-4c05-ae85-e9c2eb6d26d9",
        "cursor": {
          "ref": "f501702e-96ef-4c23-ba4f-e0ef12b1eabf",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d71aa290-d415-425f-8847-765541fe61cd"
        },
        "item": {
          "id": "178a04e1-ccac-4c05-ae85-e9c2eb6d26d9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ffa3fd0d-22f5-4550-925f-3ab958fee161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474a9a5d-80b8-46f6-ba84-35bf58862ac2",
        "cursor": {
          "ref": "037ae341-5ea7-4778-95e3-6d4ee15270cd",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "aee5face-7e48-4a30-8960-436806e4452b"
        },
        "item": {
          "id": "474a9a5d-80b8-46f6-ba84-35bf58862ac2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7fe85f4d-2a52-4e0e-80fc-880259cc766f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de6873f-6523-4be9-805a-3bbdd0aee779",
        "cursor": {
          "ref": "dbc40cb2-b2bd-4601-9a03-3fdf786b855b",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "21e04b5f-c427-4b26-a248-10041d676e1b"
        },
        "item": {
          "id": "2de6873f-6523-4be9-805a-3bbdd0aee779",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "09964d39-d66a-4546-a2b7-b31405ac33b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a277777-9b36-4547-9afa-6439160bf887",
        "cursor": {
          "ref": "c549d2ee-eb6b-49f9-bc54-4d93369eaa1d",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a1c55ecd-b5b1-4542-9b7b-71bb8fe0c03d"
        },
        "item": {
          "id": "3a277777-9b36-4547-9afa-6439160bf887",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5fd06fa9-ee98-45b2-9c48-f1f28ae562c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da869ba-66b8-447d-8b87-4769e5565601",
        "cursor": {
          "ref": "206a6442-c09e-4252-8fe6-8056fa89bc82",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0d3496dd-2501-4158-b9fa-dcfb5c14d5d2"
        },
        "item": {
          "id": "7da869ba-66b8-447d-8b87-4769e5565601",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f00d7811-e273-42c6-89d1-5dd788734f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c369cff5-d52d-4dfc-b04b-d0360ea3b7a7",
        "cursor": {
          "ref": "2e43b80f-0dc1-43ab-8b9b-a7fd5b8bbe41",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7e9e3c52-cccf-411a-95b5-15df0be97ed8"
        },
        "item": {
          "id": "c369cff5-d52d-4dfc-b04b-d0360ea3b7a7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "31f75778-2c40-4877-a321-4fffb00b7146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9b2aa4-aa13-403d-89f4-3a3f74772dca",
        "cursor": {
          "ref": "74efec2d-e483-43c1-99b4-d412ca3ed071",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ffd100cf-5340-420e-b35d-81926f60b235"
        },
        "item": {
          "id": "5f9b2aa4-aa13-403d-89f4-3a3f74772dca",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0791acfe-2736-4544-8906-bbff722b509d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef8ebd4-592f-4bbf-9b60-4839c950183f",
        "cursor": {
          "ref": "937b785b-d89d-4dd7-9b58-e005e7817a8d",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0a76cc53-2891-4bfb-b080-335b6a1872c1"
        },
        "item": {
          "id": "3ef8ebd4-592f-4bbf-9b60-4839c950183f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "81cd8221-9211-4460-bd80-c36f6674003f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18318e95-0190-46e6-ac40-000610f86d63",
        "cursor": {
          "ref": "5fb8485a-1c9b-4771-8ea4-dac6ea84edcc",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "889bc505-db60-4f9c-86ec-5e1d3e0562b7"
        },
        "item": {
          "id": "18318e95-0190-46e6-ac40-000610f86d63",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b0425cb6-3838-4194-959f-6dc1828a8974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86ac392-7164-40a0-9797-f3184d5f198b",
        "cursor": {
          "ref": "f391f2e1-052f-4473-b9cf-fda44999e816",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "252c4f80-611c-4898-b58b-0d8259526f41"
        },
        "item": {
          "id": "b86ac392-7164-40a0-9797-f3184d5f198b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "58475f01-0c07-4058-acea-a24f6513b779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d2f1ae-df4f-4b5d-8f77-afaba48ca831",
        "cursor": {
          "ref": "f5bb3768-8a02-4937-a956-a93e008a7525",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "381f14aa-9109-4f3c-ab96-88e038ccb3e4"
        },
        "item": {
          "id": "33d2f1ae-df4f-4b5d-8f77-afaba48ca831",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "459b72dc-ebeb-429b-865c-a24fd3780004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52fce24-2d7e-49ca-89bc-262390992086",
        "cursor": {
          "ref": "dd8fac90-34b3-4c9f-bbdb-87e5ad6d95e5",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "551a190b-7d97-4f40-a10a-4a0b4c9b4519"
        },
        "item": {
          "id": "a52fce24-2d7e-49ca-89bc-262390992086",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0ac1c51c-df67-4fac-9e03-0d31cc64c8ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abc4f00-e4a8-4a3d-9b66-11784eb29d11",
        "cursor": {
          "ref": "cbf10ca3-6e9f-49aa-8d97-9d61aefdd8b2",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4b628b4c-7590-4fb7-b0a4-c1c187befea0"
        },
        "item": {
          "id": "5abc4f00-e4a8-4a3d-9b66-11784eb29d11",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "264efbad-a2b1-490a-b3db-b010a3454546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85745772-997f-4074-b970-1c698ba73859",
        "cursor": {
          "ref": "9c11fbb9-106a-4ed3-a723-ebb29a005622",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "26f7c806-6a83-4da3-bcf9-dbf0f90ed7d6"
        },
        "item": {
          "id": "85745772-997f-4074-b970-1c698ba73859",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "35e09106-c54d-49fb-af68-da9d5a23f54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de54ba17-2748-48e9-b888-481c1da78f98",
        "cursor": {
          "ref": "50326dbd-62fc-4b05-b052-53ea0996ac8b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "782e322e-8cd4-400a-8be8-9f2c8c763b14"
        },
        "item": {
          "id": "de54ba17-2748-48e9-b888-481c1da78f98",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8d816733-2d52-4d13-85a3-c59e380d7c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246708ca-35ac-450d-ba41-f50c14daa15c",
        "cursor": {
          "ref": "3cfecfbf-3da2-4b3e-bb60-466d169e4151",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e6933cda-bb48-4117-a363-773f7be39c2d"
        },
        "item": {
          "id": "246708ca-35ac-450d-ba41-f50c14daa15c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "93a8af89-50d9-40f6-8c58-f1a525e72bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96490fc7-b104-43b7-b420-41de20624ed2",
        "cursor": {
          "ref": "ed09b174-3479-4f17-9606-b39edf2fd48f",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "073bb11f-93b5-4af5-836b-ce50fd8a0489"
        },
        "item": {
          "id": "96490fc7-b104-43b7-b420-41de20624ed2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "07c896c9-618f-43d2-813b-fec7fe0b3873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ff4cd1-3445-4b77-8f78-8fb11b1a2c89",
        "cursor": {
          "ref": "74bff81f-d65a-47d4-8cff-2ff17eb0cf3c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1ac08a64-08b1-4043-928a-b6e2a6eafcd1"
        },
        "item": {
          "id": "e0ff4cd1-3445-4b77-8f78-8fb11b1a2c89",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a2570f58-f352-4012-a307-84d73aeeff51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f8df46-f53d-4e9b-8d4d-0ab98bfba4f4",
        "cursor": {
          "ref": "b959a258-66ed-414a-acf6-916eec8bd737",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f35b2ab7-4241-4077-9c66-3a951ed8f065"
        },
        "item": {
          "id": "d6f8df46-f53d-4e9b-8d4d-0ab98bfba4f4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "862c6e5f-e410-44a9-b740-479313957422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c142a7d-fc23-4c13-9cbc-14060fc792e2",
        "cursor": {
          "ref": "cfee86f2-4265-4a50-ab4a-0e7b90dbf86a",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "64b2759f-3ab9-476d-99db-6c6d7a1c5e47"
        },
        "item": {
          "id": "6c142a7d-fc23-4c13-9cbc-14060fc792e2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a8e8ce84-c8dc-4d9f-b28c-07713abbda24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed77f7c8-75f6-4459-9de9-8a6cc54a35be",
        "cursor": {
          "ref": "18e1c434-2b21-4ec9-8365-d2d6482bd3a6",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4d6fa1cd-e4b2-4f34-b29f-d999b5514022"
        },
        "item": {
          "id": "ed77f7c8-75f6-4459-9de9-8a6cc54a35be",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f14b09ee-1fe5-48ab-9dfb-d548b014bac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286b1140-b919-4a9b-9422-d6c4f866c3d9",
        "cursor": {
          "ref": "4f047388-07a5-49d7-8328-3583385dbbe0",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "398c08bc-6fa3-4830-adaf-36070db36d53"
        },
        "item": {
          "id": "286b1140-b919-4a9b-9422-d6c4f866c3d9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c860cb62-864b-404c-b5c9-298277bd3e75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939836be-74ba-4c19-af1e-364e9d12c802",
        "cursor": {
          "ref": "8c6eb4c5-bbe5-44c5-a223-64479fb213cb",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d19ed54c-283f-476a-98fb-9fd040efec96"
        },
        "item": {
          "id": "939836be-74ba-4c19-af1e-364e9d12c802",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "38911228-2fe1-4a8d-be1d-e7efd12caff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd04da45-0540-45ab-8728-efd43e8b686b",
        "cursor": {
          "ref": "e031540c-d29d-42e3-98b1-b8c86ccca644",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "711e5a9a-39fc-41b4-9f10-aec7d596b45d"
        },
        "item": {
          "id": "cd04da45-0540-45ab-8728-efd43e8b686b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "eec23157-884c-4026-b2fb-11c8d8f7925c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2653bb07-4b8e-460b-8290-7f189e9ae51b",
        "cursor": {
          "ref": "a8b4a499-8caf-41e4-badc-82aa39150649",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "67bb6073-655f-4d9f-a4f6-e6606d54da79"
        },
        "item": {
          "id": "2653bb07-4b8e-460b-8290-7f189e9ae51b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0a6ba3f7-b3ec-4964-8792-ce96b19234e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696f18f5-8f5b-4025-9191-3bc22672f729",
        "cursor": {
          "ref": "250fd941-e95b-465b-a331-49474e44a777",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7cbde75a-8c5f-4fcd-88d9-282b1a086162"
        },
        "item": {
          "id": "696f18f5-8f5b-4025-9191-3bc22672f729",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0779ebd2-423b-4531-93cc-c43752209409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f117a38-b756-48fd-a44e-f6b92f05ec3c",
        "cursor": {
          "ref": "1bbae940-20f2-4223-90a1-53277c9c62e2",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "53254063-144f-4a82-ba6d-388114b76a6f"
        },
        "item": {
          "id": "8f117a38-b756-48fd-a44e-f6b92f05ec3c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "96c7f553-45d1-4993-96a0-1a4b4206e623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b2c148-e396-4490-ba72-6dd61511a582",
        "cursor": {
          "ref": "5df479af-3fa9-4e7c-8b0d-7b4245f3186a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a289f873-f008-4249-86f9-14512f1f45ab"
        },
        "item": {
          "id": "00b2c148-e396-4490-ba72-6dd61511a582",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3146ae1a-f7cf-4df4-8eab-f66e297286c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb72f43-7932-4460-abfd-de3626c50fbf",
        "cursor": {
          "ref": "e29ae603-ebe1-4e83-8a15-b5759f37f3d4",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "848c99a6-b8bd-4681-aad3-a46a5aa7e985"
        },
        "item": {
          "id": "4fb72f43-7932-4460-abfd-de3626c50fbf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e0b7d26a-3c82-4d9f-89fa-723169800f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d5432d-f8f0-4827-ba62-780844438a20",
        "cursor": {
          "ref": "c673009b-80fc-43db-862e-8928d7e3a15e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b940c994-dc14-45aa-81cd-15b1e1ebad1d"
        },
        "item": {
          "id": "49d5432d-f8f0-4827-ba62-780844438a20",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c68cd2c9-067d-4a98-96fe-08aef3c1d3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df31f76-6ed6-4223-8a52-2551f4dfbca8",
        "cursor": {
          "ref": "88a2b1bf-eb24-4e91-9228-52b67bd0af13",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b55887eb-9159-4b5f-9f12-6ed690e5d970"
        },
        "item": {
          "id": "7df31f76-6ed6-4223-8a52-2551f4dfbca8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0accff74-46ac-4b48-9f94-891408207064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403567f0-224e-4499-a600-14999ea14827",
        "cursor": {
          "ref": "7b14c230-f585-4e13-861b-0810ddf00d63",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d02ad628-dd60-4a26-89a1-74d1d74420a8"
        },
        "item": {
          "id": "403567f0-224e-4499-a600-14999ea14827",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a8363749-9e75-4832-bd5e-6ab8c746b502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e744a037-a347-49a3-b876-292b1f11448f",
        "cursor": {
          "ref": "55a7fdab-8a2e-4a84-8e92-2802d447a3db",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "11202cbb-56b1-401a-8478-568cb672fbbe"
        },
        "item": {
          "id": "e744a037-a347-49a3-b876-292b1f11448f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "300e2f8a-4313-44f0-a581-058d3510bb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6800159f-74f3-46b7-8418-0f2caf6a6516",
        "cursor": {
          "ref": "5f9b3b0a-be77-4420-bc61-1a343a7148e6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f5babdc2-5517-4d25-8ce9-2b49990ea5cf"
        },
        "item": {
          "id": "6800159f-74f3-46b7-8418-0f2caf6a6516",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4c6bf2e8-a914-4c8c-a309-0d088d38e0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d5a486-c113-4ee1-bae3-e301bb32eaa8",
        "cursor": {
          "ref": "78092b40-4115-41d1-88b9-0466a86bb642",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "63b4f418-f6a7-4fd6-b0a5-8b532b0f30eb"
        },
        "item": {
          "id": "b6d5a486-c113-4ee1-bae3-e301bb32eaa8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a10e8ba4-afac-4b34-934d-f2db1c60361f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4b992e-a198-42ff-b5c9-ff56bfefdac8",
        "cursor": {
          "ref": "b25a2a32-1829-4b1f-b5e4-0dd05d78d0ef",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "541b667a-14d6-45e0-8d4f-943aee2720ca"
        },
        "item": {
          "id": "ff4b992e-a198-42ff-b5c9-ff56bfefdac8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3eef39da-dd76-4773-9f97-cdabd3975b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23358372-9eae-4496-aef4-9b80b8829212",
        "cursor": {
          "ref": "d1a89a13-862a-4751-8ef2-4236b686d6ff",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c23dcd5a-3e69-4c4c-9018-ca8cdfb393a1"
        },
        "item": {
          "id": "23358372-9eae-4496-aef4-9b80b8829212",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c007b34d-5fa5-426d-ad74-24c45a3cf606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168322f2-4b18-4ba7-af18-3d764534d276",
        "cursor": {
          "ref": "f6ccaf06-c72d-4531-966c-852e6e804a8d",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "487fa1d9-38ac-4300-b7cd-cf580ffa5a5f"
        },
        "item": {
          "id": "168322f2-4b18-4ba7-af18-3d764534d276",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bac18534-f8b0-4faf-bd25-e1a9d72bcd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f22a69-a3b4-406f-bc81-fb0e532ae815",
        "cursor": {
          "ref": "6a5a6ae5-25d2-4ec4-be45-e6d8275390b3",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "aa10442a-45bb-41b4-8515-f4eb2ab5e2bd"
        },
        "item": {
          "id": "92f22a69-a3b4-406f-bc81-fb0e532ae815",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "20d20be7-b177-4032-9c21-856e902b5a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1ed00e-275e-4af9-95e4-418fa84572ba",
        "cursor": {
          "ref": "ce73e5bb-24d0-4b00-9bb0-fb2e04a200e1",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7ced975a-eddc-4fcc-8b03-23119f2f25b2"
        },
        "item": {
          "id": "dc1ed00e-275e-4af9-95e4-418fa84572ba",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "66a352cf-1733-4d7e-88ae-675dbda87adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a96414-9252-4bd7-abbe-5450286713d2",
        "cursor": {
          "ref": "6022e352-feb2-44c2-9582-d34e434fa518",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "12921602-9800-47a5-86b6-b52ede7830fa"
        },
        "item": {
          "id": "a1a96414-9252-4bd7-abbe-5450286713d2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c714bd1a-cc2d-4973-a005-cfb37bbcda36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d211604d-5573-4594-8342-0a3d04f43742",
        "cursor": {
          "ref": "ea246ef5-f56b-4db9-8555-b886eef28914",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8b7c277e-7836-4c65-a18a-b0f3b028caaa"
        },
        "item": {
          "id": "d211604d-5573-4594-8342-0a3d04f43742",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2ff3f715-479f-4353-af80-d4a6bcedc36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae918acd-2ef3-487d-b3be-53653c102fcd",
        "cursor": {
          "ref": "faa534ad-491c-41a9-8e62-3c8eda3146d8",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7d83e6c0-b3fd-43ae-94d3-c1e958f4b4ed"
        },
        "item": {
          "id": "ae918acd-2ef3-487d-b3be-53653c102fcd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "67dc2a3d-9041-41e2-9254-10c87f88eafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4997653-7980-443b-9dfe-2dd3b6ee94b4",
        "cursor": {
          "ref": "a8990964-96b4-4c97-b9f5-d2fd5d25a3c1",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "66e1bece-e840-4d80-88d1-35f9c57bcc16"
        },
        "item": {
          "id": "d4997653-7980-443b-9dfe-2dd3b6ee94b4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8e92fb8e-3a3b-4227-ab8d-cf308720ae65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88074819-dfe7-47fb-a5eb-f95dcb2d9d34",
        "cursor": {
          "ref": "0f34e10d-064a-47ef-8b1c-7bf21824baeb",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "644c14e4-ffb7-4fa6-ab16-65180a54efa0"
        },
        "item": {
          "id": "88074819-dfe7-47fb-a5eb-f95dcb2d9d34",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "253347ba-9cdd-44ec-9d8d-d16500939b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4578c5dd-b51c-4d29-8843-010553b67f37",
        "cursor": {
          "ref": "4a49500d-4128-443e-8ba1-31e995f176b4",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "11dad1fd-3a38-4522-8f0c-1e05519e79c7"
        },
        "item": {
          "id": "4578c5dd-b51c-4d29-8843-010553b67f37",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "80975cff-062f-418b-abf2-5f01972ca4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bc3c3d-6b77-4800-8948-2cbb83629532",
        "cursor": {
          "ref": "0e2f8422-fd57-4fec-ae65-14eb6d487e29",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "83514456-4fae-4afc-895b-1da8853f8edb"
        },
        "item": {
          "id": "c5bc3c3d-6b77-4800-8948-2cbb83629532",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "852e1e40-14da-4cf8-817b-50847530c77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c977f8-a50e-4354-b220-420ebe2cd530",
        "cursor": {
          "ref": "fbf19bd2-8241-47ea-84be-a4a5263d1885",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5d95e907-40f9-4115-b2e6-47616f6f6fb7"
        },
        "item": {
          "id": "70c977f8-a50e-4354-b220-420ebe2cd530",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b5bcd772-e976-423b-9f29-5cabb790c33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e39b7f9-f735-40f2-9f3f-de2f00ce69fc",
        "cursor": {
          "ref": "371abd2b-426e-418a-9e98-539098a9516a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "66d5ab57-b312-423b-aff3-e34a3d36828a"
        },
        "item": {
          "id": "3e39b7f9-f735-40f2-9f3f-de2f00ce69fc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "556d5d3f-b9b5-4fd2-b565-ef4b315876ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3661fc9-1ab3-4879-85f2-70ba3865cc3b",
        "cursor": {
          "ref": "f47103d4-22c8-4744-95c8-d6dd6de52212",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "31e17572-ff47-436d-9f75-6d615e7ab482"
        },
        "item": {
          "id": "e3661fc9-1ab3-4879-85f2-70ba3865cc3b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "43f99578-9feb-417c-bc9d-a271e1af36d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63078f35-cf99-43d2-9edb-ddad97f86b9e",
        "cursor": {
          "ref": "f6daab96-8339-4189-9f3c-870cf7339362",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9af5f07a-4051-4e4c-b489-23437d6a04bf"
        },
        "item": {
          "id": "63078f35-cf99-43d2-9edb-ddad97f86b9e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6d2529ff-331d-4859-ac00-3d0ffcd620d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659d488e-d2a1-438f-a8f9-085777dadb32",
        "cursor": {
          "ref": "25a6a20f-50ba-467a-b10b-21b7a5e6d659",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4c1849e6-8471-4cd6-85ce-1327a4c98de3"
        },
        "item": {
          "id": "659d488e-d2a1-438f-a8f9-085777dadb32",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0a077b07-b305-4c1f-a0fc-fb167e8c3cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcdcfc0-30ab-485b-a7fc-72ebf872d033",
        "cursor": {
          "ref": "0c6b1001-e276-4162-8839-045aaa5284e3",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2f330de4-add5-414a-be0e-25a9d268501a"
        },
        "item": {
          "id": "afcdcfc0-30ab-485b-a7fc-72ebf872d033",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "253d67db-4c2d-4861-a91b-fb0070e554b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f41af26-0ebf-4540-a810-2a1eb8845845",
        "cursor": {
          "ref": "21e9c54f-9408-4428-8409-556804d8203b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2d101989-9d6a-48dd-96ec-e92588493a4c"
        },
        "item": {
          "id": "6f41af26-0ebf-4540-a810-2a1eb8845845",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "84067655-d006-4a8a-b47f-15e79667bbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6306efdb-c09f-4bb6-bb2b-698c0d4ba983",
        "cursor": {
          "ref": "db5bf581-622a-4707-87d8-484803797733",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8b45b77b-0647-46c2-936e-48f29211095e"
        },
        "item": {
          "id": "6306efdb-c09f-4bb6-bb2b-698c0d4ba983",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d09fbaca-62be-4d86-8dea-ab83813dc2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c85469d-2a01-46fd-af9b-176ad20d0e51",
        "cursor": {
          "ref": "c04f8173-d205-44e2-88e8-eee2dc28ebd5",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f927979e-4960-4fe9-bf49-3f37b79864e4"
        },
        "item": {
          "id": "9c85469d-2a01-46fd-af9b-176ad20d0e51",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "5d8b2fa6-beab-45eb-892c-a82ea8f4b3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57206f38-6c92-4dca-9845-a590c1865361",
        "cursor": {
          "ref": "0408c505-b74c-4bb6-b2e0-aceb1c112826",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a3ce7227-4c7f-4eba-a1bb-631aba68f18a"
        },
        "item": {
          "id": "57206f38-6c92-4dca-9845-a590c1865361",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5db875a9-a086-42f7-8ffb-f1bd7bf97296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d402e40c-763a-4c55-a64b-1c393d730d45",
        "cursor": {
          "ref": "671201ba-58c4-48b1-9a2f-46c76fec6d66",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cab9b9e8-54e0-4cff-92a5-ba0ebee8e332"
        },
        "item": {
          "id": "d402e40c-763a-4c55-a64b-1c393d730d45",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e0980119-8dcb-4239-834e-d72b0f667c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a2342f-ddcf-4d14-a11e-517dc54a26cb",
        "cursor": {
          "ref": "aa8dee01-351d-4476-b8fb-f1858c4b81ba",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "21aa678f-c6d3-4e01-8c76-41f67cb63fd5"
        },
        "item": {
          "id": "e9a2342f-ddcf-4d14-a11e-517dc54a26cb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3b84c270-43e2-406e-ba20-c547960fdf3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64c987e-a026-489d-bf3a-d8bb77e40928",
        "cursor": {
          "ref": "efcc59db-f3d0-40a9-bcac-687be621bae7",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e6835989-aff4-412d-a6d7-96f53dc77a6b"
        },
        "item": {
          "id": "b64c987e-a026-489d-bf3a-d8bb77e40928",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "897c01bb-fcef-4079-a5f5-3dbb4fb62bb7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a651cb1a-6a26-4664-8af8-a7f2a60c5d0e",
        "cursor": {
          "ref": "76603308-be7b-46c4-ad00-b5a3fddda8d2",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d70794de-7cc5-46b6-838d-351c3e94527b"
        },
        "item": {
          "id": "a651cb1a-6a26-4664-8af8-a7f2a60c5d0e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6f966160-28e7-431a-8c49-527fd65a8ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fcd97e-464d-4edf-8760-ceaa0477366b",
        "cursor": {
          "ref": "2e4858c6-fd8f-453f-8084-0602efc64fb7",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "646d1df1-0210-4c7e-be96-36e515b40479"
        },
        "item": {
          "id": "97fcd97e-464d-4edf-8760-ceaa0477366b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cebccf9b-e690-488d-8496-ac84b278c772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1310128a-872b-4075-b3fa-4643af60db9b",
        "cursor": {
          "ref": "59fd3a0b-ad46-4d8e-9ed1-885c8d166485",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0cc3bb83-42b4-420d-b381-0425d9079050"
        },
        "item": {
          "id": "1310128a-872b-4075-b3fa-4643af60db9b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bce639f3-3901-4f23-80c6-a7d6e84bea41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7f6bab-c2d4-4666-962e-1a60c7af58c3",
        "cursor": {
          "ref": "4c90a188-cc37-40bb-b03f-ec0b13acff17",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "55b8be1f-f55d-4c0b-8048-09990a5fb149"
        },
        "item": {
          "id": "4c7f6bab-c2d4-4666-962e-1a60c7af58c3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "06d63868-c622-4d7b-867b-c05fb4838df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b71370-1a66-465a-a82a-f39f515dfe96",
        "cursor": {
          "ref": "dce162a2-f8d1-4edb-a242-afaf20ee50e2",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "209e0ef7-da17-473c-936a-600af7f62598"
        },
        "item": {
          "id": "d8b71370-1a66-465a-a82a-f39f515dfe96",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1bbc8afe-6a72-41a4-a78b-bdc431ec558d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576992f9-4db8-4c49-b74d-47fcd5427401",
        "cursor": {
          "ref": "7a158f41-8057-4ef4-afaf-4a0aa625456c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "be0aa363-c000-4965-b3bd-0b02f0ffc053"
        },
        "item": {
          "id": "576992f9-4db8-4c49-b74d-47fcd5427401",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "62704a8e-725a-4e9d-a2d8-17d20191f85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430f8be0-a622-4893-8ae8-0f57d38126a2",
        "cursor": {
          "ref": "52a67a98-c561-4688-a087-58f992807634",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4acadc54-c704-4a27-9ea5-5235c351f3b2"
        },
        "item": {
          "id": "430f8be0-a622-4893-8ae8-0f57d38126a2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1a514ce7-0bd1-40e1-bf22-cd2a3b23ba78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666b975b-7d45-4a14-8606-79f51773dad5",
        "cursor": {
          "ref": "63d82bca-5efa-4921-a588-a11bef571948",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "25062adb-663f-42b8-852f-3171bce6e867"
        },
        "item": {
          "id": "666b975b-7d45-4a14-8606-79f51773dad5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "05b2ef14-1f6e-4fe8-9ae9-d1f3902a6d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f05d5a-7c8b-4bca-802e-c9c80078a69d",
        "cursor": {
          "ref": "5bc39958-73bd-43f8-a1e9-43755476d3f9",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "140153e3-18a2-4140-a925-3b2bd77aa7bd"
        },
        "item": {
          "id": "f5f05d5a-7c8b-4bca-802e-c9c80078a69d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0f11afbc-3c23-4bfd-8359-001917209dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a338c6-2aa5-479c-8d89-4745c0031b01",
        "cursor": {
          "ref": "3a80dacc-c02c-4a33-96c8-aebeeb1e089c",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0e250f12-3c37-4dd2-b5c3-0da2d129356d"
        },
        "item": {
          "id": "a4a338c6-2aa5-479c-8d89-4745c0031b01",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "afa1e28c-686b-4a39-8241-24c5872b675a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2b5821-16de-4ac1-988b-cb9e39364322",
        "cursor": {
          "ref": "7e4238f6-9603-424e-98bf-d3ff4642dc66",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3dd62b17-d2f0-4649-a565-af8e3e2e2fd5"
        },
        "item": {
          "id": "4f2b5821-16de-4ac1-988b-cb9e39364322",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f53e4098-c0bf-4a9a-bdaa-028f037495e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd752c44-a316-4472-a37e-cc9cbfce73c1",
        "cursor": {
          "ref": "5d4bbc90-0c62-4338-9339-46553edbaa8a",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ba011376-55ee-4544-a75d-89c15b89309b"
        },
        "item": {
          "id": "dd752c44-a316-4472-a37e-cc9cbfce73c1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b08160ea-27bc-4e5e-a8b8-03b73c8d9d76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c721a6a1-3cf6-4251-9773-c45bef6f83ca",
        "cursor": {
          "ref": "8147602c-cbec-48f0-8072-ae2fe9ac2b61",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0fd3ec84-9f4f-486e-a7bb-8bc30fe327e2"
        },
        "item": {
          "id": "c721a6a1-3cf6-4251-9773-c45bef6f83ca",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ea25a265-7816-4291-bce0-b7e5d1350bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257913b2-342d-4c7b-84e1-66e4645c6c9c",
        "cursor": {
          "ref": "7cff0800-3b0a-48dc-83b1-ebd1fdeb20b6",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bcf20738-1a3f-411a-bebb-74b71626a566"
        },
        "item": {
          "id": "257913b2-342d-4c7b-84e1-66e4645c6c9c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3b6c6613-4719-4343-bac5-c506ef968cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e02348e-c7a8-44ed-8e3d-22dc92cac786",
        "cursor": {
          "ref": "cfc73203-469e-487d-a4ec-8c210157f761",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "65bce482-ba72-4528-86f0-80b29155734e"
        },
        "item": {
          "id": "4e02348e-c7a8-44ed-8e3d-22dc92cac786",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ad4b2676-9008-4b9b-b485-6e862db255db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd12449-cf4a-4f09-b90d-d3882276ef85",
        "cursor": {
          "ref": "4173925c-409f-4265-ab90-b92b7c3c4959",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d5acf177-9e50-418c-b101-bbf8d9d308a4"
        },
        "item": {
          "id": "ecd12449-cf4a-4f09-b90d-d3882276ef85",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2e40c905-14bd-4f40-8fe5-b02add6554c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f12c86-d7f0-43fa-8a5a-f959fcf31e25",
        "cursor": {
          "ref": "8581aef0-174b-47fc-b28d-958784d605bc",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4e729c3f-4f20-434a-9ff1-a59a3ec7ab52"
        },
        "item": {
          "id": "23f12c86-d7f0-43fa-8a5a-f959fcf31e25",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "027ec6a4-eda9-4777-9b2e-a6009ce9caec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b9c284-3acc-4084-9ddd-99dc06b17588",
        "cursor": {
          "ref": "46d0cf31-aa9c-454e-bbac-d00c709320bb",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "efdafc67-e0cf-40a8-bff2-3ed0760a8d04"
        },
        "item": {
          "id": "18b9c284-3acc-4084-9ddd-99dc06b17588",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "70c623de-f5eb-41bf-aa92-c4c8db403e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33facac-ce0d-4e53-8f87-b30be1860972",
        "cursor": {
          "ref": "69eb2178-1ff2-4a57-9c92-919b3a52f3aa",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "418bd041-b0b6-43c9-b19b-95bba985a720"
        },
        "item": {
          "id": "e33facac-ce0d-4e53-8f87-b30be1860972",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9929e68f-470b-4663-8e05-ad7203dd0543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8eeaf6-2088-4d4d-a3f0-1c6d94dc8887",
        "cursor": {
          "ref": "c65ddd26-7ab1-4ecb-9dbf-bccb78b3fb5b",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b065f4d6-fb5b-41d3-8ec3-63d4e9a0a22b"
        },
        "item": {
          "id": "ce8eeaf6-2088-4d4d-a3f0-1c6d94dc8887",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4b287b9b-87bc-4262-800d-23b0246ba078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58215a5-3817-4567-a688-4aac0f065756",
        "cursor": {
          "ref": "2175e751-7356-4484-966d-62bd4a93e439",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ba27d68b-a555-45c8-b11a-017d39f7241c"
        },
        "item": {
          "id": "d58215a5-3817-4567-a688-4aac0f065756",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5c3a4808-b2be-4a5b-b5cc-2203da4a9e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc09f6b-5ea4-4878-a6be-5da7e1ba493d",
        "cursor": {
          "ref": "2506074e-c624-496c-880f-f4a4f2ecb4a5",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "680c2429-c513-47d9-9cc7-0b3b3e4e0648"
        },
        "item": {
          "id": "9bc09f6b-5ea4-4878-a6be-5da7e1ba493d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "42e504fe-e50e-46e3-a906-37b11de33585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a03084-40a5-462e-9c83-169f85330c8b",
        "cursor": {
          "ref": "e1a942b8-3c7b-428f-bcfa-9e50483a72de",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "eb726227-a39d-4484-8d58-a4958d6ef9c6"
        },
        "item": {
          "id": "10a03084-40a5-462e-9c83-169f85330c8b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ec94c1a4-6e51-4656-ba26-1d9601216863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beac6ec5-332a-45be-815c-4f3681482eaf",
        "cursor": {
          "ref": "473a5658-998f-4a5f-a689-daf8f4f399b4",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "19ecae8c-b15e-41aa-b30f-7240f5f4c2c0"
        },
        "item": {
          "id": "beac6ec5-332a-45be-815c-4f3681482eaf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "80c5ea60-23c6-4a82-bed9-15ecf12d8e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a053ee47-cfe0-4358-aee5-9c2693fae068",
        "cursor": {
          "ref": "904f45c6-6ed2-4fa5-93a9-63bcc395fc5c",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "32e72a41-d2fa-4231-af99-9ff308c8b38a"
        },
        "item": {
          "id": "a053ee47-cfe0-4358-aee5-9c2693fae068",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ef9e8bf1-9156-4867-9103-71f3e5eac4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5942dff9-6538-4ed9-8fa6-e9f39dec99c2",
        "cursor": {
          "ref": "01d16d5a-42eb-407d-91a3-101b2365a16c",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9a0c6ba0-3583-4077-af41-dbe6ae876e8a"
        },
        "item": {
          "id": "5942dff9-6538-4ed9-8fa6-e9f39dec99c2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7dedb8cc-b1a2-4884-a179-a84f060dcf1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cdc8f6-db86-49b6-b9f2-5182b0cfc517",
        "cursor": {
          "ref": "ecd75665-f6e3-41d5-a561-4b89019623bc",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "dec06a9b-c352-49fe-91b9-9091c67cf87d"
        },
        "item": {
          "id": "17cdc8f6-db86-49b6-b9f2-5182b0cfc517",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d0f05c7c-92dd-4a15-a59a-7dd0e990020d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3423f007-8869-4df8-9279-6c5131766754",
        "cursor": {
          "ref": "373b94b6-c156-4a7e-9ed0-d2ed3854b429",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9f9e95bf-da0b-4e7b-8193-e8f1df4a8f7e"
        },
        "item": {
          "id": "3423f007-8869-4df8-9279-6c5131766754",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "db13a3bf-46de-4ce6-a4c2-58d6b7fd7ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efcd7a4-8dd0-4edd-ae0b-1f0bcb06ee98",
        "cursor": {
          "ref": "225ddfa4-3131-4ba5-8427-3f83306df5be",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "988208fc-5715-4a9a-9bb2-7b6d75f96328"
        },
        "item": {
          "id": "4efcd7a4-8dd0-4edd-ae0b-1f0bcb06ee98",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c2f86d08-2cec-420f-be7a-e440138edded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f74c462-5837-496f-8423-a2de6439d50c",
        "cursor": {
          "ref": "4b720c54-6203-4d04-9b2e-cc9ccec8b6eb",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a051d064-3946-4463-924f-2d878c814b19"
        },
        "item": {
          "id": "5f74c462-5837-496f-8423-a2de6439d50c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8782fe14-df80-47be-8054-071dbdf0ddee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8391aac3-c193-43d0-a286-90f003c553c7",
        "cursor": {
          "ref": "66024416-f2c7-4e84-b473-1ed5c50ca2c7",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "58f65dbd-b825-437f-8159-cc38bc5d75ea"
        },
        "item": {
          "id": "8391aac3-c193-43d0-a286-90f003c553c7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "121311d7-9f0f-46a4-b63f-37a7e72ecf3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa43e71-bbc8-46c3-94bb-8355dbdbdd31",
        "cursor": {
          "ref": "ae64a993-d3ee-4d04-95f7-4b200bf5c008",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5ef9b0fd-eea3-4df5-8759-a639785a96fe"
        },
        "item": {
          "id": "cfa43e71-bbc8-46c3-94bb-8355dbdbdd31",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3f7179e9-5ee1-4e60-8012-3638683796d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c94d2c-8a60-4927-9bdc-4b2f7abc7894",
        "cursor": {
          "ref": "15aba365-6ec9-4a27-91d9-dc9450202fd5",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0d4da14c-e304-4746-accf-f43e4c2b377a"
        },
        "item": {
          "id": "a2c94d2c-8a60-4927-9bdc-4b2f7abc7894",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1ce93823-a3d5-4836-b8de-25b79844411c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044ee147-17e7-4e5b-9967-9cee79b3d29a",
        "cursor": {
          "ref": "07d79694-8548-4f48-9341-75629ca0160a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8cf7a5ee-4f34-4e3c-950f-d358c03febe3"
        },
        "item": {
          "id": "044ee147-17e7-4e5b-9967-9cee79b3d29a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "21f0c089-f7cc-4629-bfe8-bb119e5adaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b864b6-9c2e-45ff-96f1-fab266c0805e",
        "cursor": {
          "ref": "e448965b-59c0-4583-b02f-ac7e58271d68",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3a356a49-1ab8-4bb8-8ed1-4cc8423783b3"
        },
        "item": {
          "id": "46b864b6-9c2e-45ff-96f1-fab266c0805e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e45f1410-2fd6-4284-a376-c734ffd946f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa315639-723e-4a8e-bb97-27d026d15304",
        "cursor": {
          "ref": "81333d95-2399-4931-ab9d-6f45e4dcc61d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e2e2414d-0b79-485e-8466-2e3e1528c548"
        },
        "item": {
          "id": "fa315639-723e-4a8e-bb97-27d026d15304",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f39ba193-a505-416d-8bdb-518c2f764bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd05673-c95d-49bf-8e37-d924a0cec0c4",
        "cursor": {
          "ref": "36e43d68-c304-4642-8256-00a25da79d99",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fd3015bf-3cb0-49ba-8fd4-ff2a4b8bf009"
        },
        "item": {
          "id": "abd05673-c95d-49bf-8e37-d924a0cec0c4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "59c0455e-6fbf-416f-8166-3480ba567fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0925c304-dbdf-4d53-a90f-27a8709608fb",
        "cursor": {
          "ref": "b94c8cae-59c8-4718-bf2d-71b6a73a9884",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f81db8c4-877a-4c9f-bf61-027d766a228b"
        },
        "item": {
          "id": "0925c304-dbdf-4d53-a90f-27a8709608fb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "412ee0ed-807a-4b4c-a357-7794faa6455d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e7587e-ecc7-4cdf-97db-9f8ad9db92bd",
        "cursor": {
          "ref": "a3457a52-7388-4ab4-abbe-b5a2f523c36b",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fe5ec904-93a4-4236-8ddc-f4dd49031d1b"
        },
        "item": {
          "id": "b5e7587e-ecc7-4cdf-97db-9f8ad9db92bd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6c98179a-d667-4494-8f07-1b96aa93fb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d548ffa-72e3-4ec8-91ea-9411c84e7af9",
        "cursor": {
          "ref": "bdd279b7-8d3c-40a2-8aba-1a76efb4aa1d",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "26e2f54b-b510-4415-85b6-157b3c0a3362"
        },
        "item": {
          "id": "9d548ffa-72e3-4ec8-91ea-9411c84e7af9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "13d7c13a-42d7-4f4a-9699-ca39d37a8dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23557f0-a481-409e-99ea-f7311e52ea89",
        "cursor": {
          "ref": "27be019c-185e-41e2-a006-a5ad95f38551",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7bc5cfbc-e528-4335-9d98-bdf2b995bdb3"
        },
        "item": {
          "id": "f23557f0-a481-409e-99ea-f7311e52ea89",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dad058af-8b3f-4952-ad16-f313db0d330c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c5ccb4-085d-4c14-b3af-db0f51ab2da6",
        "cursor": {
          "ref": "88549444-f070-4a7f-a939-f34306860b05",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b51daba2-4d57-4dd6-8de0-a0aa0696c46c"
        },
        "item": {
          "id": "a8c5ccb4-085d-4c14-b3af-db0f51ab2da6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fff309ea-2b08-44ec-9479-c6e40b22b540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89eba21c-c89b-426a-88c4-162535dd1f1c",
        "cursor": {
          "ref": "4ee9f7fb-dd51-4df7-9f6b-8d6dca39afaf",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f1d3f013-ca91-4dba-9ae2-ab7a7a8b4db7"
        },
        "item": {
          "id": "89eba21c-c89b-426a-88c4-162535dd1f1c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "29a368fd-84ad-489c-b0fd-1a97e1b023c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edefc586-0585-44fd-8f31-45a2a998d7ea",
        "cursor": {
          "ref": "06f235cf-9f7e-41b2-b9fc-ead0c292b55f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4271995a-3d15-4eee-a7d3-48aa2412a6c3"
        },
        "item": {
          "id": "edefc586-0585-44fd-8f31-45a2a998d7ea",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "675e8a21-c95c-429d-95a8-4e7faff33489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb86ca6-b81a-428a-bdeb-1aad3dcf1621",
        "cursor": {
          "ref": "5d5247cb-e66e-490b-8e02-fd5f27d50563",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ae3fb75b-eba8-4230-b06a-92c15bfd62a6"
        },
        "item": {
          "id": "1bb86ca6-b81a-428a-bdeb-1aad3dcf1621",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6931363b-08c5-4c51-b35a-a72be341bfe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d83125-cb1a-4571-9bd7-ee73d111cf63",
        "cursor": {
          "ref": "f2d70e09-ea60-45d0-85e9-8556d3642f42",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a268fc6e-7a9d-4b78-b407-e8356f95dc1c"
        },
        "item": {
          "id": "63d83125-cb1a-4571-9bd7-ee73d111cf63",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "482b267e-434c-4a3f-af25-00dae135e3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed03793a-ddd2-4b28-ae47-865e359918af",
        "cursor": {
          "ref": "4591a4f9-0cf4-4f6b-9a30-5027e1d76e0f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "76c1a485-5bfa-445e-8711-faf3ed2e93e5"
        },
        "item": {
          "id": "ed03793a-ddd2-4b28-ae47-865e359918af",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "66d3d601-444f-4ac2-977b-7830f393a8be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4c45ba-290e-4991-9b3b-5b1203163237",
        "cursor": {
          "ref": "8cfed526-9d0d-47b9-8f55-26862e6b0035",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "faa76811-59da-45d5-8c6d-a409eb9e5b23"
        },
        "item": {
          "id": "1e4c45ba-290e-4991-9b3b-5b1203163237",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1e615fc3-65a2-4bde-bd9a-c86ce502585a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c694cc63-d141-4488-bc45-a21124ded299",
        "cursor": {
          "ref": "80f9dc2a-ae42-444f-945e-da3c528a59ee",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "31d86d0f-5137-450c-8546-9ae030b1bf94"
        },
        "item": {
          "id": "c694cc63-d141-4488-bc45-a21124ded299",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bcfac66b-865f-4be6-8b7a-797e4fdebc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a6b498-6ecd-409b-a92a-ee1e2e31bd7c",
        "cursor": {
          "ref": "52f1cb5e-b784-4cee-9ece-063cbea428a3",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a50e5769-3882-4d9f-af80-78150a0ea872"
        },
        "item": {
          "id": "31a6b498-6ecd-409b-a92a-ee1e2e31bd7c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5a4d24c5-41a3-418b-b871-f21c9beec98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cffaf53d-874c-4137-8871-491efb79e77b",
        "cursor": {
          "ref": "98d5069f-40c2-4164-81c2-8c10dc0a21c1",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5771e827-ae37-4d52-b763-f1dc865d1cbb"
        },
        "item": {
          "id": "cffaf53d-874c-4137-8871-491efb79e77b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "79453904-0d98-4c8e-9baa-8a3b41fbe504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7504d49-e576-420c-a280-038c82922a1f",
        "cursor": {
          "ref": "75ed2e64-ba91-431c-a3b3-f9508a634c06",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f2dc195b-7b8d-411e-81a9-f60f94fbdec4"
        },
        "item": {
          "id": "d7504d49-e576-420c-a280-038c82922a1f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8aca8ecc-e315-404e-8792-1220238437fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18065a57-0346-4780-968c-9b526063d930",
        "cursor": {
          "ref": "399bcf8a-de3b-419b-9f62-85ecfebe1d39",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b5ca9a0e-b4f4-4de1-a5d5-4922818ffe62"
        },
        "item": {
          "id": "18065a57-0346-4780-968c-9b526063d930",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "df26a29d-aa73-4129-8c06-86f2ca8038fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecc7fe1-26ab-4048-ac90-0d3e166f0924",
        "cursor": {
          "ref": "76961470-0b7d-4489-973e-37a12d5550a2",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "442b7f6f-1769-490a-b1e9-a397a5b3daa4"
        },
        "item": {
          "id": "4ecc7fe1-26ab-4048-ac90-0d3e166f0924",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "155a7196-ab94-43f8-9260-a1e763133204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26cd260-73eb-4f43-bd47-4528990b2124",
        "cursor": {
          "ref": "d5ce8afe-3651-4c5d-8403-0c945a6d3514",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d19453a4-2342-48d5-91cf-7b844a5c0e04"
        },
        "item": {
          "id": "c26cd260-73eb-4f43-bd47-4528990b2124",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "815dfab5-1a39-4411-8b83-b1a7229215a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4545d8b0-fff6-4d63-a865-67ad4a2559e1",
        "cursor": {
          "ref": "f6714cb5-466b-45f1-b5dd-4cc08c994d4f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c7da9fec-5271-4609-93bf-3241cbbdb0c9"
        },
        "item": {
          "id": "4545d8b0-fff6-4d63-a865-67ad4a2559e1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c7f5848e-108c-4d9b-ae18-1ad673d56e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fb16b2-88b3-4275-a886-0ee3b550a6b5",
        "cursor": {
          "ref": "00ecbc8a-72e7-4829-bbce-65eec93cc5fa",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8d61d159-ce70-48f5-bf06-c314923d0207"
        },
        "item": {
          "id": "50fb16b2-88b3-4275-a886-0ee3b550a6b5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e7e2309f-f48e-43b7-a64b-4ebd62e99be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636050ca-f339-498c-8512-1d58427bf37f",
        "cursor": {
          "ref": "ac8a74b7-9ba1-4f71-be0a-cb2e935136f6",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "41f845ba-180b-4df8-9d21-aa8a37b1b45f"
        },
        "item": {
          "id": "636050ca-f339-498c-8512-1d58427bf37f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "29af9faf-5637-4f09-98d3-f97bf36aef6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3f9da9-605d-4bc5-977f-b84d633c173f",
        "cursor": {
          "ref": "0c3a0f10-efb6-4bc4-af18-4bc554466f03",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7010cb0d-822b-44b5-969b-ca3e7cf56d3f"
        },
        "item": {
          "id": "1f3f9da9-605d-4bc5-977f-b84d633c173f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "67abeee4-151d-43a7-898c-3ec3495bf05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a7a5ef-fec1-4417-84d5-4c91468554bb",
        "cursor": {
          "ref": "75fa9d0a-c5fe-4c37-bd8d-dd12f5035097",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2586deae-08fc-4c86-b397-121baf9ae18d"
        },
        "item": {
          "id": "81a7a5ef-fec1-4417-84d5-4c91468554bb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "01f3a35c-ddc0-4a82-8ec2-3e320493193d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31514be8-f5f5-462b-bb87-177883ef2bab",
        "cursor": {
          "ref": "d4d23ca3-f830-4dce-872c-ce980606908d",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2c7561ea-bbc0-4293-831f-9be1adab50ea"
        },
        "item": {
          "id": "31514be8-f5f5-462b-bb87-177883ef2bab",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b19a36a7-2ad9-4c7e-bda1-06314de6a433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0a6d81-f45c-4791-9c9d-b269858484f6",
        "cursor": {
          "ref": "af829501-aa6f-43fa-97fa-bb5b030a11c4",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ff1b21a2-4d28-4da3-9cac-aa4bd8b106c6"
        },
        "item": {
          "id": "df0a6d81-f45c-4791-9c9d-b269858484f6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6065771b-4c15-4828-8bc1-fcb51711a063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00bae4f-2a48-4e7e-bc36-cdec4feb8203",
        "cursor": {
          "ref": "4be11893-1e24-4596-8f46-10a85a2c644a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "897cee02-9490-4500-9f8a-60e8737a0c50"
        },
        "item": {
          "id": "b00bae4f-2a48-4e7e-bc36-cdec4feb8203",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bae851a9-fb7b-4d66-a8f0-633d600472cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc95ae7-f7e4-4b8e-82a5-d5ac828c47fe",
        "cursor": {
          "ref": "5e8d6c2d-ee2e-4087-bfa3-74cb66c6d241",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cbcb9b95-bc66-4482-b773-c5bfce2a849d"
        },
        "item": {
          "id": "efc95ae7-f7e4-4b8e-82a5-d5ac828c47fe",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "225cdf88-d818-4e80-9828-3efda11c1324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6e3764-7aac-40a6-bfb2-9214d538ed11",
        "cursor": {
          "ref": "3f8d6ffe-c304-4a61-950c-8b7a60c0dfa3",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "08dd2e7d-3e31-4dcc-8e2c-2ff532ad4caf"
        },
        "item": {
          "id": "6a6e3764-7aac-40a6-bfb2-9214d538ed11",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "50c14cac-34d1-4c13-b638-c4992c4e33f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfe9738-e250-4d67-8ea1-35410dda1af5",
        "cursor": {
          "ref": "5af75775-c017-4ecd-bdbc-51ccd4c3736c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e1bc0d27-62c4-47d2-a6f8-098a2d5bca03"
        },
        "item": {
          "id": "8cfe9738-e250-4d67-8ea1-35410dda1af5",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "354272c9-05f9-455d-a37f-50179d57aa14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23170767-03df-49d0-929e-a641e60273aa",
        "cursor": {
          "ref": "8fd94682-3e4c-4436-9b05-80665848288f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "91db3edd-98c4-4bbf-8b5b-2bdeae1039fc"
        },
        "item": {
          "id": "23170767-03df-49d0-929e-a641e60273aa",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "fd1e8a1e-762b-4393-b361-0c0aa9c1e523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d78d3c4-9670-45a1-ad5f-54273797b441",
        "cursor": {
          "ref": "b265e3d7-f2df-4d7c-9457-6b3fdb87263a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "379fc47e-0dc8-4989-aef4-60e78162a854"
        },
        "item": {
          "id": "1d78d3c4-9670-45a1-ad5f-54273797b441",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a424b5d7-7378-474b-94dc-9765e1ee74f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcf83f3-c8bb-4096-8b85-8e21544a1cd4",
        "cursor": {
          "ref": "c7c6352d-dc60-4a2d-a693-7596709afc1f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ba895569-7a59-4e98-92a5-a6a2a55c51cf"
        },
        "item": {
          "id": "0fcf83f3-c8bb-4096-8b85-8e21544a1cd4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a856a74e-e702-4326-97cc-e6ac7e42a8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a98a47a-3ecd-49b0-8231-22651aa342bc",
        "cursor": {
          "ref": "e71e946b-b7f4-4c78-b8ca-bc34c0976e0a",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a84f77be-be1e-4fc1-b303-8892fe293dc1"
        },
        "item": {
          "id": "6a98a47a-3ecd-49b0-8231-22651aa342bc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a4d18c5f-fe2c-4ebd-a71c-df0f918d2690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d43b47-813a-4739-b41b-d92b65c2baec",
        "cursor": {
          "ref": "99999f38-7270-46cd-aa14-bfa91eb0c9d8",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "253e01d0-e81c-4e04-9b40-3ff6f2c94eb5"
        },
        "item": {
          "id": "19d43b47-813a-4739-b41b-d92b65c2baec",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9fda723f-473a-4027-86df-d19075254622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df22c09-dd9d-4d52-adfb-203f2bd92ac5",
        "cursor": {
          "ref": "05680ec9-a82e-472b-a869-f6b5ae919878",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1d12aeea-3cda-4c5e-8b21-ef4e49ee1426"
        },
        "item": {
          "id": "1df22c09-dd9d-4d52-adfb-203f2bd92ac5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "62b07ce5-02e1-42fb-a12a-be15cc8d543c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9657008e-e1d1-4150-b2fe-448b24f85c20",
        "cursor": {
          "ref": "01140231-f7af-4552-9461-b8eab1f7339c",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a05ca6ca-920f-48f3-8ec1-e3cfe31594d5"
        },
        "item": {
          "id": "9657008e-e1d1-4150-b2fe-448b24f85c20",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7557bc1e-42a2-447b-850f-9cc6dde0062a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916bdec3-0888-42b4-baa3-2cfde113829a",
        "cursor": {
          "ref": "1198a075-1b7c-49e1-ba6c-5ce9737f29b2",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9cc8a48a-b6ab-46cd-a3c8-1025705f6b7f"
        },
        "item": {
          "id": "916bdec3-0888-42b4-baa3-2cfde113829a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c57639c1-a405-4af5-9589-3ea0618e964e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949ce44b-cb27-47c1-84f8-2414357bee3e",
        "cursor": {
          "ref": "a3dd8e05-b4c4-4fd3-9079-db3501e990b6",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c92cb5e1-a204-44ea-af1d-1410da1894ab"
        },
        "item": {
          "id": "949ce44b-cb27-47c1-84f8-2414357bee3e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7e6177d8-fc3c-4f3f-9862-023fe783cef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3965746a-312c-407c-9a98-4bab751eccab",
        "cursor": {
          "ref": "e5e6ad5f-65ea-43d7-b2e4-197eac903aa2",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c42bec37-e771-49cf-9670-8a9bbb986f74"
        },
        "item": {
          "id": "3965746a-312c-407c-9a98-4bab751eccab",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "98c382f1-1dab-462a-88c4-433ab93af059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162dc817-545c-46ee-81e9-8fbf200ed3f7",
        "cursor": {
          "ref": "293c7a86-5e80-4326-b26a-b00e43c27e6f",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "9f606746-0b9d-4e23-9845-4bea33b16922"
        },
        "item": {
          "id": "162dc817-545c-46ee-81e9-8fbf200ed3f7",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bc1caf88-f880-4d80-bcc9-acfb23dadc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55287129-d53d-48d2-99ab-ad5d954136d0",
        "cursor": {
          "ref": "58d2e9bb-06f0-46c1-a243-8a0964fccfe4",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e2fdab50-e3f6-40dd-ab47-383fbab208a5"
        },
        "item": {
          "id": "55287129-d53d-48d2-99ab-ad5d954136d0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5dd4e9f7-ea0c-4673-959f-64286c34f661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559e72b0-fe60-4791-8b03-0b305c5de498",
        "cursor": {
          "ref": "cccf4a05-1ced-4be1-91f0-83b2c6032311",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9c7a2e06-5605-4946-977a-e284f9b9045c"
        },
        "item": {
          "id": "559e72b0-fe60-4791-8b03-0b305c5de498",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ee21cb9c-be9a-472a-a498-6a820ad99cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e828f6-dac9-4d83-86e3-b8026283bd97",
        "cursor": {
          "ref": "fa1e6783-bf82-4899-87e0-2b8577c374d5",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "bb6d5a38-8ca0-415e-9894-9963a9ab9a43"
        },
        "item": {
          "id": "b3e828f6-dac9-4d83-86e3-b8026283bd97",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e870499f-fa3e-4531-b693-8772d32d3ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da398c19-df8b-4220-8caa-3d64427ab284",
        "cursor": {
          "ref": "94bb1923-cfbc-4658-9440-e5b09f92acd4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7cb89612-f013-47af-948c-4b3776c9d8dc"
        },
        "item": {
          "id": "da398c19-df8b-4220-8caa-3d64427ab284",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "031e8d64-57fd-495e-85bf-89c5faa9cd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cda2ce-dfa2-4043-8cba-b68508b13d62",
        "cursor": {
          "ref": "49ad1870-6c88-4b8a-a7e3-e8585c580491",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c8866286-842e-4886-b91a-b661f5155841"
        },
        "item": {
          "id": "a2cda2ce-dfa2-4043-8cba-b68508b13d62",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c7f24ce3-ee5c-477b-86d4-9cb04c172477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2788235-81dc-4976-b2d1-141406960476",
        "cursor": {
          "ref": "3270da69-721f-4dda-bdcc-40073caa81b9",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "1efdefe8-a818-48c9-9112-cb3a9530b3aa"
        },
        "item": {
          "id": "f2788235-81dc-4976-b2d1-141406960476",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2f3c502e-b5dd-4053-a529-2b86cf7b8ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec88b3a-8342-4cd2-bdcd-27e2d24b2fd8",
        "cursor": {
          "ref": "4055021e-f51a-4478-9ea4-f6c04005cc44",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3320c406-ab1f-4964-bb46-8b8d876c33bd"
        },
        "item": {
          "id": "1ec88b3a-8342-4cd2-bdcd-27e2d24b2fd8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9ad7f2d9-9e72-4b14-9f09-437b5d50d468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61968faa-90d2-460d-a574-072fdef5f1e8",
        "cursor": {
          "ref": "14e7f4b4-76a7-44c5-90cc-8e80aa0f4566",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d0e55032-ee9d-4f47-8066-bba4749e1186"
        },
        "item": {
          "id": "61968faa-90d2-460d-a574-072fdef5f1e8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "29dfb20a-9b5b-438c-adca-1415659c2ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99271e4-9066-4fc9-a288-7dc3777cd5ef",
        "cursor": {
          "ref": "a7a68a07-6d38-47ed-b528-65b5b2c464a4",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c49bde28-cb97-4e5f-b3e1-a77c5ece310a"
        },
        "item": {
          "id": "f99271e4-9066-4fc9-a288-7dc3777cd5ef",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0f78affd-d412-4f7a-b46d-0ba76d1ed4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84759c74-8df6-456f-98df-9c6aca1bf450",
        "cursor": {
          "ref": "8c769e28-be0e-4f61-ad17-ddde823f005c",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ac70f9cf-d1b3-4039-93bf-229f1b5087f8"
        },
        "item": {
          "id": "84759c74-8df6-456f-98df-9c6aca1bf450",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "af53e40d-af20-464c-8525-7bf861c39457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e0346a-a6b7-4b29-9a97-e00f186f1d41",
        "cursor": {
          "ref": "178cb467-42b5-4746-aa28-a017c1a008aa",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a20e2d5d-07cd-4da6-ac12-b95295c5236e"
        },
        "item": {
          "id": "09e0346a-a6b7-4b29-9a97-e00f186f1d41",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f9439d32-9502-40f9-8f4f-c4e3a8ab1cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7946a4e5-34ae-47ce-ac42-eb9a98e7d805",
        "cursor": {
          "ref": "a849eae9-0fd0-4a89-b9f5-b1fb33020b31",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c6f5eac3-3708-4e3a-832e-b8f5f760ac4d"
        },
        "item": {
          "id": "7946a4e5-34ae-47ce-ac42-eb9a98e7d805",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "64faa146-b820-4f6d-96bd-bdc53b515c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f236e531-6fb2-4790-bf23-01acc17c3ee2",
        "cursor": {
          "ref": "11aba644-6fff-4930-819c-d87fcf716027",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "bde393bd-208c-4e1a-8039-b647a794bf6f"
        },
        "item": {
          "id": "f236e531-6fb2-4790-bf23-01acc17c3ee2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "49cdf8c8-7607-4e2e-a259-dc3db13b522e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a39e6a5-b24b-45ff-87c3-00a408fdb4e5",
        "cursor": {
          "ref": "b6109598-f4e5-445a-8723-18435bdf1501",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "997d2025-f33d-4d46-8b94-c60508e072ef"
        },
        "item": {
          "id": "9a39e6a5-b24b-45ff-87c3-00a408fdb4e5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fe66e4ef-2ec0-4319-85a5-a163905da001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28320326-a264-4314-a332-37d1d36a11a2",
        "cursor": {
          "ref": "6f0df0f7-cbbd-42a9-a9ec-74a2852bf34d",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "399ac2c6-f3c6-40e8-8d49-705de505ecf4"
        },
        "item": {
          "id": "28320326-a264-4314-a332-37d1d36a11a2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "55da37bb-11d6-44db-9f4c-0d1213689d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9665f8-0efe-4a87-8498-91d23f124d1d",
        "cursor": {
          "ref": "52b2a0a5-2e39-490a-8ea7-efecec4754ab",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fc80abd0-c857-4013-81ac-2e3e0761dc19"
        },
        "item": {
          "id": "1f9665f8-0efe-4a87-8498-91d23f124d1d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "90149eae-44e5-4f3e-bc97-7d7c4bc49edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef45f35-fe11-4aa7-95d8-34dada858a78",
        "cursor": {
          "ref": "a19983b2-f791-466b-a503-8b6121c747d9",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2c076e72-60b1-4d0c-a373-a30986eb0853"
        },
        "item": {
          "id": "aef45f35-fe11-4aa7-95d8-34dada858a78",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c861060d-3305-4a98-a59f-4b2a58476905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe4462b-d808-4d9e-a621-90b8328a2221",
        "cursor": {
          "ref": "698050d2-04ed-4dbd-bf6a-02ac101a5f76",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a23147f0-7297-4305-b79d-206ffab1f2b9"
        },
        "item": {
          "id": "cfe4462b-d808-4d9e-a621-90b8328a2221",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "93dece49-b3c3-4834-b4aa-fe3fb26a19cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4252d9b7-a261-4d5f-b854-0817ce1a3f80",
        "cursor": {
          "ref": "31d628be-cfde-40f1-b456-2c097236d5a1",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "53928679-5900-4292-b0f2-9def5167b317"
        },
        "item": {
          "id": "4252d9b7-a261-4d5f-b854-0817ce1a3f80",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e33ae933-a754-4aa4-93a1-758408676125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a26516-b423-4e31-9160-6f249f525bd2",
        "cursor": {
          "ref": "c998c1c8-00ea-478e-b57b-eaa38a19492e",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "284362d0-f054-4cd1-8038-7c366917660c"
        },
        "item": {
          "id": "70a26516-b423-4e31-9160-6f249f525bd2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c2bd7db6-ca4f-46c9-8cfe-473d8763193c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e35f7f-8e06-4c31-aab3-d6dccb6b6442",
        "cursor": {
          "ref": "da6ad41a-3a12-400b-8ac3-1f5f9a1f6473",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2f8a952c-7f59-4788-8784-dff8e3f1f666"
        },
        "item": {
          "id": "30e35f7f-8e06-4c31-aab3-d6dccb6b6442",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2e0ae951-48a4-4b71-a5ea-f5e6a84c3e43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a277f8-5cf9-48b5-822b-aeda973b6966",
        "cursor": {
          "ref": "8eb285bc-3269-4e20-abe7-128778a6ef3b",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e34fb605-781f-47ed-8eb4-0d61aeca1ff6"
        },
        "item": {
          "id": "12a277f8-5cf9-48b5-822b-aeda973b6966",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f8cc15d3-f0f9-407f-8df1-8f41a2b7ae9a",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc5e813-e01d-4e16-bbaf-795bb1d17b9f",
        "cursor": {
          "ref": "f918b222-d9e0-41f2-90e9-f2685f2651cc",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e94c7e24-576d-431b-9645-0adad7a21f30"
        },
        "item": {
          "id": "cdc5e813-e01d-4e16-bbaf-795bb1d17b9f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fbc282dc-d63d-4a65-9681-126b845d8ee2",
          "status": "OK",
          "code": 200,
          "responseTime": 1354,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b364873-8b1d-4091-ba2e-94e39ab615ab",
        "cursor": {
          "ref": "27c2b8d6-84e8-4028-b6c1-6eb5ce579bd5",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "88ecb099-4aea-4d14-ae31-79ce9c8fe9da"
        },
        "item": {
          "id": "7b364873-8b1d-4091-ba2e-94e39ab615ab",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bfaccb7a-416b-40d1-a7a8-49f772427c46",
          "status": "OK",
          "code": 200,
          "responseTime": 1569,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e50bde-d4e4-4115-9b3f-dc7752761f6d",
        "cursor": {
          "ref": "6d063167-9882-4528-b784-0aaa24f025bf",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c1d867b1-6ac9-4b23-9106-7145f90edf77"
        },
        "item": {
          "id": "a0e50bde-d4e4-4115-9b3f-dc7752761f6d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "658c9e27-5e89-4070-91a3-2061353966ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e50bde-d4e4-4115-9b3f-dc7752761f6d",
        "cursor": {
          "ref": "6d063167-9882-4528-b784-0aaa24f025bf",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "c1d867b1-6ac9-4b23-9106-7145f90edf77"
        },
        "item": {
          "id": "a0e50bde-d4e4-4115-9b3f-dc7752761f6d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "658c9e27-5e89-4070-91a3-2061353966ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c136b8fc-9aa6-42ce-954b-db267b111f0c",
        "cursor": {
          "ref": "f84d81c2-3f03-4e91-84f4-90d806484373",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "15596624-56ce-44b4-a717-0ad93f5e5c71"
        },
        "item": {
          "id": "c136b8fc-9aa6-42ce-954b-db267b111f0c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "13bdefd9-d64f-4487-a0df-1358b702c94e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc192a5-e0c7-4f34-974c-8619eb8ec375",
        "cursor": {
          "ref": "f4323fcb-c2a0-4ec0-8137-1caae3a4e054",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "8277aee2-65e5-41a8-a9f0-322b5ebaf527"
        },
        "item": {
          "id": "cfc192a5-e0c7-4f34-974c-8619eb8ec375",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9b6e9e21-08f1-4791-9eef-19108ced4c94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}