{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9d9ce0ad-8fc0-44de-98db-e8d3c716942a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2597b92c-7fb6-48a5-ad9d-cc207a09bbb2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f133c700-3bd3-433c-a6a9-b61ee76c8808",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "23bfa7b4-9053-4b31-8405-30ef650fd0c2"
                }
              }
            ]
          },
          {
            "id": "381aeee4-fda7-4af7-9311-b71ccb58b8f8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "17c7efc5-a5e6-4122-838b-155feeec21e0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0b105593-1e4e-419d-8d3c-1839e859a90d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1e3c50dc-cc1e-4d82-9105-1571d1028e25",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a9a00c9e-6fbd-408e-8f06-2b7e4a47f94c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5c3985a0-3d14-4f5f-be00-33e6497c8048",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c80136c-2456-4018-ba61-01842252915a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "702f99f0-be29-444c-85b2-62a9c95c05a2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6439643c-0509-43b7-96fc-cf5e7462cf4e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3939bad0-fd41-471a-b22f-56a105f122b9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c7b140f1-eb93-42e5-8252-ea029a2d58dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "81da2865-7b00-42a6-a2b0-3bfe0e56f2a4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23413fea-48e9-4df1-9ab1-0779e375ac4e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8fcfeaa3-80ef-4789-bd05-cb788ccf022f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48fba34a-c260-43c0-928e-12071402518e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58fb42a8-8789-4f12-9fe2-0ea9e8874eb1"
            }
          }
        ]
      },
      {
        "id": "2d5d63d8-b1c9-40c9-9774-df5900551376",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "82504d2d-8d30-4200-a151-f06da3638bad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3cbc07b4-775b-4fc8-8e69-5dd1230b464e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "161e20c3-3193-4b25-8e10-ecccf71b6a34",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94dafa7a-6d83-45ab-88ae-fe330e95f506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70df8420-12fe-42c9-ba10-676d9a3b2c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff52c869-d3cf-4ec3-8aef-924e499f2619",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a55d6d-d543-44aa-9413-c001b121db98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d490e9a-37b3-4540-b93e-a501b108a917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad243547-30ff-4211-a867-e96813e6caa1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0ff929-c4c2-472e-a619-e5ca42813307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2e57d70-39c1-4050-b9e9-01d9171ce94a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ed3b09e-982b-4ce2-8b34-1b3c3c0c6db6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8de75fc8-a9d6-48fc-ba3c-50064fee573d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc700d9b-28d8-421a-ab4b-c19b2c4368a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "615ead78-785a-47af-9654-9637e291c9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e7fce3-598f-428e-a8fd-d50895674433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5fbbbac-b4df-4cfb-a584-41851df6c1fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f59c97eb-ec20-415f-89b7-d7b4dfd3bcef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f221f94c-de9c-48b2-b1c1-6eb74ec54f04",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba4a95cf-6d66-4d74-8231-dcbfc5c13618",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3d02a5c5-dffb-49d4-9dae-39f0aea4fa70"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "993e05f4-8aeb-4d38-bd46-e27c469d7efb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "98ec5314-b574-4d85-ab79-6720c9555c5d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59df9732-d854-42a9-b82a-aa90c37ee0e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0c4df2e-c594-45df-a839-19f825624da4"
            }
          }
        ]
      },
      {
        "id": "fcfddd0c-d931-49f0-b2a3-7264887b12a9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "834091dc-63a9-4d31-b031-be0dd3c0a348",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16079f16-1243-4c29-bf7a-c06813fe854f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "19ba60f6-4646-4ff9-8d56-a6b5be590e2c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85f1f27-60b0-4ffb-b23a-a77dd592c807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2deaa0c2-69a4-4dc8-8b89-cd9e47c8d2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c57d2d-9be8-4e74-abe0-578eda331649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2c6a803-474b-463e-b5ed-14230fe14aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95aee95d-c6e4-498d-a973-e41ca27dae19",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b5aa4e-639f-4f70-b2ec-820bc352e3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa08248-4782-4914-adcc-6f58ed179cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed75aba1-896b-4200-ba93-6b096267dfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80d23dc6-b2f5-423b-8a8d-f59dcaa9ee6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301c4c1d-a03a-4877-8672-48ea2c2f96d1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6032e5-79b1-4320-aaf0-7eddfa48d90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5714ee51-4f70-45da-8e89-36dd2bdbaf9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7380c1b8-4f6d-43f0-9f80-7f384348c26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a1903f9-2ea0-409b-bfcf-7b1e50045d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cc256b-7bf9-428d-a530-8908d5e06667",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c92b26-81a8-4931-8bc3-c34304a3e241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f170cec1-472c-4027-b9b2-91ceb9c8a1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e1ad06-5143-422c-b0af-584b42e2de96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1a49de9-ec91-4a1d-b095-6fa5020d0317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030a6cdf-f75e-4413-b508-05e31c99ac7b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c7d396-6870-4b9e-b7b9-90b892d11d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df2f1a2-aa05-4a24-a0e7-cc33ab48c513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68eb19d9-9f59-4116-a814-ae457ff4ea5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9b6fb8c-0ded-4936-a4d8-8d67d4c32b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3740d27c-382d-441c-bbed-7642fe31ce71",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ff0bf7-658f-4291-9eeb-67af780b8e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57895b01-bdee-4f07-8344-f20b61c6eec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61df2631-04da-4454-bfe6-b64e129dd374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8852410-8f45-4633-956d-1eec30d23352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a4fe35-899c-4e88-9c60-5c86f882ff28",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc72bc4e-95fb-462a-89b0-2e358a234cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b10424-0b87-466a-bfb9-4049e288b2b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be733069-09eb-479f-925c-137f4f7a632a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed48bf1b-dbc4-49e7-bb6c-792370d05aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c488cc-8b16-4346-96a1-66b4ccd503c3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff63fab-36ef-49a0-852f-2aa18dedd01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a106ded-f166-4106-af03-1f613b92e2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d669f98c-6d29-433c-9717-9dd19d937d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec2b3265-4a7c-4000-b342-671d5902374a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d2fddb-3909-4036-99a2-03cd2306da9d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c4182e-cf4c-4320-8255-f451440cb855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c199ce-15e3-4362-a310-47ca573c53c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024cf0bc-42dd-4b64-8d78-f8042810b335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b636b35a-d804-448f-b948-00e28636e976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7697ce27-b1c5-4fa2-b71e-9f19f38d033e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2d4bd2-196e-423b-8995-7d79e8939bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fd5883-c6c8-4f10-944d-19505ac6e967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ef2869-7cff-401f-a984-f49dc6744234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9be4feaf-15e4-4a52-acff-8fd19111fef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0fd947-e0fc-4db3-ac0d-91fc5295c8bf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52fd0aa-0d2e-4e9a-a3c1-600617cdc634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67655271-f210-4a89-ae34-f87df7e60d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85de2d9-bf6c-4e8e-b659-b652774d2cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b4d0b6c-061b-4f8e-b8b3-01b4639cb3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58c7490-14fc-47cf-a24a-a536446dedfa",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98396f4b-320f-45a6-b8a7-7dd14726be09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4df9608-875d-469d-935b-8a639e3a0d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ea01e5-3ae6-4a2d-bbc8-d0ebaf389cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b12dbaa-f308-49ca-870e-b1a565dab7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850b7d38-d1be-4d73-937e-c04874adcd5f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc5b533-52d8-42ec-a5e6-c4eec730ab0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96164369-eedb-451e-af85-649df21260c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce4c932-9883-482a-9b33-18738cb36580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8640d34b-f973-40ec-8852-8fc946101509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af69bb24-cb35-4026-97c2-4342effae253",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dafab50-1052-450a-9cfe-6e83d9bedabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b92929c-9b50-43d6-bb2c-c01bf303a124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79a7a60-b8dd-4686-a423-5cf6ffdd193d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "264e76c9-5709-48cf-aa36-3b818d82d0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709cd695-bb48-46c5-a481-eaf75365efa6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d23783a-c120-482c-825a-2977dd1853dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bebdf99-3107-4c42-806c-ce707cd496af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7183c21d-2232-444a-bc88-b636cf1653d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "103b547b-f693-4c5b-82e8-13201697469c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31afd1c5-cd5e-4d73-9e23-0aeb378d2ec1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1907eb-64e6-4e6e-9109-201418370682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e1f302-1b40-41a1-821b-8a1fe00a74be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec191a5-a034-4a28-be10-a7a7bdfc4d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bed41d44-1c95-4629-b029-eb8e689647b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e21539d-8dc5-4e71-b095-940232fadb4f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f172fa5-7cb1-4bdc-b71d-fb3f28fa92fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39ff7bc-bfbc-4c45-b9e9-fc42529a8355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1abbc4-7208-4c60-bbaf-2e895791b090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71017366-d0c6-4711-a7db-774fcfbdf07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07aff1a5-b7ed-47be-878d-9c7969492d62",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64225f12-a906-4ab4-8424-82a25ebc6077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6da40c-59de-415a-a72b-331b56d214c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95e1779-a6e8-4586-9f31-7cedfce0c488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7ee894-323e-44bd-93e1-c3c621ab27a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f601012a-47d6-4e47-9d4d-460d1d61f41e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbabc6c7-868b-40b8-8053-d18c35c67b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9bb1f8-30e4-44b2-ae06-91bcad09e32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4765c396-3762-48bc-9a79-7a500362c30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a44855f3-ec1f-4c5b-a71f-42b0568c8664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8a3ecd-9119-479a-aa62-bfb6292fc983",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b5366f-69bf-4db6-b754-26e956c3b26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dded7832-ee93-406e-8d6d-c42c18842168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9529f11-370c-432b-8982-9b05d0a1049c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b69c201f-6714-4d3a-a593-992875f41f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f740623-1e49-467c-900b-e7b4a14d0da0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ec0c8b-f9bf-480d-bdc2-c6e5c229b898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a420f2-97af-40f8-aea9-793528cd04a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec05ee8c-033c-4dcb-986e-9b6eb16b9ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c49c3f-951f-4fcb-a2c4-67946e8d52e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d806ed-429f-488c-80ec-41fb5c60ba5b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fb858f-4cf0-49e7-a95d-688484ee8cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b46843-8457-40d3-ab7d-3f539784c258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27974ad2-d348-4d3c-aae6-2e1093bdf896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c04abe7f-1129-4460-ab88-c3637a0b1db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cabd50-019f-4471-9c6c-4cda008d85de",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af80867d-a2a9-4778-8dc1-cdb35fb18203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4d8731-ba50-4dfe-9431-3623dc5e4c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1616a12d-613c-4808-a232-d31b9cd1792a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4ea72e-3d4c-4018-bfbf-787b01e86da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347d834f-bc7b-4560-92dc-6113c1204dfa",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a151a9-1029-46a0-9aa1-4cf58e6aa623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae5511a-95fb-47bb-8918-08f170b4a1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484f07d1-fd4f-48cc-a85d-e7e90dc2869c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccaf6130-270d-421e-b192-1f464c83dfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67501007-8f7f-4fe3-a90c-68c1fda50cd0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900a193c-b19a-42f3-892e-6ffa012f0d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5744c88a-078e-4ecd-8356-4836eed5558a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969aa684-ac25-449c-8ca1-fb8b274e120f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18bd96aa-45e2-4046-83cb-983c3390a6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9185450b-a114-45bc-9dc6-21e099da6188",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3e44f6-6582-4a7c-a817-152262df23e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0d0799-1352-4ce2-b410-6a5f72558a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0913c21-6a4e-4d2d-9f73-10aebbbb90ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f47777d-8fe5-48ef-9e59-0d7a6f56d459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122b0423-3189-4d1e-b986-d4bce57cd05e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c59b477-514b-414c-a95e-a0babb2e5dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739030bc-b7aa-41c1-90db-ce9989608290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e441666-f107-4fb2-8aa9-ce4cb4ecff3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43796029-1815-4921-89e4-379fe8482879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1139a9a5-00a2-4086-82df-10688b0ea9ad",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad48d3e7-ab58-47af-8f67-f970a0d614e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef4e314-830f-4903-8f57-6a05ec63196f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea1bb14-d5be-410d-bec8-76a9843c6a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "222cc297-a67c-4ef4-9393-680c781c4341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43823192-333f-4d83-87b8-1ab4ce8bd226",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3610f9fa-132b-4cde-a826-50bf2fc4ea6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312fc44a-fc5f-4589-a9f5-7a205295642c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f3b8d1-44bf-4547-8b39-d0cea9168483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b63adbc-2bee-465a-ad29-3ccd50a69f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e240b35-f311-4577-a09c-ebb8008f7787",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4523bb-d1a7-4dad-8764-a4507622d1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dfbfb51-6175-4482-b6b0-9208ef1a0b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dff1a7-67de-400f-b0ba-ccc4fc6ed2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b480db3a-1cc1-4c30-87b0-9833829c901d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a488d24e-142a-4d55-8f5e-64097a606111",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3224d586-f6e6-4022-be0f-64a7e492ce7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12a66bb-53bd-4840-9deb-a4f09bae91ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69411c7e-d49b-45ad-8446-762e3be6daeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2660b0b-d85f-4028-8c75-08ecf7bf61ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27d1c07-1c6d-425e-843b-5ab93d13ab25",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adae57f0-4833-4e76-9fa9-44381b778330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f844ec56-4530-421d-bae5-47758da69b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdfe0c4-2bf2-4648-b237-bbf13fd90f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "760bf554-e4d4-49f5-892e-db67fc583394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b56f47-056a-4074-87f6-bea93906f123",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ff34c2-bbaa-4bad-aaeb-55b3ded90cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b556f03-2fd9-424a-9fb3-ea9fba1e1352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e48330-9372-4400-a73e-d93e097f2a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "214a3758-5f78-4ada-943b-588c1553879d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e221c691-8c01-455f-a6a1-9b9583ed0a0d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfff30f7-18e0-4537-af6e-6cfe0787c26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccef56b-0b7a-472b-a322-1d21caabdc08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9a091c-4095-4fc0-891b-8a493d8a14f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ddadd1c-45eb-4741-9c8a-a93ccbe6c216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2d0600-2662-48a1-8524-5f5fe2fc562c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc199be3-71b9-4cf7-b115-0714a4525fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133a76c6-a231-438b-b037-c9c5ee9b5c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d357d16-4b6c-4de0-89ab-0446b9201b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a42a8201-5782-45ad-9657-1c6c0866c40a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a27687-aae4-47d6-acdd-7a833975716c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e5e528-67aa-4bf7-b57d-0e1799d24546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "800c931b-584c-4181-a3cf-febcda623fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c64ad88-25bb-4580-80ee-fa6ec4c8c281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c664586-6fed-4c6f-a736-b6d6b552f14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc5c828-65c8-45bf-8c5c-bcd560f8b1da",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c62bfc-74e7-41a0-92b8-9e1d4776776a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8ef21b-0afb-4a17-8496-c81a580b78ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896bac8f-eb2b-41fb-9ba8-0889d6a4a224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5fa6da8-0f85-485c-b639-38ef39ee4903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc67dd9-e6c5-4e52-8090-8f64ab2a512d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93651105-033f-44fb-b7ea-62ea1f8028c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23df908-13a6-405b-bb21-df2d0192bf0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a991af8-b6f1-42fa-bd8a-c9abfe71c9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0caa055b-4954-4b14-bd83-bf2b4ab8b2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fbdff7-9d62-4774-9e42-c87beb501566",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4197dd32-3c66-4a56-b51b-0c40c7b016d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3199263c-634f-49ea-98c9-88631740fa9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754c0885-51f3-4249-aa41-6ed6edd27704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc588b4d-68ee-4b4c-b80f-028b0b75f5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2103679-be0f-4c8b-a999-8b96fffd85e0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2532c181-376b-4a44-8737-4c7d321e2064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83cf32b-784d-4816-9b9e-ecb8b305bf18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85e8ef3-1aa4-465d-b179-b3423cd9020b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "67ddbe25-5a1a-4aeb-81fb-c7b23623d0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7f9a4f-10bb-4dc3-bb59-eb0c7f92d083",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e371e6a9-9d97-41f2-bae8-11727774a6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "462b8d1b-5b10-40e3-9f87-a0001419eea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16f63ae-11cf-45f0-9c1c-f2795e5bb1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "41de7022-94a2-424e-aab8-45247f8e7f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9dde680-0eb6-4955-9edf-123d75bfe34b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71aba32e-ea03-4fd0-be30-7844adefae2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9032f0-b429-47d9-a61e-fe7b7453d17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7358f24e-c862-4c3e-9cb8-8ea774cdae93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d71ee5cd-180d-4aab-9839-61f33785eed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24491fe-b5b7-42f9-9415-7b38669068df",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca01c03c-77ce-4e44-9658-5729727f2b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73fa73bb-c5c8-4580-8de7-6804d0a14b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa36d924-ac21-4d39-92d2-19c7d39303f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "58dae8d8-0b64-4e6e-a638-6d22f0c9ee92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfe6f88-9366-466f-848c-3f8dd569555c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679e3bc7-014c-4b5b-aac9-70f3aee4e9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07628022-f790-44ad-9745-fba4c5fbd15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3d2d33-51ab-47ea-bff0-2d615db0295d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "311ef99c-2d35-4a85-9f6f-b3a1f771a11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deaaad0d-c522-4444-a685-86ba98a22cb3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd10f32-058b-4670-acd5-9095b6c3002c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e86927-bb59-45d3-8337-0f0c85fdac4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82082bb9-0a51-4b67-8d44-b748adae7d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "02e2efa2-1a49-440d-9665-888b075d644b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2c935a-e420-4664-be03-b90b4cd3626b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca6b0fb-bdee-4066-b2fc-127af4500a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf519b9-0053-4192-86d2-a0d95a491411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8f910d-e0ed-446a-a745-1f3401bceca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f097f284-ed02-48de-a1f0-d2fe5e792285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c21f1e1-3b4d-449c-af79-c4ab8064de22",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df80f1a2-2255-4d5e-a13e-57cb6604449e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128d4830-475d-4ca7-9b18-4317f58d58eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094ad041-38a7-440b-9712-1338c8fefa98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99b0549f-e156-4016-862f-6b9a10cb0c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba12a912-787d-4869-a937-389bcebb0a2e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f751030-6935-459d-9bd3-0eb4480b6d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f50717-db9e-4874-84aa-27ea6f125553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22ce45a-c75a-4591-a32e-1240dbee7fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0757cad7-e9f8-48b5-9b03-aee82ac97bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0730357-25dd-49f7-855c-5efdc1ada11d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec0b9bc-06e8-41e1-a519-9f090d6c190e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30db89a-183b-4ef0-9e18-6e3aa8fe814b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d232c5f-c478-43df-82d1-0a87ad55846f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b320017-118a-4d99-837d-fdca7ed5bdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c46651c-1def-4fb7-9c7a-43da09ec1fef",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d99517-8749-4ef7-b270-a8629a05e098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46502190-e216-45f9-8be8-11bb8d61a910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09814da8-dea5-4d25-8367-fe0cd3d2f4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5835533-c020-4e0f-a178-882e4d4eedfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8787e7e-02eb-48b7-8bf4-3bc0a349627a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8162b1c-6ffd-4435-ae91-3fafb36cd16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7590aefb-6a15-444f-b8c9-ecf48a263db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6216efc5-5531-40ad-b0e3-00c44657de36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c331a6d-6f1d-41cd-9f51-bc00c4bcaaef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bb7b71-2b76-4053-b9df-f528f26725e9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8e4d66-e910-4098-b7b4-a3048a3ee6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af6bf40f-ab6f-4ba5-a69e-cf0e2aa23596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0660b334-ed33-4dbd-88eb-6e00ee3348cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "565eea47-3585-4cc7-bf74-ae6d205510be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27548aa9-998c-47ca-b80a-43270e4ed6b8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b499946-92d5-4c25-aba0-bbaa781cf551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25221dc-6b04-4032-ad83-40a6acf2e0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6307c5c-2117-4f34-8726-837301c4a22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc0ca92-41c3-40a3-836f-b8392aabcb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0906d5c-9ce1-4c87-812f-aeeb5773b25d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457bc6da-fd46-4065-82df-a618b3900472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb1c5f0-bb5a-4b74-b964-8ca696f408af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490aa23c-e917-41d4-a938-b60790f5b990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e82d6349-3cdc-44ec-a02e-08ff64f983fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200ae72e-1ab6-4255-a9f3-372ed2f58c0c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91f7ce7-da90-4e4e-9ed0-8856579ca6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2310f1d3-1638-4b14-8d4b-a46ce452a0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a028ce1e-3be6-4f6e-b723-887b9809e414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb7d62f-ec7c-42ee-8858-32fd2b875f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd67f400-26a3-49a0-8bfc-59c1ed804356",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9e0e5e-9b47-4a86-9c8e-ae0491145bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d0ef06-cd67-4a4f-bf43-d21a724a859b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83388934-5048-4819-9dce-ef876e8b9cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2e5617-d3d2-4b19-86f9-2888c5d9321b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd4e560-ce91-4055-84c2-a021f07d8116",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7759eb30-b055-494e-918e-23492197f8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea31e5c8-2278-4b8c-b06e-8cb0d549199f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365e2f70-8291-460c-8949-b5c2808fcf76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "995e3d12-ea42-4a2a-9ce4-b11af9473d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a760ab8-67cb-45d4-8451-a1fb6052e792",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4dc5b1-ee19-4863-b73b-fb53dbd1edb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cecab69-1185-4f25-95fe-9a9f52fc7567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd41c50f-6a99-4f87-831a-8b9f6fa60512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "80f41580-a834-4858-a59a-89437c0829eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91fafa5b-6d13-4824-a29a-401f83918720",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c9aeb8-e74e-446b-96b5-a361bfeeb5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d71363-9adf-4632-a55f-ac574f26b539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dfa6a3-335e-456c-9de4-eb34e5f23acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5285da8d-f5d5-4b81-8d8b-b378a94de6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9cd327-a588-4908-9e70-26832471343b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de570ee6-8c96-47bb-8639-1cc4483e1d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08ef411-c0a5-41fc-9dad-b9321ea59d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5026158c-d076-4cb4-84eb-3cba49fd2d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6be88728-a7cb-480c-a3a4-de2291daddf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b993a832-710e-46ba-b749-dd7601d5c3ef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e908db-43dc-4719-b728-ab7fd18d8d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffac9f21-de11-4a12-8620-a7376107d086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f71ac5d-578a-4143-b1da-4252e9fdea64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c94b14e3-d83f-4ace-ae96-09259e3e816c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a825ef02-a1e7-4fb9-8764-76de131e9eb5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1615879-39e2-4177-bb5b-f15cff51941e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4deb7b-9a92-4582-b327-cf21617686c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0780fcd6-7287-4d93-9e7d-39eb6bbfd642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6ddeb5-b83e-4fc8-84c0-c9875765cc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882da15c-dfa3-4d58-879e-5ec409e848ac",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577132e2-460f-43fa-a574-8abdc4c321be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c20fa1e5-b63c-48da-8139-56ad34e50570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f2e6d9-e327-41fc-a705-58a71c22bac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b029d6ac-1d9d-46fc-8d57-25509658e8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910a5fc9-b6a5-44b1-b99e-d5431492437b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f56366-d524-40df-a717-1c7985b0ecc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9095da6-4d9a-4452-adba-7f8db4bcccc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fc4cf4-3da1-440e-a8d0-6bce83f7c9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e573054-c99a-43ce-a07c-e8c0b7323a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee9335a-c5c0-45c5-9ce1-8dcf9e580037",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b1c02b-2e41-41a1-9272-271f477cb4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f07f9a2-3828-4f44-9a1a-0ef3989c6fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b7f685-9d9c-4fec-8950-1b94b01d2ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db55ce62-ba33-4813-8418-2a13b8ddd24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c53155c-424c-408f-bd3e-85d500c7afad",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7009c49-9527-4b6d-99a2-2cc28b2f9324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa107841-1ca4-4c6c-abf6-68c32c4855e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cacb063-90d5-4d8e-a6f5-4f6f8e543d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccfba12d-d9e7-49dc-bcbc-77aac2bfda2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6dfaefb-460d-4b9e-8c64-fdf7135ae997",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264a8cb7-c6d7-44a3-aeb3-a68a6c307b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd595b15-9d50-4f21-a85e-876cc4f30626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b12759-a20d-4507-84c2-d2a47932db3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16640edb-d6f2-4158-92d8-bcf8d4099881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb473f59-d729-4f14-839f-fc7d4285b2e5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21021d1-814b-42ab-b80b-f95b20fb021e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a21fe8-3361-4371-b3d0-952fa280c191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afac0b15-0544-42e8-9518-378ccc96ddc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "34685e80-b0c0-4e23-926f-73aaf07c8ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fe5c82-27d3-4112-b978-009bdf355cf5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe64af0-69af-4caa-8933-28deede25fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b06c00-699a-42fc-800b-058eca98796f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17558938-b3c5-49d0-8fcf-f10cec71813e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f2af11f-16c2-4553-a9f1-5a637ac6430c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aafb2e1-e5d8-4bde-a343-23bf992482f6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911fd656-9864-44ef-9d17-0c10b8f5178f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cfa8897-6cf6-4881-9346-51ad4bd1b8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5afabdb-4bdc-443b-b5eb-5920bc659ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdca6961-12cd-485e-b9d0-8a5311a25517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825d1375-3b44-4500-8f87-921bfe870434",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9104e3-6297-4ac9-a52c-ded7b5ee3431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc81c7b-f509-4988-b235-019a92433bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3592b1-ba35-4ff3-bb6b-7b84b43372d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece83edc-58d5-4258-8cb2-4b0d33c5660b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d3ec58-e9d4-430c-bb27-3a830ee48455",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5dc827-8987-4d00-b379-57d8ec735f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af98abd-c3cf-46de-93da-aa879e4fc4d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558d0e1d-d5cb-436f-97a8-91a24a9127e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b5bea2-ae1a-4422-b124-762b01299b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ac4443-411c-4775-85bf-926ad465479e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142d2094-864c-44cb-b5a4-597cded72734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4256a198-d09f-4c2f-8989-f42a17549140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89affbd-332a-4156-a6bc-67cc196f5dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e77a210-408c-457f-b158-f602a2df6998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ae1ca7-4a6d-4547-a267-56207ee95483",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5084febf-ed79-4246-a639-31dd668cdff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259bb0fe-f57f-41ef-9967-fa9fd76c5395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4d1ff0-c62f-4114-aec2-bec87552ca39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61f80e8d-2afb-439e-866c-01380d01f752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0db17a-468e-4d47-8617-c17c38965e16",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b359fc-99da-4c47-95f0-b12152ef4e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb69b39-d738-435f-ac4e-f8e72ba99bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453ea0fc-b7a6-4b95-b6d7-85a194549dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ccf4389-0f52-43ce-8840-6a16d467fe66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aff762d-a010-4a87-a975-7b6c5986681d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "920fd3a0-22ea-425a-8807-8d6d9d4d18e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca012dd-3720-493b-af7e-8b80f37bb95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a4c25e-3aa8-4c55-95eb-f3cc9d673ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "281e8882-9f80-4fe9-9054-502178d7334a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8230f7d-804a-4288-8a4d-6fbfcb31c1d9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f1dda7-7041-4aaf-80a5-0958fe7d655f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb926f5-c821-4972-ae96-1019549cacbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd0c0eb-faf9-4bcb-ad39-97631500bac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27baea31-8ad7-4412-ab68-8f3d248ee6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c8f1d7-a7a7-421a-b914-ee4e7b5756b3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba6e40c-7fb2-42e4-96c3-ebe13492aff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a408580f-8bd4-4ff5-9591-d10b613b9e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897b6367-194a-4904-b8a5-f378a5d957c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c291ac16-e6c0-4dd7-a9c2-d2aa067c1e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becb3eb7-7728-407b-9885-4450aadc4215",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ccfb54-9096-489e-99a6-3e00e5058264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd1e53d-245f-4f20-95f7-a7c6911598b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ffbcce-fd23-4d85-8ca8-800042e248d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e74f97c-6906-48e6-a41b-48924cc6ab7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81bd943-584a-4d3b-84c3-00da8dea778f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd07cdd-58ed-4680-9dbc-12cbbd057196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6de7d4f-e065-4b43-85d7-c5b3e184112b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9aad90-f6e9-4805-98f7-992b6bf38326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a405939-7a0c-4220-a12b-4e6aa3538cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b395e6a-fba6-4493-bde0-f1fa49df6b70",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208aa89a-6abf-43ee-bd0d-5c5b35fe9016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef65177-9cc1-48fd-bef3-33f71b15caa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432a0815-5b7d-4450-a90e-bb9292471422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b29e836e-b231-4faf-a9ce-e3ce02131f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5655e7e1-c74f-4c13-884e-dab35545932a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6a09e3-92bf-4688-bb3f-826f81889549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f62444f-ebcc-4dbc-b936-30e213340d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9218b39b-1412-4fd8-b861-5d081fb18081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6ea3b6-9315-4184-ad61-b7a2d7e093f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a1be72-817f-43e8-9c50-c0eea76fdf60",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8d9ef2-9769-453f-aee2-f0e6a81de094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "034d295c-d37d-4c4f-b0f7-c140e4c9e1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26b65d1-1f3a-43d1-8b67-4170c6aaba4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00129e6f-ccab-4841-a7fd-9579ad5af7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083b30ff-f88c-4c59-b144-cbebbc2ba8f1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75108349-3d91-41fa-a7cb-154b2dd99b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac87c44-355a-4fa9-b4f5-f61f28d683d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39563a53-851c-4eca-8d08-1e73ccaf63f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f09d0b83-6f77-4382-857d-33c23a36705f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1ba409-c178-49ff-88dd-c772b33b4aa4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbfe6f6-fc7b-46d0-82e8-27416dbf0e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b7e103-834d-4b80-a55e-8e8ce6a8fbfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7e8f9e-e6f4-48db-b4fc-0c606186f63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6287c7ee-0629-479b-b0b1-129c7583a39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28addb8-110c-4050-9640-1c91cf157b08",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3d5021-33ba-4a1f-b121-9b9c223d8ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0d9432-ea58-498e-94ce-f3353542cef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2e6ab7-3fca-4b86-b528-6faeff1ae8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43c6bc26-f288-45f4-8ebb-c0ba224c09f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cab7ec-dd08-449b-898e-31b7836ba1c7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef32045a-a27b-4adf-8326-fd9e2d2bf426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb324f3-fa79-403d-a1e1-039a3c752877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fcd38d-4a08-4178-9932-17056c3d0d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9068243-065e-4aac-ab8f-53e3980d393c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e38480-624e-4c46-ae93-5d27455c23c8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2050acf9-8c79-4b34-a5ce-bb48f9f571bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33fca9f5-d6c8-4c37-aeb9-697cfad9a140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2b94ee-e09b-41c5-b8f7-3e5a0fccddfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2c917e-0251-40b5-ac5c-194a84222e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef3e929-339f-485c-a8a5-4c85f3d0e966",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b60646-a7b5-401a-aaf6-97c9dcb963dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c3ed34-6f70-4f2b-b9c7-71d7eb933127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd936a3-de95-438a-9633-c51ca53bc899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "54e2ee6f-098c-40ee-922f-279c1c183ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53aec86-fcb4-461a-ad45-f331aa914ef2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e173379a-16c0-46c8-9c40-4f81d497f861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0985539-1374-44fb-8df1-57b64ae99127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6b42a8-4410-47c5-9939-980e2382bd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e8c5566-3e32-46b4-a689-cfc4e4f13e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cce5ffe-a1d9-45aa-8171-f063a5b57b77",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d4023b-719c-4956-9020-241313dd90f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff59052-0e5b-4a28-89aa-9059b1269892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ea1c7b-d86a-4acb-a8b9-a722d35c65eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "39fadcd1-a266-43c4-91c1-086dbf5c9353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814cccfb-ec73-4e50-9e56-e85d91deb5f4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80bf8c4-d7df-4b5a-bed4-88b55c6af171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "499aec82-8d9c-47bd-9987-e9635ffddac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427e72de-9d6c-4050-b58d-374eab7202a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "663f6f2c-d6e6-41fd-93f4-9bf0c4e037e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "90da74e4-0960-4e8e-a20c-da11c8a3d5f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53d3e2a2-57b1-42ac-a873-2452529e64a0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc0a8bf-f022-4bc2-8fb2-8e15f7ebf74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4073f6f8-0b5b-477a-bf54-7b59f6ab5080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1da8b3c-4a5b-42db-bb55-6c8b33280c35",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f58df1ba-26d2-4620-a8e4-00d539293199"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f0fec14-4c9b-46c2-b459-44f700f6beda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7456665c-bd13-4891-a2d0-3c2098401d0f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50179d56-ee87-485b-ae41-551b8b3c7296",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a504c4e2-f786-4916-85be-764b85b97b3e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7ab58f1d-af31-438f-a885-36a2d52949b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3549594-635e-45f3-8b03-46803ac46c4d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96fba113-80c1-46fd-bb43-2d343ac7cb05",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "20e6feae-be17-415f-8402-33df5579b83e"
                }
              }
            ]
          },
          {
            "id": "1dc50798-bf8e-4f8e-808c-efb6a4f4fb4f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b6f75137-1910-48af-b0a8-b09af2d6da91",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1ef982af-0466-42f5-a4e3-ef6207a75230",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdba11f-08c0-449f-a5e7-38d4459083ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "22a00d36-4dc3-40c3-9446-2acfe31f7fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d419903-118c-4e5d-82c8-776ce38b7492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3275eeb-0b78-43b9-a189-d36e8957b799"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "749540dd-5b82-4be6-97eb-d6552c03ae23",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd76c9c1-aeed-437f-8e0b-1818a583fa92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1006efc-2e09-43d3-bc36-47ec52d99d00"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "100502af-31f5-4310-a0dd-f78004b7d812",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "869bc275-18a6-417f-a463-ed86c39e9d65"
                    }
                  }
                ]
              },
              {
                "id": "c2d295c5-5054-4f12-82a4-1bfff0143b30",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5ce1db5-d1a3-4055-916d-0b4d4996ed9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "458da2ef-8baf-4a52-b336-141122dc712b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21c44a8b-4229-4831-8a07-f839d830d36d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b50a1e84-a2a7-4dc3-84b9-7e1116429682"
                    }
                  }
                ]
              },
              {
                "id": "7d3a3991-03e3-4c4f-a73f-1b748913dcda",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f39e26b-bfed-4b10-a107-03a27536fdad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3bc39bf9-2dad-4b89-8478-05c313c6972f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "386686f3-aa90-4b4c-9efc-af678c12f498",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4d817db6-08ec-4686-b357-ad8eec5b5b8f"
                    }
                  }
                ]
              },
              {
                "id": "ad83e5d3-bb1f-49ce-b57f-afd8c9d4a0bd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ff929dc-f963-4ae4-9421-4f19920e4c9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d677b14-ec2b-4f67-bf48-aa636cae9289"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35e55255-1cd5-45d9-878a-9a1609be636d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "99d39a75-ac31-4013-a848-5dc843b7294c"
                    }
                  }
                ]
              },
              {
                "id": "24dc2026-e297-4a80-8099-5f0f5796e195",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00de9f7e-37a5-444f-ade3-27f40bde2871",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "66929087-e9bf-4f60-8d60-1136e9f62b4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75b45cf2-72bb-4cd0-bb17-8e954e174f25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c86afa4b-badc-4fd8-a971-5d788de6fc73"
                    }
                  }
                ]
              },
              {
                "id": "179948b4-7200-431f-9a9f-d50fba886d91",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80100cc6-4d8e-415c-ae36-66500e921aa5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c2a26b5d-a096-4b20-8a20-ddb4ec9da2d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4165873-ba71-4998-9eb5-e42ca242447b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "482c3bf2-bf56-4dc3-b265-87392e17824c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6966295b-8ef0-43a5-a477-6a5fe3e2d406",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38a559dd-af19-4a2b-834e-bce9b00f79a3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5dcc705e-dc2b-4bfa-b5a6-93ccf26710de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f8b75346-f471-4244-a35b-3f12c786391f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4f8cda3-033a-4d66-ade4-68b9d0d2b495",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "061e6a5c-8b9a-4580-b06a-13c6f2d8b73e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27bbabd8-5056-4a8e-8743-ad4400cdee64",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "197e85a8-d925-49fc-8486-0dd726a84139"
            }
          }
        ]
      },
      {
        "id": "468a89b2-1ab6-4532-9889-a059138abd6c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7782efa5-f8fb-4b7f-8dbe-d6d5d6608df8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a1ab8b3-de9f-4454-8826-6d0215361cf5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5214b3c6-f237-4456-9a85-ede59ea84b7c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255c2a61-0473-4669-8127-07961db3408c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06059c58-cf1b-4955-9b32-8bdde81aa6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4588e7-c6cc-4d28-99a7-c2503fe28e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "45c3c57f-ea73-4097-b0a2-0fbfd01c4fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6355d48f-0ab5-4b45-b0d7-d5588ca93531",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444ab98c-8f10-4b15-a284-71fb659cf9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30b9d8f-c2f8-4470-807e-45656622ce32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0697900-4b80-4555-a418-42995e8c6dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d1ae96-683c-47f3-88fc-77f3327715f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc63039-0305-48cf-a01f-cf693f5cac96",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579e23dc-0045-454c-8cb4-c394b7c8fe39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca329ca8-a5c0-491e-ad3c-110ac66deaed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacd5392-74eb-4c0e-83de-8f21fe03677e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a24d2b5-4e0a-4abd-97ab-3c5adff0e03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719dca5c-2a9b-4d76-a1b0-c52efff399fc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6dbd5a-e0f6-4aab-8666-5bd6f7b3b0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575038e9-f55d-444d-9d2d-ab5a95bebeb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849f3c2c-269c-4a22-9a2d-f0a61ecf3e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e89e5ec-703a-4086-a5de-be11c6b80f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad5ec69-86cb-4842-8d23-65707ccc66fb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339f4b21-2087-4e10-8ad4-b5eb4442cdac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58884fc9-6bf6-47a2-8da7-c1104bdb3b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a288127-efb5-47d9-bc3b-3f502ba0da34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "892e1ff4-fb7a-4779-85bf-57d05644bda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df1dd7d-95f3-4353-bc36-ab34add937f5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f8ff30-2357-469d-b8b9-b62c21bb55ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4958b34d-d59e-4604-851b-4cb26ca6913e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf25411-a254-4e0a-8cff-abdc3a6d86e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "acb0ae03-59d2-44a2-964d-ffa87ad93c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e2b5c5-a425-424f-8eb6-434d3a550f1a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5741e8a2-dd5d-4183-943c-395d7a620049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d7b526-6ec7-4259-834c-4bc68095790d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f67c843-2e89-4ef9-aadf-6143ebc11d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4dcc41d-313d-4d41-b33c-08445299059c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14994745-829d-4c66-8407-416a452e2bd6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1988b225-83eb-4bb6-928b-2cf722f83b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad926ce-60b7-4011-9371-4935a798d96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e14820-8143-4e14-aca9-638dcf920964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e187fde-2b69-4177-9f4f-66d12d0cbe39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbcb31e-fa9f-4e2e-b1a3-05fbd8bbbc26",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9e57e4-5dbe-494b-93f5-b936a6ad3e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841b6fd5-107d-46a3-bf2c-d59522e503de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2b999d-b35e-4ed3-9294-eab3e0cc1385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5475205d-0724-4eb3-a1b7-d26ea2ab0d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af7c00f-fe82-4617-9e44-9ead272945eb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053f2d2c-f232-434e-bbfb-856623c746bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc99a734-0a61-4823-848e-9f42384e0ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e572d79e-e01e-49fc-9ebe-2568606139f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40bd07b1-58ea-4aef-b7a8-ff7d8bb6df19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceef64aa-baf6-4c27-8ba2-627a0b557b22",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de040673-5ca8-4db4-973d-6a7933c57fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e348b9-9209-47c2-ae0a-cdd637fa4438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9641f646-75cf-4ee6-8879-4db4f1d5fa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "71234df2-f96b-4184-8392-8564628e3922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7942cd09-78c0-4c09-86e4-9a09ba7ce664",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74cbcd12-4df8-4754-8fb6-988a60271499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "531611c2-43b5-4b3e-9b00-99ef15bec70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f913309-7df4-4410-866a-9a9d80300d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35867cb8-564e-4390-a9c6-2d26a9c294da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802f65c7-cf01-4bde-9914-3cc71671304f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1997ab1d-20b3-4871-aff4-3e1c41eb6a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c1e161-71e0-46e8-99ce-cc2be43449fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05757bae-9bbc-4193-9ded-695f3391d36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "34858b70-7ead-4afe-9e4b-26f31398db2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998ff5a7-4a16-41c9-825e-fd2fb18372f7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fb4ae1-3c47-43df-b3f1-3c483bdb97d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8565074-ae92-4036-bae2-3bfeb36518a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e709b440-7772-4f89-b0e1-55184d821587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "92b0c79e-96cd-4fdb-9e64-3ceb05bd6eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95db63ac-e3a9-4c85-9f03-2ee82add340a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9d6a4f-7751-4cd6-b7ef-c55614bac053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cda70e9-1a74-4373-a165-0049acf20e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc8cdc2-a381-44f6-942c-92314887c699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3150b801-196f-464d-bca1-f36d58de54fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4081f723-9c53-4dd7-ab43-5470f8d9cca0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d5e616-29b3-4196-af68-c7bd6d41e413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d807b4a-2c83-433b-89cd-3f75953beea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce1ad1b-762c-486c-a6b2-af4736ba62c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a51787e-2b8f-4ae2-bc62-4a5478f33c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0972d470-cb90-4f4d-9e35-b882dd80ffb2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7333a587-c135-4849-a2e1-70adcebeccc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d954cce-ef1c-41e6-bf19-4ebaa3e031db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f81cf9-12ed-471a-85b7-367f3d9d7ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "28617e82-3de8-4495-b75a-7909c9680999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf1c305-f418-4a89-8a17-f3023caf156f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d09141f-afff-4aaf-8a99-3b73a4562e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9542cbc-24f8-43de-b42c-8fdf939b161c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797c07a1-f5d4-47d4-9f7a-9230047ca4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "468e7cd5-24d0-4f8b-bf40-7c4b956cdbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee42695-de02-4fa7-b925-30451131503f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d74ef0-da73-441c-97a9-6b24432d92a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c7c1f2-b2a5-4e6b-843b-e448c8225283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5f8ab7-892c-4371-a668-0346dcc6c3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7262f5-6293-4d52-93c5-0ed012029a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3aff43-3ea1-49d5-ba9b-cdbf707d689c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93aefb4c-4c9e-4d45-8fdf-1c05790fb273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d46859-bbd0-4d68-885b-83d5f944cf9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972585ce-4762-41da-878e-9af3de59b8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19900365-e755-4a35-911b-dde972b718ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa274f58-fa10-40f4-93a1-40e20f52e2c1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf31870-ae49-405a-8a9c-4ede451386b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74673711-0c97-4c68-b83d-b1bed70af7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c011cf-af70-4e5a-a766-526ee7ec25a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac8d809-489c-46a3-b146-260a1dd9dd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c830ce80-e566-446d-b656-ae9c8ccbd2b9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afa618b-a467-422e-927b-3fd041437f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce677cda-e418-4b8f-8bcf-06ce6b1f2f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a21042-ce54-424d-92b0-f93c7aafc911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6daaba65-23ec-4908-a69b-5200aff6cc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349a4f8f-b8c5-4543-a324-1819239a89ae",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5c59eb-1624-41f8-a945-1e561e6d0d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0bee42-c783-4e36-8d47-8b991ef5af9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50fe65a6-512e-42e4-94ec-6c59da2ff0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68f5b203-30f5-4d1d-97c9-396dcd9780f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee74303-76be-4a24-846d-815279fa4ca8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e3da65-c9c1-4e05-bbb2-51b1e08768ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ed67ee-b22b-4af2-a8b9-46f63e334bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ffa444-2443-40c2-a0c6-120079ebceb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c29cb1f-f001-497d-85cd-56e78733ab10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26120456-e59f-435e-b643-b10b02ab5b78",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c91ed0c-7596-4ce1-9e59-f7950e860e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91280fa1-1f49-460d-b859-99a5e0a95149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ced6c6e-299f-4c3f-8a20-c7373d61d2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "425cfbfb-0bec-4b90-b9ff-e02a03f70e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7989fed7-90fd-4f5e-a923-bc7c1e29b496",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d18821-8d66-4418-8ace-6bca44e4ffb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4dac21b-74f8-4aa3-ad83-d388f2c9fed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7bd735-58a9-445a-994a-dce710acf6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3cacc4-30b2-49e3-b95d-31071f66fbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9518b53-d647-4467-a9e4-7ecfde682e51",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8f4b29-9956-4ed0-b08f-44c822ad4786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af98572a-c3a5-4a18-85ce-5085d65fd4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76236d3-a6d3-4b76-9acc-2b843cd35ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9628e088-86c6-467e-8f12-c0f0338efc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfec53b2-60b3-49eb-9539-0b367b477e09",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3d6c00-f798-431e-9d1a-d438f2912016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097bc292-1f71-473f-9f45-b021869967cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3000ddcc-9bcb-4e14-930e-c332e2658565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a913a6b7-f995-4775-9e12-91eb70ba5816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5127f66c-5660-4daf-badc-92e278463e93",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a81479-9a85-493b-a714-fdd69da28400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d6a01d-ecd8-46a4-a3eb-6f7bd87db526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f1d98f-6de7-474e-9a35-da811f080297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95dadc0a-80da-46f5-bcf8-84c9a2e4f58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0fd778-94c4-4b7a-ab46-73414d19d688",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d515ec94-5540-4b1a-8b6a-1cb1d01c3097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03abe25c-533a-4223-bfd1-c937871f43a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d1ab90-9873-42b9-bd82-94d7f6745f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54589128-a88d-402d-ada0-35c002bab6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6547cab3-2994-4c81-a449-70d4fdf2ebd7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966ca89e-eea0-460e-b4fa-2789bec8dabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91481f54-9c3f-4a35-ac59-db7e7875111d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4bc989-2876-43f3-afa3-8fd75cc68e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "252ae35e-5e91-4946-b8b3-c49504705b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2304ad72-fc27-43b4-9092-a06d1391feb4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee793d11-f123-4a22-8d7b-bf3726182d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53bb5edd-d872-4829-a749-83e1b8478c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4458b06d-a1ac-4f24-b88b-2795e2383bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10e382eb-7083-48de-b144-f50b5108901c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc889418-dd43-4e3f-86bb-d6d9fbf4f385",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "599a4db2-68fe-4322-8fdf-d0fcfe7b5a53",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97511a5-f766-4442-b527-01fdebc35473",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f3cd72aa-a002-4c29-b6f9-d90b647df7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7307c9a-0ed8-452c-9f61-0490325d3fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6938285-5391-49b0-ad0c-1bac6dbef2f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22f9fde4-24c0-436e-96ac-9c74325495b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0ce6c3e-2fe3-4e0c-867b-d16bf08bfebc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4314930-e86f-42cc-b440-493d21d207af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b83eeb7c-4559-4305-bbbe-4981913744a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bd36d62-82ce-4663-8214-7bc072836d66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "528f56ce-fd19-4233-9fb9-509c812e7f0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4abe04c-398d-4adf-8cf8-a41112dfe32a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d4c2b43-3d5d-4cd7-bfe3-42c7f090ab02"
            }
          }
        ]
      },
      {
        "id": "d37d65e1-ae53-4d0c-82ea-57e299d842ef",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2b84edd3-bd8b-41b4-82b6-42a6a82d6b99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "361a3de9-dbea-4015-8ddc-96f4b71a0ada",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1102e639-6990-47b5-9bd9-8b1bc80e3f90",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad2a18b-f9f0-4a01-8ced-b17b998e7089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e0b759-3f9a-4089-815c-df543d59c44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83a7710-6efa-4293-a872-6c4d60086023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeedbf03-5b33-4fc6-adb0-4614c1e9c04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aee3163-ab48-4d2e-accc-0777b287aac8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792d135d-ca3a-426f-8037-17fd5250787b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e8e1b2-0717-4986-8a1a-6fe2a6678364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6505603a-1f27-4f63-9346-4859d1aea327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64cf7591-246b-4009-9e97-e97f6d333180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cef7bf9-7e57-4677-9234-df0354ca8e29",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d04bb41-cb67-4096-8226-3b32ce097a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe90676-4f94-4fbc-9d92-f4b87d4a425d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ffec83-a422-4fa9-8ce8-183b0c62d618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79d94efd-dbc8-4be5-9e5c-8e3c6554e890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2684f6dd-ca33-44de-9c74-149d9ca5ee53",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009aac1d-26f8-4f87-a651-6eff958197b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75643adf-9e37-4487-9872-d3778938623b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da99cd84-03f8-49aa-9ed7-b7def348cca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "727401d3-b3a5-4174-b547-5879689bd261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d5db62-e28a-4926-9323-65b4b8ec73fb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bca39b-e945-4e25-9484-5cd41abbdaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a72f470-2753-41f6-9411-b50bd2a8317f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b9fe70-2439-4f93-a27d-19d72186f114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "301d4447-b289-4f58-91ac-03b22508b779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40edd2a1-5e8a-4dfd-88fe-9e6a98aed63b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2545f63c-84fd-4578-9748-774d6851e871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77329714-fc03-42ab-a588-bd7e11578ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a19364-a09f-4641-8ae7-529470317732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a03be4dd-1fa0-4951-b242-5075fd2f1c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ab81c9-a768-4740-adac-7ab8e5b59d01",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fbc41f-1bc1-4cef-95d5-1d533b4f863e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570fd1a1-3965-4b65-93e7-c3b42aad6c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddec746a-b8aa-4a9b-9e93-eb92560a62bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "02a7c7c6-a058-4848-9d9f-516829dfb531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619b0221-63bb-4a59-9bda-00f891de4be9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14f4017-8bef-4b67-91fa-659ce432e26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3280ea5-424e-4c9d-bfc2-2128acd9cc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0f42ea-a530-4988-9dc8-71a1fffbd451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cec3b66-53e3-4e3f-b756-3907d9c0bf04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9dc716-1274-4553-857e-88a30f9fd510",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c8f2d0-af53-4013-b8fa-ea09b43176e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a9fadb-ac6f-4056-ae15-b5f7ef67a521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e7c72a-45e1-4f82-b1f9-d8d18fad9f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6726e360-4c1a-4770-afde-913edddf356a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4ec4ac-2999-43f3-803d-83fedd1b11ad",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a428916-82b2-4f41-92bb-9b719477f786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f5cf4af-cf30-41d1-9d0c-89e5439ef70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed08480-10bd-48cf-9364-e21bdfe853b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e170d57a-770c-4aad-9072-3ef90096816e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb90f15-6fdf-4cc2-bbe2-b2bd924b9c69",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd875348-e1c0-4a20-aa93-80841f7d909c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b92b45-5bd6-4514-bee8-c9b705caeb57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2894117a-3b10-4434-86fa-bd129ce0e8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "21c20c75-dd5f-45ae-b9c5-a3ddcfa48fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e374a7b1-9a11-4c40-b2f7-bda6ac8f3eee",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90d6090-ee80-4fd6-9d87-5ab8f4d6959e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c0806d-6fba-4a66-8ec2-44744cf1abc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810e11f6-ec9e-4fc6-8cae-7a6de1329ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6323cdd-33c9-49cf-87c1-64892b46fc16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227dc8fb-a08f-46e1-acdb-e775c03fadf2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023b4b1d-79ff-4bf0-8aee-ec4aa069231b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc0acdf-e01b-4804-a887-2d0eb3e47aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1309e9-533e-4ee7-9d31-5ac6be9f26ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88c5648c-5e97-4fb2-a2e2-cfbf6e0fadd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175e725d-8daa-4bea-b11b-f7bfbe24db20",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee788e99-38e1-40e4-ab4c-8753f7025db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6faf6f42-e09d-4b90-8ee4-20af43e3852f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bc4c45-0a78-4383-ac65-fcddfc0f4e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e803318b-491d-4c9e-979e-76c9ac6911ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00766297-c270-4d11-a743-c503597ddbb3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc7ab87-e6e1-4c58-b77b-8013fc32efd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2320fc31-5ae1-4e06-af4d-fb557a5b77fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d06854-d463-4bca-913d-d87132bbe219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e9d0e3-e493-4121-ba61-574879c50915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f674fcbf-4499-41bd-9e17-c80eafdede60",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d818d0-999b-402b-8ef2-8553974a5bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c1d0cd-18a7-4a46-84bf-dd4675d32c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c604ce74-4c1b-43de-a1ae-0f10e1c90bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f9d92b-d80e-47ba-b194-c1dd25da43e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23539829-f5af-423b-ade4-bdea55fc710a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded53c82-8945-4776-b4a9-fe6effe439d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fae4b57-b013-497e-9272-fb80e9898ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25cfdd3-82a5-4f88-86ab-e416c1999df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4faf4571-03e8-47cf-9820-ed78f4e0e64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02696e2e-f210-4ce3-9188-9cf71c8c33f3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbb8fc6-db32-4651-9d1c-3bbc2e83ee0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987ecdd1-98c9-47fe-a937-f2f47565d308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74460ca6-b7af-47da-914c-958ff96bcf41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f21271f6-44f1-4cf8-8c6b-df09c600f7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915a7474-61ed-420d-99f5-d8fe05d4768a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccaabe0-ac73-439f-a1be-49ed336a4721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be10003f-0938-4daf-9404-6a0641fcf0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65f42c9-0153-42d3-a082-7a06b6ecc64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8758e8-459e-48a2-9112-7114cb328f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3450eea9-4931-4019-a891-097aad6d7d4e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0d7353-41d6-46b4-b919-fd9713748897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5f412e-c2b6-4c23-95e1-5aa35cd40db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec81991-478c-4ac0-aca4-4f8a4fe06186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c63361c8-e3c0-4ee2-97be-99621e1b00f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63aaa66b-3001-4ea1-91ac-3c3532bf2d2d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201e4b1d-4520-4d29-8e2c-1b22b2971ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d58b351-4b03-4541-9ddf-45421eccdb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82e426f-7258-40a8-ba2f-87862b7c54d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fda0d99-5ac7-4869-aa49-785a4298772a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed7c760-7a9d-4b78-8b69-3277291163f6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ff06e9-b7a3-4d53-87ed-ed141c357fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8367e199-d7f6-40fe-992b-84e49c4cba0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e71b329-534c-46ae-ac57-17684180b9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d36f05c-d1da-4420-8d62-859de1a88a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcc650d-34d8-4ee1-b32f-608b1518a0c6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84382ae7-14d0-42f0-aab5-312f3981ea85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f34411-eac7-44e2-988d-eed18141b18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f97a15-9994-4a8f-91e6-6fdb1215e01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8553ef9-85f7-4521-ae39-6b904d4a38f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501b126d-4b2d-4c1d-b67e-eff2414d8fc1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e0f0c6-5c20-4f9f-a7d3-9f0e89612c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6606fd8a-1c4b-49c5-9182-aa3aab0eb76e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb39062-522b-4807-aa8a-8c18406182d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8e7c2f-b6c7-493a-b7e4-066489409a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a71f3b-523d-4bf6-b2e3-79aebdabfe3c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d40aff3-94ec-41c9-9bb1-0ec6f0bfbe1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c521b1-f11d-455b-8403-23a9428940db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f53ba06-c042-4c59-85ea-6689493d2ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6341dac0-85d3-4bd9-97da-e61d7a0b463e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc495a4-0710-4237-9370-d5b6915bc3e5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ed4856-17d6-4870-8832-9203d7f7022e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80199ba-77ce-4e37-b070-f8e34d06f31e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8899edf0-20ef-4892-aa99-5648cbd85564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3f17ac-de63-4047-8b99-a232e6fba556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06421902-887c-4b61-8797-1835476ea06c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76567e02-cedc-4129-8ce7-c4e6b5c03e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4499065-26af-4649-abcb-a72bb81f2df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d9c3a3-8b4a-42c0-9727-63c2931817be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c00061ed-c503-474f-99cb-f455f1f8f7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40223be8-58ad-45ea-b6b1-1d7bdc73378d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898e7155-7e89-423b-963e-747d38c4b174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7333d81-2c16-4b42-82a8-742ce213118f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fb25b1-a80b-4934-93f8-a8b3ab61a499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58e2d68a-099f-4da2-b282-6f89e3989ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e75fba-fa14-4ff9-b78b-cffee3bc3029",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf78fae0-9f64-4d46-9327-0345dcf59cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e741afe-a94e-452a-8a20-c1de29562968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a75cff-4c2d-4fe2-9707-fa7f5f1bd2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1ce8b7-f048-47e0-b2a6-94765170bf02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e236b0-9100-4b59-9c38-14db8019a3fd",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3059d5a-7a69-46c0-a4e2-40261f8cab61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af0ee63-6fcc-48df-8bce-ec002f9ca623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fe4e62-41c5-419d-af88-4973b526f432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c40226fe-7b95-4fe5-bc62-c356dea8d56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e1edff-2ccd-4e20-91c2-f4c0157c2be5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91af974c-c2d1-46df-8dc0-65ba922fdff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f46ca450-4e3c-4a6c-b4dc-f94d58dc5a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9561b9ec-763b-46fa-8901-bc73e1efd0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85875029-1bdd-42fc-9dc1-2b393b8af8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b933ec1-f731-4647-94d1-c587c3f01e74",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a81742-c672-47ee-a225-1d73f3042fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5595daf-0eff-4101-aad0-848e81890d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5295a3ea-d75a-4b53-9462-8f55cca0de5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dcac72d-3589-4abf-9b3b-a788459bdc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f42253-98fa-4eff-882f-914a1506b45a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e320210b-d80c-482e-b21a-8009f79e1b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a79828fc-90c0-4010-b809-d5519f39bb7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0815cec5-5169-485c-a3d1-fc959f8a82ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d61f3651-bb16-4844-9ff0-ab3b0867af71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9bf8bb-a51b-4690-bcdc-e1516d34a5b6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e915316f-92ef-454d-87a8-b518c9259a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7da518-3aef-4d5b-ad1b-33a73cd0b1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059377a5-60f5-4743-90af-72eaed7f4319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d50730a2-f08e-4463-ab1f-ff1f7e3c6f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6213bb1d-5866-4f8a-89a9-7c9803a9fca4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cabaa4-9a8f-496a-8e07-270aeb905b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843cee91-05df-4eae-a1d8-aa02c8610b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c1b83c-c284-487e-ac39-d70f23076a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc1b08e-9faf-4eb1-adef-05a8bc0d1e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ec8454-374c-4a11-9ba1-f0b28013ffea",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccbc74f-cefd-4d9a-8bc6-6609476dcb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f20d55-c7c7-404f-af06-1251b0219831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2bc4fb-1557-45a4-8a1d-031d2eba4b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19122c10-a939-41e7-b9c6-160ba03b28a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228ba755-9154-4e13-819e-2445b0ada56b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197182df-b753-46a6-a058-67c6e50aa661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db18232-ea31-47fb-af60-2d4a1a333ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b343094f-ea48-4837-922a-78c7f3c8bfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fbddde-19a5-4889-ba6a-440829bd59cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9688b2db-c587-45b6-b97e-8415331ee993",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b50fec53-c16e-4db5-8822-b75957f43a96",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467e43bd-ca94-497a-b534-9207ad82ff90",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e806ab-2f49-4eac-a206-856813c7e855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "728f97cd-ad86-4fa5-85d8-d1de963f6cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d48d17e-a388-4cce-97fd-3c0e68026ad9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eaa47c9e-5680-4826-8391-8ea11e551185",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d308c5bf-db6f-420b-bcff-8fc8de040795"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "022ae91d-d98f-4538-81f1-3e6a99722564",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2540a6d2-5486-46b6-a2c4-8df48e6c2523"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "790d7a7f-fa8d-4f9d-ba66-09fc651a815a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7dd92a79-0e6a-41a3-8828-e87a470eb19c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "890076e1-73a6-484a-b94a-369cb30b2882",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56b6939a-c681-462c-ac9e-b6ab0d5e63e9"
            }
          }
        ]
      },
      {
        "id": "a4022fb7-b40e-45b8-a7ea-1ee1013638e8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "27db34fc-d2c8-481e-9e4e-6c5d62d7d7e1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f087bd0a-8a9c-45cd-b511-21d5891bad62",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1895c54b-57b3-4f0b-b929-56058e9f2b69",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7252a5-9f9e-4d4b-be97-426d1d14797f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a322f0-a35f-4890-9613-59a5a4ccf5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec2b4f9-870f-400d-8ffa-52704cb19211",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531f9c5d-8215-4cb4-bb1c-eb1c34c97af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bce97ea-cb43-460d-8c76-802b785a0404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75db5e1e-43e8-4cda-8f7f-63e09593b08e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fcd87c-aa40-494b-b252-39d50f5eaef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a679c89-c327-4501-b644-82ad232deb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eecb46d-092a-4e5b-b902-56e26a9ce087",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7edb78-db88-44b5-abd6-51d46617fd5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c9892b-e864-456c-82e1-b1cfb2c61130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96e0707-6a4f-45f1-ae5b-15ea05d6c7aa",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733e8665-006d-4936-b2f9-5922a9d7cbc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07de8e86-a35c-42ea-b875-9cfe52bf2377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5575edad-8367-47eb-95d6-6b876715e345",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5e290a-5ae0-45be-a751-9e6e1656a1f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbb2c07-116d-4232-9c66-88d2e596d33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c5b852-c1a6-4a11-9783-f11b27ed4427",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae51c52-1d74-4805-80a5-88b57d4135e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89bf6d31-2f1e-4137-88f1-ee73ee89c9ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9332216-52c3-4ff0-8f55-41a7494d638b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f892c836-8603-41c0-b5f7-92b6a6b30425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198a9077-46f7-45d1-8c11-56d9080f3e52",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6346536e-c98f-4774-9a69-e4459b846f46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21f4e9d3-af48-41d6-871b-f038c4864d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aadfdcf-5d2f-4359-ad00-47e63c6a8c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b96ff3-8aac-4329-9660-1d5df1b3afb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2655c928-c865-4d8b-9ba2-c5de8237a5e9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59872943-7e74-45d0-add7-ba613ff18b5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69eb9e01-f2c7-4c5e-9bea-8739238e2d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a84e93-020c-442d-859b-059ea01c5cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c585a27a-5dc6-4c0c-b05a-242c108a3906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d6cedf-036b-47f2-9bdb-ef5b4826487c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891c093d-2be5-430f-846c-2728ba2e56f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1917fef-119d-43b4-ae80-877f2b94c09d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c23615-9954-4461-98bd-a5e3bf0ea52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd34b73-4920-4316-805a-057e2220b92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34101af-24c1-410d-83df-bb5d46578eb2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fea2f3d-7a1c-468b-a9bd-22de40461bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4aace42-654b-4d7d-83f7-79de78ec296a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5a4b09-2673-4500-af63-99a78abca99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3098b1-5819-4a4e-b821-9ba03d98e5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c56066-b612-4151-8134-fb3e1ee08022",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d141b8-20b6-4df5-8e24-2ae2f21a552f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060bb353-64a3-4215-9e47-07d7199a5404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c456b5d-c206-489b-8247-521df2e91d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d881ff2-851c-46a6-bb66-55976175138a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857c92aa-efbb-483b-9bc9-9480beb8fa14",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d8a75a-34be-4b0f-933e-a6368fb30af0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "babd5746-c75c-4f21-a9af-b1b52dbb3782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea28cf8-b011-475b-ad42-8e06b80c5d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd37a63-83a7-493c-8d05-a4661ae81e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3333c326-c50e-49ef-8c90-2662941fb596",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bf8e16-416c-4e61-b830-421fdfc07abf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f75ea3f8-7c87-4549-bf9d-d6b11dd7cb64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b595f0-a27d-4b7d-9042-716240522e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3403fd28-210e-4e52-b6f4-08f640891c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fcd6b1-5f74-450c-a257-b0509ac95309",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c47c8b-3ddc-415d-b189-2f2be8b95c47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2570713-2bc3-491c-98d1-9be8e38b99ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee1f4c9-9245-48e4-8ab8-ec40a57519da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9491639-1521-4539-8c54-99eae91f339a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebc481a-beda-49cb-af98-907740f40e2e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e72b214-f73a-456e-bfb7-be175b7f7144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a2b1886-7b79-4e1f-8bd5-3dd91f43076a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db059ef-3346-4227-9ebc-e54bdc0131ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d54b8eb-9206-4538-ab3a-cd4a40e985eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb002fed-45c4-4fc7-8d3b-309390db03e1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e323d2b2-75fe-46da-bc31-c1052489f3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1eb51ac-deca-473b-845f-f4a54c412840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4751faf9-6548-4804-b4c0-3d635a7997f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f57d5b8-1c7c-4bb1-985a-3e722322516f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a697f4-86d2-45d8-a4ec-d5b7878fdd91",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f546516e-0d00-42e7-98e3-2526abf91f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7897e968-4e2d-40ff-a42c-2dd1027a746d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c27ebdd-5f36-449f-8efe-6d85cef75647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f5ac4d-014c-45ee-bd1e-9eb8a42898b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4f180a-fde8-4d14-ad92-a7d7a7d23a0f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6cf36c-e002-4a73-a055-6d2dbe780dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a714fbb-ff9d-47ee-8f34-0ccff5bed44f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a082230b-2d6c-45df-aedc-7c8d846ae80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38d4a18d-90bc-4f5a-8424-bfc4dfd6cfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a46af12-4a4b-4009-8bbf-642e60a13a46",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6f0e55-446d-4638-8ad5-735cd88c5335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ac8228-b843-4029-a96f-55a79f282fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f321e5-e9a2-4451-9c41-5db48dd07f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b9b251-e8c1-4b93-9c11-6459486fece2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3886efe3-7931-4a05-9c68-784cb05adceb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6b35b0-b27c-4bf8-aa9d-75312f4a182e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3c8074-64c2-4970-937d-314c6e18463d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11665760-4d20-494b-ae91-8f96f57f41cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9636eb8d-c689-4133-8cc8-ff114dd7eb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fc52b0-b2c2-4ae2-bd2e-822a9c6dfc09",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6335a7a7-7672-4834-8bda-36533e6b5005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52edf5e1-0fd5-47ab-ab94-719f109ff1cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaaa5f2-3573-4030-953b-b9394f72ba6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a72b9f-27d8-4682-aeb0-f8822cb68f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ea5b1a-acc4-4fc0-abcd-75954becfc59",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97dc2eee-c525-43f3-b0c1-b7c8fb711619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e1f7fb-40de-4a25-b865-b6ec458c3303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4718bc-c10f-404b-9cf5-626633ee8113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3092b7f-8d99-49c7-b42b-4b930d51c3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b0fc85-fc0b-426f-a82f-f24731ecebbb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b239fb7f-1d16-4cf0-8f62-f6f7f20a23a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0687a6bf-4b28-43c0-85cf-6a81c5160898"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2c9651-82cc-4efa-a87d-21034ad1bec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faad91ff-b3e7-43e6-89c1-ce02e6d47d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a431b8-5ae0-4e2f-8852-847e9397031f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b72d13-1de2-4a17-a648-b9c29d48eb4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb89322-bf3f-4a17-8592-f8d1c1d48fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea34c7d1-5431-45f0-9855-5376c69fc76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4a733e-d1ea-4407-82b8-8beeb3c0e8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7ccda1-1eeb-4aea-a15c-830b9e55031a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7a884f-1611-4398-aef2-17841a3a2e68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ce3d3e1-0f4a-409f-a129-66bae5d56f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e749c998-08aa-4105-8110-70543a7a1755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5caf6691-b83a-4412-a494-34a448ccd0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6962c8-d191-46be-9873-9f4e3516fef3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c08ac6-9039-4bd7-a4f5-475949ab60ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01f71c30-b9ce-4c71-a9bd-f2aeb5b730c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ddc386-9e20-4547-b1ae-76eba7e8963b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce76df81-94bc-41ac-b8f8-c8e0d0bcfdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4a8a0d-cdf4-4f9f-af97-0aed48c85c32",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a56e27-1685-4c56-ae80-458cfdba72e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5de5bb0-2a5a-4d58-b81f-b37b0854860a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0350f977-188a-445a-aaa9-e7126fffa6e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59bfb77c-7ca2-41f6-9cd1-551741a89101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aece9961-cc71-4597-a823-7ed0d0f3bec5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c27d07-0a86-4a73-b8d6-ffea0e1ded92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5877aa3a-07d2-4ad8-b554-f69156695900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f1db9a-71f2-48e7-9395-324fa8c5363c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf87717-fbd4-4927-8170-ede3034e7bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8f429b-326c-48d5-b58a-7b6a4d54f0ef",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52343868-1282-4f08-9658-258916282bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cb22670-e066-493f-ab90-cb4543ff709d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b5bb44-bfa3-42ba-945f-585bd5df7ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9004482a-eb04-4e83-826e-b53401a3aa32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc1c43d-484e-4a52-84b6-d08705a16028",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659d2b4c-d44e-4401-9940-56ab4a7bc153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbfa52d5-f5ee-4f07-8976-d56d336fb5be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f05942-81e7-43a8-a865-847f7ee39e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7df0235-437b-421e-a052-a7ff2ffce487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8014ac93-715e-4f98-8f20-07419277090e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b6016be-e8ea-42d9-84a1-d57d695d25c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12553479-b232-429e-9575-5b65ec5067bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455aca03-f99d-41ff-8ae1-4e71a68f4aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b8513c-a68b-4e64-b781-a1e1f3162b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de691f18-698d-4a7b-808f-7b2d37ec875b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8776ff6-0166-4479-bfb5-cbf2c9a6f03b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36c0e144-c60d-4e45-a11c-006af2e0383d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de34468e-b5aa-4d9e-8a04-2182e14e0af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6250ee25-5244-41a4-af23-31e9cad191f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7750da2-e016-4f8b-95b9-2f272ff5f8e6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac96319-5cbe-4ac5-8c0e-d1cb29d2f540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e695de9d-c629-4b7a-8c4b-98a2bd7cdb66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35f2784-76a9-4802-8a77-af4698f660b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab9ae9f-c1a5-4706-930f-02c89f0748b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158fa205-7fc1-44e9-b079-0ab121b4018f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5be666-063a-4b54-a9ef-c0277d612f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6960068c-aa57-4a1e-b586-3066416e021c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6641a6-5548-463d-af4e-cd407e7d43c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aadf3307-67db-4162-977f-dc57f7620e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f1fb28-7052-4ac5-85d0-84e63112d85d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5bcfe6-94af-47ca-87b1-bf3213f261d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b454ca-f0b5-4e40-a7cc-dfb02bf2452b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9fd339-f667-4bd7-bb89-80c8a34b15dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e53783-054b-4e21-8922-d7d238055806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675d5b32-2e0d-4a2d-82dd-6801d2b28425",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e39d85b-94a4-44b7-9ea2-a71abf0e4aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd232959-5aa2-48ef-bd53-c00c4b7e7b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf86cda6-a124-42cd-8f5f-30c4c1b17428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b6fc98-9c68-4ddb-85c8-0e218e1202dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06088f09-b8ff-4190-af17-3d57bbf31c58",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9ce8a5-b329-4e35-8c38-798140c39242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1d243f-2605-483c-88e4-88b91e627fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a500bb8-c2de-4cb2-be6b-a212a3e74755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b8daca-24d5-42bc-ba11-30d59b8abcd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967fdf58-3520-4155-b39e-b28643a4817e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f2390e-485a-43d0-b43a-e13119ffcb1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13e33b5-f0e0-40c0-9141-1ef97322abce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6980d29e-6303-486f-afa2-d329465452d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb211d89-dba8-41f7-91b0-f94d26eca2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36791006-5fa6-4cb9-8382-545cced46d3b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc450379-8609-47b2-949f-fbe3aeafb7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a018c3e-201a-40bc-be6e-8a7fbffdc29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f539753a-c017-49c8-8c7a-f55026289c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef200c1-51d4-4bda-8bdf-bad14eb0309b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdb0ee6-5996-45d2-89e7-22fe372ad3e4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8fd655-3a7a-4fbe-b402-0f67eb4241ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9ebf42-a507-4876-b948-d3dd33bd82fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373d0c70-5966-460b-a2e2-828ea202bcaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3250d74-66aa-4f9e-873a-146be2c1cb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88ff52d-fd92-4422-9ff2-3e38d8da6a06",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccdd244f-60ad-4fee-a79d-ada9c537bf7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337efeee-b6cb-4ca8-a529-87372d168071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20235292-06c3-4b48-b125-2ccb1bd8742d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b16a88-fc18-4fc5-bf93-1b7263377bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e21434-865a-4c35-8582-2a61606484f3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1284073-bb46-4f77-8be0-7f06145846f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a4c274-5fe5-468b-922b-4673b2c302a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef804ba-24ab-4e90-bce2-e57ed21f8471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653e5214-3fce-4d10-9bc2-81a969d21ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dc9e74-c6c0-488e-a9e2-fe76d5460e3e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3798800-eb99-4e3f-bcc2-b5bc38aa0e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce0bc64-bb3c-4cdb-8908-af2c872f2b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbbf39b-c6be-4a8a-9def-8b22fbe6a590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1683c9b-1473-414a-a40c-00093072ab50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e572be2-d2b5-4fc2-82d1-c9b76f8df5b8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800d0e31-254f-4b6f-9b06-d6432c8b1242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c91b92cd-13a1-4d4a-8498-14662fa7b121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8075540f-20bf-4a0b-b198-87b500691f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3f82a4-829f-4930-843b-e434205df4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300aa977-2534-4399-9943-77978d444b2e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87a0580-b085-4be6-bd93-a28a044b97f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bb9245-8590-46a8-b551-0e1e96334a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688fcd44-aad2-41bd-b502-1cef55a97990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5a6cf1-7ec4-440b-af33-c98352aa9af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb0b2c8-5823-4cde-ba03-a66a0a7e7acf",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727b3612-3650-4991-a5b1-68f22e742898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932ad44d-aee7-46d5-be87-98617a382c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b072e1b-bf1e-44c9-af03-8d73a5d46cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7513742a-f16e-4a36-99c9-c6c42734671e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4824ab3e-f261-4477-afbe-1da29aa90cf0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb6a4a7-d609-4c9b-b41d-2ac85960f7f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7dcd3af-4499-4616-88bc-6158997bef36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754a32b3-af75-4209-a7ca-b8fccb09749e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d98dbb-04e2-4411-846d-86fb10b4f8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dc6408-055f-4dc2-8aba-0a2f63effb2f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eefd001-f4c8-41e0-a2d2-ef4cc7b2812c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d553de8-f0a7-4282-a285-32f8e02a9fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857b630a-f32d-4b36-ae1c-98034362a374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959ffc2f-7f73-4df4-8aae-f83b584d7616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4a8193-dbf9-4082-a8b1-f5b55ca2ba2e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd9da90-428b-40a2-8c32-a2700e9cf43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c7ac74-0605-4c06-a38a-a05ed7192f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da892427-7fff-4bda-a11f-340585e95ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee85e1b-4fcf-4c2f-95aa-4ed23526a8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504b9581-73ff-486e-973f-141b05e6a20d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051b3761-322a-478a-9005-f8182d177672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711dcf94-4d12-486d-9810-9b9af6fbc9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "033c090d-648e-450e-ad52-04170f6556ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25225b2f-4553-4104-9a73-a89f724d6624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21e7ed6-5693-44a0-a1d5-3671e44c571b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b32ada-fc15-4345-b738-b762b7aa0211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f5da4a-0e7c-457e-969e-3693214e136a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2906b4-4d6a-48fe-be78-41668c083b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c7b5e3-157c-4545-ad14-172f4a478b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64aeb0f-fa21-4954-b6d8-5a6e1742f4a9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50eba224-3a26-424b-8ab6-d051e37740de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e195dff-22b9-44bc-b67d-45fc340d9c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c527e4f7-3416-493e-a49b-410bd3aafe1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c70946-4cd6-4027-a627-5df105a11ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf22ae7e-dc2e-4d0e-a130-7c9101ea35d5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847a1732-98f3-4ff1-8dfe-cf757cbad7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc897af1-5963-4f0b-b10d-634cd4429d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c80280-10d1-49e7-b4f2-42cd004d3c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995976d8-277a-4078-af66-802d1c8be8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd79017b-01c6-4ed4-b1b9-f8251b0b69f8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d2b382-3978-4770-8ae5-acdfab1d4aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc649a4-9888-41f6-b393-26557d304f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5142b42c-b416-4b80-afde-5443df1a5a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201805ce-abff-4a1f-99ee-5f371ce5b52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad4f692-d61a-46ab-9909-8ffc52c5da49",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2f4cc9-6bc8-42ba-a210-2f5f3e777238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d802c7a9-2538-4cdb-ac66-92d691c4157e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a38bf4-4122-4d6f-b51e-6ecc81bc8574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309dfd91-f21d-45df-aa47-492e1565c313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1eebb77-2f92-4c80-9c23-a36e0f901003",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5c6ea1-d399-49f7-bcc9-dcc2836bbd47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8ad7a0c-bc38-4235-a145-e855b0cdbbb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a224cc18-362f-4ed3-9d9c-a23f04539883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674e5b20-26e2-4df3-a0cb-4b4e3ee2e693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da2cfb9-30ff-4cb6-ac15-91b79ce80ccf",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa158c9b-002b-495d-9d5c-fe5c6c40eb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ac9b0c-f752-4b7d-8f50-83b79e476ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfecf90b-647b-4d6a-93b3-d884c0c1cf75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2677ad5c-4022-448f-81ed-69daa56c995c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c519adf3-b2c5-41b9-9b47-f7e6ebf80d02",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb5eff6-b222-477b-8080-b4be13267c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34468b9d-e57c-425a-a461-3738bf9ac106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c768d0b-f0aa-4624-8acb-67cdfdcdd816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5d3de8-8860-4649-8f0d-8a8a5429ae1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8906170-056b-43ab-b35e-44c3a47d5dd3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90451cd-45e3-4e04-8472-05b982454798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd10c0d-ec6c-4fef-8059-19e7d12ab160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d27e31d-8d92-452a-b5aa-f0b86651e253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13d7a05-7b8c-4e43-b7a4-247ed09a631c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a0d06d-7850-4de6-93fa-11b675bef7e6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6278394-1815-477e-8926-f9147507b747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f66cef4-7557-4502-881d-c3b63774be55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae81bff-5a8e-475b-95d9-12841cbd5338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5048826d-be64-4134-8fcc-1de44188ecc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4553b5b2-4192-495c-8634-18b820c1fc8d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba51a57-2c2a-47db-b76d-22286afd6558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ef4b46-4956-4a17-a903-7736dccbd54c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197f620a-7889-4a16-a644-d87d3576fcad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9a3163-a5bd-46c1-90fe-55cb3ca4989f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d75b101-f0e7-4d5e-8e63-963b8565e041",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f75e7c-a435-4d5f-9147-0dca37e65e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8fd451-b109-4032-abd6-0d98de4d8459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0b287e-d262-4c41-915d-b906e8f7fd0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02128254-63bd-49eb-b8f2-0fb6abf7f506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259ea7b0-fb8d-442c-95f2-c9a5c0452a9b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e8a050-b908-43ea-ba57-80e2120e564f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d69bac8f-9f75-44e3-95f1-5c2cc64607ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "991cab1f-0a93-497f-82b0-d4ae8089b2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb08a2ba-9a7d-435c-9c62-dbc61aa9a906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c93ac6-07e9-4f33-9be5-a314caf777f5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4dd0775-c564-45e5-a9f4-ce2457b1bd33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f433914-8243-484c-a910-04d9502c05bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b96b36-0679-4d76-a467-2bba5656dd66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4bfe8c-a5c0-4922-bfac-c6735331338c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc43a20-ac08-4b0a-af46-6565f9497055",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979c9a0c-f448-490d-9bd3-ec111e53068e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa547565-8d78-4f42-a5ac-222074158e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c0fb0d-9ca5-4b01-a945-784b4fc39dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85695835-e792-4163-9a3e-1db73971c911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e211bb-1fb1-4f89-838a-a9d78269264e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79852c5-5195-4fc4-987d-3a131fc18e54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fe8d1a2-ba51-4b76-99ea-72b120fda69e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d78bbd4-4713-4105-9746-92683ac4d975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58586b31-9a1c-48e5-a02e-7a366332a21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c198c0-2f94-437d-8a94-61442ccc2978",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a0a8e8-3b8b-407c-a701-730d1a73872f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b583769-45d2-4598-b64d-a9be0fc39253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39529c7-e3ef-457b-b8c0-52a1f0284559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a130920c-6224-4ae9-89db-c796c7abb9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397bb35e-b64e-41ca-afe0-0b9fe65b4614",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c316130-722b-4e57-a3d6-55664ac499d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03448836-7679-462a-b935-027486624dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6235811c-de29-48be-8a33-2f4ded2b89b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35a63b6-bf19-434a-a6e0-b5af7c5e1492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d457ffb-eb3f-420c-969b-87547f3aa01f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a770c1-be59-4b73-b231-1c166c8ba15e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15e85d32-30f1-492f-9be8-87ff9acc2e85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9c4451-01c0-4cfa-bb25-c0283f238884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e841b8a-5c0d-4f72-b9e4-96a83dbbffad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342b457e-84ba-42a8-bd70-4db5bdd43665",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e292269-5862-4c91-8487-36b36b504b09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0fa2e39-5c67-4857-ba7a-1e60542ead55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af963a1c-18d9-4afc-9456-241375d00bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e18b1f-2b2d-4c92-af81-263bbf29a65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9590fb1-2b86-42ef-8e58-a55ffbae41f1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d1613b-22ac-46c4-a495-d769867fdc2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfd7ff21-312a-412b-8bc5-d4309313675e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a921ae3-2578-4a69-a4fd-66773c860f3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde1488b-4f75-4762-aa03-e370a9e48145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470fbc28-1927-421d-9aac-c2bf2eaad532",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b40fd1-f548-4ae9-a7ad-53c29d32e079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc36a209-8f5c-4249-b055-4f28795827f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cdd8de-db2d-47f3-93d4-7a8de0c5627a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8974e539-9ea6-4062-9212-6be4380daead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b070bd-f97e-4db4-85f8-908baf26c82c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a22ebc-6991-4c6f-8cbf-781528faeb29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9357999b-4cf9-46ad-9306-57bbabcfc3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42491219-e6c8-40c8-9fb3-a9017b21f2b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4ceffd-8630-46e1-aac4-650383970fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2970328-0f36-4ba3-aea0-bc579904c059",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3957675a-9aef-47f3-bf64-89f4766ed91c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08b549f5-7e85-4555-8d65-7437e009ee3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a436619e-36bc-4cf7-a15f-b7309ab3214f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b65b241-a5a2-42f1-9478-da93de9764de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cec2dfb-b046-4eda-80d0-628dfd778e99",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2294bd3-1cca-4716-87e7-954de8a9f28d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1651281-cfe7-4938-a9b1-988e057ad4b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fa2464-dc6c-4686-bea2-b58188b9759a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5d8b59-7f47-4520-a902-574efbb342f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4f19e3-56c8-4317-a364-43870224abbd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34f9ee3-b441-4e04-8931-cb11c687b368",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8da9dda-d590-48f0-aa3c-875e5916f362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b29c0ed-7105-40b0-bacd-58b3f9bea3fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "868f9ee9-2fc3-42d7-836a-1e6c87a2e03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ff013d-2141-43e3-a14d-d8124b22d29b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e2345b-3477-48d2-8632-d88dbbc18e73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f67364cb-8e38-421b-a09e-ff1dfb269995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97893986-c0ce-4697-8a58-d7a2640e8270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "199a4f7e-f177-4e8f-8ae6-623280225ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50292c2a-b9a2-431e-97d9-05954b127ac7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe564574-4968-4030-b902-80504d42ca56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eb50a00-edf8-404f-b18a-397fe532285c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1910cdac-0d6b-452b-a3be-d75841d9b96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdc0334-216f-4fb8-bee2-854a7a136405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fa1058-19cc-4923-9149-0d6403109824",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140a9752-676e-4339-bb4c-d8f519e5491e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe6eaa27-2b09-4015-a449-ec81c119bc6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7609b2e6-f168-4e7b-97f2-04c8297c0fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "741bf9c6-f27a-4ecd-a541-30ba79bc11b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403cc87b-d04c-4345-9af7-312b29d7a6a3",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4706fb-4bae-489f-8889-c39f4223efe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96e8f0bd-e27f-4f94-b156-9e97e3bf60ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ceacd4-0e9d-4239-bdb6-97f74190b8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef15c38-4339-4f6d-9848-2192440249fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d81709-7474-466c-8576-75e690c6629b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d89e53-bfa3-47cf-b0b5-b0059c480a49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5e2490b-deab-483d-942c-3cc72432c313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3347a33e-c26c-408a-8162-77794e83a1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2dec64-0edf-46be-bd26-4fdc2083f85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85952aa7-4c29-4a6f-a904-324b224a4677",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a7d6f5-65a0-4974-8c9a-487a87c461c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de47df18-36a8-4dda-bab2-d964c8f94034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c56603-12ab-4acb-bd9b-07a3776e57ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf37dc0c-8c59-4954-9604-882728450071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2efa173-dbea-41d7-a7f0-2d7fc1990dc8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59508898-3257-412f-a62d-6609cb77458a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08c79993-8d6f-42c0-b6f9-1cb9da0b6a59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18aa7e73-e3bd-48fb-b35d-42267af1cefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f143e6-0b5f-4467-81b8-0adfc2d5af34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698cd5a2-62fe-4e98-a6f6-b7f3d02f9fd1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4a35a2-fd6b-45d8-8774-434918bac014",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce072ef2-b0ff-4a1a-a2a6-c8cd77199174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57df4255-bb00-4455-82aa-e2d2e60746cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d000a058-a565-4280-92e4-c913023cc7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b842d7-2415-4e47-ac0b-64467a8bf3df",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c830011-1491-4c63-89f1-fa55f393c50b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01e348c2-2ae1-45a0-b850-7882968daf00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61f3ca5-c8c8-4ac5-8d29-2d55332bf93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918d3422-bb66-4a99-ac2e-a450a7e67b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3438ab6a-90ff-419e-a12c-e55ece1df140",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a8a7ac-1d51-4592-9a34-baa51c752c4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d6b9f22-fc91-4e41-b9e6-264b5da39a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a82ea9-2b79-41c8-9e10-4775afa58357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0573c9-fc43-460f-a41f-a9c34eb38813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35715d2-bcc5-49b0-9b99-62d62057b73c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af59a7ae-fab2-4124-9c80-d1d1783bef3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec6047a7-1035-409a-9231-0f40bdb312e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc83c9f0-6d8e-40d9-b57c-4e0faa33f05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37af12ed-7829-4634-8a7e-df771f44e7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62153a85-bc2a-4309-82eb-844def63961e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366b3d3e-9b40-4162-a484-469363cb0522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2513b9fd-93bf-451f-8953-1701837dce67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfb2693-5996-4d93-beca-a00c77c8704e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e726393-6724-4ab3-a5c7-6e62d16f6361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d07356-5586-4d40-b3c4-013ae6253d30",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20af577-9acf-4e0e-8ff6-417a39457526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d033aa22-8635-4f2f-8879-fa38855adf7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c25e9e8-b87c-4870-8e7f-861ac8b8a6f9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8d711a-6a73-42c6-98b2-84b1970863cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b895039-b592-4215-af7c-4fb8661cd7e7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb39f98-c078-478d-b71b-2aee1d9591f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b8fcce8-0d63-41dd-a934-edfcef514427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a666f549-6e91-4d2a-93cf-5cabd39492c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7326d6c-ee96-43ca-98fd-4ecdd4df97e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57ee802-7645-427f-9504-20e448793f7c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5bdea0-0c77-4c8a-8a54-a0f6c35a30d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8e46e6d-f3bc-46eb-a201-7c5493bc7651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63de4629-607d-43f2-aff6-39478a3f3d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd33e91-d259-491b-a9d5-09c760c23e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8821116d-fd74-4136-ae7d-633718643ade",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e275a71-a7c2-4174-bdfe-b12572411bf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f9f4af2-4943-4ca4-bca9-a2b3c0754735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f100718-b083-4cbc-a2bc-9cd9011543b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e52a61e-9817-46f8-be3c-44876c802858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fa2c1f-cffa-43af-8851-38de3ac88c4b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5472c8-d5ab-4d98-b3e3-c286cf756b2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a922601-09bc-4fab-a3c4-4be8e46f4226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9e8760-8d4f-46e1-9b77-166a1efe3f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc51faba-4552-4372-929b-cd999b9edfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32863a6-3d7d-4bf8-9450-0556e0f7477d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca22bfb6-cdcc-4719-98b6-6f5acf372573",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bbb668e-d5f3-46c3-a61c-d2600868a846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a190c429-7e62-4cee-9f2e-3f144e8c65bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7dd62f7-9de9-42e2-9f00-c47103c4a407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039e83cd-ea4e-4aff-96c5-d47fca960434",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338c2e66-3326-4010-8cb7-9fcc5d77f531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23933741-9ef1-4231-95f7-f39cb2be0545"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b70369c-149a-43d2-a83e-5c399090cb1e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfab7262-b57c-4751-8bce-c3939b9643fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3966a08b-ce11-463e-901e-6eb521388dcb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00cea43-4863-455d-9dd0-5bd975c9436e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f4b332a-0f97-4871-8dd1-2d7f17b69766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bc6e60-e146-4654-a56c-71792010306a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4488f40-d4f3-4955-b584-7ce9798dc975"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e72f82a7-9aaf-4914-b12a-1c3b901a0c63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffa9f3be-90dd-440d-8d90-d17d0984cc6f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d120e73b-0915-4019-9961-dd199df6c0e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9575b5e2-a40b-45bb-8f49-bb71dfa59662"
                    }
                  }
                ]
              },
              {
                "id": "7fad976d-e031-4d7f-8ad0-3c4bbb64819b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f451c9b4-ed21-4a53-9e88-58dc1c5f5a3f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a89619f-f4e4-4667-acf0-88054e198096",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "02a33978-1be0-4b24-99b7-124b74f342cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bb3ead-e7a4-464a-a7a7-cc1dff3eb774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22bce114-3eb1-4777-ba93-ac489a44d4fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd58c189-d7aa-4858-b53a-be4b6bc4b174",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79e76835-7282-4af8-a676-d09b4604a6e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bc0cd4c-a0ca-40a3-86db-dcfd71b925c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfafebeb-260b-4106-8c89-efdcf463fcf9"
                    }
                  }
                ]
              },
              {
                "id": "3141039e-5f54-4a9f-bf6e-9f1877744392",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b7fb79c9-597b-4f5d-817b-ff387f923dac",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5401a221-3b0b-4e65-b203-91b18cc76ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "aac63140-1cca-4946-a1f4-b3ccc1ff340d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53576dbb-b4f8-4328-b02f-283684b87696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ddc753-58d9-4e0d-8a0c-af969dd058ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c6399280-e4f1-4e67-b08d-97ddeb6266c4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c23a6e8-c50d-4fd4-9fc0-14ae88e0604e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c1fafd5-0fe7-4fa1-8944-aa539f85283b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a8956554-e902-4f22-9ab0-f47ce7243d3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91188cd5-fa99-4440-aa01-654f7ef0a9af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c41baa3a-37d6-491b-915c-ec9bc31b15ed"
                    }
                  }
                ]
              },
              {
                "id": "035ea898-8118-4baf-92d7-0b36e3f0b0aa",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fc25537-923f-4a58-818b-b6a2fdeb085b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "37279aa1-a291-4548-89da-f6966a716f46"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aced933c-3148-4245-8738-0e1af7e62860",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac1cbb8c-4361-40e5-a8a0-87c2e68d5f22"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "255a0233-3aa0-45d9-8340-feb5552962b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "13342cd1-df36-426f-807e-aa756e0fcaa0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99a006a3-ddf3-430c-a6de-9aa9b145b13d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d0cfce8-bc29-412b-adb3-b82a03eaaf51"
            }
          }
        ]
      },
      {
        "id": "c40e4c40-a2cd-4443-8fc0-d5315794b233",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f33b82fd-7137-486d-82d5-a52678788276",
            "name": "Negative Testing",
            "item": [
              {
                "id": "008d2ed3-e112-4e3b-9ad7-aec1219b55ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "922ab462-9182-4e2f-a00e-ebedc18af047",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc064766-9d76-4c17-a3c4-3ef4a85df51e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4acb36b8-5aaf-4264-800b-0d420f271f7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef23fe4-54fa-46cc-8f1d-08b9b3639485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b52065d-2886-4dec-9043-c1b57b92199a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "534a7b9b-01a1-46f5-b59d-c9674b1925b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e0a12ac-b630-44a3-ac30-1a004c2d0ce1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "498493c2-0697-4283-9ea6-b43b6c156f47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86d58f8c-b3cb-4faa-96b2-102c02ba9730"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adf690c4-0a28-419e-a6b7-7cbcc16c6567",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4d4451b8-162c-450e-b600-17ecbfeba59a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf8a6936-a388-49b4-87d6-f126fb6e1e89",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0cc43114-baf0-4f73-b949-b669ef005a75"
            }
          }
        ]
      },
      {
        "id": "b4841091-9854-480e-86e5-0a313539c9b7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "096ee3e0-db03-4599-b8c8-fbb3393e6408",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cec14877-81f7-4f52-a2d9-6614bd83ec07",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2888c040-3788-47d8-a79d-4300f32c57ad",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76caea64-50d9-4f03-800a-e5820855834d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a168c105-6672-42cc-a7c7-26f1dcc28eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c5ca37-9dd4-4e7e-8269-5f33e7986677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a951b5b-6d72-451d-8022-8b228e44e084"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6a0d9d4-c9e5-4e65-a560-d910d55cf416",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f64740ca-2ba2-4372-abd5-e00a5c9cfcd5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05bcf44a-0cba-41e8-a3b2-ba78bcee0052",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd0db5b6-5f35-4daa-bec5-91f0791a1ba6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e2028d4-d386-48bc-bee3-d2dba35a3916",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7cb8b024-8ae1-421a-a9a6-8772f9f49a1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa1e906a-c036-4eec-ae5c-9ee792c1b19d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0afcc14-cbfe-4bb9-b4a8-4502c8c81f8c"
            }
          }
        ]
      },
      {
        "id": "728c4575-2c6f-4121-9ecd-181236345ddc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5a9242e3-1438-4588-a731-fd5f2b9775b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba0b2cfd-0bbf-4975-a78b-3ead507f6fb0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "669ef7e0-889a-47dd-ac13-7c13198bed2f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b250e017-b787-46b5-9dd7-f21a06c796e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e31ae182-158b-49f3-9ce4-fcd66c51fb51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1baa33-d68b-418a-8609-d148d18e8a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64b8b892-bfaa-4a30-b8e0-afca1924290d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f05135f-cd59-497b-8c0e-6d0c0faea022",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dd45d8e-6c48-4a26-941a-a345890d356b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4a6f144-c537-46cf-a5d2-f5c99f2c1e18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ff0f084-c632-4a9f-9cb7-1ae6e82c54b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19e99550-d0ed-42e4-9f28-479eae6fa193",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27bc2539-d986-464a-8cd4-4bcaacf65664"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41bac619-4d31-449b-8d39-2f6fd3d68262",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c0594ef-fae7-4419-9d57-f2f1809ec768"
            }
          }
        ]
      },
      {
        "id": "9fa0690b-0bfd-44e7-9608-9d41a4fdd8f1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99f8e06d-f375-4b78-bfee-18cff5537975",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00aee6a8-2763-4c0e-87bf-74e18eadad37",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "254ad74e-fb72-4cc7-bc56-3b7d74024f4a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27b8fb97-0e08-4a2f-bc50-97118bcfd03b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28fa3021-916b-4ff5-967f-92d1486e0a34",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 130.17543859649123,
      "responseMin": 10,
      "responseMax": 6657,
      "responseSd": 471.01840850557363,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703205309439,
      "completed": 1703205355537
    },
    "executions": [
      {
        "id": "2597b92c-7fb6-48a5-ad9d-cc207a09bbb2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0615c8df-875e-4479-be8c-9e9246b44836",
          "httpRequestId": "d1b72870-4fc6-4a7a-8096-0039debcfd28"
        },
        "item": {
          "id": "2597b92c-7fb6-48a5-ad9d-cc207a09bbb2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4ae8f91a-6432-4354-988c-9b2ad52150f4",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "381aeee4-fda7-4af7-9311-b71ccb58b8f8",
        "cursor": {
          "ref": "350cb3b9-47a9-4f1d-89ce-fe86eb21e2ea",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f5e54846-e4f5-4cbd-ab48-2bff4a5f869c"
        },
        "item": {
          "id": "381aeee4-fda7-4af7-9311-b71ccb58b8f8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e185b7ae-23f1-45f8-910e-17465d930cbc",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "5c3985a0-3d14-4f5f-be00-33e6497c8048",
        "cursor": {
          "ref": "a3bafcbe-57a2-4135-af88-e39b31ec10a7",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a7247c0a-f38b-4bb2-8e50-50f48e9c5cb6"
        },
        "item": {
          "id": "5c3985a0-3d14-4f5f-be00-33e6497c8048",
          "name": "did_json"
        },
        "response": {
          "id": "b9fb7341-dbfe-4468-84de-c31be0a8e9a7",
          "status": "OK",
          "code": 200,
          "responseTime": 200,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161e20c3-3193-4b25-8e10-ecccf71b6a34",
        "cursor": {
          "ref": "fe36b891-72ff-4d74-aa31-fc26fa470ff9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "34f4a3e6-ddbd-4787-8f4d-3db9f0413fb2"
        },
        "item": {
          "id": "161e20c3-3193-4b25-8e10-ecccf71b6a34",
          "name": "did:invalid"
        },
        "response": {
          "id": "7a8cec67-d5cd-444b-ae97-824856e0432d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1174,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161e20c3-3193-4b25-8e10-ecccf71b6a34",
        "cursor": {
          "ref": "fe36b891-72ff-4d74-aa31-fc26fa470ff9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "34f4a3e6-ddbd-4787-8f4d-3db9f0413fb2"
        },
        "item": {
          "id": "161e20c3-3193-4b25-8e10-ecccf71b6a34",
          "name": "did:invalid"
        },
        "response": {
          "id": "7a8cec67-d5cd-444b-ae97-824856e0432d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1174,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff52c869-d3cf-4ec3-8aef-924e499f2619",
        "cursor": {
          "ref": "ae81f9b1-20c3-435b-9c9c-b95049d2b9c2",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "469efad0-ba68-4463-8d4b-4a3ac3455f37"
        },
        "item": {
          "id": "ff52c869-d3cf-4ec3-8aef-924e499f2619",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f619052b-e2c9-4de3-9a92-c6ff4c1e7863",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad243547-30ff-4211-a867-e96813e6caa1",
        "cursor": {
          "ref": "480dd08f-e6f7-4096-bb66-128381823317",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7d6f04b8-dcd0-4a30-850d-d5248695c76b"
        },
        "item": {
          "id": "ad243547-30ff-4211-a867-e96813e6caa1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5ae183d1-98d2-4f65-9936-f3114fcca7ad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de75fc8-a9d6-48fc-ba3c-50064fee573d",
        "cursor": {
          "ref": "ff552c1c-6e46-4afc-a662-b3bb832f1e25",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c303b649-b428-4bd0-b143-0ac5ef3d8174"
        },
        "item": {
          "id": "8de75fc8-a9d6-48fc-ba3c-50064fee573d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "95efb8ff-23a8-4f03-b742-aedf6a31a7c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f221f94c-de9c-48b2-b1c1-6eb74ec54f04",
        "cursor": {
          "ref": "2909e903-9c16-4a4e-a36e-c16e8b388612",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "96dbbbdf-faae-4614-afca-ace5ebe1c2db"
        },
        "item": {
          "id": "f221f94c-de9c-48b2-b1c1-6eb74ec54f04",
          "name": "identifiers"
        },
        "response": {
          "id": "f1a56f26-4fff-45cb-98f1-57bcbd92fb4e",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ba60f6-4646-4ff9-8d56-a6b5be590e2c",
        "cursor": {
          "ref": "ea7cf103-1cbd-4528-8466-1684c4378f56",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b62bb5bc-1246-47ba-a8cf-9ec88da63941"
        },
        "item": {
          "id": "19ba60f6-4646-4ff9-8d56-a6b5be590e2c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7ab52dd6-a66b-4430-8e2c-85223241cba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95aee95d-c6e4-498d-a973-e41ca27dae19",
        "cursor": {
          "ref": "eb4da4be-3ef6-472e-bdb6-8969b0cf6644",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8b525f3e-8655-46d6-9889-5a5cfad30d61"
        },
        "item": {
          "id": "95aee95d-c6e4-498d-a973-e41ca27dae19",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "152a2db8-d649-4ef5-b5c0-19cbc91e7e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301c4c1d-a03a-4877-8672-48ea2c2f96d1",
        "cursor": {
          "ref": "35ebfeb4-c9d3-4f06-958c-13001b81afda",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "371099d8-8eb6-47f4-b36c-035bafcc0e01"
        },
        "item": {
          "id": "301c4c1d-a03a-4877-8672-48ea2c2f96d1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f19f9cd5-bdc0-4af1-b8d5-1dec1a5b144e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cc256b-7bf9-428d-a530-8908d5e06667",
        "cursor": {
          "ref": "6607a46c-9919-462f-bde7-b42d27bce53a",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "074850d5-88c4-40e0-90d8-71854c212d17"
        },
        "item": {
          "id": "96cc256b-7bf9-428d-a530-8908d5e06667",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c4b62b6f-2bcb-4e55-a42d-23805389d37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030a6cdf-f75e-4413-b508-05e31c99ac7b",
        "cursor": {
          "ref": "dcdb4928-a872-4f4a-9254-35a1a93bb758",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8fec8410-6575-40d9-ac9d-abca47024823"
        },
        "item": {
          "id": "030a6cdf-f75e-4413-b508-05e31c99ac7b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3fa6955c-4f15-435d-aaac-22cb3f30e0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3740d27c-382d-441c-bbed-7642fe31ce71",
        "cursor": {
          "ref": "cd46d814-6290-4480-b8f6-45f70643c6cb",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9cec92dd-76ba-47e3-955d-c28e569cfc41"
        },
        "item": {
          "id": "3740d27c-382d-441c-bbed-7642fe31ce71",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0041ec03-f340-412d-8276-c7240f9e5c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a4fe35-899c-4e88-9c60-5c86f882ff28",
        "cursor": {
          "ref": "db782f80-9965-4323-80c3-77927c24f87e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "36453825-79ba-419b-b00b-23deadf7c662"
        },
        "item": {
          "id": "95a4fe35-899c-4e88-9c60-5c86f882ff28",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5ef237a3-f2e4-41b5-bffe-f803a27b849e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c488cc-8b16-4346-96a1-66b4ccd503c3",
        "cursor": {
          "ref": "f464f6f1-abe7-4db9-a7c0-3640d62e60c0",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7f353ae5-4d4e-4bcb-a0ea-0e854f11e2fe"
        },
        "item": {
          "id": "b1c488cc-8b16-4346-96a1-66b4ccd503c3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b41c3664-64ff-49a9-a669-95045db10d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d2fddb-3909-4036-99a2-03cd2306da9d",
        "cursor": {
          "ref": "f47fd68c-e7a2-47b1-8446-f4554f5ce31c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9e1570d6-86ed-47c3-8ebb-d5a7b1cffc2a"
        },
        "item": {
          "id": "80d2fddb-3909-4036-99a2-03cd2306da9d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b82e75d8-5d4d-4436-8d8b-09d11a4a14ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 183,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7697ce27-b1c5-4fa2-b71e-9f19f38d033e",
        "cursor": {
          "ref": "dfea3385-8f9b-47e2-a58c-b2fd3cc9b0e9",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1f015ce2-4d06-4d24-ad21-48708deceddc"
        },
        "item": {
          "id": "7697ce27-b1c5-4fa2-b71e-9f19f38d033e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "82f397b2-7bcc-4c25-9170-89438927bc6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0fd947-e0fc-4db3-ac0d-91fc5295c8bf",
        "cursor": {
          "ref": "9629cae3-40ab-4c8e-803a-883842b1c94b",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a55ca88f-ef09-4580-a23e-54b137309cf5"
        },
        "item": {
          "id": "6e0fd947-e0fc-4db3-ac0d-91fc5295c8bf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f695072f-74e0-41b6-aa30-fb83a4ac2014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58c7490-14fc-47cf-a24a-a536446dedfa",
        "cursor": {
          "ref": "816c2ad7-7080-4924-992d-2a21a9a4a5f0",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "acd96b0b-f36e-4c9b-8926-cfceb139ddb6"
        },
        "item": {
          "id": "e58c7490-14fc-47cf-a24a-a536446dedfa",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0f3cefaa-5cdb-4ae4-a02b-116f20165c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850b7d38-d1be-4d73-937e-c04874adcd5f",
        "cursor": {
          "ref": "13d94231-9cd6-47a8-96be-07bccca78ee8",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "54dd0650-4969-4c7e-b639-d8427c55042c"
        },
        "item": {
          "id": "850b7d38-d1be-4d73-937e-c04874adcd5f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "26168c28-db46-4058-a086-acda4acbf6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af69bb24-cb35-4026-97c2-4342effae253",
        "cursor": {
          "ref": "9264351d-11e8-43ff-842a-456c9573eadc",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "08aa0076-3584-4e95-9783-05d33a9b56f8"
        },
        "item": {
          "id": "af69bb24-cb35-4026-97c2-4342effae253",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0efca836-5d00-4f79-b417-9c2941e94f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709cd695-bb48-46c5-a481-eaf75365efa6",
        "cursor": {
          "ref": "51568ea0-fae5-427d-9995-315c4eb45d95",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e470f0c2-81b0-4728-a575-0047f18b6b61"
        },
        "item": {
          "id": "709cd695-bb48-46c5-a481-eaf75365efa6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "140efdcb-ecfb-4538-834c-519364dcd9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31afd1c5-cd5e-4d73-9e23-0aeb378d2ec1",
        "cursor": {
          "ref": "2a065afb-7c79-442d-8d33-6cb0c1b3544c",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6488e7dd-f1db-4a9e-bac9-50947b51851c"
        },
        "item": {
          "id": "31afd1c5-cd5e-4d73-9e23-0aeb378d2ec1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5c830b9b-31b0-46ad-99cc-06cf55ec097f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e21539d-8dc5-4e71-b095-940232fadb4f",
        "cursor": {
          "ref": "e23dafc0-f23d-494d-8928-f85cee0bf7f8",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8fab5f97-f1a0-4e3d-85b8-75f1198a0617"
        },
        "item": {
          "id": "5e21539d-8dc5-4e71-b095-940232fadb4f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1993a0dd-20a3-4c88-95e4-62787b8063b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07aff1a5-b7ed-47be-878d-9c7969492d62",
        "cursor": {
          "ref": "92c6ac3a-0263-4689-b6c8-51e4b6939dd7",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "96a70d0f-888d-4a16-ab90-a905b16c5d89"
        },
        "item": {
          "id": "07aff1a5-b7ed-47be-878d-9c7969492d62",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c50946c4-0ea7-4782-a57f-ab2e09c05985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f601012a-47d6-4e47-9d4d-460d1d61f41e",
        "cursor": {
          "ref": "d8411b2c-8f3c-45a8-a88b-f3270f89d18c",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "39fd77a9-551b-45c7-8903-b66455a7602f"
        },
        "item": {
          "id": "f601012a-47d6-4e47-9d4d-460d1d61f41e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "61872f96-f37a-4aaa-92c6-23da92e85d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8a3ecd-9119-479a-aa62-bfb6292fc983",
        "cursor": {
          "ref": "5e258600-d106-41cb-9912-2cda03209824",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "edd3e0bd-9f00-4123-94eb-4d34a98920d7"
        },
        "item": {
          "id": "6d8a3ecd-9119-479a-aa62-bfb6292fc983",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "68336313-657f-4070-9f79-72b5a14c603d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f740623-1e49-467c-900b-e7b4a14d0da0",
        "cursor": {
          "ref": "79a4c314-2fee-469e-8685-c4ddb7e8c246",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2695be57-87ad-4861-8345-a2d8a520561e"
        },
        "item": {
          "id": "3f740623-1e49-467c-900b-e7b4a14d0da0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "67afb9fa-dc5a-41ad-8870-ae6ce39738a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 210,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d806ed-429f-488c-80ec-41fb5c60ba5b",
        "cursor": {
          "ref": "a0364754-4dff-4868-bbd1-a3846c9569b3",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "35840cad-cd89-4b27-8a4b-451b7802e927"
        },
        "item": {
          "id": "06d806ed-429f-488c-80ec-41fb5c60ba5b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "50ba8949-96d9-49e3-a313-2ea2a13d5a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2490,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cabd50-019f-4471-9c6c-4cda008d85de",
        "cursor": {
          "ref": "293747d5-071d-49a3-8f25-6db9073432e2",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d845f4d8-7d44-497f-bf7a-ae96b51a4758"
        },
        "item": {
          "id": "40cabd50-019f-4471-9c6c-4cda008d85de",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "61f7da23-4adf-4b0c-aef5-43b676c2b587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347d834f-bc7b-4560-92dc-6113c1204dfa",
        "cursor": {
          "ref": "de7a8fb2-3f18-4d3f-b8b0-eef924ccaf2b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "977621be-f5df-483c-a024-4caabdd31134"
        },
        "item": {
          "id": "347d834f-bc7b-4560-92dc-6113c1204dfa",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9846fe13-75e3-4eb9-ba46-6d4cd5780657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67501007-8f7f-4fe3-a90c-68c1fda50cd0",
        "cursor": {
          "ref": "a3710181-90fa-4249-b2cf-aa6c3b4e4e3e",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "72d3577b-a402-49a8-ba96-209423d989b3"
        },
        "item": {
          "id": "67501007-8f7f-4fe3-a90c-68c1fda50cd0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "175726d3-d710-485f-afbe-8d269535a177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9185450b-a114-45bc-9dc6-21e099da6188",
        "cursor": {
          "ref": "d457a536-c663-4194-b917-2d9443d28fa2",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "821e72cc-c1d0-4597-b45f-4c2e9a6b253f"
        },
        "item": {
          "id": "9185450b-a114-45bc-9dc6-21e099da6188",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "607a87ab-0219-4681-a576-fa8eab006a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122b0423-3189-4d1e-b986-d4bce57cd05e",
        "cursor": {
          "ref": "3274f55e-3b46-4cbd-99d4-f582c2b704d0",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ead4d9f8-c392-45e6-9757-a903cd32a159"
        },
        "item": {
          "id": "122b0423-3189-4d1e-b986-d4bce57cd05e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "313623a0-1ffe-49c0-8fc5-a64508f4af74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1139a9a5-00a2-4086-82df-10688b0ea9ad",
        "cursor": {
          "ref": "804da2b7-f966-433b-890b-28e1b63ee041",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7e29d330-3d46-4eff-b261-7d0c6207b0de"
        },
        "item": {
          "id": "1139a9a5-00a2-4086-82df-10688b0ea9ad",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "418c51f1-d078-4682-a633-ce120e7a8fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43823192-333f-4d83-87b8-1ab4ce8bd226",
        "cursor": {
          "ref": "90268967-0a80-4fc2-9326-9a810f4c06c8",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "17ae8ead-bf8a-4932-857c-304f112f737a"
        },
        "item": {
          "id": "43823192-333f-4d83-87b8-1ab4ce8bd226",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9d332ee4-ea77-4b1a-a689-f8f0ab5ba70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e240b35-f311-4577-a09c-ebb8008f7787",
        "cursor": {
          "ref": "7ac3f173-8403-4079-9c9a-9405c31f86c0",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7641587b-3810-479d-a8c0-f59dd6e4f19a"
        },
        "item": {
          "id": "7e240b35-f311-4577-a09c-ebb8008f7787",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f2974b6c-0c89-4044-beb6-9d757cd10bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a488d24e-142a-4d55-8f5e-64097a606111",
        "cursor": {
          "ref": "cc228abe-ffd2-41f9-bf1f-8c6e51bc16a5",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d4d7fa64-875a-41d6-9933-557d9918e743"
        },
        "item": {
          "id": "a488d24e-142a-4d55-8f5e-64097a606111",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dce56f02-e422-4fe8-ab5c-31fcff82d303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27d1c07-1c6d-425e-843b-5ab93d13ab25",
        "cursor": {
          "ref": "37a9ac88-c507-4fb1-b478-b61e4e2c5299",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8edeab10-13fa-442a-aa8d-3c0a79a55d29"
        },
        "item": {
          "id": "b27d1c07-1c6d-425e-843b-5ab93d13ab25",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "92aa2f19-14cc-4951-85bc-ae9a0a958191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b56f47-056a-4074-87f6-bea93906f123",
        "cursor": {
          "ref": "83cfdf4a-b373-4bdd-ac26-97f330e15956",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "689d65c3-85d7-4698-b64d-8dfa4853ad5d"
        },
        "item": {
          "id": "14b56f47-056a-4074-87f6-bea93906f123",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "599bf709-6d1b-44fc-935a-abab4511db9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e221c691-8c01-455f-a6a1-9b9583ed0a0d",
        "cursor": {
          "ref": "9723e661-80d6-486f-97f2-d7ae922f276c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "01ae416c-b388-4bdc-b61c-ce8dc0140dbc"
        },
        "item": {
          "id": "e221c691-8c01-455f-a6a1-9b9583ed0a0d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "603f2d84-ac3b-44ab-8136-f749ee34c75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2d0600-2662-48a1-8524-5f5fe2fc562c",
        "cursor": {
          "ref": "9add21be-59aa-4a31-a1ce-7b86cee0c511",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ab6872e8-0ec0-4738-9380-7b63b12c9d3e"
        },
        "item": {
          "id": "bb2d0600-2662-48a1-8524-5f5fe2fc562c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9756299c-5b58-4857-a33a-3b3f865bfe1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a27687-aae4-47d6-acdd-7a833975716c",
        "cursor": {
          "ref": "1765802b-2a11-4242-8cd6-bc2b8191c618",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "04e000f2-e2ee-4b68-87b6-d186d3d77689"
        },
        "item": {
          "id": "b6a27687-aae4-47d6-acdd-7a833975716c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a5d8e3c8-8f0c-4897-98ed-ca7cf19a82bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc5c828-65c8-45bf-8c5c-bcd560f8b1da",
        "cursor": {
          "ref": "1e58d753-06e6-4afc-ad97-42cc0a1f1fd5",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "be243785-1a55-4575-a359-887dd3527e8c"
        },
        "item": {
          "id": "9fc5c828-65c8-45bf-8c5c-bcd560f8b1da",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c1a298d5-0e77-431b-a819-980e8fe3b4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc67dd9-e6c5-4e52-8090-8f64ab2a512d",
        "cursor": {
          "ref": "ea4ee68d-161e-4ad2-9741-0bdaf0203925",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fd41fdf0-9442-467b-b441-43fb0c8beae4"
        },
        "item": {
          "id": "cbc67dd9-e6c5-4e52-8090-8f64ab2a512d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a194fa50-15d6-485e-8b80-c232b7cf531f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fbdff7-9d62-4774-9e42-c87beb501566",
        "cursor": {
          "ref": "030f656f-322b-4f7a-9f2b-8c1b5a6f711e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "46f48ed2-6260-4dbc-95d8-eb0379257025"
        },
        "item": {
          "id": "60fbdff7-9d62-4774-9e42-c87beb501566",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "70f3ddfe-28b2-465a-a47a-0e84385c09d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2103679-be0f-4c8b-a999-8b96fffd85e0",
        "cursor": {
          "ref": "6776c335-f108-4a37-8937-854e8f3d02cf",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "97cd8533-a911-412d-a63b-26bee22996e5"
        },
        "item": {
          "id": "b2103679-be0f-4c8b-a999-8b96fffd85e0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "003155f4-3693-4172-9ce4-a1fca7b25421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7f9a4f-10bb-4dc3-bb59-eb0c7f92d083",
        "cursor": {
          "ref": "c6d6cbbc-1b09-4e8e-9f9a-d15fba0196de",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3df5fbad-bc2e-44b2-b3da-7f327edf499c"
        },
        "item": {
          "id": "4b7f9a4f-10bb-4dc3-bb59-eb0c7f92d083",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5c27eb6a-67ea-46ee-8d37-bc33b6f77d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9dde680-0eb6-4955-9edf-123d75bfe34b",
        "cursor": {
          "ref": "3ea606c3-1c9c-4d24-be04-de439abf3e66",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f293893f-45cd-4c0d-be51-3440c34a8238"
        },
        "item": {
          "id": "e9dde680-0eb6-4955-9edf-123d75bfe34b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b4025148-8bba-4b5b-9b33-390402507827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24491fe-b5b7-42f9-9415-7b38669068df",
        "cursor": {
          "ref": "6500c26b-94f0-427a-9836-3b026461ede1",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8cd24b7e-d611-4392-ac7a-18cecfb52411"
        },
        "item": {
          "id": "a24491fe-b5b7-42f9-9415-7b38669068df",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3916abb5-9829-4571-b09e-44c9c6f02b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfe6f88-9366-466f-848c-3f8dd569555c",
        "cursor": {
          "ref": "002dfc4b-4af0-44c2-873d-53e1bda32196",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f29c627d-5cd8-4e89-bd77-943889422202"
        },
        "item": {
          "id": "7cfe6f88-9366-466f-848c-3f8dd569555c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4d0c6d0f-47c7-441d-af99-0477e65f7978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deaaad0d-c522-4444-a685-86ba98a22cb3",
        "cursor": {
          "ref": "6059beae-98f8-479f-b59f-4fe27646b99c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "94b0d91a-0dbe-471d-990f-53620ec021ba"
        },
        "item": {
          "id": "deaaad0d-c522-4444-a685-86ba98a22cb3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d3521278-481b-4dfa-ab09-2a55eafcc07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2c935a-e420-4664-be03-b90b4cd3626b",
        "cursor": {
          "ref": "450332f2-ea61-4754-a636-4e53ff83bafc",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "68129508-142a-4bc0-bfdb-1a7316ed0aab"
        },
        "item": {
          "id": "0c2c935a-e420-4664-be03-b90b4cd3626b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fde8deda-c126-437e-9ad1-c0962f66da7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c21f1e1-3b4d-449c-af79-c4ab8064de22",
        "cursor": {
          "ref": "f4714e34-b7dd-4fc8-ae04-e820339e853f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8941a9ae-3754-415a-89bd-18a18be01597"
        },
        "item": {
          "id": "8c21f1e1-3b4d-449c-af79-c4ab8064de22",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f4dbae14-b6f2-4a47-a594-d45c9e64e1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba12a912-787d-4869-a937-389bcebb0a2e",
        "cursor": {
          "ref": "4b6237fb-dddc-462c-a035-11844e7d9efc",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e0d9380a-f14e-4123-a1fb-92f7a9fbe84c"
        },
        "item": {
          "id": "ba12a912-787d-4869-a937-389bcebb0a2e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "84213d4c-8ca5-4152-9584-9c4e14d3e96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0730357-25dd-49f7-855c-5efdc1ada11d",
        "cursor": {
          "ref": "c0910ef0-b764-4cd1-8636-376ad87a06a8",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a248a3d7-c335-4df1-a518-85723114f286"
        },
        "item": {
          "id": "b0730357-25dd-49f7-855c-5efdc1ada11d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "815bfb1f-a426-41fc-9a06-6b4e32d074c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c46651c-1def-4fb7-9c7a-43da09ec1fef",
        "cursor": {
          "ref": "1d6b1a0e-7317-498b-bbc7-9490546c1f8c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9a796aab-4834-4cfd-8868-30abe01985e9"
        },
        "item": {
          "id": "9c46651c-1def-4fb7-9c7a-43da09ec1fef",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "387d8f6e-bd72-4e0c-b9d6-ce8e76a39e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8787e7e-02eb-48b7-8bf4-3bc0a349627a",
        "cursor": {
          "ref": "cb446636-e783-46e0-a1c0-6b1e42ec263c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "89d3500a-715b-4371-b5aa-e8064f33d156"
        },
        "item": {
          "id": "f8787e7e-02eb-48b7-8bf4-3bc0a349627a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8b66f0e2-2819-4d5a-ab05-a604444a2ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bb7b71-2b76-4053-b9df-f528f26725e9",
        "cursor": {
          "ref": "99889986-52cc-417a-89d2-c65c215fd6de",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "67fd6196-1e74-4a75-b76f-bf835f1f21ef"
        },
        "item": {
          "id": "c1bb7b71-2b76-4053-b9df-f528f26725e9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "76e65632-fc2c-474b-9f04-5a3b1e10f782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27548aa9-998c-47ca-b80a-43270e4ed6b8",
        "cursor": {
          "ref": "9997b016-817d-4c84-be43-f8d73e3e75a6",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5164260b-aca0-4c5e-affb-99bc66e80f6f"
        },
        "item": {
          "id": "27548aa9-998c-47ca-b80a-43270e4ed6b8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d154d855-3433-41fa-aa8f-d275394c34e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0906d5c-9ce1-4c87-812f-aeeb5773b25d",
        "cursor": {
          "ref": "edc4a407-fac3-4182-8eeb-6a412f2b3fda",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a4e8ca67-bffc-4b24-ab8c-c494521bfc42"
        },
        "item": {
          "id": "c0906d5c-9ce1-4c87-812f-aeeb5773b25d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8c306b84-c21b-42b5-bd75-ccef22563363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200ae72e-1ab6-4255-a9f3-372ed2f58c0c",
        "cursor": {
          "ref": "7f4afbeb-23f7-4c5f-9376-9fb8d531c94b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c7bc4d45-318d-4a0a-8053-e93485e4bca0"
        },
        "item": {
          "id": "200ae72e-1ab6-4255-a9f3-372ed2f58c0c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "832820c7-9407-4254-977f-d2e5b5284dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd67f400-26a3-49a0-8bfc-59c1ed804356",
        "cursor": {
          "ref": "5a18cd6e-cfa5-426b-b485-3448de4d3853",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b18b7f39-9035-4e05-b536-7cc6602fc876"
        },
        "item": {
          "id": "dd67f400-26a3-49a0-8bfc-59c1ed804356",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4b8795be-1a5d-4429-a303-72aa6b13eedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd4e560-ce91-4055-84c2-a021f07d8116",
        "cursor": {
          "ref": "648f9e8e-61dd-4058-85a8-9254fc59cafe",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "56d06384-64aa-4c4d-ae34-a238b55a4ba4"
        },
        "item": {
          "id": "1bd4e560-ce91-4055-84c2-a021f07d8116",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9df663b5-d5ff-4e56-b48e-b62804ef4d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a760ab8-67cb-45d4-8451-a1fb6052e792",
        "cursor": {
          "ref": "17d8440f-c4e1-49d7-9eb3-cba4867ade2c",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1edfddb7-b561-42bf-a82a-676400ed2c35"
        },
        "item": {
          "id": "9a760ab8-67cb-45d4-8451-a1fb6052e792",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "da9b200a-7e76-4f80-afaf-ce413266e650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91fafa5b-6d13-4824-a29a-401f83918720",
        "cursor": {
          "ref": "babb6cab-1094-462d-a9da-b1f3c795f1f7",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "25232486-fe7e-45a0-8dbf-461c0494f126"
        },
        "item": {
          "id": "91fafa5b-6d13-4824-a29a-401f83918720",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "37f30a7e-ab13-4c3d-9d1f-b13e5ae75468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9cd327-a588-4908-9e70-26832471343b",
        "cursor": {
          "ref": "d1f7af70-ecbd-4f28-9754-ec2aaac2d47f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c42beb12-3a70-4eb1-b1cf-0b4d1beb9528"
        },
        "item": {
          "id": "ef9cd327-a588-4908-9e70-26832471343b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4609a3db-2e00-411c-bf4c-78146abed7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 177,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b993a832-710e-46ba-b749-dd7601d5c3ef",
        "cursor": {
          "ref": "14bb231a-b90d-4dec-81f2-eb86067e03cc",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ceffb96f-2947-42dc-bbf5-b93f03cad6f4"
        },
        "item": {
          "id": "b993a832-710e-46ba-b749-dd7601d5c3ef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5b9cab0d-b294-4d06-b236-c1b12b12df35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a825ef02-a1e7-4fb9-8764-76de131e9eb5",
        "cursor": {
          "ref": "89d32d86-ce99-4e23-a94a-ccabe5558f2b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d5733a1b-dede-4c25-aadc-b5c94264f608"
        },
        "item": {
          "id": "a825ef02-a1e7-4fb9-8764-76de131e9eb5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a6735bc3-bd0b-4cd2-8e06-b0e0775686c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882da15c-dfa3-4d58-879e-5ec409e848ac",
        "cursor": {
          "ref": "32b625c2-1797-4708-8445-a61d26216f9a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b60d5119-d15d-45d0-a7f4-dc4dda1198c8"
        },
        "item": {
          "id": "882da15c-dfa3-4d58-879e-5ec409e848ac",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5aabcb3a-7093-447a-ad6f-b6e7fca66e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910a5fc9-b6a5-44b1-b99e-d5431492437b",
        "cursor": {
          "ref": "3a4a80f6-dbcd-4f4c-ac08-d1c14aa6bd1c",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2f4e719c-86e5-45bb-b8d8-2b9b8de5ef28"
        },
        "item": {
          "id": "910a5fc9-b6a5-44b1-b99e-d5431492437b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "41e88726-85cc-497c-9b19-0534e386e084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee9335a-c5c0-45c5-9ce1-8dcf9e580037",
        "cursor": {
          "ref": "a642bbe8-1f14-4578-9cda-6b858cff693a",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "53401716-4e12-43a3-ae6a-9785ceb8a664"
        },
        "item": {
          "id": "8ee9335a-c5c0-45c5-9ce1-8dcf9e580037",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0ceb515f-8d1a-45e8-8281-7d4321a50765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c53155c-424c-408f-bd3e-85d500c7afad",
        "cursor": {
          "ref": "ec9fbaea-75ea-4038-9883-17a274b4fa30",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5986d252-fb0e-4e34-a997-003fa06e9f6f"
        },
        "item": {
          "id": "6c53155c-424c-408f-bd3e-85d500c7afad",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0cdb2a70-d1da-4ba6-8c1c-532195d537ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6dfaefb-460d-4b9e-8c64-fdf7135ae997",
        "cursor": {
          "ref": "6cc6df7e-8ba9-4388-a6a4-4e192b160821",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5aa72426-39c6-4cc9-8feb-a97fc12b2a8b"
        },
        "item": {
          "id": "a6dfaefb-460d-4b9e-8c64-fdf7135ae997",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "dd9091f1-d69a-4475-b5d0-e124459855d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb473f59-d729-4f14-839f-fc7d4285b2e5",
        "cursor": {
          "ref": "e5692324-9805-43ee-8d54-7b6e0848e5af",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2baa2bc8-1b22-405e-bfb4-52027300b4a3"
        },
        "item": {
          "id": "fb473f59-d729-4f14-839f-fc7d4285b2e5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "cf8cfe8e-8b1a-43b1-8e40-a816fba964ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fe5c82-27d3-4112-b978-009bdf355cf5",
        "cursor": {
          "ref": "1c007526-9e7d-44cf-9d1a-c518ac30be23",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "662f778e-5958-4de8-841d-b130dd61adfa"
        },
        "item": {
          "id": "d1fe5c82-27d3-4112-b978-009bdf355cf5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d700ca6e-cc68-453b-833b-21de6f0a5da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aafb2e1-e5d8-4bde-a343-23bf992482f6",
        "cursor": {
          "ref": "db560647-9aab-4c1b-98ea-9575018d3ae8",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "aa3bbe91-ac21-4e1b-b6a7-67cda9ca332f"
        },
        "item": {
          "id": "1aafb2e1-e5d8-4bde-a343-23bf992482f6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c439387b-5ee1-4647-8e8c-2e4fda7ac3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825d1375-3b44-4500-8f87-921bfe870434",
        "cursor": {
          "ref": "16276720-ca3a-4557-9890-b15efc1551bb",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0b2fed47-ad0f-4497-8030-09d1036f0f3b"
        },
        "item": {
          "id": "825d1375-3b44-4500-8f87-921bfe870434",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7b208543-18ce-492e-94ad-0a659a88fffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d3ec58-e9d4-430c-bb27-3a830ee48455",
        "cursor": {
          "ref": "f547dbce-74a4-4ae1-95a9-dacf965650d3",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e57050ef-3463-4041-a6af-f3e75e7a95ed"
        },
        "item": {
          "id": "80d3ec58-e9d4-430c-bb27-3a830ee48455",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "58e13dcd-9eda-491d-8f76-8cfcee131a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ac4443-411c-4775-85bf-926ad465479e",
        "cursor": {
          "ref": "4e278416-9d84-42ca-9fb3-8cea4acc54bd",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a67ded32-45ae-4cdf-a066-227bf6833feb"
        },
        "item": {
          "id": "98ac4443-411c-4775-85bf-926ad465479e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "18c1796a-36cf-4f84-a0bd-3acbd331f7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ae1ca7-4a6d-4547-a267-56207ee95483",
        "cursor": {
          "ref": "5925132a-f402-41c4-935f-672dd2533dd9",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2aeac8de-3935-40a4-aa6a-99244e6071a8"
        },
        "item": {
          "id": "38ae1ca7-4a6d-4547-a267-56207ee95483",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ddbe0802-afbc-4bc3-a59a-e4b16961b28c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0db17a-468e-4d47-8617-c17c38965e16",
        "cursor": {
          "ref": "1beb9cd5-43f6-4fba-bedb-d2caba4aa321",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "64a88a31-4bae-4949-8994-dff9e94e17f3"
        },
        "item": {
          "id": "7a0db17a-468e-4d47-8617-c17c38965e16",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "750c1bc7-da86-4ff1-ae6b-9f754c13e6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aff762d-a010-4a87-a975-7b6c5986681d",
        "cursor": {
          "ref": "04abd619-5de7-46d0-97b5-4fc520fc508b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e0be20fc-6fe3-40b1-a8d5-cafdd4c7fbe6"
        },
        "item": {
          "id": "3aff762d-a010-4a87-a975-7b6c5986681d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "dd0c0206-ae77-4478-a0da-7d69f6dc2437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8230f7d-804a-4288-8a4d-6fbfcb31c1d9",
        "cursor": {
          "ref": "66fbcee4-70f6-42a6-bed7-d3f04a8aa4e3",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3f9fa50e-3bae-443a-ad49-31e1a1373961"
        },
        "item": {
          "id": "c8230f7d-804a-4288-8a4d-6fbfcb31c1d9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4a7bd525-6f43-436d-b0d8-762d8bd8fe72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c8f1d7-a7a7-421a-b914-ee4e7b5756b3",
        "cursor": {
          "ref": "e80a7d9a-9a85-4321-8d82-0a5d747cf77e",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3b75769f-fbac-4347-907f-00c578b73007"
        },
        "item": {
          "id": "e8c8f1d7-a7a7-421a-b914-ee4e7b5756b3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b5480340-305f-455c-94b9-2fa9a56e2142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becb3eb7-7728-407b-9885-4450aadc4215",
        "cursor": {
          "ref": "ba1c6eb7-844a-46b9-8d03-57a7583e80cb",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a0356072-caa7-4e72-af79-b9aeb1467340"
        },
        "item": {
          "id": "becb3eb7-7728-407b-9885-4450aadc4215",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e80f62e1-eb89-427b-85f5-fcb673525acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81bd943-584a-4d3b-84c3-00da8dea778f",
        "cursor": {
          "ref": "eef4a480-711b-4ff2-8569-69eb2148266e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c1329023-18ae-42cf-b9a0-a01af177b458"
        },
        "item": {
          "id": "d81bd943-584a-4d3b-84c3-00da8dea778f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7eaf419b-4b8e-451d-a316-9e96e8f31132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b395e6a-fba6-4493-bde0-f1fa49df6b70",
        "cursor": {
          "ref": "310f1a8d-c095-4d3f-a772-9b5ce6d9c292",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "86e9d984-87a5-43ac-ba0a-002c7b0b7c9f"
        },
        "item": {
          "id": "0b395e6a-fba6-4493-bde0-f1fa49df6b70",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d0ebb69d-ec68-4aad-a995-aba93e0d77d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5655e7e1-c74f-4c13-884e-dab35545932a",
        "cursor": {
          "ref": "5d1b4a5d-0935-4642-85dd-620e3be2f7e0",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ae94d439-9557-433f-bbfc-879bf09212cd"
        },
        "item": {
          "id": "5655e7e1-c74f-4c13-884e-dab35545932a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d73cb131-5315-402f-8201-cf87e5b1dd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a1be72-817f-43e8-9c50-c0eea76fdf60",
        "cursor": {
          "ref": "011304ad-d231-492f-8fe3-28858af83144",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a1e8893f-baa3-4476-bbd6-2acdfe591767"
        },
        "item": {
          "id": "b5a1be72-817f-43e8-9c50-c0eea76fdf60",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "485bc53c-9dbd-487a-bd1f-06c3d0119394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083b30ff-f88c-4c59-b144-cbebbc2ba8f1",
        "cursor": {
          "ref": "15bb2302-106e-4288-a377-93121d9dfb19",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ac716fd5-997f-4174-bfd4-dcdd60d76189"
        },
        "item": {
          "id": "083b30ff-f88c-4c59-b144-cbebbc2ba8f1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "15138e99-2b8b-4c81-a7dc-a0b8cd00d9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1ba409-c178-49ff-88dd-c772b33b4aa4",
        "cursor": {
          "ref": "2a605f19-ab29-4d71-b5f5-59befeb0c7a9",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d94d5705-895c-4706-8958-0023edc8072f"
        },
        "item": {
          "id": "0c1ba409-c178-49ff-88dd-c772b33b4aa4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1b9cb752-2ffa-47dc-b277-de277b9e5c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28addb8-110c-4050-9640-1c91cf157b08",
        "cursor": {
          "ref": "0fec2441-40d0-46f9-9139-4b10ce3ad2fd",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "87925325-fe9b-4c82-acfa-5d75f4e95a9b"
        },
        "item": {
          "id": "e28addb8-110c-4050-9640-1c91cf157b08",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "19946064-d503-4b63-9bd4-36a883c17aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cab7ec-dd08-449b-898e-31b7836ba1c7",
        "cursor": {
          "ref": "87c8840f-6135-44a3-8b44-7b52d78b1c90",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4c57ce8d-a2d8-4202-8b12-207d2bd8dede"
        },
        "item": {
          "id": "d6cab7ec-dd08-449b-898e-31b7836ba1c7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c7b21899-9c5f-4639-9b7e-63ccd90adf78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e38480-624e-4c46-ae93-5d27455c23c8",
        "cursor": {
          "ref": "ea10300e-e654-436f-9835-99b7c6c81268",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5de826e9-7b40-4364-bc3d-af98ca8091d1"
        },
        "item": {
          "id": "99e38480-624e-4c46-ae93-5d27455c23c8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "653e7b89-a2aa-4281-985a-7e36670be4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef3e929-339f-485c-a8a5-4c85f3d0e966",
        "cursor": {
          "ref": "eea23327-eb76-4831-babd-1a5500b7be85",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6b0d98a8-bd2d-460a-a265-69b91afbd41f"
        },
        "item": {
          "id": "2ef3e929-339f-485c-a8a5-4c85f3d0e966",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ad3a5d90-792e-49a6-8a6b-0aee50b5353c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53aec86-fcb4-461a-ad45-f331aa914ef2",
        "cursor": {
          "ref": "cab86b78-e3a9-4b3c-9e32-6644f366f202",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f5a9e75d-6dbd-405c-ae60-75d00be264a3"
        },
        "item": {
          "id": "f53aec86-fcb4-461a-ad45-f331aa914ef2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b34aa9e2-5a2f-422f-a482-dd5a73d094ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cce5ffe-a1d9-45aa-8171-f063a5b57b77",
        "cursor": {
          "ref": "a21bf171-4537-455f-b22c-1f28b027f1c2",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2ae57579-6464-49de-a7f6-f40e724134f2"
        },
        "item": {
          "id": "5cce5ffe-a1d9-45aa-8171-f063a5b57b77",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "42003bdf-044f-4a6d-b203-4b293fd94ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814cccfb-ec73-4e50-9e56-e85d91deb5f4",
        "cursor": {
          "ref": "a4b9e61b-c3ea-453d-8cde-1e46daccd778",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5f41040a-bd13-43ad-afd5-ba8c9d483048"
        },
        "item": {
          "id": "814cccfb-ec73-4e50-9e56-e85d91deb5f4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6e8c4623-f050-45ee-bb09-655337258639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d3e2a2-57b1-42ac-a873-2452529e64a0",
        "cursor": {
          "ref": "ac831555-0bc7-478c-ba71-e94e13369067",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "93eb3e16-ab9e-47ab-b03f-527f10e691be"
        },
        "item": {
          "id": "53d3e2a2-57b1-42ac-a873-2452529e64a0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c36abe39-3f91-457e-bca6-716e3d82d869",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef982af-0466-42f5-a4e3-ef6207a75230",
        "cursor": {
          "ref": "aef564f7-409f-4180-bb28-994818a22e87",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "80a622e5-f0fd-45ab-b572-ccca329ed24b"
        },
        "item": {
          "id": "1ef982af-0466-42f5-a4e3-ef6207a75230",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2c7f6e9d-be03-46a4-96a3-6f3662845ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "749540dd-5b82-4be6-97eb-d6552c03ae23",
        "cursor": {
          "ref": "66a820b5-1cb4-489f-9f70-f846747ced9b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7e8bfed8-9ad5-47e3-89a7-aac81d7d86d2"
        },
        "item": {
          "id": "749540dd-5b82-4be6-97eb-d6552c03ae23",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f556cbe6-0b7c-49fe-9e33-a1b39e2e6d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c2d295c5-5054-4f12-82a4-1bfff0143b30",
        "cursor": {
          "ref": "cd62cbe9-dcc9-44b6-b60d-9b9bede90280",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f7204469-dbeb-46c3-a960-daa1d62fd5b5"
        },
        "item": {
          "id": "c2d295c5-5054-4f12-82a4-1bfff0143b30",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c5a1f474-a0e9-444b-9956-79d5dff6fbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7d3a3991-03e3-4c4f-a73f-1b748913dcda",
        "cursor": {
          "ref": "0232e8f3-e3e8-41ca-895c-2d40ba90716a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fbb54a40-fbf1-470d-9fb5-c9e5e65b65c5"
        },
        "item": {
          "id": "7d3a3991-03e3-4c4f-a73f-1b748913dcda",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1b5d6f44-b0b0-4619-a7f9-26a418471a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ad83e5d3-bb1f-49ce-b57f-afd8c9d4a0bd",
        "cursor": {
          "ref": "d29a3f74-42b7-46e9-bcb7-69a875e7fe35",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ea8d42df-d429-4dd1-9558-578077a76ad0"
        },
        "item": {
          "id": "ad83e5d3-bb1f-49ce-b57f-afd8c9d4a0bd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cece280e-0b1f-4a22-bd5c-d07924d54f42",
          "status": "Created",
          "code": 201,
          "responseTime": 6657,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dc2026-e297-4a80-8099-5f0f5796e195",
        "cursor": {
          "ref": "7794eb56-efc0-407c-baad-0b01b0e12c23",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "76f26d19-1144-40d8-813f-a331bba96067"
        },
        "item": {
          "id": "24dc2026-e297-4a80-8099-5f0f5796e195",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "85586823-361d-47db-b9d3-0503e85310f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "179948b4-7200-431f-9a9f-d50fba886d91",
        "cursor": {
          "ref": "ea5cfc3a-b7a6-4a2b-b1bd-76c2835cc44b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4f43762b-388a-495f-a715-7ee629c79d77"
        },
        "item": {
          "id": "179948b4-7200-431f-9a9f-d50fba886d91",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "24257253-bf53-42de-8bad-8583d74b91e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "5214b3c6-f237-4456-9a85-ede59ea84b7c",
        "cursor": {
          "ref": "80b7082e-477f-4c35-af2a-39c80e8de2c5",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7d67e31a-3d97-4f40-8571-4066a083f36c"
        },
        "item": {
          "id": "5214b3c6-f237-4456-9a85-ede59ea84b7c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "be14060e-0190-4efe-a6f8-de9c3b46d136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6355d48f-0ab5-4b45-b0d7-d5588ca93531",
        "cursor": {
          "ref": "5c9bf64f-6ba0-4eb8-a8a0-13266501a47f",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fa717e9d-fc79-40eb-ad4c-d5960ed5599a"
        },
        "item": {
          "id": "6355d48f-0ab5-4b45-b0d7-d5588ca93531",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d29ac6fb-5ec1-4ce4-9ddd-7d26909382d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc63039-0305-48cf-a01f-cf693f5cac96",
        "cursor": {
          "ref": "45b0f028-3865-4c24-b867-46a07ffb5ebf",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d4543866-2155-48fe-a239-079fe31e8810"
        },
        "item": {
          "id": "bcc63039-0305-48cf-a01f-cf693f5cac96",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a4a87fb6-d00e-46ca-bd7a-b64d4ec29509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719dca5c-2a9b-4d76-a1b0-c52efff399fc",
        "cursor": {
          "ref": "ec3878d1-f241-4929-a4e2-27dae8f6acba",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "471505c8-9a0d-42f5-87ca-c4584853588e"
        },
        "item": {
          "id": "719dca5c-2a9b-4d76-a1b0-c52efff399fc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "07df2fae-4663-457e-b3f5-9ed76ef22c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad5ec69-86cb-4842-8d23-65707ccc66fb",
        "cursor": {
          "ref": "a06e5348-3dd0-4c76-a261-109ff9279af8",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2a39914f-689b-4a4f-b76c-b6354e42b041"
        },
        "item": {
          "id": "bad5ec69-86cb-4842-8d23-65707ccc66fb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "98da1114-4853-48fb-b130-f243e9c2d00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df1dd7d-95f3-4353-bc36-ab34add937f5",
        "cursor": {
          "ref": "e1bade55-b422-4495-bd7b-ef7f550c880f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e276b6a6-6d87-4953-a4b1-e41c68a52582"
        },
        "item": {
          "id": "3df1dd7d-95f3-4353-bc36-ab34add937f5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b92e97a5-2c40-4bb0-96e9-dfd4a5c66968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e2b5c5-a425-424f-8eb6-434d3a550f1a",
        "cursor": {
          "ref": "1e508e60-c45b-4500-a038-a530bae296ff",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0304a358-179c-4d71-b6e0-2e55ae310f05"
        },
        "item": {
          "id": "d7e2b5c5-a425-424f-8eb6-434d3a550f1a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e9e3a319-00c6-4317-8ba2-7835bbff01d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14994745-829d-4c66-8407-416a452e2bd6",
        "cursor": {
          "ref": "e9e8b90f-ac03-499c-9c4c-795e6f2efdd3",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "10ac9b5d-1adf-49aa-a3a8-87933f476fa0"
        },
        "item": {
          "id": "14994745-829d-4c66-8407-416a452e2bd6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "007c7b3d-21f0-475f-877d-60234a90bd3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbcb31e-fa9f-4e2e-b1a3-05fbd8bbbc26",
        "cursor": {
          "ref": "d84e44d2-ea8b-4b2c-a2bc-02814c40de54",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "155bd755-2221-49a3-83cc-abf0d0ad0a9f"
        },
        "item": {
          "id": "8dbcb31e-fa9f-4e2e-b1a3-05fbd8bbbc26",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4d787385-9743-4c34-80b9-834897b0ae7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af7c00f-fe82-4617-9e44-9ead272945eb",
        "cursor": {
          "ref": "1772a9b8-a70a-4550-8ac0-83bc17ab4582",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2a172dde-6c5c-4d5e-a545-e11ad5f65a0b"
        },
        "item": {
          "id": "8af7c00f-fe82-4617-9e44-9ead272945eb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e01a305a-6c23-42e3-b197-ba7bf44c6c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceef64aa-baf6-4c27-8ba2-627a0b557b22",
        "cursor": {
          "ref": "4a7c8684-18f3-450a-997e-49ee1c17395d",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "34ef28a6-db07-4a10-b05a-160e88aef8f3"
        },
        "item": {
          "id": "ceef64aa-baf6-4c27-8ba2-627a0b557b22",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a79a02bf-b98a-4fb3-92c1-c4bbc8228fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7942cd09-78c0-4c09-86e4-9a09ba7ce664",
        "cursor": {
          "ref": "4d12a125-84f6-4d7e-925a-576ae8dd7b0f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c1332510-4689-487e-a692-1082181e4c52"
        },
        "item": {
          "id": "7942cd09-78c0-4c09-86e4-9a09ba7ce664",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f1b1b696-59b9-4b1d-8472-3a42e58bcf81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802f65c7-cf01-4bde-9914-3cc71671304f",
        "cursor": {
          "ref": "301f9863-9787-4191-b828-6ae3f9142a0d",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ff26ee94-eca9-4c25-8bc6-8b860055b360"
        },
        "item": {
          "id": "802f65c7-cf01-4bde-9914-3cc71671304f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e9b1c390-7838-4e74-b7ba-3a124548fc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998ff5a7-4a16-41c9-825e-fd2fb18372f7",
        "cursor": {
          "ref": "0c815695-a8ae-44df-a316-058bb313d3c8",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d546d556-3a5a-42d8-a7f2-13909e95f794"
        },
        "item": {
          "id": "998ff5a7-4a16-41c9-825e-fd2fb18372f7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "62f6e724-0776-4a46-b488-0c1487e3bd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95db63ac-e3a9-4c85-9f03-2ee82add340a",
        "cursor": {
          "ref": "f27dc1e2-3356-47f6-a381-f0d67568081b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b5972245-3688-41b2-ac73-5d7421be7e80"
        },
        "item": {
          "id": "95db63ac-e3a9-4c85-9f03-2ee82add340a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "edf07c86-fe0f-4401-beec-78e8208c7f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4081f723-9c53-4dd7-ab43-5470f8d9cca0",
        "cursor": {
          "ref": "149d62dc-54bc-4158-b036-ae0b1d71656f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "24ac37f1-82e8-470a-88e1-bb516c1b237c"
        },
        "item": {
          "id": "4081f723-9c53-4dd7-ab43-5470f8d9cca0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3d6448f8-3eac-4122-a031-7091b36c2d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0972d470-cb90-4f4d-9e35-b882dd80ffb2",
        "cursor": {
          "ref": "fe205ce3-20a5-43c9-89fd-f9f4a145b889",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a349e5a7-94ea-4618-9b7c-ad5592918f4b"
        },
        "item": {
          "id": "0972d470-cb90-4f4d-9e35-b882dd80ffb2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fc5483ed-40f3-48fb-bb5d-af16a3bf6f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf1c305-f418-4a89-8a17-f3023caf156f",
        "cursor": {
          "ref": "bc26d4c7-0c85-4bde-b5fd-da48863c41f8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0977d7a2-8836-4b61-9898-96b7055fa6da"
        },
        "item": {
          "id": "8bf1c305-f418-4a89-8a17-f3023caf156f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3861d026-a02f-4272-a971-d9942277607b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee42695-de02-4fa7-b925-30451131503f",
        "cursor": {
          "ref": "05218679-c23c-4af6-80ca-866f4d12f300",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6362981f-cda9-42e3-8682-3defea2a12e0"
        },
        "item": {
          "id": "9ee42695-de02-4fa7-b925-30451131503f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9bbe2aef-d95a-43db-9aef-b1121d2025b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3aff43-3ea1-49d5-ba9b-cdbf707d689c",
        "cursor": {
          "ref": "55df0096-c3f4-429d-b0c7-387b116671a3",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "df9bea6c-5aa1-42d6-98bb-b622a7e41e0b"
        },
        "item": {
          "id": "2c3aff43-3ea1-49d5-ba9b-cdbf707d689c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "be861683-1fd6-4afc-a6d7-5553f1bd7b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa274f58-fa10-40f4-93a1-40e20f52e2c1",
        "cursor": {
          "ref": "37415483-364e-42e4-a429-83502ba9897f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d5c5d620-b686-4626-956d-d6259dd0df3b"
        },
        "item": {
          "id": "aa274f58-fa10-40f4-93a1-40e20f52e2c1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0336ffab-0ce5-4034-b93d-36553f784d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c830ce80-e566-446d-b656-ae9c8ccbd2b9",
        "cursor": {
          "ref": "e5ed9fc8-ca43-49e6-a7cd-97c01ccdbfc1",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "de3c5cb5-8b71-437c-9cd6-3af415868c9f"
        },
        "item": {
          "id": "c830ce80-e566-446d-b656-ae9c8ccbd2b9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b17e7008-14f6-4b14-af21-81fe9fb83cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349a4f8f-b8c5-4543-a324-1819239a89ae",
        "cursor": {
          "ref": "2716260e-b58c-4782-a4de-19b19eecee1f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c1aa3dfb-a4f8-4be6-94c7-10cc8cc5fb0f"
        },
        "item": {
          "id": "349a4f8f-b8c5-4543-a324-1819239a89ae",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b7a6c3de-b197-43e6-a24f-731c76d8d40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee74303-76be-4a24-846d-815279fa4ca8",
        "cursor": {
          "ref": "6bcdbf84-e048-4f87-95d7-67a82b4c75a8",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "be6ed727-bdb6-4827-9a70-b14e337f1037"
        },
        "item": {
          "id": "aee74303-76be-4a24-846d-815279fa4ca8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "52b1c124-eed4-473c-a22b-0a8fe98df484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26120456-e59f-435e-b643-b10b02ab5b78",
        "cursor": {
          "ref": "ca50d4ae-3c94-4f47-8359-fe5c782e2410",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "83e32cc8-c8e5-476c-9c5b-d977347d69b3"
        },
        "item": {
          "id": "26120456-e59f-435e-b643-b10b02ab5b78",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2745a61d-ca3d-4b87-9f91-9495083fb1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7989fed7-90fd-4f5e-a923-bc7c1e29b496",
        "cursor": {
          "ref": "93757cbc-5c6e-4ea7-8eb0-324ea8fa07af",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "42245802-c52b-423b-ab83-26223912b61e"
        },
        "item": {
          "id": "7989fed7-90fd-4f5e-a923-bc7c1e29b496",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0b743537-09a4-4739-a2f0-d069a953700a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9518b53-d647-4467-a9e4-7ecfde682e51",
        "cursor": {
          "ref": "f83f4d4e-0891-4c50-9e6b-640cd2bbb165",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b9da1eba-5126-4e07-bd0a-664048ff3246"
        },
        "item": {
          "id": "f9518b53-d647-4467-a9e4-7ecfde682e51",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "78bbc2c0-9458-43f4-865f-e2eb37b46c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfec53b2-60b3-49eb-9539-0b367b477e09",
        "cursor": {
          "ref": "f880318f-f381-4a14-8328-a4ed4234678c",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c0a00a6d-59a2-4f60-a624-9e6f22788d2f"
        },
        "item": {
          "id": "bfec53b2-60b3-49eb-9539-0b367b477e09",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8c7635ea-9bf1-410f-b23d-cfc0bc18adb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5127f66c-5660-4daf-badc-92e278463e93",
        "cursor": {
          "ref": "7290965c-65ef-4272-ac43-7fda703e9f00",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1aee83e9-4ca0-402c-ac70-4e6c35e156f2"
        },
        "item": {
          "id": "5127f66c-5660-4daf-badc-92e278463e93",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2f0e9947-42a4-4ba7-8cfd-bd4debf5dbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0fd778-94c4-4b7a-ab46-73414d19d688",
        "cursor": {
          "ref": "77a9deeb-6bdf-40b4-a05a-91b5433774e8",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d6e269a2-0c3a-42de-877f-36c89e25fc01"
        },
        "item": {
          "id": "8f0fd778-94c4-4b7a-ab46-73414d19d688",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c0c2d648-8aff-41c3-bea4-4533e83e280c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6547cab3-2994-4c81-a449-70d4fdf2ebd7",
        "cursor": {
          "ref": "7583be20-5443-4687-b639-222b11efe489",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f22bb9c0-0ab8-404d-8658-97e9517fc4be"
        },
        "item": {
          "id": "6547cab3-2994-4c81-a449-70d4fdf2ebd7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f10d780e-c1dc-4026-89d4-38687a1dd4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2304ad72-fc27-43b4-9092-a06d1391feb4",
        "cursor": {
          "ref": "678e8a13-e7e8-4352-acad-dc3ee498320e",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "22087993-c21e-4f01-966d-f6d85f59e315"
        },
        "item": {
          "id": "2304ad72-fc27-43b4-9092-a06d1391feb4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6b7ca625-6602-4245-9950-fecab48ba620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599a4db2-68fe-4322-8fdf-d0fcfe7b5a53",
        "cursor": {
          "ref": "754760c2-aae4-4240-9af3-9e0678e51592",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6fe8b9ee-1a64-4042-81af-823ed59a5b92"
        },
        "item": {
          "id": "599a4db2-68fe-4322-8fdf-d0fcfe7b5a53",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c5625e80-6af6-4f94-b931-4122f0547238",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1102e639-6990-47b5-9bd9-8b1bc80e3f90",
        "cursor": {
          "ref": "85db69de-45d3-4ea1-9228-038b3dc50482",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c68121cf-cd6f-4bde-b8cf-a19328b3f77a"
        },
        "item": {
          "id": "1102e639-6990-47b5-9bd9-8b1bc80e3f90",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "994978af-da86-41f4-bef0-b10d74e04559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aee3163-ab48-4d2e-accc-0777b287aac8",
        "cursor": {
          "ref": "a0d5dc02-5579-436f-8555-9c72d180708c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "685307c4-28fe-4b4d-9844-d91b36ec19e6"
        },
        "item": {
          "id": "5aee3163-ab48-4d2e-accc-0777b287aac8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "de9411af-ca1a-466a-8c25-91070d05e247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cef7bf9-7e57-4677-9234-df0354ca8e29",
        "cursor": {
          "ref": "4623c20d-6651-467a-9c0b-c31b8cdf6146",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "42be2706-7274-4335-a5da-9ccef0813a91"
        },
        "item": {
          "id": "9cef7bf9-7e57-4677-9234-df0354ca8e29",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3f70f07f-b4bc-45aa-9c43-da98b7476a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2684f6dd-ca33-44de-9c74-149d9ca5ee53",
        "cursor": {
          "ref": "1ecbe4a9-0881-4f5a-9d25-172408da5794",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "dafe2082-415a-4a21-8687-06526f7840a3"
        },
        "item": {
          "id": "2684f6dd-ca33-44de-9c74-149d9ca5ee53",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9709e098-49e7-43d5-8366-f6b089dd431e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d5db62-e28a-4926-9323-65b4b8ec73fb",
        "cursor": {
          "ref": "e4a721b7-3025-4653-a83d-ac4c4e154d95",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ac4d2669-8ee4-49e8-ac50-20f10927a903"
        },
        "item": {
          "id": "62d5db62-e28a-4926-9323-65b4b8ec73fb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b31ee963-1746-494c-bf21-78c34fe8b5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40edd2a1-5e8a-4dfd-88fe-9e6a98aed63b",
        "cursor": {
          "ref": "1fa3ea15-3ec2-4684-a5a5-f94853e589db",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cef92683-ad62-4b86-942f-f4db932b4844"
        },
        "item": {
          "id": "40edd2a1-5e8a-4dfd-88fe-9e6a98aed63b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a1585ab6-5dc1-4cc7-ab67-d9af0f9cbf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ab81c9-a768-4740-adac-7ab8e5b59d01",
        "cursor": {
          "ref": "978f8292-a8b1-44c4-be2b-05992ae29245",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1ea5c5e8-fcbc-4ea6-8fac-74af0ff31e4a"
        },
        "item": {
          "id": "43ab81c9-a768-4740-adac-7ab8e5b59d01",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "698c88db-af5d-48ff-bed5-86ab1e05a3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619b0221-63bb-4a59-9bda-00f891de4be9",
        "cursor": {
          "ref": "4f6e2bfc-c562-4bda-b710-6dc430f3bc0c",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3f750e8b-8139-4d09-9afe-8a0909440f8b"
        },
        "item": {
          "id": "619b0221-63bb-4a59-9bda-00f891de4be9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e4484432-44ed-4e30-9f20-c074b8ea73c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9dc716-1274-4553-857e-88a30f9fd510",
        "cursor": {
          "ref": "12e29e04-802a-4cfb-9795-088c1c156676",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "800767e6-e305-4120-b45d-bcf7bf8ed1a0"
        },
        "item": {
          "id": "3c9dc716-1274-4553-857e-88a30f9fd510",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "52ac93ef-c27c-46a1-b5f5-4a11202fa9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4ec4ac-2999-43f3-803d-83fedd1b11ad",
        "cursor": {
          "ref": "4b705e9e-8705-4009-850f-510ffe9f94d8",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7a395c20-7131-448a-a905-dad1bcc5e420"
        },
        "item": {
          "id": "7f4ec4ac-2999-43f3-803d-83fedd1b11ad",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0dd58056-def7-467c-9918-60f91b12422a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb90f15-6fdf-4cc2-bbe2-b2bd924b9c69",
        "cursor": {
          "ref": "7805ac42-e894-48c2-ad6b-3be3c9fc4b69",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "250ee25d-9126-499e-a8da-a432cbaa10c0"
        },
        "item": {
          "id": "dfb90f15-6fdf-4cc2-bbe2-b2bd924b9c69",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a2352f89-3ed2-4d08-a9c6-a5ce216751a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e374a7b1-9a11-4c40-b2f7-bda6ac8f3eee",
        "cursor": {
          "ref": "9ddf5d05-edd6-4bdc-9c95-019502d929cc",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6578c354-8952-45bd-845e-e465a38bfd64"
        },
        "item": {
          "id": "e374a7b1-9a11-4c40-b2f7-bda6ac8f3eee",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "57f74d6b-0527-4555-bf1a-623108ae674b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227dc8fb-a08f-46e1-acdb-e775c03fadf2",
        "cursor": {
          "ref": "b78f784a-dbd4-4ea1-a8ed-8820fd11154e",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "000dc478-6ca5-4a0d-8510-b0d817ed5dfc"
        },
        "item": {
          "id": "227dc8fb-a08f-46e1-acdb-e775c03fadf2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "39b6db46-445c-428a-bf85-9ad21f0933cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175e725d-8daa-4bea-b11b-f7bfbe24db20",
        "cursor": {
          "ref": "c98571c9-1e24-402f-af51-ad31a23fcd74",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d54a8105-d174-448c-8770-8332335e3b8b"
        },
        "item": {
          "id": "175e725d-8daa-4bea-b11b-f7bfbe24db20",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3681f3ec-4ec7-493d-aba8-a5a7377c61af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00766297-c270-4d11-a743-c503597ddbb3",
        "cursor": {
          "ref": "db7feba2-2259-4eaa-a12f-7e91e68216a8",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9b582081-cf0d-497c-a294-9fde657632bf"
        },
        "item": {
          "id": "00766297-c270-4d11-a743-c503597ddbb3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "03da7244-e5c9-4e26-9a8e-86451893931e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f674fcbf-4499-41bd-9e17-c80eafdede60",
        "cursor": {
          "ref": "4a3dbefc-7a9e-46ed-a725-f481fb23f40c",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "838c8630-9dda-46ef-8cd9-ede7e56b7ff3"
        },
        "item": {
          "id": "f674fcbf-4499-41bd-9e17-c80eafdede60",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c305d555-7fc6-470a-ae2e-78b95c304dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23539829-f5af-423b-ade4-bdea55fc710a",
        "cursor": {
          "ref": "24813560-6574-4f06-8268-a8c6557717a8",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "42a4fe54-580b-41be-85a7-ef04d0429d04"
        },
        "item": {
          "id": "23539829-f5af-423b-ade4-bdea55fc710a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8f128285-d4ea-45b9-9051-b9d7c1183323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02696e2e-f210-4ce3-9188-9cf71c8c33f3",
        "cursor": {
          "ref": "baf99e5a-077e-4b19-a5a9-920557d67d93",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bc0ae37b-7ce3-4d5b-b4d1-ee8157a7e36d"
        },
        "item": {
          "id": "02696e2e-f210-4ce3-9188-9cf71c8c33f3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0f1bbeb9-3bde-4a52-ba40-0f85783c3df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915a7474-61ed-420d-99f5-d8fe05d4768a",
        "cursor": {
          "ref": "f545a4f2-096a-4e55-a559-60a5755cff5f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d75b6130-5a3c-4c35-9ccf-a3d4baa004b3"
        },
        "item": {
          "id": "915a7474-61ed-420d-99f5-d8fe05d4768a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4af07ae2-fabe-454a-b081-ad96f3e84d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3450eea9-4931-4019-a891-097aad6d7d4e",
        "cursor": {
          "ref": "4e1a5cb9-779d-411d-81f3-27c8985ac73e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "064109b8-fff6-4964-a18e-77624f6eed9c"
        },
        "item": {
          "id": "3450eea9-4931-4019-a891-097aad6d7d4e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "306c048b-0a53-4e14-8e69-a32eceaf2651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63aaa66b-3001-4ea1-91ac-3c3532bf2d2d",
        "cursor": {
          "ref": "b2908e94-9bd1-4532-8451-a7bcf46fc905",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ea6259ce-4783-448f-a749-3b0ed697b7bd"
        },
        "item": {
          "id": "63aaa66b-3001-4ea1-91ac-3c3532bf2d2d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3bdc942a-762c-4a74-9b8d-59821b1be1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed7c760-7a9d-4b78-8b69-3277291163f6",
        "cursor": {
          "ref": "506fa628-5978-4875-bc1c-03ef5346e937",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "35ad0d0c-96e6-407b-a583-bf058f3e57c1"
        },
        "item": {
          "id": "7ed7c760-7a9d-4b78-8b69-3277291163f6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f97fac66-2fa3-414d-8180-ac15cec92d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcc650d-34d8-4ee1-b32f-608b1518a0c6",
        "cursor": {
          "ref": "966a384c-47f4-4e76-b940-cadb0d475876",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ad9b2c68-4310-4e07-8059-67dd1303d177"
        },
        "item": {
          "id": "0bcc650d-34d8-4ee1-b32f-608b1518a0c6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fed7bb37-2a77-4626-a870-c05253c7fb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501b126d-4b2d-4c1d-b67e-eff2414d8fc1",
        "cursor": {
          "ref": "d0f68002-61a8-4e35-8f22-a764951a14fe",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c2b971b7-0ff1-4393-8996-287e41833be1"
        },
        "item": {
          "id": "501b126d-4b2d-4c1d-b67e-eff2414d8fc1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "29449a1b-7496-4151-b521-f5867be6eb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a71f3b-523d-4bf6-b2e3-79aebdabfe3c",
        "cursor": {
          "ref": "f72e71f1-8b24-4105-be75-fff3343ac814",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d4d6adf0-9ffd-4e2d-841c-e2a68e7368dd"
        },
        "item": {
          "id": "b8a71f3b-523d-4bf6-b2e3-79aebdabfe3c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a2c1a483-d30c-4681-9ca1-b72609fae1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc495a4-0710-4237-9370-d5b6915bc3e5",
        "cursor": {
          "ref": "3c43ef99-b509-41cb-b4c6-b96ca0966cf2",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "36cd5f2b-9684-4328-9322-a71fe0de113a"
        },
        "item": {
          "id": "bbc495a4-0710-4237-9370-d5b6915bc3e5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ce6b6810-868d-47b7-a8e1-f06804b2e8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06421902-887c-4b61-8797-1835476ea06c",
        "cursor": {
          "ref": "40712aee-ddf3-40fe-a458-a0e6b5759b8f",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2082ec61-23e5-4cf5-b863-b3601b3af690"
        },
        "item": {
          "id": "06421902-887c-4b61-8797-1835476ea06c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "11cf64c5-1983-4e28-81d6-ec767109957b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40223be8-58ad-45ea-b6b1-1d7bdc73378d",
        "cursor": {
          "ref": "183945d1-82a1-4b82-8a8b-286f491db2c8",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "52d18fdf-1734-444d-8f2e-f2d490cb1b55"
        },
        "item": {
          "id": "40223be8-58ad-45ea-b6b1-1d7bdc73378d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9c61fdb7-c317-4db4-bed7-94b993655704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e75fba-fa14-4ff9-b78b-cffee3bc3029",
        "cursor": {
          "ref": "86e220e5-f107-43e2-83b1-d4111a424e64",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "eaeb4644-fb16-45b5-9fd2-78278ac6bd35"
        },
        "item": {
          "id": "96e75fba-fa14-4ff9-b78b-cffee3bc3029",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5d3f25d7-4060-4f2c-a3a7-231c917b0577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e236b0-9100-4b59-9c38-14db8019a3fd",
        "cursor": {
          "ref": "a339ab94-2d66-423a-89bd-c60c2c049b9b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "58650692-3357-401e-b2e6-74123cc44807"
        },
        "item": {
          "id": "a4e236b0-9100-4b59-9c38-14db8019a3fd",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fa8ab3ed-3b21-49bf-aa7f-8ad2b861d4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e1edff-2ccd-4e20-91c2-f4c0157c2be5",
        "cursor": {
          "ref": "ddd328c4-64ae-47d6-95b6-6a7174c353da",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d6bab0ab-2983-44b7-b39a-fe3281b55440"
        },
        "item": {
          "id": "45e1edff-2ccd-4e20-91c2-f4c0157c2be5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dd76411a-013e-4769-b235-f066c96fc799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b933ec1-f731-4647-94d1-c587c3f01e74",
        "cursor": {
          "ref": "6b9471c6-31de-4182-91fa-7e2cb31a54d3",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "82999e77-d3f8-4762-b1b0-9f29f7a46368"
        },
        "item": {
          "id": "3b933ec1-f731-4647-94d1-c587c3f01e74",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b48b43ea-fd9d-4911-8f8b-3821b562014c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f42253-98fa-4eff-882f-914a1506b45a",
        "cursor": {
          "ref": "c32284bc-9cd4-40b1-bfe9-8e07603f5363",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5f6fb129-d4c6-4135-8949-a79b5676fb00"
        },
        "item": {
          "id": "05f42253-98fa-4eff-882f-914a1506b45a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ec1622df-3c49-4f20-9241-33b58f6a8d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9bf8bb-a51b-4690-bcdc-e1516d34a5b6",
        "cursor": {
          "ref": "fb8f9e09-007e-45f5-bc41-9ae54e6a1052",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "20dc4bd6-412d-47c4-98b3-130c06b181bf"
        },
        "item": {
          "id": "bd9bf8bb-a51b-4690-bcdc-e1516d34a5b6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "052fb88b-ded2-45b7-8753-4df1c0093f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6213bb1d-5866-4f8a-89a9-7c9803a9fca4",
        "cursor": {
          "ref": "a28e34e7-d5c1-4d99-b9dd-12b01c6e5685",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f134217c-721f-40f2-a543-b67cb60986e2"
        },
        "item": {
          "id": "6213bb1d-5866-4f8a-89a9-7c9803a9fca4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cfa3dce3-4dfb-4a82-8355-4d354d6ee009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ec8454-374c-4a11-9ba1-f0b28013ffea",
        "cursor": {
          "ref": "6b0c6972-f72a-417c-b40d-3498f0104efa",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3498fede-ec76-40d5-80f3-3d36252ad77e"
        },
        "item": {
          "id": "35ec8454-374c-4a11-9ba1-f0b28013ffea",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0dbe131b-4bbb-49c2-9fb9-a9fc1f9f7e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228ba755-9154-4e13-819e-2445b0ada56b",
        "cursor": {
          "ref": "3731a1bb-f6ea-446c-b8fb-87ec2a49ae53",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b5d92c60-dfd3-43b9-82cc-3104d947320d"
        },
        "item": {
          "id": "228ba755-9154-4e13-819e-2445b0ada56b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "b97a5475-dfd7-40e8-a82d-0d9c43dec904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50fec53-c16e-4db5-8822-b75957f43a96",
        "cursor": {
          "ref": "db845ff7-6be2-4810-8205-fd075ffed0e3",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5990d917-5ea4-476c-8362-7f321587926f"
        },
        "item": {
          "id": "b50fec53-c16e-4db5-8822-b75957f43a96",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "193959a6-481e-43c1-8503-b720efb25fa6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1895c54b-57b3-4f0b-b929-56058e9f2b69",
        "cursor": {
          "ref": "dc15c03c-fb63-4e34-957f-78d19c7648e8",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "39759c5e-378c-474b-8419-8caaa25692ad"
        },
        "item": {
          "id": "1895c54b-57b3-4f0b-b929-56058e9f2b69",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "39071206-5b5a-4916-9b16-2c982f1879d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec2b4f9-870f-400d-8ffa-52704cb19211",
        "cursor": {
          "ref": "faa1ecce-4d1f-4bf7-87c2-226bc8f32f72",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e0b5762a-b870-4882-856a-b10f95f6783c"
        },
        "item": {
          "id": "8ec2b4f9-870f-400d-8ffa-52704cb19211",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "272fd8ae-7505-48d7-9fc0-98911e96ab0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75db5e1e-43e8-4cda-8f7f-63e09593b08e",
        "cursor": {
          "ref": "1f2c4a2e-87d0-4c94-8f2d-486584317ff7",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3a52febc-b36e-441a-90cb-529e30018c0b"
        },
        "item": {
          "id": "75db5e1e-43e8-4cda-8f7f-63e09593b08e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "50403fb1-8773-44a5-abff-77610a31cfe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eecb46d-092a-4e5b-b902-56e26a9ce087",
        "cursor": {
          "ref": "841ee1ea-c929-433b-80de-4f75825075f2",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "56ed14bc-e08b-42d9-8e62-b3433d8e63c1"
        },
        "item": {
          "id": "2eecb46d-092a-4e5b-b902-56e26a9ce087",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ba1506e0-d57c-460e-875f-59267e57b331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96e0707-6a4f-45f1-ae5b-15ea05d6c7aa",
        "cursor": {
          "ref": "d71bac59-70d6-4189-a225-ccabf0bdb446",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c131486e-c3b8-4183-9767-6f8ec22ff368"
        },
        "item": {
          "id": "e96e0707-6a4f-45f1-ae5b-15ea05d6c7aa",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6c05bb54-b476-4f51-ae43-f2e7360e1adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5575edad-8367-47eb-95d6-6b876715e345",
        "cursor": {
          "ref": "67945caf-5f1c-4d68-953e-9cd9a171128b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "928b1b3c-d5ae-47db-a5bf-08c740e13916"
        },
        "item": {
          "id": "5575edad-8367-47eb-95d6-6b876715e345",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "63c8fe97-b7ac-4132-a27d-aa6aeab74158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c5b852-c1a6-4a11-9783-f11b27ed4427",
        "cursor": {
          "ref": "c6b4228f-c83b-4560-8544-5918da73a8d0",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "adde4b7f-35b0-4b88-b91e-60b33886cb78"
        },
        "item": {
          "id": "b8c5b852-c1a6-4a11-9783-f11b27ed4427",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "27b49356-4242-44d3-95ab-ba65f6e05764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198a9077-46f7-45d1-8c11-56d9080f3e52",
        "cursor": {
          "ref": "85bf34d0-8326-4a8b-b9c2-e0070dad4729",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e4ca92a8-ac4e-4b13-865a-951c206c9541"
        },
        "item": {
          "id": "198a9077-46f7-45d1-8c11-56d9080f3e52",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "10331624-f176-4cdb-aff5-1e3c20104de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2655c928-c865-4d8b-9ba2-c5de8237a5e9",
        "cursor": {
          "ref": "228048de-19e3-4a27-94b5-7d315028f68c",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e29d6ab5-adec-4aa5-a556-f4ac77166058"
        },
        "item": {
          "id": "2655c928-c865-4d8b-9ba2-c5de8237a5e9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0f19c685-4b37-4c69-925b-72c19be38b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d6cedf-036b-47f2-9bdb-ef5b4826487c",
        "cursor": {
          "ref": "f508ce95-ecb8-437a-b7b3-82311d47fec4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "799fc92a-b55c-4e79-a84d-1a78c498e318"
        },
        "item": {
          "id": "85d6cedf-036b-47f2-9bdb-ef5b4826487c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bc1e8e02-cd24-4711-8426-f3d4dfbad399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34101af-24c1-410d-83df-bb5d46578eb2",
        "cursor": {
          "ref": "47a5f3a9-1ad8-40a9-a8ea-c44a7d0a5256",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "77e81c94-3588-4a71-8fb2-fb5965fc3597"
        },
        "item": {
          "id": "c34101af-24c1-410d-83df-bb5d46578eb2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "921628ed-8e9e-4f6c-ae69-52082957fce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c56066-b612-4151-8134-fb3e1ee08022",
        "cursor": {
          "ref": "f5e38cdc-8d05-4c9a-9736-5834d6d318d5",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "734ec8e0-b9a9-4767-b8c6-80658e0b3380"
        },
        "item": {
          "id": "c5c56066-b612-4151-8134-fb3e1ee08022",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cdb57de3-6e71-423a-a63f-890261928ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857c92aa-efbb-483b-9bc9-9480beb8fa14",
        "cursor": {
          "ref": "84dd276d-4bb7-467c-b265-580d1fb00713",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "427a59e6-cb4e-487c-bc38-a4515eddd062"
        },
        "item": {
          "id": "857c92aa-efbb-483b-9bc9-9480beb8fa14",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ad764161-8e39-40c7-ae9c-89e287dc40ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3333c326-c50e-49ef-8c90-2662941fb596",
        "cursor": {
          "ref": "52f2947d-b5a7-4c7e-89fa-10bc45883562",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "676e6bcd-45d7-4319-9ca9-d0e47cb9fb13"
        },
        "item": {
          "id": "3333c326-c50e-49ef-8c90-2662941fb596",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "354c523c-fe0d-46ee-baee-e992b34c465e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fcd6b1-5f74-450c-a257-b0509ac95309",
        "cursor": {
          "ref": "213247ad-bd4e-4297-ab8b-57832d64ac84",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "00779274-4d49-4a22-b4a9-4d61a9eb60a2"
        },
        "item": {
          "id": "31fcd6b1-5f74-450c-a257-b0509ac95309",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e995e2a5-db6c-477c-993f-f85e86a1248b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebc481a-beda-49cb-af98-907740f40e2e",
        "cursor": {
          "ref": "859b76e6-9e05-4d10-a968-f2128b708e7e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b7d7b308-8a45-4b0d-a125-806c17c7407a"
        },
        "item": {
          "id": "bebc481a-beda-49cb-af98-907740f40e2e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a78f25ec-d110-4a44-a78b-831e2b102831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb002fed-45c4-4fc7-8d3b-309390db03e1",
        "cursor": {
          "ref": "1db7ee0a-da59-4ecf-9955-5d4e54fa5e93",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cb5e8f96-2e01-4658-8f48-79179794d224"
        },
        "item": {
          "id": "cb002fed-45c4-4fc7-8d3b-309390db03e1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d40f3d9c-3d6e-44c3-ad3f-8253562fe991",
          "status": "OK",
          "code": 200,
          "responseTime": 142,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "a4a697f4-86d2-45d8-a4ec-d5b7878fdd91",
        "cursor": {
          "ref": "3edff8f5-1a1c-480a-acb9-02fe935852c2",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6f80d67e-6dd8-4e81-a758-cedc739993f7"
        },
        "item": {
          "id": "a4a697f4-86d2-45d8-a4ec-d5b7878fdd91",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d1d03494-10f0-419d-b7c1-9968a7f28328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4f180a-fde8-4d14-ad92-a7d7a7d23a0f",
        "cursor": {
          "ref": "38db8309-dc72-48fb-b35e-72350f546e67",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6f6f5f5d-fd9e-4ec6-9bb1-c7d48d9f3127"
        },
        "item": {
          "id": "9c4f180a-fde8-4d14-ad92-a7d7a7d23a0f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c97f1958-1fe1-4f09-97cf-5000f6f50279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a46af12-4a4b-4009-8bbf-642e60a13a46",
        "cursor": {
          "ref": "97927318-ef1e-4673-a96b-d39fb2023bdc",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fe5f79e3-585d-44d4-bfbb-f8e670bdf952"
        },
        "item": {
          "id": "0a46af12-4a4b-4009-8bbf-642e60a13a46",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "232158c4-c2a8-4441-84ae-81cda6d44c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3886efe3-7931-4a05-9c68-784cb05adceb",
        "cursor": {
          "ref": "4c28a14b-168a-408a-af14-070eb568d144",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ad36acb4-aee5-473a-9393-976e98ca0c77"
        },
        "item": {
          "id": "3886efe3-7931-4a05-9c68-784cb05adceb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cf620812-3ad6-444c-9c76-e3ddbb74a4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fc52b0-b2c2-4ae2-bd2e-822a9c6dfc09",
        "cursor": {
          "ref": "5a2981c1-262c-4844-8122-1cf4280289d7",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "affaf82e-b206-44d9-85e7-3a903b32f275"
        },
        "item": {
          "id": "a6fc52b0-b2c2-4ae2-bd2e-822a9c6dfc09",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7a0b3787-c30b-423c-aa77-ecf0cd31d617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ea5b1a-acc4-4fc0-abcd-75954becfc59",
        "cursor": {
          "ref": "4e8c6cdd-3a75-47f1-b330-2c80821f5f06",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9838ce52-9e6f-46a7-b9b2-9c9d73252c3e"
        },
        "item": {
          "id": "97ea5b1a-acc4-4fc0-abcd-75954becfc59",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "06890d2b-d0b7-4b06-ad8d-d84ffdad74d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b0fc85-fc0b-426f-a82f-f24731ecebbb",
        "cursor": {
          "ref": "f51707a9-5347-499f-91fb-b742d944f70d",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "55bbe994-332f-48bb-b5d6-8889357e0b76"
        },
        "item": {
          "id": "40b0fc85-fc0b-426f-a82f-f24731ecebbb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "994f9e17-1607-45f4-bf47-f8d3e8329104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a431b8-5ae0-4e2f-8852-847e9397031f",
        "cursor": {
          "ref": "7400436a-187c-459f-9dc6-ffc6513bb06e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d7e01d2e-e80e-4271-8804-04ba21077360"
        },
        "item": {
          "id": "c1a431b8-5ae0-4e2f-8852-847e9397031f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8261631b-db1b-41bc-8b94-50a7190775fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7ccda1-1eeb-4aea-a15c-830b9e55031a",
        "cursor": {
          "ref": "21c62ead-e833-4356-8cdf-7492173927e7",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a8e0472e-c9e2-491a-a854-9b95b7a66149"
        },
        "item": {
          "id": "9b7ccda1-1eeb-4aea-a15c-830b9e55031a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "594ba829-e0f7-49e5-a6d2-1c3bf13a75c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6962c8-d191-46be-9873-9f4e3516fef3",
        "cursor": {
          "ref": "c84cbc15-7975-4f4b-91f6-19f9fbe6869b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c88bfab8-5196-4dd1-865c-770f1f33eea1"
        },
        "item": {
          "id": "0d6962c8-d191-46be-9873-9f4e3516fef3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8c26eb7c-edd2-45a0-b50c-3ae86363cc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4a8a0d-cdf4-4f9f-af97-0aed48c85c32",
        "cursor": {
          "ref": "819c8471-bd1c-4a24-ab9e-638f759d39e6",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "65c54771-93a4-4482-bb6f-f3d2a61c93ce"
        },
        "item": {
          "id": "ee4a8a0d-cdf4-4f9f-af97-0aed48c85c32",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6c1dedf8-b1e6-46c5-9572-b3182ce162ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aece9961-cc71-4597-a823-7ed0d0f3bec5",
        "cursor": {
          "ref": "e733e6a6-1e5d-429c-ab85-89844e818b7f",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e05cf6b2-9350-4e86-93d4-297da0e8dff0"
        },
        "item": {
          "id": "aece9961-cc71-4597-a823-7ed0d0f3bec5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "923e0348-13d7-4c6f-9bb0-6e7ac47801a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8f429b-326c-48d5-b58a-7b6a4d54f0ef",
        "cursor": {
          "ref": "d936d668-48b7-4a27-bb7f-e4b172ea5cbe",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8afa51fd-82f9-4b30-ac75-b9504004c463"
        },
        "item": {
          "id": "1e8f429b-326c-48d5-b58a-7b6a4d54f0ef",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f7e23503-97c3-412c-9cd3-ba0cdb9bc59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc1c43d-484e-4a52-84b6-d08705a16028",
        "cursor": {
          "ref": "e7d75c88-6863-4e1b-814f-9cf6cc73871f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "42f9436d-6b07-4109-8a84-c9a6ed7d138a"
        },
        "item": {
          "id": "1dc1c43d-484e-4a52-84b6-d08705a16028",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "71d7beed-289f-43a4-b749-ce094834f3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8014ac93-715e-4f98-8f20-07419277090e",
        "cursor": {
          "ref": "64d98413-dea8-4c30-9925-d67f4b48193f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "84bfb95b-a27f-4946-a3e1-c3353303067a"
        },
        "item": {
          "id": "8014ac93-715e-4f98-8f20-07419277090e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9a5bfbaa-d206-4a5d-804f-71592ae9cadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de691f18-698d-4a7b-808f-7b2d37ec875b",
        "cursor": {
          "ref": "8d966ab8-23a3-476b-9d2a-9bd1eaced625",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ed1bf905-ef00-4d5d-8624-389a685e00ca"
        },
        "item": {
          "id": "de691f18-698d-4a7b-808f-7b2d37ec875b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cde4f6c0-f05e-42ca-a61e-ac190c356148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7750da2-e016-4f8b-95b9-2f272ff5f8e6",
        "cursor": {
          "ref": "61bdf902-4d3f-4fb0-afa3-7c37e730e7df",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8857ed47-27cb-48fe-8282-b72b63ff7f99"
        },
        "item": {
          "id": "f7750da2-e016-4f8b-95b9-2f272ff5f8e6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "47511274-1947-413b-92f3-d336f6c36cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158fa205-7fc1-44e9-b079-0ab121b4018f",
        "cursor": {
          "ref": "c0e8838c-86f3-4a8f-8ce6-47d3fcedbce5",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "51422a63-6c6c-477d-b426-b639fcb84bf7"
        },
        "item": {
          "id": "158fa205-7fc1-44e9-b079-0ab121b4018f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3d429b9e-9814-4952-82fe-7ecccfb0fcc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f1fb28-7052-4ac5-85d0-84e63112d85d",
        "cursor": {
          "ref": "716ec8dc-867a-413c-94a3-9328bf5e8412",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "515a4083-0c03-4f5a-a481-8f0a002e5d36"
        },
        "item": {
          "id": "d3f1fb28-7052-4ac5-85d0-84e63112d85d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cd79ee38-6e44-454b-a354-84c6c0f2f4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675d5b32-2e0d-4a2d-82dd-6801d2b28425",
        "cursor": {
          "ref": "f8b21585-184b-4dc0-b9fd-550f5058e765",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bd2a7fcd-71f9-49cf-a30b-4da032559b8b"
        },
        "item": {
          "id": "675d5b32-2e0d-4a2d-82dd-6801d2b28425",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "621b82ca-48a4-489d-8833-53027bcce6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06088f09-b8ff-4190-af17-3d57bbf31c58",
        "cursor": {
          "ref": "ddee2d7d-39b2-48eb-9463-41e4ae08334c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "92e26a2f-6818-4a96-bcc6-35a08e447e77"
        },
        "item": {
          "id": "06088f09-b8ff-4190-af17-3d57bbf31c58",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "87e414d3-1fe2-4384-81e6-e57390f30d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967fdf58-3520-4155-b39e-b28643a4817e",
        "cursor": {
          "ref": "3bdf6fee-d802-498e-8277-bbed857860c4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "20af3b01-c83a-4753-b409-966d1ffd465a"
        },
        "item": {
          "id": "967fdf58-3520-4155-b39e-b28643a4817e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "689018e2-a328-441c-9ebb-aebe039538d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36791006-5fa6-4cb9-8382-545cced46d3b",
        "cursor": {
          "ref": "e1f5d7c5-18a4-4e2c-9298-8a5903644740",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cabf342a-b2ac-420a-852b-fe084c48abaa"
        },
        "item": {
          "id": "36791006-5fa6-4cb9-8382-545cced46d3b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "70759d5e-809c-4ab0-9482-de63d868ff35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdb0ee6-5996-45d2-89e7-22fe372ad3e4",
        "cursor": {
          "ref": "c5369e31-4ae1-4d89-a3c5-ed4daa37644b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6133f640-8c0b-4db2-be3d-01104c66a71f"
        },
        "item": {
          "id": "ccdb0ee6-5996-45d2-89e7-22fe372ad3e4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7b719cb8-9ae5-4a1b-a9cd-2a12cff9e4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88ff52d-fd92-4422-9ff2-3e38d8da6a06",
        "cursor": {
          "ref": "d7074a01-9c2c-462d-b0e9-858147f85609",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "df0881a2-78d9-4912-9698-7e79db28ac4f"
        },
        "item": {
          "id": "b88ff52d-fd92-4422-9ff2-3e38d8da6a06",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5be61a48-304f-48e4-944d-6cbf96ce3a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e21434-865a-4c35-8582-2a61606484f3",
        "cursor": {
          "ref": "b06a1ddb-00c0-4da5-8913-68753d1883ad",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c24800e6-38a7-48b3-afb7-68887d0d69c3"
        },
        "item": {
          "id": "e9e21434-865a-4c35-8582-2a61606484f3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3f74d967-47b5-4255-88e9-c3314a36f941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dc9e74-c6c0-488e-a9e2-fe76d5460e3e",
        "cursor": {
          "ref": "fdc67d49-fed1-46e2-9298-ca9577cd3f35",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "58ca5284-804d-47c5-90a3-119c19a2467c"
        },
        "item": {
          "id": "72dc9e74-c6c0-488e-a9e2-fe76d5460e3e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c04588a1-78b6-4534-bef7-d068a74b002d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e572be2-d2b5-4fc2-82d1-c9b76f8df5b8",
        "cursor": {
          "ref": "3a106b22-9d16-4ff2-a04e-4dc1c39a00b2",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "604d29f4-35b8-46fa-be0a-f6d7c9899232"
        },
        "item": {
          "id": "2e572be2-d2b5-4fc2-82d1-c9b76f8df5b8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1b0c3c63-eb45-455d-8f6e-8092c14de3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300aa977-2534-4399-9943-77978d444b2e",
        "cursor": {
          "ref": "26477bbe-4be4-4b63-a1bb-c8a17a381b66",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0c8d523a-7b08-409a-be40-4344b050ca8b"
        },
        "item": {
          "id": "300aa977-2534-4399-9943-77978d444b2e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a21ccf05-a000-4159-a1c3-00f012e0ad97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb0b2c8-5823-4cde-ba03-a66a0a7e7acf",
        "cursor": {
          "ref": "63a63673-a0bb-4ff9-a83a-9f711de6603e",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d1206f0c-4316-4d4d-8a77-127d480dc3a3"
        },
        "item": {
          "id": "5bb0b2c8-5823-4cde-ba03-a66a0a7e7acf",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3c3d6403-6e73-4e81-ae3c-7bc404d6650d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4824ab3e-f261-4477-afbe-1da29aa90cf0",
        "cursor": {
          "ref": "460e3a9b-63a1-4657-b9d3-eed29a78d54f",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fa653f2d-2e28-4be1-8300-1f952e00494f"
        },
        "item": {
          "id": "4824ab3e-f261-4477-afbe-1da29aa90cf0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fd3e6e5b-eb0b-4047-82a3-09e53c05af17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dc6408-055f-4dc2-8aba-0a2f63effb2f",
        "cursor": {
          "ref": "b00a4305-3428-43e1-95b6-95453334e2f3",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "df2fc7f4-c81d-4785-8c32-d450f42f1e8e"
        },
        "item": {
          "id": "39dc6408-055f-4dc2-8aba-0a2f63effb2f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b785bf5d-d6a6-49fe-b4bb-847ceff2ac6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4a8193-dbf9-4082-a8b1-f5b55ca2ba2e",
        "cursor": {
          "ref": "173c6494-5349-45c6-b1f8-425fd9fd9cc9",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7acc0e6b-a83d-4d49-85e5-e35f904f61a1"
        },
        "item": {
          "id": "2b4a8193-dbf9-4082-a8b1-f5b55ca2ba2e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "758b3f6b-a39e-4ddd-9063-a19521f3a4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504b9581-73ff-486e-973f-141b05e6a20d",
        "cursor": {
          "ref": "614f2546-2692-4b46-9b33-c69c45811fe7",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a135b1af-5416-45a1-b11b-5405966c8101"
        },
        "item": {
          "id": "504b9581-73ff-486e-973f-141b05e6a20d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b08c759d-4f1d-459e-baa1-dd66edd8b4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21e7ed6-5693-44a0-a1d5-3671e44c571b",
        "cursor": {
          "ref": "dd65745c-03b9-4539-b120-a3e4dc8ffd43",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "07a139fb-cc56-469f-96b2-e86ecf62b3d8"
        },
        "item": {
          "id": "b21e7ed6-5693-44a0-a1d5-3671e44c571b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d9304c27-a617-48bd-b8f3-0d594ff848d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64aeb0f-fa21-4954-b6d8-5a6e1742f4a9",
        "cursor": {
          "ref": "ee230de8-fdb2-4e34-b294-1a9b2dfadb86",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cdb41699-79fe-4a74-9730-fe178dd69c85"
        },
        "item": {
          "id": "c64aeb0f-fa21-4954-b6d8-5a6e1742f4a9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c94c2831-24f3-4c56-bb35-9a643c89f1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf22ae7e-dc2e-4d0e-a130-7c9101ea35d5",
        "cursor": {
          "ref": "a4420762-df91-4426-9b61-ed8d46a8680f",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ab8ca740-f26f-4ab0-b954-2203020cc1dc"
        },
        "item": {
          "id": "cf22ae7e-dc2e-4d0e-a130-7c9101ea35d5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1239cb5e-f09a-4e98-951f-b0ba2119f85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd79017b-01c6-4ed4-b1b9-f8251b0b69f8",
        "cursor": {
          "ref": "26f21bd1-460d-4099-94d0-4db9995caa0d",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5de48bc3-34da-4f10-bb5a-b605ed296785"
        },
        "item": {
          "id": "fd79017b-01c6-4ed4-b1b9-f8251b0b69f8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bb9cea86-4094-4c95-8753-9320826c42a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad4f692-d61a-46ab-9909-8ffc52c5da49",
        "cursor": {
          "ref": "09fff21f-7831-4662-a016-91f58aa82824",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0e3fde2b-8aab-4ead-9927-56d05fac338f"
        },
        "item": {
          "id": "9ad4f692-d61a-46ab-9909-8ffc52c5da49",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "312abdae-e640-41ac-9a9a-99da4e45f8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1eebb77-2f92-4c80-9c23-a36e0f901003",
        "cursor": {
          "ref": "8ac3f238-c45b-4abc-b735-a2d0503d5aa6",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fefa4cb3-6ebd-440e-84f1-818a3f2809ad"
        },
        "item": {
          "id": "e1eebb77-2f92-4c80-9c23-a36e0f901003",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "36e0634d-f286-46c0-8b11-9ba30c642cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da2cfb9-30ff-4cb6-ac15-91b79ce80ccf",
        "cursor": {
          "ref": "d349e6f6-1142-4fad-a802-31aafc021f7c",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a9a7cca0-06b5-485e-a641-aab625281226"
        },
        "item": {
          "id": "7da2cfb9-30ff-4cb6-ac15-91b79ce80ccf",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f109afdf-8452-4927-9337-af1f823b869a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c519adf3-b2c5-41b9-9b47-f7e6ebf80d02",
        "cursor": {
          "ref": "cd11dda9-9e2d-4c94-a63b-132e29459a98",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "79c99d4e-65b7-4302-9f9a-8295fa50a110"
        },
        "item": {
          "id": "c519adf3-b2c5-41b9-9b47-f7e6ebf80d02",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6f9b4305-6aed-49cb-96aa-15bc398e2e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8906170-056b-43ab-b35e-44c3a47d5dd3",
        "cursor": {
          "ref": "d0018648-eddd-4f1d-94b5-d0edaedd3417",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f85fb934-572f-4e2e-953b-b96b55e11414"
        },
        "item": {
          "id": "c8906170-056b-43ab-b35e-44c3a47d5dd3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9cde04bb-0174-4c28-a948-b97cbd07cd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a0d06d-7850-4de6-93fa-11b675bef7e6",
        "cursor": {
          "ref": "83f30508-eae1-4234-9a4c-0f3c8e0947b7",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5f04899e-f2b1-407b-90ad-e1c342eb78cf"
        },
        "item": {
          "id": "a1a0d06d-7850-4de6-93fa-11b675bef7e6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bd04cb63-2cff-4673-96d8-31ed470fb530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4553b5b2-4192-495c-8634-18b820c1fc8d",
        "cursor": {
          "ref": "20d33823-da05-4ee5-9d9a-4b8851b25830",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "012bf62b-7a80-4ad5-8f12-ce4e79fd0e71"
        },
        "item": {
          "id": "4553b5b2-4192-495c-8634-18b820c1fc8d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "79efdbed-54ee-4ca5-a88e-bbb532fc903f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d75b101-f0e7-4d5e-8e63-963b8565e041",
        "cursor": {
          "ref": "ccbbc13b-9a12-49c0-aba4-6d4fd76468c8",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2d5e52b4-3c73-4584-844c-0a3194bb4ac6"
        },
        "item": {
          "id": "5d75b101-f0e7-4d5e-8e63-963b8565e041",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "240dede0-3995-475c-9be4-38b8fba5976f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259ea7b0-fb8d-442c-95f2-c9a5c0452a9b",
        "cursor": {
          "ref": "87b4adf1-a099-4a71-aab4-86e5a8c87313",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "081f8a27-449e-4079-b683-677c34d0e2c8"
        },
        "item": {
          "id": "259ea7b0-fb8d-442c-95f2-c9a5c0452a9b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4d68241a-54d6-4181-a4d8-7ab50d7250ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c93ac6-07e9-4f33-9be5-a314caf777f5",
        "cursor": {
          "ref": "03150fae-0a67-477d-ab0c-03d97993baf6",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c9b0f7cb-5abe-4ee0-8377-411df50ac13c"
        },
        "item": {
          "id": "53c93ac6-07e9-4f33-9be5-a314caf777f5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a13a48e5-ef49-49cf-9f90-f86a181341f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc43a20-ac08-4b0a-af46-6565f9497055",
        "cursor": {
          "ref": "b8e8ab01-535c-4db6-a93c-f29da10408a3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "410a314d-6c69-4028-b4e0-44478fef7cb1"
        },
        "item": {
          "id": "fcc43a20-ac08-4b0a-af46-6565f9497055",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7f4a30db-93bf-4377-baf2-d3022fd1dec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e211bb-1fb1-4f89-838a-a9d78269264e",
        "cursor": {
          "ref": "5bf1170e-153a-48c0-8e85-dccd5381811f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b4068ecd-0ff6-48e6-a7f8-10eaa1fd84d2"
        },
        "item": {
          "id": "b6e211bb-1fb1-4f89-838a-a9d78269264e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "567edecb-d1ce-4d9c-bc48-33f9076e49cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c198c0-2f94-437d-8a94-61442ccc2978",
        "cursor": {
          "ref": "8e035528-e47b-4327-a736-9ff620a36c62",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "78ae2787-ad1a-4116-a931-9108c58daa0e"
        },
        "item": {
          "id": "14c198c0-2f94-437d-8a94-61442ccc2978",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "653c8ea7-44ff-465c-8509-0580be5811e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397bb35e-b64e-41ca-afe0-0b9fe65b4614",
        "cursor": {
          "ref": "448d2182-7230-4594-b128-bf2a00aff563",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b6d2bb07-f163-4239-9596-69b6880d5dab"
        },
        "item": {
          "id": "397bb35e-b64e-41ca-afe0-0b9fe65b4614",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "37502466-22f5-43f1-bff9-2bd4e45b1f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d457ffb-eb3f-420c-969b-87547f3aa01f",
        "cursor": {
          "ref": "7e320030-4bd9-420d-a179-9d47dcdf32bf",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a7f41cf6-4df1-465d-95e8-615d71f1ae14"
        },
        "item": {
          "id": "2d457ffb-eb3f-420c-969b-87547f3aa01f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b08a4f37-6cd5-4b28-a757-7a703f16e911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342b457e-84ba-42a8-bd70-4db5bdd43665",
        "cursor": {
          "ref": "6459af55-b0c8-42cd-9983-52bc6d3297a1",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "85f4f09e-26f4-456d-9594-f7f478e4cbed"
        },
        "item": {
          "id": "342b457e-84ba-42a8-bd70-4db5bdd43665",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "88c18853-0d5a-44fc-a582-ec44e0ea3e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9590fb1-2b86-42ef-8e58-a55ffbae41f1",
        "cursor": {
          "ref": "70883cba-84e1-4632-8bc5-db16ac9945fb",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c730bd49-609b-48a1-9eca-7eb00a9e2911"
        },
        "item": {
          "id": "e9590fb1-2b86-42ef-8e58-a55ffbae41f1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c31e80d3-6a6a-494b-ad4f-974c6762b186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470fbc28-1927-421d-9aac-c2bf2eaad532",
        "cursor": {
          "ref": "322bb5d0-057e-47f9-9ca3-f41c09287e3a",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2bce701d-4740-4998-98e1-bc8341a484fe"
        },
        "item": {
          "id": "470fbc28-1927-421d-9aac-c2bf2eaad532",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1964598c-fe3c-4718-aaf7-664cc459eefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b070bd-f97e-4db4-85f8-908baf26c82c",
        "cursor": {
          "ref": "9a3fd20b-3521-48e4-930a-2281d6218438",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "63b1f5ba-83ab-47de-9be2-d588f8168f4e"
        },
        "item": {
          "id": "24b070bd-f97e-4db4-85f8-908baf26c82c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e75a4205-2797-47bb-9456-5edf755f4ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2970328-0f36-4ba3-aea0-bc579904c059",
        "cursor": {
          "ref": "bf9500c9-d7f6-4903-9191-0faf90f564c1",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a0a22f77-8244-4a8f-acbc-f1ec4df22395"
        },
        "item": {
          "id": "e2970328-0f36-4ba3-aea0-bc579904c059",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7dcef9c6-de0b-4073-8687-aaf4b765ff9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cec2dfb-b046-4eda-80d0-628dfd778e99",
        "cursor": {
          "ref": "8a3b7704-bb24-4ccf-93dc-535993c83f6b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1938ed06-3e8f-4c1f-9fd6-b17f00ef8214"
        },
        "item": {
          "id": "2cec2dfb-b046-4eda-80d0-628dfd778e99",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fa5fdb89-974d-49e1-8559-3fc6a18552a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4f19e3-56c8-4317-a364-43870224abbd",
        "cursor": {
          "ref": "727387e6-5e03-49e1-be78-02a65c738d10",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "04669f18-b3c4-466f-af8b-2900ef48e3c9"
        },
        "item": {
          "id": "1a4f19e3-56c8-4317-a364-43870224abbd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1ab60695-1f20-4db8-9098-e5b8eb16c0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ff013d-2141-43e3-a14d-d8124b22d29b",
        "cursor": {
          "ref": "c43be8c7-b383-488a-94b1-0870bb8c93c4",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9daaf560-55e0-4e99-9d16-ac9081a67810"
        },
        "item": {
          "id": "67ff013d-2141-43e3-a14d-d8124b22d29b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3723c279-88ee-4c45-a1dd-b3c66a0716be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50292c2a-b9a2-431e-97d9-05954b127ac7",
        "cursor": {
          "ref": "406ba4b9-3126-48a8-87d5-5f53024e0829",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "855dddb3-b67f-4f3d-aa7d-0f87e263ce65"
        },
        "item": {
          "id": "50292c2a-b9a2-431e-97d9-05954b127ac7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "25f9919a-a25d-4eaf-a8f7-e1c176e023ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fa1058-19cc-4923-9149-0d6403109824",
        "cursor": {
          "ref": "bd867dd9-17a2-41a4-8b9d-935e9acf9c3c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "7ef75b07-7305-4f8c-9781-c906c97a15bc"
        },
        "item": {
          "id": "67fa1058-19cc-4923-9149-0d6403109824",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e75b0693-9efa-43b6-96ff-435a2b3d8ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403cc87b-d04c-4345-9af7-312b29d7a6a3",
        "cursor": {
          "ref": "a5e17bd8-915a-4ca9-ad95-7d76f6f6ea9d",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1faa485b-5fc5-409d-8723-4bdf0e448449"
        },
        "item": {
          "id": "403cc87b-d04c-4345-9af7-312b29d7a6a3",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "94e2ab53-68b9-4c4c-948f-522439070ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d81709-7474-466c-8576-75e690c6629b",
        "cursor": {
          "ref": "cf4cfe1e-a4b6-4cf9-bdd2-1f6803358442",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3936a5fc-7321-45e6-955c-2d6a6749b6df"
        },
        "item": {
          "id": "c4d81709-7474-466c-8576-75e690c6629b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "49276dad-bf54-431b-82e4-a496abe1dc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85952aa7-4c29-4a6f-a904-324b224a4677",
        "cursor": {
          "ref": "2c274c2b-2c00-414d-b420-1001c1a19bc3",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2f9e1a15-f8af-44a5-a4ed-840cf675202f"
        },
        "item": {
          "id": "85952aa7-4c29-4a6f-a904-324b224a4677",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4d1c4dfb-52b3-40d3-b7ee-466498dc980c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2efa173-dbea-41d7-a7f0-2d7fc1990dc8",
        "cursor": {
          "ref": "56e4233c-8d0a-4425-9033-821faffec50d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5810ef10-d7a2-4d9d-adaa-c8721f8b52ef"
        },
        "item": {
          "id": "a2efa173-dbea-41d7-a7f0-2d7fc1990dc8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "feb3a5b6-956f-48e1-831e-443f5f7f7e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698cd5a2-62fe-4e98-a6f6-b7f3d02f9fd1",
        "cursor": {
          "ref": "a3b2de8f-1b1f-40bf-8686-3c55674c96a6",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "17f8e882-5789-40d5-8e26-aa8199b9a4c3"
        },
        "item": {
          "id": "698cd5a2-62fe-4e98-a6f6-b7f3d02f9fd1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b6d4592d-b866-47f8-91cf-a2aadde53b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b842d7-2415-4e47-ac0b-64467a8bf3df",
        "cursor": {
          "ref": "c5d5632d-2445-43b5-b20b-f911f8725b66",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5a32dfe6-bb6e-4133-bb35-eb0234d02ac6"
        },
        "item": {
          "id": "b3b842d7-2415-4e47-ac0b-64467a8bf3df",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "88115863-2555-4207-a674-4d3f60d08151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3438ab6a-90ff-419e-a12c-e55ece1df140",
        "cursor": {
          "ref": "f17c03d6-85b3-4437-9acc-f8f48ec936d3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6848102a-6632-45d0-8e30-d65eae80406b"
        },
        "item": {
          "id": "3438ab6a-90ff-419e-a12c-e55ece1df140",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4ce2d5b8-97b3-4bc8-baa6-113b649ce073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35715d2-bcc5-49b0-9b99-62d62057b73c",
        "cursor": {
          "ref": "f1b5fd21-dd27-4b47-8adf-2cca9922bbac",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0a823fb8-18c0-4650-a585-eed879f77f94"
        },
        "item": {
          "id": "f35715d2-bcc5-49b0-9b99-62d62057b73c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "97311040-b0c8-4cf3-9f98-e19c86c04f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62153a85-bc2a-4309-82eb-844def63961e",
        "cursor": {
          "ref": "fa820f93-939f-458f-bba7-2d9e7b04d1a7",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8b9735d2-b3f9-41a6-bd08-00497508a38e"
        },
        "item": {
          "id": "62153a85-bc2a-4309-82eb-844def63961e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7df471f3-b856-4484-be36-8e7234d67e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d07356-5586-4d40-b3c4-013ae6253d30",
        "cursor": {
          "ref": "8cfd5586-e1b5-4ca2-a945-833f60c06eee",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5596aab7-ed71-4a04-b0bc-06638d13ea58"
        },
        "item": {
          "id": "d5d07356-5586-4d40-b3c4-013ae6253d30",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2757d14f-bb6b-46f3-b4d8-5641a0e71631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b895039-b592-4215-af7c-4fb8661cd7e7",
        "cursor": {
          "ref": "04ee6242-85b0-4051-b24a-6b0b8e03423a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "29622a24-b694-40d1-8db5-6cf2cd11963f"
        },
        "item": {
          "id": "9b895039-b592-4215-af7c-4fb8661cd7e7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "24a653ff-9d5e-4f97-a281-404989183b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57ee802-7645-427f-9504-20e448793f7c",
        "cursor": {
          "ref": "c3caf689-f166-466c-8337-e288fe0a994e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "814ba803-80fd-4d42-9cf1-9897d956cb88"
        },
        "item": {
          "id": "b57ee802-7645-427f-9504-20e448793f7c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c467bfa3-423b-42e6-bb4d-6e473503c40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8821116d-fd74-4136-ae7d-633718643ade",
        "cursor": {
          "ref": "861bfc61-979e-4358-8c0c-d684db5ac66c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0548c4b9-252c-4962-bf54-a9e8e777654b"
        },
        "item": {
          "id": "8821116d-fd74-4136-ae7d-633718643ade",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1dcad131-3a98-416b-a796-bbecdb25f072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fa2c1f-cffa-43af-8851-38de3ac88c4b",
        "cursor": {
          "ref": "15e44690-d514-43a5-bf5b-45015fbc074b",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2d9aef0a-6063-4496-bc5b-9eab6be5e495"
        },
        "item": {
          "id": "f6fa2c1f-cffa-43af-8851-38de3ac88c4b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c7acab28-eb26-4081-adc0-40259ee81d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32863a6-3d7d-4bf8-9450-0556e0f7477d",
        "cursor": {
          "ref": "75d2ebf2-ba6a-4f2c-9825-2ace6dac898c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ef8586cd-085e-481d-8f92-022239302ee8"
        },
        "item": {
          "id": "e32863a6-3d7d-4bf8-9450-0556e0f7477d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "05e248a8-5417-47da-bf21-8c0ca5378838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039e83cd-ea4e-4aff-96c5-d47fca960434",
        "cursor": {
          "ref": "d7d4df56-7169-4cf8-b5c0-768fd939ff85",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "209df059-64b7-4be6-8c25-c35533e95e53"
        },
        "item": {
          "id": "039e83cd-ea4e-4aff-96c5-d47fca960434",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3048932d-b09e-4945-a0ce-adb85c7c5c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3966a08b-ce11-463e-901e-6eb521388dcb",
        "cursor": {
          "ref": "68a9075b-3650-4f36-a099-caf1eb91ce65",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a4a40f2c-68da-45cb-a057-c5072c08f652"
        },
        "item": {
          "id": "3966a08b-ce11-463e-901e-6eb521388dcb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "99d919e3-8e0d-40f6-ade8-8e050038aebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f451c9b4-ed21-4a53-9e88-58dc1c5f5a3f",
        "cursor": {
          "ref": "d6301a49-cb7b-4ad8-9435-75db75050568",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c34a580a-30e0-4002-b29f-5306e07d2aea"
        },
        "item": {
          "id": "f451c9b4-ed21-4a53-9e88-58dc1c5f5a3f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "6d4bccdb-08be-47f1-a084-3cce3e7728a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fb79c9-597b-4f5d-817b-ff387f923dac",
        "cursor": {
          "ref": "88f51f28-674c-4015-b6ec-ca14d664db36",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0c99801c-0f0f-44af-a066-2aa0dc4c8b2e"
        },
        "item": {
          "id": "b7fb79c9-597b-4f5d-817b-ff387f923dac",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6bd96990-9a67-437d-b47b-042087cbb833",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c23a6e8-c50d-4fd4-9fc0-14ae88e0604e",
        "cursor": {
          "ref": "d3ab80ad-ab54-42ca-865d-4c2f84fb4fbf",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6dafe8f4-40dc-49fd-87ea-840868452814"
        },
        "item": {
          "id": "7c23a6e8-c50d-4fd4-9fc0-14ae88e0604e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "282da261-19ec-4c52-bb4b-27bcd7626dcb",
          "status": "OK",
          "code": 200,
          "responseTime": 2962,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "035ea898-8118-4baf-92d7-0b36e3f0b0aa",
        "cursor": {
          "ref": "cb8e1877-92c0-4aed-8a44-ee6eedfa929c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5e84d77d-7d28-4d75-b7b2-a62e2f39caae"
        },
        "item": {
          "id": "035ea898-8118-4baf-92d7-0b36e3f0b0aa",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9901a542-f7f6-4c9a-937f-63fa51c7b4a7",
          "status": "OK",
          "code": 200,
          "responseTime": 1977,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "922ab462-9182-4e2f-a00e-ebedc18af047",
        "cursor": {
          "ref": "2c732b11-1e56-41b6-8997-1515c252876c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2b3f11b5-dddf-40b1-8f97-9e1a8e6b98dd"
        },
        "item": {
          "id": "922ab462-9182-4e2f-a00e-ebedc18af047",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9c38a942-e3e5-4741-8c5f-2c384fec5ea7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922ab462-9182-4e2f-a00e-ebedc18af047",
        "cursor": {
          "ref": "2c732b11-1e56-41b6-8997-1515c252876c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2b3f11b5-dddf-40b1-8f97-9e1a8e6b98dd"
        },
        "item": {
          "id": "922ab462-9182-4e2f-a00e-ebedc18af047",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9c38a942-e3e5-4741-8c5f-2c384fec5ea7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2888c040-3788-47d8-a79d-4300f32c57ad",
        "cursor": {
          "ref": "435e7420-ef57-4185-9603-4e810fce83ca",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ee21527b-f5dc-4970-8269-2168707c488b"
        },
        "item": {
          "id": "2888c040-3788-47d8-a79d-4300f32c57ad",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c12dbcdf-b34c-442a-9d03-0934f87c208c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669ef7e0-889a-47dd-ac13-7c13198bed2f",
        "cursor": {
          "ref": "47a5cec6-170a-4693-89e6-b0beb6d047b7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "8d80a6f6-ff3f-4512-a496-3387d760e5a2"
        },
        "item": {
          "id": "669ef7e0-889a-47dd-ac13-7c13198bed2f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "faf1f51b-9d6d-47c4-857a-0843bd63eaf1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}