{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6d9f3bb8-b91d-4256-9c0e-60aa2d43e7ad",
        "name": "Clear Cache",
        "item": [
          {
            "id": "37fd2a48-d4de-4d49-9898-533c9f6f77c6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9fcc9d02-37c8-4e69-b8f9-7372bbca89ce",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1f47067b-47d1-43cc-999a-09d7bc24ba4a"
                }
              }
            ]
          },
          {
            "id": "bccfdaf4-a932-4ee7-970f-f8f49c048741",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "736b4eda-9a1b-4e54-a14d-92c925270ad7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7f96221f-f566-4cf5-bea5-a547c6d40f14"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "30bde794-0173-4219-b6e4-bf9f57ffa30e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "88a5de70-c391-40ba-9713-d117dc04b962",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e186af68-e53b-419a-90c0-e2f12a088dc2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91a02ed5-08b0-4217-ab51-c257ffd20e4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb242970-8d9d-444c-b8a1-c4ffe81a9568"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84588ab9-58f1-4d83-aecb-d4ba9d24804a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6bce7339-54d6-4452-a796-ed2d0631686a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1478cbf3-c545-47ef-93fc-333d42bd19c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e76e29e-ca84-4958-92bd-1af4b02e1eb9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42dfc3ee-d6f4-4bb7-b04e-6a9c0826f556",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "da58ce36-0411-48d6-9f61-10178c80a9c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0086d24a-dd00-4153-a400-8d080050cffa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ae53394-fee7-4647-b2ba-d8e77e2b7e27"
            }
          }
        ]
      },
      {
        "id": "1599d268-8af9-4c50-b152-4cc003174280",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "90414238-3646-4872-9130-1687a4f4490d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dad16e06-30fe-44fb-8e31-5b86b8e1025b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7b37bb55-fdcd-43e3-8800-bb99f40c5861",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e111ce56-b1ad-4917-90de-b41fad3bdc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afe02616-f39c-41d0-b460-f46473079046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33eca1e4-f586-4107-b308-02ce96cb4a85",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8db283-2cf6-4629-a076-09c7a9196645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "608eeebb-eb13-4d01-bf07-91466648ce81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e478839a-380f-45f6-b5cf-549942987bfd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2c1757-2a68-4b42-a1db-c07fef2d6327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0d38cfb-2d89-42d1-b247-9f551b27676e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9b4555c2-7208-46de-8cb3-a150963d33af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2dacccda-ce98-47b6-9ff4-9e770c575f04",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d860b33-454d-4c77-bf5f-6c42e62b4f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3bb72211-03f4-4a66-b126-dfbeb0280cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81ee8db-78ba-4943-82c8-3d3651ac7db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3d41b1f-6bba-4b7d-8441-e18266baed26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4655d6c6-634f-4bb8-8a87-94ef7e22bd2c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e9101157-2568-40cc-8871-70a68195c676",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09ae8f23-4853-46b0-bacd-d6d586ff1736",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "da6169a2-debb-4bd8-876d-31e762341db6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b57bc8e4-866b-4ab7-9133-7ea19af2411e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b5969745-451e-4f80-bed0-4571bbe51dc9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1cb8c370-8458-4113-9fda-8a269648188b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e154e8c9-f484-4afb-a29e-bc043845ecb0"
            }
          }
        ]
      },
      {
        "id": "85a74a88-1475-4133-b703-3b4998718ef8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1b096532-a2cf-46a0-9c4e-5b3dbf3c7a83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6427147a-f054-4f31-a935-4ac34cae0fac",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f875a1f0-9be5-47ca-a3ce-47884d19f248",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a47894-96eb-44c3-a319-e6e6cd2f4012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354d9197-0cb6-42f4-91a7-47b812378dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37d55b9-4877-428e-a2ee-a01ee4b9cf92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee56b1fe-7c9a-44d9-aa2d-64e6b082ba08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ae31ed-0f54-47b8-87cc-24e961ffaaee",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd59e16a-e404-438d-850e-c5c8359f7724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7f950c-71d2-4575-beed-dd5ef86f5561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47234c2-4912-485d-988f-cb2f71ae1c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "375370df-b7a7-4f3d-a6cb-9435efb777b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0654d6e9-f0fd-413b-a40d-7521ffc83776",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6ec68c7-ab18-4c25-89c5-ce21eddba374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1acd1c7e-2317-4fd1-9a08-b05abd51a6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1799775-22bd-43cb-8c5a-d0f86883e46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b20557c-7e3c-45ee-bce5-43281606e7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af54efc8-3190-4d18-b5cc-a1472f989868",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19277d97-93e0-4c2a-8de5-1dfed6669891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a81caff-04e5-430d-b2fe-66e69a058be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafbabd0-1bdc-479d-bb84-044ae382c32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b2c2f49-886c-4c56-b47c-c2ace2841291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fe2351-0e1a-4353-a083-f15e576ae63e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956676d1-3df6-4373-b940-b151814e1ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c99bf4-1f0c-45d7-a349-938f96f3cf29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c31240-c162-42b8-b8d2-f1f56b4a070f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a521cbf-cb0f-4aa7-9bdb-785b6d5de1c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58e7259-f543-4fd7-b0dc-ef8c45295919",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccc9bee-25e7-491e-988d-0b2bcb2946a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea7fc30-8822-4bb4-aab0-ec8b87997170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a184d66-31e0-482d-b775-23a487db52cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dfe16d0-a53c-405b-bd11-6017aa6b3323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e9b7a1-48fb-4835-bb23-c95315f8a110",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66918f62-8f34-46de-8551-95528dca8486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca5d266-43ec-41d5-83fc-0e9e84870891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1befdb26-a7dc-4307-a6e2-3ec15d228e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dea43b42-0e12-43fd-899e-58b42b6ad164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287ddd67-50e5-43d5-9bac-cbb4435765d6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93faecc4-b162-41e1-bd3a-31189d9da2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39544e9e-9d3b-438f-b44b-3e2f4342b247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62f0079-cfbb-42b5-aae2-314dfd42151d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2df3ca25-012b-4965-973b-0c83dd1c127d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a13f1fb-c88e-456b-b92a-913718866cb9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e058d4-5a2d-4c3b-8969-2b7b0f3db102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7a79a62-8ece-46cf-99ca-1c5f69c8bdf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03a9814-08aa-4b9d-96de-f2d317e4e3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "967d965e-3fc6-45fb-b23f-4f12ab40db66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de672d7-964c-4586-a87b-ee707d7d3839",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a86f11-a06d-4311-812f-3c0d709e9d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120dd05e-9f2d-4aae-8c45-7bae084e613b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338bc08a-f988-497b-873c-b80e05bb475d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74f49096-e959-4d79-a995-bd56d0d392f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a073f3fa-57f3-41ad-8b8a-6792e942bab8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a15298b-9175-43c1-b4c8-1c40c4669c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2173d70-3f4e-4e05-8c9c-af5e50a3e990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2d7d3c-c2a2-4216-9aa9-366cb2247b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4765696-b237-458f-949b-6a6e84e59eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567d6ad4-ff2b-43a8-b301-986d5d0c8ecc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63848558-4cfc-4dc3-b57f-8c70b96d775f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36c13430-f76e-4f4c-9638-188087c2cdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede31ab8-3ba0-4da8-9156-978b218cf46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59d099c1-71ec-4315-a01e-d779ac23944f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c5c766-4c60-43e1-8e93-fbf7fdf5fc1d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363addde-bbb6-45cf-adbb-035ef6b7ae97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a5029b-7836-4f39-90da-8b852f253d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98930a7-4feb-4b9d-8cd0-fa64806d2951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9389095-447b-4fe1-bf67-0326770848e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdef2668-a7fd-4e94-bb1b-bd6773133fcf",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c3363d-78de-4cdd-a874-9e050efc314d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b872998-31cf-4121-a015-5d8676d33ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321a8709-0334-40e8-8f73-78ed1d0aa508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19dc15cc-8294-41c1-a4b3-eda996444a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb7e54b-c8df-4c28-a4c8-4a1e97508da4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86261989-8750-4809-a6ca-f7fce85cf7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d03b4c-c1b9-424f-8c39-ac25daaba23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678f1121-cdf5-4f2f-b1f5-8d6e9c9d1906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc240f77-5054-4972-9d60-79b2ee1781d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ceaeb7-9ee6-4910-bbc9-a2d9c99a4b48",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b74476d-f3d8-42e7-9cda-cec2fe93930c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09fab959-a8d0-405a-93ec-f7fb5e1ee2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d539fb8-bce5-47ef-8c41-60872bc3875d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33814976-d8be-4a63-b0e7-5d9798a1e4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1074ce1-5d8d-436c-9443-43b7ff1830b7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69189cc-0ebb-419c-a923-3a2f980837cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfcef0ee-db8c-4684-8a9d-8f8f8bd02f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81307fcf-dc0d-4133-bf1b-980475a8ccb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3a482a5-98c0-4c20-bbf8-d299d7dbd0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abe6eeb-f13d-4955-84dd-bf0ecbaa6525",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60cc616-c4b8-4aa2-be5e-7d71b9965684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1db8017-1c0a-4ba3-95cf-4931d1bbe8cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a0a1a3-d817-497d-9e89-5f135d8e178a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8a5c98-ab92-4758-af76-1820ca770e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e208c75c-90e2-4de0-85db-332e484686a0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9368bfcf-89db-4e5a-937d-f4584366e0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac84de8f-751e-4586-ab09-34abf4f58b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b688f53-aa26-4a05-9bb1-0f543279dfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be468bae-e1e7-46cc-92ba-69e04c7cb953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27a60fb-f04d-455b-ae77-f47828108490",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e36605b-d4d5-4f2f-ab4f-9c8854cc4844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c82a973-9039-4432-97e0-57f952023e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0033882d-4a51-43c1-9984-696396952285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c76353af-b54c-407a-9228-6202bd486aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f024ea1b-e3c4-478e-bfb7-dd2a49551295",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f92328b-53d0-4307-9d45-8c3c3fe929d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc341e6-14ed-4beb-afd2-97ef40619bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa673f32-c355-4823-9d20-4f5e2420986f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41cff44c-b33a-42df-a14b-78ffa12f9ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088aa8cc-34f5-4138-b661-412cd9410523",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0520c7bf-b60b-437d-8eed-73f4e084b493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc05462f-0a9d-40e4-92f0-4752d26b63ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba83054e-f7cc-4dd3-8065-a0480fc34390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d90110dd-5638-44b3-9d5f-d09a0f370415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef69725-77c7-4180-9b1c-b7392fac204e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61d1ded-8276-4bd9-b5f6-5a7c8f7b397c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e76be26-87aa-4590-9ee3-1944d64f6ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7887f6b5-66c7-4288-ab3b-9e908cc5a2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd90bbd-2b0b-48f8-8ed7-bf03798d25c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46be7784-2bd3-4666-b0f8-4a7c40927b52",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25ffd2a-000e-4f35-b58b-d0bc7f287d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd1153a-ef79-4d9b-b9d2-0b1fd9b40318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1576e775-bce9-410e-b791-ca3d48588f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "157cfa8b-c0cb-4222-9209-6cb527f15437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fdccc7-bda6-4b30-bb9f-c62262e069b6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f0636a-0f81-4826-a42b-9220d5127672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944301ea-4af9-46e4-902a-6456b3a7834c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc6086c-b133-4b7e-997f-4888bd76c303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b569ba-f3eb-4334-8d72-6cf2f0317875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb91b822-0b97-42c4-a3d5-bb64eaaccd4b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed92b6a-3b39-4b1e-9fca-ac104a40a49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef9c36c-0b2a-4069-b4e8-b2ce13929546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea2ee5e-8861-4982-92b2-355375b3a045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0614e699-1332-4bf2-a9b6-3e79158678bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4262ba5c-e908-4989-b138-2b8b67def3e8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890f6563-bf54-4de3-bb52-f3bfbbc5e963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5a000c-841d-4fe9-8d42-b5ed12639d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1abec1-3bcd-4f69-a501-af856ad5d362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "483e6b8c-bc70-4848-9ba3-3bccdce490bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db22cad7-b1c9-43ca-aa8f-6284e84a5897",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f01d22f-91e6-4923-94a5-59c77abe1c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09676f46-5e8e-4e0c-854a-980f9ff9c963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0c8a09-c256-4a94-8358-8d0617f5b36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84bb81b6-f3a7-4ae2-9c4e-ee0b658ada78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4871bd5-40c3-4177-a6b3-2d3f43fdfc9a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4888def0-be74-4e94-9594-6e98d8876ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dbfa5d0-c890-4e25-87c7-24c1dff3e02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf063128-3a97-4fa9-84fb-b326c5f8887f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "347194b5-3388-4906-8cd6-57a6e04bae4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6da116d-e35d-438f-901e-c0593c8c2d1a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c99f32-cf54-4e0c-899c-8eebe928f4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62faa995-be64-4c50-a7f0-bffc1b2d3205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8f471f-5a39-4797-94d8-a497d5fcea06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a78706-b9cd-474e-8e5a-ce4886ef07d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753b97ec-e2cd-45f2-a7a3-764ce635c40f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f313b7a-d416-462a-a2ce-cf5d61e507d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54162a04-1459-4526-92b8-8f502c657917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c70ba5-957d-430a-8289-a9066fc4249a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f24b40ac-7bee-4c8c-9d9f-a6bf8e97e3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf4bdc5-48c8-4a70-9837-83206f20337d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b37841-38ec-44eb-89c5-17b2f5cb7395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66add0c3-71c8-4834-a7df-38852e3d2544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdbe7c29-f7ed-4c57-a0dc-8cbfdde9ebcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d95fcbfa-b646-4f23-b146-af1cd41efe50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc4550ec-b792-4df5-b945-6b2e6c3103b6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1260d8-4409-40e2-813e-1d1140432237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469bf2a7-07d0-4a6d-94ef-4410588fa752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0ff103-fcae-4ceb-8707-c55cb4759333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5663e3b-9e99-4085-afed-ad877d667bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45b83d7-f2aa-4947-9fe6-19967380f6af",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202a4448-c751-44a7-831e-4bf617fefd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d74df26-4b9a-48fc-aae9-4b013e339a91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c77b391-6f5b-4223-9beb-01ce8df8ba3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "463bcacb-c7e6-4227-8fde-d982b3d18467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09099f67-19fa-4b04-91d6-8004e5e530a0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b816f01f-1aea-42f8-91a7-48faed7cfbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b47f10-50b1-4709-97ce-879f1612fa72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fd7280-8f16-4ad2-ab5e-c2711504d9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "949abdf1-145d-41d9-af48-8ce8ba27ad72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a9d352-4795-4276-a8b1-084318a17235",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61ea036-eed5-4d71-863c-1af18b8de9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2c604cf-ec42-4581-b476-3172c57d373d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cbec6f-adfc-41b0-afdb-e1347a1df902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c04bd469-e90d-4721-b321-f60b95f8491e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e900d6-8ad6-4063-8276-167c93c22161",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6385305a-21af-4c37-8f71-651875bf61e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff135696-1215-4478-829d-df0c4aed0709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bd8ca1-8528-45ef-8721-0779a7f98c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e464eb08-8a2b-419b-bce0-1706ba36c126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1e02fd-3725-41ef-ad3a-ae5f00801dae",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc7c146-cb6d-4252-bf10-ec453859a076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9dcb96c-45f7-4e61-9bbd-e0a2dd3feb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4500853a-9d06-4724-b2a9-62b13e384dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3111644-5904-4772-b792-3328b1f02791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b65c2f-caa9-49bf-bd00-3992e0c129b9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ddd049-3932-4ed0-8934-7b1259c8be71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ba5928-3049-46c6-86d9-db1ec870eee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfa863e-a8bf-47e5-a7c9-50135324fd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aca3bbd1-1eab-4f02-8b67-2f2f23fa436b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c9bbb6-3bc8-4c9c-accc-a62ddeac53b1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42644008-830f-45e7-843a-d2c57c6fcf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1522247e-14a7-47d9-9a5d-1c44b8c7086a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c847ad-f353-41a5-bcb5-621207eb2c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bccad1cc-4d78-4c3d-943a-0712bc5e1e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87568765-edfe-46c9-a014-6c5009005f05",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f12b1ea-32b4-4950-9470-714fc3e56d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c21ebc-8c86-426f-a70d-42e25859ac22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8b7461-b12a-4f96-9916-ab5eedc3016e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0a62f0-de05-4783-ae11-3121c17fab75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34ec4d0-1ab4-4775-99fc-14247e9a31c3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6987dba3-f0f7-439f-a55f-ff77cc58042f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9660c3-f7b5-433c-8211-512243d44d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abed0715-ca2d-442a-9da9-5182c01b7d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "be632c0b-ea29-400c-aaef-87c3145e49d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70efd7a-0660-42e3-ba66-8a7a8718368f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6beeaf7e-8c80-45cb-8c00-ad31414912ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4b7fc9-134a-4ac4-9242-5ea8f5e6ef34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b16610c-c2ee-40a3-9421-050de0e38243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "60059f18-2b93-40af-9312-62a97c07c1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b00d58-4f98-4abb-a87f-1fb9f7e6a3d4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4588f342-59a2-4323-ac59-4d8d01643025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e751de0-0a8f-4941-8367-36c72fb549a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ec611b-0416-48a3-be9b-8ff916506131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "91af5b7e-0d9f-4f77-89ef-4b9e0a292e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14920029-5367-41de-95db-d9858a5571c3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dde861a-f6f0-4e9f-9b9a-fc321f728627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d90ac2b-4874-4bf2-bc91-c1f2c46947a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4067bafb-fd38-4e3d-80a4-250c8047922e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af5f360-51f3-4fc8-81f1-77bcf4e92974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82c80cf-a472-4a28-af28-7488e4f14dcf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0764fad1-0f2d-4745-9b1d-41a1477c0c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a48b188f-ebc9-42ce-b5ff-030d9a0d2c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ccc8d7c-ce64-4cef-951a-238ba256a9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5047f2-1c50-4ef9-a13e-19e0bf75f6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d19f86-d1d3-4e8a-961b-1ad76fdda49c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d27499-2a2e-4298-bd4e-097235d169ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2e72a1-a76e-4b5c-ba47-db367e6656e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d16c1f3-0b07-489a-9391-4cf111cb43a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25324f95-92f0-4ea5-b20f-b8717a3a7077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cb1ef3-fadf-4e38-8fe6-b77840b39e36",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b18aeb1-c34e-4570-9420-e8747bf4b5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d5e2ab-8d14-49d6-9000-47c077845867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f207b1-5ad9-4821-8f30-e6d39645d158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e6ed80-f9db-427f-a4fd-6385c33ea556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978fea20-53ee-48e3-8eb6-2da3d327b0a5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24b86f9-2945-4f87-831f-d83fd8f71423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f6943b-c110-4d9e-a1f5-1ab99eb7e23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cae59bc-6e30-46ff-8c83-5a17a41e29bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "094a9a3e-7bd8-4bce-ac58-d5e38eb1e97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54a5c61-585e-4def-aff8-aaab7f997df9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef73d8cd-ed37-4d65-a758-10cdabe9f3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520e3821-5af2-4348-9381-dbb937a27e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92400a31-a651-4d32-a7f2-6142e562c6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c3f3bd-5132-4d98-aa7c-dca39447b335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841bcfd6-a395-4bc9-9cdb-131fcf9ae938",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72deb703-d53f-4ef9-9d43-4aec4e4a53a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66aa9167-8a56-4758-97ea-c90ba48757cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da39084a-9412-4de2-a1c4-25ef0b65db0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "08c52a31-86a9-4700-8a29-cffbc4e28f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b41cbb1-cf56-485a-af21-123cdf03f6ce",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62202ef9-a931-4769-9d3d-f70b0e53ac80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a362d28-a89d-4567-bf86-5c373ba37ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804d7d0f-3502-44ad-ac34-783e92caf5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0926e03b-a75f-49a4-91c9-e11153657950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f7ff77-4cf6-4fbf-95ba-5d0d0cd2388e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce44fc36-aa5f-45a3-bcc6-379f6adba876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a145d34e-b748-4cc7-b589-5e03d7ea5ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758063a6-1dcc-4f28-9b3f-23b8f8296076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a74cbf9-c8ab-4380-8433-993b63bc5c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597a322e-c957-42b0-a440-b611cc53b146",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4eae83-b16f-47c2-be5b-41938d058735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fdf7017-69d1-4eb8-b60f-e0ce83c33619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3135dc39-b41a-4bd7-afe8-b9ed68306ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "225849d5-2bfb-4537-9a06-c26e74f73da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09214be1-9ee6-4dd2-ad37-e91daf84844c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f109d9d8-4ff5-4569-a7f5-4cce4749bab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f9b2b2-5a63-4a4f-a46e-902cdab9e2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0fe15f-3c6b-46e5-94ad-25ff1294e223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "baec0847-d12b-44fc-a3a0-118de970144a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27da48ab-300f-4a82-915b-74967d6d9431",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28454333-8b37-4155-82f6-31c158bf02ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfbf542-654e-467f-a450-a4755e3997f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eaa2bff-3e6b-41a0-b68a-5223d650aff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "06da305a-aae1-4d9f-a06e-8b7fd7e6a6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf7772d-b07b-4045-aa34-d493b04f6006",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2b682a-23a7-4887-9d91-569b2fd03808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec71f36-de0d-4f6e-a133-6b8951771436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a59f0c32-1d5a-457e-80f9-a61b619d2a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a032ab92-023c-44e3-b28d-0819a6640307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8fcccc-34f5-4f3d-9858-519594e0fb57",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9386f899-edd0-4b24-a998-825e7ed2a2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5433b9-1cfc-487d-8ba4-31577ce34a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735b18ce-7927-4892-b2fb-7e1a3485ae9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd275bb-536f-42c7-86bc-1be81fd6cc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f822571b-7005-4b2e-b70e-e23ff26c9e05",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0bdb7d-ea63-4e4a-baae-baebfd1b1a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d5c988-d93a-47af-b9b5-a6bc30fd9200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e025f11-8d23-4ac9-bb23-c975c6396f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf779f9-07eb-4bd9-9971-a560883648ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca44713-387b-4afc-95b5-9a7cb999ab77",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b321b2-bad7-4703-8fe3-170ccf470cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84fd2f87-37fd-4504-8c41-f5ba252f95c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f36a6d6-c17d-4399-b85f-12a900b4b93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "57676801-efdb-4d46-9e5e-ed31050f7f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39f5346-da10-4610-8d48-4ed4765cc291",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035c8ec9-e569-411a-bc41-e3b98e525f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2d9697-9066-4c17-a7c0-9cd6fc1c33dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071077d1-16e7-4944-b279-68a3c6c356aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "84a971e9-945e-4484-ba51-0bfb426ce6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef369f4-a566-40d3-a381-a778792f3261",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0a8cca-b7b7-47f8-b34d-378d82d2a570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e12c118-b84e-4452-b4c5-539718cd5699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9b8c58-5ac3-483b-9b93-8c6c5d02c214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5e63f5-6d80-4f9f-bc12-1a5f8cf2682c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9afc9f-cf0c-4d37-95d5-22d64ca4418a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c218c00a-809b-489e-9813-0b71221afa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ee2bfe-5f24-41aa-bce5-91897eaf22c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b4a4e1-83f9-41bb-9830-7aaa0aca8008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "62c210a0-451c-4aef-9321-b1b03f2da4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddf52cd-49d4-4b39-8935-f59318442f3f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78303d5-5c77-4c2f-87a0-f0134c519270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cfb200d-e1bd-4f93-83eb-8bb9d65b95b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ace212-d0a3-414f-ad01-575e5cba3463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dee15ec-7f2c-450c-8ff0-4524f801d15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2293436-1e5e-4413-9c52-b7e06594e15a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53477cb-0ec1-402c-a87f-1c1f6527bfb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7946f63a-6645-43f6-b90e-8d6ec90d5dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d8d78f-0fcb-4153-a99a-69b126b0be7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6a9312-3459-4ce0-8125-65aaa8a494e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40032e4b-77e3-4609-a42f-b1ec17efd20b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0c6d5b-1612-4b1a-9408-fcb3eabe2df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9386fe94-b18e-437f-9916-d9648745860d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9523b9f6-6472-4efe-8131-71e5a89e850b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c16fc1e-d769-4449-9759-b119053f2298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851f5063-3c23-4a8e-9dfb-6400b7b16d38",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bc96d5-9033-4bc1-96ad-8779ae35be77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6887ad40-2ba5-4697-b5bd-a5a13bbe1597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0ab3d6-25b6-4599-a55a-1b20b6e8d7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b21525c3-4578-447b-9838-c3aac0899037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2c4224-f20a-4b64-9c45-5164415eae94",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1a3570-45ca-4c56-86c2-00f70e90f317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac64fdff-e9f5-4ef9-86ac-b7245550ec87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bafbec-fc26-4485-8d99-2440876a27e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cda6d65-96ab-4ae4-9e4f-a4d3d2bfd7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a50f37-d4d1-4306-9ab1-7c6c1a97023e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11e1c1d-9e02-4902-a287-f9f49720d8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bb2d9c-287c-408a-b4a1-0d78e5ac738b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8de573-d9d5-41f2-a6ae-bb3a00c40c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "04aad891-da6b-4980-b09d-a01147300922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043810be-bae1-4dac-86d2-95abf14bdf52",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efbbcef-e4b1-444f-ad98-abd1d7e9db94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8199d9ca-b10e-4d01-b057-dd48130256b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902a0df1-e13a-4409-8da4-a8bfd18a7094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "755c4af4-6853-420f-b3a8-194d1de1a349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490c644d-4e86-4c6a-b7bf-5a83506fb929",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986202c2-45b7-4b69-848d-7240c42e54f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c86787-4d91-4a06-8432-cf32b2ae1044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9536a60-b574-4009-ba35-e5353034d2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f317944d-6192-4bab-8f96-d4f1d374db52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55828d4f-25c3-4136-9f32-29c36687c243",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68b1155-db88-474a-9eb6-197e54dfd198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96c2072-60ef-4696-a7ba-4179f9d5a559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785f713c-979b-4a35-8392-10866fa45fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15df0bef-1284-4579-b2c0-ed9e959c9952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9807563-9a8c-48ab-85bc-94e7910662ab",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f7f9a2-81ef-48fa-a2a4-bae7fb697e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a2e3b6-ae14-43d2-8511-14a3ba00202a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa920239-b501-489f-bff1-01ffb3052a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "160d5ad3-0aa6-4de2-b306-9963c95eb14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfad8d18-a2b4-4dc7-af59-1e45aa4a52c9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea30185-1036-45ad-813a-bac45f6f825e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa48d87-f3ce-404f-b9ff-4033bd7b0f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ec2626-e7ce-449e-a752-a92d13434d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf5e5cb-7d94-45c2-b2da-4b9867267ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450e3142-abdc-4107-8701-7465f87df901",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811778b9-b0b4-4e8f-aa80-9b19d2de8040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59af5c2d-7596-4a7a-847a-f9dcef767043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b401dde9-d96f-408a-8d6e-a835d8749545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c62711be-ef32-4e24-b08f-425b14560bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7a2ddb-dd16-4ae2-874c-5a970925ae2d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8929a4-1e3a-4f0c-bfc7-1877416da776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9034fe-3b68-4bf5-ab36-a76bb5188807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3054413-3d74-4586-a5bc-a3cbc6987f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ddaf0e6-715c-4964-92d2-157857bd1a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc5e958-467a-4b53-a354-edd9cd49d69e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece77bc3-348f-4440-8a54-413418a0f8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2041a95f-4040-4d73-994f-3998b53fca2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c9ffef-37bc-438d-8452-15a7268cf742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b732e125-e114-4a4e-83a3-7bc828a63c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a755493-a4a7-4721-9087-81e577fc5f1d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac97117-273b-4687-bb6d-d2bbe34f0fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6423531e-9ee1-4a75-976d-52582a56a658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8910182-bd5d-42f4-a475-21fe31e9f035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbcf549-685a-43c4-9e71-4a496ec41dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bf4033-9fa9-4147-bbab-51dfa5f73e18",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff00898-6161-4b8a-b6c8-4f5b7d9830e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0857fd29-fafa-4fda-803e-41fd640fa27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1905e9-78a3-4d2a-9752-428dc919de65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc47956f-2cc2-481e-b790-922c7884213d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498a3be0-1657-4425-ba51-c41ade0e4985",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4d2eba-7970-4fdc-82af-ff79ee50e691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d979cc-78b2-45b5-8370-8e320b60438c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fe25df-6291-4066-b867-64c94a9deef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5a5b71-b724-4713-8ec5-dc9fc1e17aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a548616-5ffb-418b-b8be-69042f33fbc9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5236b6f9-0178-41ae-9197-a42460759f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a9cd3e-0df2-4d4f-9d6f-138607c3881f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03265084-2d7e-41aa-acef-ee72e71fc118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee4ae009-531f-4ed6-8118-dfcd15bd7026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d16a4ca-1a94-42f2-9bf0-50c98087ebdf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18ca35b-daeb-4212-962a-d983980ab425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2743d0c-e577-402c-9486-baaa2d15e042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337e6d3f-d4aa-4dba-b388-8da1e1529e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb51c49-cde1-4243-a779-02c20b49b17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1926d0-77dc-4c40-bdf6-33d84dfb4429",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "561cb830-4668-41b9-a71b-776a4f73cb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121cf3d6-0b31-4cb0-b2fd-1236ad37a12b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6fda49-79c2-4da2-bad5-a8518a1c3d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60d01b1a-a63f-43be-a3e8-bdadc9e4f2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f16265-6695-4bd0-bb3f-d3a67f8d3a2a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d521b16c-f807-4b37-a4d5-d373b5428a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7fa880-408a-49e9-9551-df7206270fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cde219-6914-4654-b0c6-38e4ed6c19e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8cb1f85-c215-4a50-9bc1-8e1d98ce1ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14272bdd-7c23-433c-8c69-604b273b6c23",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9853d25-030c-496c-81e4-d87abb2037de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624cddba-e92a-4c13-87b4-ede1242fb37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04d91dc-65f9-435d-a4c5-425b0387208a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9937847e-d5ea-41e9-bc21-9b9f376bc20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4e20ca-5a3d-477c-8ddb-a54bdfe77d8c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293e5b7b-6af9-4b57-93f1-5e4dce3d29dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b249717a-7a0b-47cf-bab7-54a42ea1f411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a5b1eb-6994-41d5-aedd-72ce99fd32d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6775f4a-cd5d-4f1c-9709-1ba4d9b0a273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a085302-1077-479d-bae0-41cc6ae8bc96",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a1a320-e4dc-4ae3-aed3-694134150851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21c961c-905f-44d5-89b9-6eb5f9cfd4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aec40ad-94af-4b72-ba16-40701bc4121d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "799f21df-a50c-4c6a-894c-c7c5d0b0d357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee050333-bceb-4c7f-b52f-9d7685647789",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483311cd-0f9b-45ed-94b5-7eda1c327cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab6059f-93be-4a9c-a435-ba5c3ddd3466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c1e7fd-2f86-4477-b2ab-82fc911ed20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "93bad8a9-6122-4d8d-adc0-0575ca73595e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba327db-bafd-4562-b141-a8e51ab86f5b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43790de-655f-45f5-b703-ef29b2e29039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae101a71-597c-4b5a-8d92-950c1568a8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ea7229-4cbb-4ec4-8d91-7ada37442c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c23b7f-ccea-4a11-bc8f-42168ba7960e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43076fab-f129-4b94-a767-5af91f8174ef",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fcb926-d104-4ccf-b275-879a274e736e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71000ae3-dfb6-4efd-818e-87107813fde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb060e1-6837-46e9-b969-26786ba69f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "58ead55c-4501-4977-8c22-12c8296f2bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2406562-f607-4a41-b319-f0319adb6341",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd001d7c-5fe5-4773-b133-7fa0de50cc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ba6d0b-31c5-481e-9c07-ab21f14090ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccb6b28-6066-4e37-b040-92a6be6305db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "efd40c44-f881-4833-a997-4e49319cd3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dba6c10-d5a0-459d-9427-5503bb126d2c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccdf0cc-3bf1-4754-a40b-4bca4e5abc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "efd025fa-6b14-4d5f-9520-009f56a41837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f95ba3-bc9f-484a-bb70-a6ea98fd2f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c165d5-2e43-496f-bb5b-2538adebef71"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ff39d9e-8eb9-4480-ac07-7b1105af375d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25525acf-de6c-4244-8f09-8649e5b7df68",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069dcca2-3371-4c87-85a4-93c68cc907ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48b16386-de0d-4dbc-9e6b-3ec42ba60bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae05c713-a5d1-4ecb-b35c-15c5d1ea8ad4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bab7a9ef-c70c-4ca1-8af4-6dc074497067"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75daa1e1-f00c-4605-afd1-59552ebace05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbdfc41d-cd58-4bb2-9bd1-86784a7aad2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63749c95-4d8c-4a27-9ba0-462d3223410a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "682d1a02-904c-45d5-a540-8ac09a7fcd7a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e21c12fb-14d3-40ea-827f-3bdc324e0fbe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe8ac6cc-f696-4a8d-9113-b5564558af25"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0ae3cb5f-dc1d-418e-9296-5cc5d3c858ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e95a997-067a-44ba-91a6-c847194956c8"
                }
              }
            ]
          },
          {
            "id": "c7f0e0fa-c7da-4734-b860-389e04bf228b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "630a5a72-43b4-4764-9b94-776317b69e3e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ac93ee75-acca-478f-aa84-c1dce7411e1c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85f3159-6c00-478a-89d9-af246fea157e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "feac6bc1-f95f-4da3-80c5-f1c4a85938c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ddf022-7acc-462e-a476-930adafcc150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98640c9-03fe-4eb5-b78e-1d7dfe1df722"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "53fc212c-b7ac-4a38-a2c8-ec654ad7674f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eee6cd93-7c2f-40bc-88ba-ac3e7b6a342a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "312f2656-397c-4807-a2d5-48d0aff8d13e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5dab2d45-ede2-4960-91db-3beb659a2b2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5122cded-3a57-417a-b26f-b2ad55a21d7c"
                    }
                  }
                ]
              },
              {
                "id": "7f99eb7f-591e-4f3e-a2a2-467b7f951785",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59022ab1-ec0d-45ef-b1c2-6c9106fc6403",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "220ffbf0-a775-4353-8b49-c573ae8fbb11"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e65254b-36ea-45f7-a14c-cab2f969c76f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f56b738c-a005-4a54-8897-a2a8bd48abed"
                    }
                  }
                ]
              },
              {
                "id": "4b5b0c66-1a52-4b83-9543-d79bc922b2ef",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa8b1229-d184-49f4-b8a2-aac5c1f597dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "908d6646-e87f-45fc-b648-b42a59a045bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5d3ed79-c9c0-42da-b8fb-37a62f158018",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a53ca128-57b4-4fe8-83ef-731792a8ab90"
                    }
                  }
                ]
              },
              {
                "id": "39033935-ca20-411e-8db0-b57e4c67b6b8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd9e9a22-8f20-4a93-8d41-17e34cbe3cff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c37544d-8cdf-4869-b45e-6e7e3e15f580"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee072e10-0169-497c-b953-e487b50cfe89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c07b1521-6631-465f-9633-aad7be3dfe88"
                    }
                  }
                ]
              },
              {
                "id": "e78234cf-7cb7-4ade-b382-a9672c00c56e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f736903-54a9-4f41-9213-7ce76dad362c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fff66ff-a50b-4624-bcc6-cbb21481dd6d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e10fbb2a-d319-4dbe-9906-eb03a0630b47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "33dceca9-74cf-4c00-8f74-2cb59434b6b1"
                    }
                  }
                ]
              },
              {
                "id": "41b6d868-1740-418f-bbef-7ef6be062093",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75056361-502f-487d-98fd-7b3ac43bc6f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad4f6db9-30f7-46e6-bd45-8abc58329dec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef1c2ac0-bca2-4b5b-9176-7d5a14222b39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "22b87c8d-7542-41c3-a1ed-09b72f590a70"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "22ead006-6d3b-4235-80ad-9d119fb0e392",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d43ae1ad-4a35-457d-8912-9c0b26d5cbe0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "13e93506-6507-4a4b-b768-d357cfce40f9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9d3a21aa-eba0-465e-8dc6-8a0352d70cf4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91e731f1-6ae2-4a3c-9c37-fcc41e39c1bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d271a8df-1fb3-42e1-bcdc-4a66c5b9cb72"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6846f586-bce0-4c66-9009-62579199b57f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "294dfd86-f4f1-4dd6-afb0-e410560a75a2"
            }
          }
        ]
      },
      {
        "id": "9a15f01b-d059-4e2c-9d11-dddc1387ebec",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d79c0256-c46d-471a-9051-c80e96ff1566",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6276634f-d1ea-4fd3-887e-e856f8410fd6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e815237f-b40d-4960-8dfe-fc48b2d3e1c7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388520dd-22d8-4d59-9195-cf1d07119265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb563af9-3926-4643-a5ea-f6638ac5691d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d07161-7bac-4353-b71b-49987a0d7fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b19090f2-0a61-4882-ad12-147f3a65b7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e64a6ab-55d4-4267-8e40-6c1437278e04",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c97a2e-b4ce-4d5b-ac0f-5046ff87168f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51baa566-38e2-4118-80e1-a927ef14aa61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8652caf1-e568-456d-b1fb-ee6a6d7fc6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a44dfaf-5562-48c5-8e7b-ab2bad209257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1831b1-a6c9-449d-a97b-6a11471f88cf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3976e8-6e29-4c93-8038-a9b0da7f2445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7479d395-5f7a-461c-871b-269fcd7ba4b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9efc0b-678c-4082-9b4e-08cbce7674f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9771e0-8457-4282-a671-42c001dd322d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d6988b-bfcc-4190-8934-433ad60f15bd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78bd177-e3c3-418c-9d23-7a7679201ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71846f4e-6bed-41fa-83b9-ea7270cc92f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45ff93c-472e-438e-b801-9630e6c5e915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef19c202-40a0-4355-b13b-9d8959258491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ba6f05-6a17-4aa1-ab9e-09cf2ab9672d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb36619-b47d-4644-b320-e0633eede7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ea860c-4f00-4802-894e-4278cecdf484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74a7c08-8110-4f8a-b96f-05e8a55d67f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "443442bc-f383-429f-bb7c-16de7c9ccae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1582779c-b81a-4b1b-bcda-21a6edd7f506",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d563b4a7-f3f8-4c8b-8b6a-e1bb0738dad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b4a5a1-4dcc-41eb-86be-1c47af133929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689a4fad-5e23-4b0a-92f2-fcd242a990f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09c72f55-5165-4c83-939d-4f577029a1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1b70e1-70d2-42af-97be-0757f2fe83f6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70e6249-9d9f-4a7b-8a8d-884acd51e91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083047bb-e6bd-4c8a-87a3-3e3be73d5be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f2c7af-e734-45ac-a6ca-6be1b9c84066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e440243a-95a4-4f4f-8d44-b8bba3ee1e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89065ee0-72e9-4a35-ac7f-a6b85510d54a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ad60f3-a6ca-412f-851a-907739458b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55d9e47-2776-4266-8ece-2a3b6bccb387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e1b05b-ee9b-4880-9a42-4b07c842ae77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7491a710-e8fc-4d71-ad7c-ea233c489d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657b7544-19f3-498c-af2d-35eaf85046a1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b140e35-e7f6-4d30-afc4-24aee549c32d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ffad5cd-b8ec-4159-a5c2-4ab8810e5607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfb6656-02ee-443f-8119-e6d4b8b73d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d23e93ff-2316-4aea-b329-1809dbc1bbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d79b35-c46e-4e15-b078-a8e1e58ad27f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496e7450-21fc-40e0-9c8f-ee42488fe2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17323ba2-144b-44ed-ae0a-d6ac7db7be18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ffdc80-bcee-4c19-8fed-53f2896b502f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e215ed8-e266-49f4-aead-9943d415c5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c91bb13-3d6f-443d-8d5e-2ca9fd3f1f52",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a4b37f-5737-4ec7-8d14-7b8c4b3cdf58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269b26b8-04b2-4f4d-892d-e4c453f844ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0181e4bf-415b-4794-bd41-fe0433ccebb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c4623bfb-9af4-4516-ad78-0d90dec25b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5455cc4b-2233-4b0b-947c-f499b4a6c048",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386eb252-5b10-44c4-93e8-08fbcd5a62fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b270b564-2d55-47a2-9a88-a6436247f0d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b739efe8-4f98-4129-9df5-29998cb53e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "077dd4f4-1b78-4451-8325-b6d75639bdf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac76fb88-9a0f-4aae-a0b9-f90ac3ac797d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea94f017-b920-4c49-9ff1-52fbe0756c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5541b22-6d15-4ba0-abd9-dcd568bee109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d976a7-789b-44d5-a7b1-506c94d189ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e076b99-2322-4cb4-a9f2-70ded05f5edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2743b4-7cf2-4319-a6b1-bddaddbb3dd0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95dd34a4-846e-47e2-922d-31d89e67af30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6376b943-3d6f-4e6b-a819-d5bb0fdc6cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7197f85-0887-47df-9070-18f5887ab4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "748ee1b3-9936-4b94-a7a5-9e898f1d150a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29ab26e-a6f8-46dd-96a4-3e0fae4bf542",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2384a168-4947-440d-8057-b207f8d28e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9cccc6-40e5-4330-b965-de66a85a5897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35c5f5e-761a-4c16-9dfa-3f6a717196dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "58d7cac4-2a60-4aa5-b4dc-b02c4e207908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70b8372-3b02-48ef-a2d9-10b52f46b535",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f78990-c3ff-4d06-b601-f8499ff2f192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b0d78b-f50a-4a87-8cea-86acce835ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e31065-ebcd-482c-8fc8-30a608c6ea3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5fd9818-cfe2-477a-a1f4-5a4fd355e229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf6e4f5-1697-4b3b-a20e-4fa7e6ed0762",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e620b8c1-6950-497b-ac63-333c952032cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c553181-976d-4558-8321-d60bd1f2bd3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac0e471-b69e-42a2-9b54-0d64a2ca8a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4adf18a2-a0b6-4542-bc5e-8105dfa4d3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be1ff9c-40bc-40e9-8633-48d068db0f96",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7222baa8-67fd-4da8-a897-aa8c2465715a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37247035-30e8-40da-87d9-f32416f57a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045b9578-7e5e-42b6-b5f5-6d59d0b25bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "87810679-1016-493e-b305-567dfab03ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a6dcb0-7544-48b3-8adc-d91cc58fcfbe",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "158be6a2-8754-4756-8f2d-f5c613c3cc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d3c7a9-8b21-4045-8e71-189ba3b5876c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551738dd-c66c-4a1e-9e37-0100cb5e888b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cae50f5-588f-4f99-b665-a00dd08eb19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b317c58-7e99-422c-9bd2-625c6d882c5d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbefedef-b004-4c83-aa4b-393e55e79f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540283e7-1164-448f-9481-cd593522dfd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40bf3fd-e5fc-4379-9713-b941f2aa3878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf5aa67-d483-4f50-a421-ac927ff390cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dd0519-bfdb-4b69-aa82-0f55f4776151",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea25bd03-bf85-46d9-b4f7-15027a24d174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4793ac7-d9fa-4eca-b70a-ba6704ba8a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6125dd04-220b-473c-b76a-683c544fb244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e221d50-3635-49cf-afe6-386d33fa699e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093cd40f-aaf5-470c-bc33-9dc6ac429a44",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12626b22-f489-4232-94a1-0944d81b8b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650efd88-be04-4aae-a24e-5b9c91115770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ef15a6-a269-43ed-bab2-ae5b05d669c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25d2ab7d-c2ea-49d1-b01c-445c7e144d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce18db33-e090-485c-8a2f-612d90bf1aba",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2921700d-a427-4dba-9483-ba32308c2b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013008ab-eb83-42a2-8ec5-99744414d9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63bdcdb-e9f7-44bb-a892-730c4e196e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18800c5e-4917-491c-9ece-851c595d5d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796c2e04-c442-4794-9191-10ff7d5b53f5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd40683e-e224-4322-9d44-396f2d94ed2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc837ab0-73e3-48cc-95eb-6ced3eefef1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1557427-7eba-4c91-90d2-55de1fad8a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29128a8d-cfac-4525-b868-0e76e47bc78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5022b1e0-0ea2-40ac-afca-82fc90cafe31",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672827f2-c492-4cde-a687-df6a86bc839b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4078a4e-e44c-409f-93f3-a357e592bcf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89511f7b-2883-4614-89ae-5a17703ea174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "989f308c-c29c-4d92-8dc3-c0ba120ec796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b9e265-4a44-41f1-b47c-a4560936b1c6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3c6e6d-8599-4411-9ff2-c53a46d77462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2882087-6181-4f84-8cc1-0c216a2d9dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa5a55a-69cb-426d-bc0e-3e42ad8add07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "164958cb-609f-4e22-a4f7-f0bc5ca4e341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e476c4-261d-47c7-9d86-d1a00c0b07ba",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3a875c-7ef7-4ac1-8829-b1387e652408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc2f375-ce42-4792-84dc-18cfdd3d2016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04eafcb6-4cef-4195-8c03-4d4745e5581f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "206fad1b-9dbe-49db-9cf1-1f994de0eda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6eb2ee3-b8a5-42fc-9c46-31e4d63f7380",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec6c793-f5c5-4519-9d46-a15b4e09fb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d274c55f-a00f-496a-825c-a0049ef29ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99acb15f-1ad9-4e49-8da9-c8cc329b4727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc43ecce-8b41-4885-b773-2af468800888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f34479-9126-494c-a299-07f58307379c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880315ba-d336-4e66-ad46-03c2b4f2375a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae6e8fc-6765-4684-b1aa-971a3f9f673c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040b5854-b3f6-4ca3-a7c8-4b022a5a7820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98c3dbdc-afae-49e7-b922-552b9d89c255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c3d5e5-2ae6-4f28-a0ea-5be22effeebf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4730d3-76cc-4b26-9dd8-2733aade3f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859d495c-742c-4a2c-84db-f6e9b694934d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623a2eea-39f0-4b1c-823f-27d9322ace24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8272b5c3-65ab-4ea9-8c3e-f1d8ccd83f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20497fe1-2cde-44ff-97a7-d1f18d64c581",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c079795-77c2-4204-b192-e631ba082183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7bec6b-f713-4f08-b1cd-0c9de56cdc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9033f190-8516-4e94-a2f7-8899e3c57b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8b528e-af95-424d-9d1a-e1eaf526f3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ab5d27-a23a-4378-9990-d35d881e2e57",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f928cf04-3017-438a-a84b-fbbad96cb3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9453266-711a-4d1c-ba53-0ea1889a2e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3327d71-d742-41d6-b50b-b9256b394ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d544b214-868b-4012-9322-7b598dca468e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c40ec4-3ec7-4614-bd8f-0b9adbe68f02",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2ed6db-3973-413a-b6c7-ba2207ead03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f6846f-d8b5-40d4-bb18-8c973347cb51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16929166-4dca-408c-950c-06c51f243f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "607bbe76-1593-4252-9788-162ccaf47a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ce6e96-3187-44a1-b4ff-75494dbd4fa2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8dbafd-8bdf-4d76-aba7-f3344b08fef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6119a5f6-7cbb-40a1-9fea-2884a1b3bae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee9c89a-acf3-48f0-acce-eb7cbea8c85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43e5bf27-50bb-4a1a-9432-df7a845f470f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a584d424-fcd0-4c7d-9f1c-400689fe985b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bb3908-6a29-4bd8-b6d5-b3c0b0bf7d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a3201c-8b35-4ec1-a29d-57c7c014f25b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d42c9d-98af-4748-99e1-e422deda3906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14076839-b86e-4f85-8336-da578fd21889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2798357a-9e3f-457a-9a22-d94708fda0de",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37351a8-5832-45e8-903e-c0e23c867200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c889e4d-fa9d-4701-bdf9-02ffcb8a23ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7dc77c-3d37-40de-83de-250307822cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57e59726-b3a2-48d9-bfc3-57cd0b37778e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3b2f70-b8e7-4a9c-9bd0-9aafef6bf0b9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eade5bd-e550-4403-be62-33cb85cbcb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79d6458-c0e8-47cf-a445-021b30a97871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df9ed4e-4abb-4dca-9324-052bc595d68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c411272-e5f1-4ae7-884d-e10a2ce60c8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d526975b-3a5a-483a-a691-c055d850b295",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14f4c9b4-22a3-47c6-b75a-efd5055efaf2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd8aeec-fa53-4900-aca7-b2e7807b2046",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "451a33f4-b324-4627-9f3e-73e614cd0e95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db169952-1cd9-420b-b314-59c89d6706db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f511bda-f2b5-438a-8b16-2bb8b7ed4e36"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fec88852-ce26-4319-a102-2d09ccfac7ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f06d6353-0699-4be7-b533-bfb2e2fb3e4e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec72094b-42be-4c8c-9966-32ffb9db04de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a8b45d9-4243-47e9-bb49-953bfe6825fe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2027dc74-2511-4523-ab67-bcc84a725de9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "29f1f0b1-266e-492f-a97c-e3b28cbc51a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e860cdf8-cfe7-41af-802b-de31bfe01a02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06f81210-b436-409c-a323-edb8bb8f2b85"
            }
          }
        ]
      },
      {
        "id": "7e271048-72bd-453d-b902-b36923d30049",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b81f7fb2-aaa3-4dbe-b4a6-ed0f0c5f9e18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "daa14739-2d0b-4ea1-a2c7-5d58a6416585",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b0dbbdb9-e348-4d5d-b784-15f3c37e72a6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edab803-5687-4892-8b72-24e1516c54f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1352b35c-cacb-40cd-8acc-da9589a0c51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baae2d86-65cf-4713-b599-782e2bf8ec40",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1e6b10-5456-4769-805b-e3042ca71201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b50e39-d185-4b21-b308-0886f777d24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef39fa1-47da-46f1-bc5e-2f8c40254e8a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846bb527-74e9-4b61-bebd-bc50c27e3834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684a8d2b-946a-49cd-b6b5-bc355d17597c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368792b3-a930-4c01-89a8-ef9efccc46ea",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e79dcb8-14f9-4432-8fd4-1300f91b329e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f303e3-93db-45b5-83bf-b8094b81fa4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f54973f-bc9f-45d0-aea4-337b171ed9be",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93668f7b-3dcd-40c1-b1be-76df742124b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6530440-4cd0-46f4-a3bd-449ca3303986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366333fc-bb30-4216-a919-61444b516098",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a57ac25-6cc4-437a-9fa5-489734b64b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eab5d29-a866-4165-834d-8cda5b949883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bcf009-758d-42d0-bb8a-91b9be4a3efc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11a8cdd-3b81-41a6-8297-31aeefd29290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c32c13b-85c8-43ac-8567-fbe80b7b9fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4747ebf1-ada9-4e82-ac51-880cf895d3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6988a5a4-e2ce-4728-a267-96572dc538cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94da2bb-ad14-4476-8abd-e6531bcc536f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74efb12-09e2-4bf6-a365-36c5ec2d35a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1d28d10-76ed-4bb5-9e92-de83ffc56fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee54850b-dad9-4853-8107-11fe68bd4e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8217ea17-ff56-4c2d-8213-1b77cee871e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007cfb80-83b6-40fc-9323-e656ec977ebd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be84a427-59be-42b2-9b97-d70a3ebd58aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01b27c6e-32c7-4d57-a69a-52e7a663ef13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78443185-7418-4b38-851d-6b985a246f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f83034-c232-4df7-95c2-33de0c6bdc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b84d1ec-a5e0-4736-ad47-403f8ce7ad37",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602b0255-9bcb-420d-bd79-7bd2f0b3405e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc0e08e7-e543-4062-a0d9-dc00d9036329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "588f16b1-e9c9-49c6-859b-1c3da76fce33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d9e2ad-8b91-4435-a2bf-89f36e574b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594980e5-2522-4aff-81f5-983d9a565f66",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df1ce94-5ce3-4360-b8f0-5023a22e02bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85689518-7215-4d3f-84bf-466cf56d50a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de36d971-dd66-4099-b3dd-80302c99f894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c099611c-55a1-4b80-a112-f108b6ece1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee915f8-f32d-4baa-b554-a853695b9865",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fa5110-5dc7-4bcb-a2db-52a72b53b880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2e716a-6ace-49a6-886d-87e5f0669f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "391b3754-648e-4796-a4cc-01c7284f5c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47a9373-dee2-42d5-ba5b-9f3f39aa4398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c191abd3-62f5-405a-883b-620c53168d6b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab422e8-ee1a-435e-8723-57e43652fd1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcdef2b8-033b-4aa3-bb21-624457a24249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e18abd-8cd6-4dc2-9a8f-bbff9473a927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1746668d-8ef6-44ad-8ab2-58d477b1bea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74728d62-0fc2-4441-b651-6685c49192c4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc0491d-3b05-45ed-bcfc-076389d5ed82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b483b0e-2852-423b-b65c-a55af45e1ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257813f3-e6e3-4167-bf4c-c8ba10555d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cea060-300c-4a0f-ab10-b63c16d13b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b563a00-0c98-4f0d-897f-5b4de6cdb779",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f58602-a799-4e9f-80b5-ea102c2cfd7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a5fc0c7-9be3-4c9c-bae0-5c1e2451d973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d3b678-b61d-49ba-b8df-45ee54f8a9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8446108-121e-45a3-b2f5-5ae0b48f4224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0c9647-da6b-4d6e-8d1f-bf6931b3f2ef",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79079a75-88cf-4afb-81c1-b547546cfbcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d28ca084-1d8a-4f49-93f3-12d0829d89b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c69eef9-28b0-4865-89d1-b95dcb8678e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502a57c2-a6ea-45fe-aa70-6ba8a35a0e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e25564f-2c2e-4125-bfc9-218f0724225c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2fe2b9-d344-42fc-9df1-50f9f237f213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912d9ed6-69a9-4c25-9641-a5b4643d5582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67045c9-62d3-4524-a8dc-c9864964de27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c40c78-607c-401b-a294-f72a5e40b34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c2e734-b9dc-4d33-a748-3871b5d152f5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf21ada7-c3d9-4473-9e1f-36b08d496fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087c52fd-ed3f-4a79-8a12-ee3f989db9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e29bb1-7135-417c-930b-0aa530a81cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280f937d-a706-46cd-8cb5-c8a4a124658e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc80da77-d114-4c06-b188-efae697fa1b1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77aa402e-2618-4c30-bdee-d625f3a1bff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be9c69ac-7967-49a8-b909-522392454722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb981ed0-8ed7-4e21-bee6-31b946c8628c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980d09cc-15a0-4683-bbaf-8b8765f26f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4e0409-4742-4aa2-b98c-ec3490ccc6ff",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac45d23-9772-4a81-8eb3-cc4b2023b92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34c68fa-7636-4fec-a635-0931c36c485e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44d0c25-28bd-4168-bad2-5d0ff41fb5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7ed7ed-32cc-43f7-91eb-10adfa008f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5917fc86-5d39-4ef8-b433-8cc76d74e610",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae1419b-b45a-4399-8745-2a4203ce10de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a88bf8-df4a-478d-bc15-e6ee931ae0c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e72a782-5910-47dc-98f8-78c1a7bc5367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14387d28-5568-4b3e-bf0a-a88598a92d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72a1ec4-a57d-464b-a64b-b9b4f2a21c72",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd5eac3-7455-46d6-aa20-dd5693386174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a010bd-b4bf-4751-aeb9-b02686a761d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a63432-505c-4bf5-a7b4-c50595243ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fd51737-ce47-437e-9b72-edaebd970078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f52f6d1-475b-4e17-b1b4-f2651e4bdd5a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf930be-de7b-4811-8941-dd2d4c957722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8475f33e-16be-4bdd-80bc-4e4b2f380f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d418dd7-8017-4b84-bdc6-653fea698941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c29240-eb44-49a2-a115-0029f1783c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d6d623-6086-41a5-8bf6-7a6dab52b1ef",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b215aa0-f9c5-458f-b0f7-a2327bd75596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b3cb704-4f57-4854-8209-764e331de6c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8982db7e-2629-465a-91af-82f759dee6ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c548f9ee-1000-45eb-883d-a9e2b97130c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803eaa10-df19-44a4-afd8-8d270137368a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b65b2d-e27b-40b7-97e7-857d30cfa733",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a8b1937-a813-4c8a-9867-a9ca5b562b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9e8977-43da-4150-97cf-30a25889193d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90cabc4d-b452-48fb-880a-39e44d2f2364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3e886a-7855-4eca-b7b1-865982caa67f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c655e7f9-abbc-4807-9b3c-77997ddb53d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16e3074c-b3ae-4faa-93b6-6425e7165845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3154b8c-854b-4f5a-8a6f-c4e3f7920d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77211935-1534-4145-ad63-732431732171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35e5851-c8f9-41b2-98ef-9fae70849e43",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd725162-6c5f-4d14-b160-6ef273134624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "090914ac-1c00-49a5-9951-b2476ff353f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fc926f-7d26-45e8-9525-eccdf8c55222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6f814b-5a31-46b5-a4d4-9a8bea573433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7079ef5a-c112-4618-b08b-5c6b605b840b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6335e8-530a-4a22-a0cd-def5841efeb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58cb8e80-9aee-403a-aa3b-95067c2093a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11361899-9bc9-4a1e-8479-a8a3c37c17da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006d0489-8202-4cff-9e4e-71d595ed5dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb3766a-3d55-42d7-ad01-dfa7f150158a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c0f8e4-b7b7-440f-9ab2-a74bb3457114",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07138a80-e58e-4464-9acd-bb6ed9046b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "045e44a2-92da-4308-8233-bc66de7d1ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749331d5-08dd-4045-8c2b-26853ab1ac8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32f65b9-7551-49d7-a835-6d7b35ade995",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af19b57c-32d5-4323-ae9d-f285a1827185",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8719306-3901-479c-94d0-1cffbe0009b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5586d17-39c9-48e2-8fe2-0620de320d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f6fbb7-0f37-43c4-b336-d6468206f779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39543dd0-2d87-41df-9b5e-18acdfe341cd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fc1d10-9017-4673-a165-2dfb28285037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bd21819-a0c2-49bc-98e8-9a23f498d02f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdff6a1-81d3-462b-9c7c-530b4780a8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0ae1fb-37e3-4bb3-92a2-febf7105d932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc978675-d9d7-4e4e-890f-9074badd6726",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92f38d6-9e99-4a51-b7f2-d9570c9d26cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02564a42-d588-47e7-a2b5-0c2c1370e054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de1347e-1464-48d2-b0d0-cd1d56e1692e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89ccc39-f75d-459f-8ab2-dc6387489dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6031b7e9-b686-4cdc-99e5-4545fea50b62",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1649631a-cb59-4a2a-94a8-08c6ccfc3411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf29fab9-2a6d-4114-8afa-8eb2d8fd7fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78c9796-c546-4009-8b5e-2bb57afa77e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3b0c4c-ce20-4af6-8d43-cf54ed88f4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8dd0df2-45f3-4740-8e88-c077b74f32ef",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43179f28-b862-41ec-84c2-aa59e80650c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "175854cf-f6a1-4e3e-b7b1-b7469df4a777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fca6599-d9f4-4896-adb3-9469e41ce41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0aa25d6-9288-45be-9074-427061781083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b40e7d-63d5-4185-8937-013332075154",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f2f3f9-792a-435a-a79a-ceed95326de8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401404ee-45a1-4d08-a7fe-ac4ecf9b26aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7695a8-5386-4e82-9c6e-9d413f2dc0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf5a3e9-6057-4853-899d-bcc14203356a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c178388-3bc2-4cda-bdc9-e101f9fb056a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194055a8-9e62-4ab8-b175-4a9c47b254d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576a56bc-90b2-4a14-80cd-1078c6cd554a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4faf0c-d166-440d-9d47-7dd202081eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e86b286-c07a-4db5-ac38-cfc2b0fda651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ff2e4c-b8cd-4161-8cbf-9f40e79db198",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4c96b5-9143-466d-979d-b46d7413fb43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebf27e9-20b6-4791-866b-3d97bf38dc64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df491cd6-13b7-4f64-ad4c-d1def8ed36f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770cf228-8492-4014-b099-62b420f534b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a3854b-de58-41fe-a76f-89c0fcb5b0c4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368a3faa-8222-47ee-bbf0-450a56a1f7ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a284ad1-71cd-44c9-a0fe-7c7a52f62a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ac38cd-896e-4898-8286-faf5db1f822d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ea2253-8911-4ff2-9e31-63adc752fe13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6903fab4-8b1d-40de-bd26-5dc8a75b1920",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5827ace-0e4d-4c8f-a967-168e8cd198dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0940af26-b36c-44e8-a22b-981bf45def72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1c2896-ed35-4e0b-8c32-9978875b6df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b98358-16c7-49b3-b501-2c32fe220066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cbaf92-214c-452c-952a-872a0b07434f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97a4663-9210-4441-85a8-2012aa5f4c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb141f00-b1c2-488d-87f9-10d105a4c143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f29fdf-f9d5-4d8c-bbb3-846ecd20ba45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf7cd76d-6cac-47ca-96cd-c5da7d5c249f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d566fdc-f698-416f-9e06-ecb575d3c4cd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224ce8fe-7a19-4696-b484-3a71730a2e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4c2bac-3a72-48c7-91ff-86901a570386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b348574-3be4-4907-a686-deee1f39eb32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8ddc81-ea87-4c70-b72c-f59f8a560355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61368546-57fd-4d64-8438-5ec6d17e47ad",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac1f2d1-6c4a-4a13-a70a-45665e59cc0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b6647a6-0c52-43cd-92e0-110bc89b96e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d85718-2eca-451e-9e10-de51af133f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "050b43b9-c2d0-48e8-be25-9e8b43965821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3edfc0-c80a-43ce-b2ff-d3df72c552a8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722f4d2d-e6f8-429f-b3cf-b3e9ea23d151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56e8af6-362b-44b0-9294-c0230b9b395e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4052c723-4b7c-4bc5-8dc3-00a62761a904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888e92b5-b326-49f4-8459-5cc7358aac27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b105eb68-8721-4bd5-a985-08b5dacbbecb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0242177c-fb6e-4ba1-8ce8-db7eed83b1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d68634-23e0-4365-ac0e-62bb254c99ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dde5816-9729-4302-912e-34d4c2f96824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412d00ab-6af1-45e6-9d25-3dca27ecef05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcdcdcb-feef-4c26-aa75-515bdc7fead2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0bff64-7837-451c-bba3-58833fd47a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6d6fe8-42bd-4c8d-957e-e8517055c9d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e40e9c2-0efc-4ddb-a15d-e04c3c2729b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9951dd-e1ee-435e-8d71-4f62b4238ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14ed4bc-ed71-4bdd-a8e2-727f8d818730",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47303c9c-073f-4a36-a56f-eee098e82d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00761eb9-2676-4a53-b410-47b46982c62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "917ef671-62e1-4ce0-b7a5-517474d2729d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d09967-6c79-443f-8dd4-8a0afca16a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9038bbe3-ab85-4f11-b3f4-91a94cc7e86b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9dc1081-8489-4afd-87dd-6b75facb4a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93cf2fcc-7567-4c84-8e8f-abeb469c6624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "405dbdb8-6016-46f6-a634-f32a84df620d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23c0e33-efc1-4114-b3d3-78fe770a4aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0553a406-f46b-4d4c-adad-3631e8dbc7a3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff92b47-9c3d-4245-9043-e5b0c7733743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df65601-9ad0-49d0-8930-c3c9a4a67fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f8b72a-47dc-47f7-ba18-f210931b1fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d53894-c6d6-4c36-8f6d-453a1fd88b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0426c82e-2fa5-4675-8260-47df518b748f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c55d2c1-d3bb-4163-9196-ae3ec2d2770f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1a629e-b009-426d-8140-51d533075e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a40b1d-fd7b-4abb-a51d-2a349de41fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c799bd8a-16ad-42d9-8ee8-1cc1b4a4e6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c2bc1d-552a-4d87-a4f6-a8445a5ca40c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8121dc8a-3e62-431e-89d1-c4cda4c7af30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769ce039-c008-4144-8e22-d895e94e321f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50808a0-e873-4136-b0e0-a21eca394c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6465f5b2-bc64-405f-a0a9-6a5ff00dbc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3320a017-1128-4ef2-b500-fbab9aa96a78",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc0bed6-3b33-4e73-bf23-682dc0bf13f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6dcba8-52b4-4f29-9a8b-583bf4622e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8147723b-f47e-41e6-ad5a-7244ffd56d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d58b5c-6b40-4ba1-b6b6-f13e2fb5db79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045f4fb4-27cf-4be6-9252-f87e170674f5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30930b4c-766b-41dc-96e9-184976df457e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7f9208-4f84-4c96-8006-f83f71c60ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db06479-1ae8-4dfa-8a24-6a43aef6bdaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e16640c-228f-49dc-a3b5-9014e15a0aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d4d4e4-3b85-4294-92a7-d407e8eca5ed",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36cbfe2-2b41-4de6-8142-b74ea7e081a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c03c24-8c1e-40b0-aaf9-f0713060a25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad88ff9-6156-4392-b146-200e3310da5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cff4871-7683-4b25-a2d1-625f8aeb7aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5180e4a-1b0b-4cc7-be72-d0cb8eead9ed",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2e545a-d818-43d4-a8b7-0ead30b1820b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d913aa7-8285-494a-b602-3c5fba8eff01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d06544a-f853-4fb4-8557-35c459e37768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe95391-07c6-4328-a920-b970197f5328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62386f31-0af8-4b05-91a5-1147071ac455",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6082759-69a2-4273-9282-abd260e0f3ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f777c51-2650-4d36-bf72-bf9673abf59c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "380e4325-ac63-4602-9832-781bfe6ac12e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65578e23-5d94-4d60-8f10-b5c65c17b1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73208fcd-28cb-465a-b87a-496e7afc7033",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e474bda3-2ada-4dbd-bdc2-716abe23413b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2a76ac-e861-4055-8792-617adcedf52e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2739a08-8f75-47aa-9e6d-d7596ae90e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c09bdc-8d55-41f1-8aef-19ade8bbbebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacbdb7d-71f8-4aa8-9123-90a004d72c23",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfb0137-70cf-4051-b694-7dd90e896131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec2c7a6-5787-4ad7-ba86-e8adf49c47b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72e860e-17bb-46d3-9f47-23086e1a8b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a2e574-fa23-4b61-a108-2691867b8775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a41a95e-983f-4011-860b-02344981065a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca60a2d-0d19-4767-99fd-2acc82ab51ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e9e1f83-2888-475f-9861-4ca30b4e0b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "720a69d3-06fd-4d07-927b-2498295c2deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6853f660-c0b2-4db6-93d9-9e9fb0e4fbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575d81ec-914c-4e54-8d49-c0c0def0b2d1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbe8904-592f-43c9-9a28-0a54077b9e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b1a292-6dc1-4566-807f-3fe5fc8f8c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0483f0-e52f-4bdc-aa53-8c3afca8e869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270a88fe-d3c1-48ab-9090-b47c50cf2b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703e026e-08cb-41eb-84d4-f6998ee2e540",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a980ee66-6f64-4de1-b5ac-03ba30579547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b37d06-25aa-4ee6-a37f-fb558651b9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee41b2cd-a6a1-41dd-bd9b-0c24db8601f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e1bd3d-adc0-40c3-84db-74a8500e779a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80a1e92-c711-4007-81b1-4a0cc1c59f58",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edf514a-b92a-4155-813e-b3fd7478a2f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720dd971-0d9e-4fa0-8f40-beb8a1e81cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acce83e4-0f03-44c3-a30f-11bb77fb4286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b6e329-1661-4c25-a47a-4166244c10c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76f1b8d-4fb0-486f-87ed-347406abd358",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37416c2-bf7c-470e-ade5-d032c9e41deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21445740-bf46-4afe-98c9-ef960a674816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "325f2b16-fdc6-472b-99ea-778e08d4ee3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5633c8-f639-4243-8cc1-919e768a3de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8f42e0-a689-4b4b-b34c-b743a185e535",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca5370a-951f-43fb-823e-707c0ffa672d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1485a357-2b93-4bc6-80a3-df6e0a1d8bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c058f740-3eaf-4305-95c7-80385babaa01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ff1d8b-fcd7-4d3b-9710-7e689717decd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4625903-12c5-44cb-b90f-57a1e3740fea",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b7a087-b27b-45b2-84ec-81de7bf5463b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83a7066b-2412-4b86-ba28-ec7e9090a247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6f7b3f-23c0-4a36-95dd-2c794f987bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbf80a1-cc3c-40e1-ad29-6dfca59d25fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8a0427-6645-465a-8a50-e33c490c4a06",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefe7bb3-5b09-4dcb-88ab-abb74adf3901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6513f11c-feda-4192-b502-180f58deb739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4900b5-e648-43ba-a7c4-fe49549976ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0ffcbe-26f1-4427-972f-4d5bfc2e2a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908d20a6-4ba9-4890-86c9-8f178f40ae34",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbc1e1b-4d5e-4f66-a163-2bcc59b0304f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6def966-c270-4fa2-b8bb-b1b1e23b16fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cc474e-8397-41d2-a56d-76f271e1934e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7083f4a7-545f-42b9-9ba1-7c350af7624a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5862bc66-68f9-4200-94cc-b823f81cded1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db8dfb4-6a13-4aee-a26c-74e5c5d9419b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b82ad6de-a931-416c-9f56-955bdae776b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4a0b4c-fbb1-43c8-9e1a-bbbdf8b51f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a31efbe-d343-4759-864e-0b871f3fa2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76b5c65-f809-4b62-9938-cdbd3cbd4112",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b729439b-794f-4f18-8f93-d38108226ac8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa75943-90f9-4b32-b088-9686e0cb2e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda15a2e-9eaf-4851-9597-50ac91716612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fff7ebc-5886-4fe5-bf83-060b3da58bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee74bf96-361f-47b4-85b0-d9394abb9a88",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06487bbe-d0aa-4a25-ab40-5c74cdc6d88c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5412c166-b006-43c2-898a-cdbdad068909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6639e815-451c-4daf-8b26-0c0b40973d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc755cd-67cb-4961-886e-4077c467b7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f879ac3-2f40-4bfa-b664-3b39875dcfb6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa428853-687c-4d66-b1f7-991048e57d27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6bcb867-83e0-4378-9920-236c289a1035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b631c452-6f6b-4d9a-9509-cf6ee58c2291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6f0df1-7b22-44d9-a17b-ac95e325ee1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9c51c4-2ec7-4bb4-8e47-cc0ae6e34015",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cf74787-8c30-4339-b0a0-cd5b95d50f73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f457c7b-bf26-4d3b-a302-e4040e37ad50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f90c3b-6914-4700-a093-a7949c428362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf310fb-4b94-494a-a368-a80ac2f42977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a4a59d-39fe-43ff-956e-d9488cd26521",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cf11c5-2e2f-4c6c-8c8c-e5839d3abebf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95d44506-f0bf-4cf2-a546-cf158153bbf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a7ec6c-f820-4b32-862d-272ba53a285c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3f8a31-60b5-4231-95ab-d87085a92e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8133e234-6441-45f1-b088-da7f40a332c6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f546129a-1ed0-4c10-9fb7-7f02ab861d32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b68f81cc-cedd-47a0-8215-e6cf45038a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1adf415-7fd7-4d5a-a55a-64e1c843b2a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e2956d-a7b0-44bc-a5a6-faee8d65db09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310cc131-6149-4b81-8093-646c04a4111a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e2f903-1e99-419d-ab3b-d07211d6564b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a063eb7-829d-4eb9-8e9a-91e78e94d2d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09720b8-2165-4531-a4be-4d5c090542ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda111cc-06ce-4b2c-827c-c6311a57e398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357aaaac-fe4e-4a8b-bc13-e668f16c663d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5147a5e2-de84-4dc3-9419-6a977b9d8ef0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35557a62-5235-4cfd-a88e-7c0052404028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a841c27a-59b6-4c91-96e0-4663e0d47a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc70945-2ef3-435f-96a4-27c50ab8abf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0794c7-67b6-47c6-918a-6e03a07ded15",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687e8d53-da6a-4679-937f-8b12d0a9fce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3151602e-a41f-4b93-b4aa-e3fd968201aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b44e0ad-312a-4c94-965b-f0b7c12a0545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7f42d4-f7c5-44e0-881f-33d95f0e7ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95eb0015-7c79-4a5c-9906-c9e81218b96d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fa8a55-42dc-4a31-9461-ef4799b49894",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6384a60-47e5-438b-85ad-9362284a016e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1e19c3-ee9d-4f7c-9219-97b0cf730b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74501d86-39f5-4edb-9768-1cacb53890ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d94e1c-2cbc-448c-a70c-7fcdf3820d2b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33141d39-5ae0-4247-8d95-f66b543c172e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4223a417-8718-4255-8e8f-2a953676b5cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9bc87d-6ca1-4159-ad27-3c0d2e5309e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1612fa94-cf11-4428-a843-c2a2fcf4dea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097aa2ac-c43a-45a2-bb2d-818364f78686",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad50b6b-384d-4b73-b28c-5c5460767791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c900a367-b7b9-49bf-831c-7a1c18bc30e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76a2344-7e97-44cf-934f-165a0097aec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d15cd3-72af-4696-baff-95f48e0a5760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bb5fe7-f36a-40f6-9dfd-a5eb6a75ea8f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552c89de-9b2e-4346-aedc-5900401ca5cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4138e321-bc00-45be-bb4d-ef60060ce197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5819eaf-81f9-4c1b-90a4-ed367802807c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67a5882-0b39-4aa6-96e5-7903cefbdbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7beadff-adb3-4093-9ad1-393bed63c131",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75204659-96d9-4c4c-87fd-7d0f1a4a7e2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f55a1bf-87fe-4292-8281-9e8e910b626e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c04016-bc70-48e8-b908-87003cd03aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e3576a-9af2-4d4b-9e18-a06d14bf6bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca398164-d540-4f98-a8d2-68d5b14054ed",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86214910-6c65-4bac-a039-f4d6f9cce667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb8249b9-24d0-41cd-8e87-626e6c7acc50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f947505-37b6-4442-8c76-9e49fbf5bc69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949588d2-1322-438f-925c-d1ce2e53494b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f949cb9-ec17-4389-888f-afb6f9be055a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85178ce-02fb-49c8-bdd4-95527e535074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ff36952-fb84-4cfc-8b13-f8cfe1a35ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d66f31-4822-476f-b51f-c579f2bd2b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d75e9e-6030-40c9-b2ba-83a5c65a7d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be3a3b7-357f-456b-a50c-2a295248dc24",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b116a7c0-4eb1-4a3a-8be8-92edb869a53f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d174f330-fd38-4b3f-ac21-92d9464d8134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b15fdf-320d-4f54-9807-da7c23806e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4044b1c-c992-4d0d-aed2-10d912cd9ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac29b45f-6f29-4299-9ca2-5a51e3d394bf",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285b0035-e746-4e22-957e-a9a95dec7849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "189ea667-3add-4069-ad29-922b30ca1149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cf4108-5fcd-46aa-ae03-0856b2676c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad2875e-d484-4c0b-a2dd-d6ba984bd982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936e1bcf-de0e-42c1-8a08-c0bdcebfb753",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a652ad49-d5d0-4940-91c0-e2f51401670b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3db4cec1-41f5-4bfe-aa5d-b03ccb1591d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54d1d1d-47ed-43ab-a98b-0c9401f05535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48418ab7-02dd-45a1-bdf6-5f3e31d6ceee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe5017a-bd2f-4ad0-8990-3d9dc92bc95a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b5139e-c472-4dff-806b-b0bf6ea3ffbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b981f226-2302-4143-863f-f1bd8d9ee1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6435e4-6e1d-425e-9c4a-ec983a140b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fde038e-a0c5-42db-b3af-68f69b4e204f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f884b05-efa4-48ab-8c86-b3906bccd942",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fbf03e-685c-4b11-9bc9-af7f14ac2921",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "101e4e5a-62e7-4a7a-97a4-70d140320a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fd99c6-2104-478a-9354-8700d812aa37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ce2861-1360-4bf2-bebb-526dff718e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "241986c8-a578-4c54-a618-491c1ea19205",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb655f7c-556a-4f0e-b66d-bd4bae2fdb3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ff7d42e-0dea-4ec8-8de5-7d8e8480eaa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84d5c4a-b274-48b8-9092-eaa5fc53f878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515f82b4-b1b5-44a1-9168-bd2789cfa1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59efc6e4-bf43-4b9b-b701-3b7e182dfeaa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8ec891-dd1b-434f-be54-434ceeb00b1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cef8fac-cdc6-439c-8b1e-a3fe076880cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663ed5c2-a847-40c5-9f2b-ac25ef3d6ee0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fab5866-4545-425c-b31a-363b63e882b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1b2820-cc7a-4b19-95c2-e7367bf2c24a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a890fa-1afd-4405-86c0-7a9afdf03e10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f4c6f2-92d4-4f2f-87c9-6070aa893448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cd08dc-ed50-4c0c-8fe5-84ef073b295b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797cd057-88b9-4fc2-be23-e08eca1dd10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb87de7b-09f2-4638-bd45-e1dfe34f8fdf",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6892dbc-4198-4d25-a06b-269e430cbdbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72191bbc-dfb1-4e95-bf67-53d83b91eaef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36938006-ea68-4841-9d67-735c94c9a0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936f4f39-5820-4e89-9e4b-a99114769f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22585bf0-b839-4af1-990f-c36836efaab3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dada140-bb87-4716-99df-108a7ea07a2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "143e1f6d-5898-4fe8-81bd-319a3fb7d843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fba2538-c9ae-4010-ac3e-69bee8067970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130db70b-e03f-4f9b-87f2-632bfd74b08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf792055-f112-4afc-894a-4e296578df08",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcf7404-d373-4ae4-94d2-29cdf2025b4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "617ef4db-3bf3-4f62-b70a-b66459aec3a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9070c1da-b5d6-4508-83ee-7cfd442be570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5a77d9-246a-470f-8268-397ca7d2d73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ad30e4-bf8f-4890-8043-8794613256b6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e82e4cc-b447-495b-ab68-f21bf314f121",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf51cce6-80aa-4a9b-bb9c-fc518e6f6c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682b5273-e297-4535-82ce-b07214add15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e355f6d1-a4e1-43b1-a127-b151ba6feb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c78dd8d-3799-4e46-b9d4-b44f7873102c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f628777f-4050-4e85-918d-1852751c1818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b76a950d-6932-4e8b-9a0d-731966778710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4c7173-7cae-41cc-a349-25272a6bdd91",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aecf8ad5-e82a-46d3-bd52-08e5188a8b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46434319-a3d0-4c93-ae24-3dedd13e9aa2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafac89c-87aa-4a90-ae93-2bea72fe46c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6aac88f-8192-4076-a9ee-ee908ad034d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a21e054-631d-4b70-9213-02e8319ea7db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95bb8154-3929-4993-b3a4-8f1d236b3366"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1a4fc1e-9f53-427d-8d33-79651879a0fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e352c01-52e7-4e7c-b484-cda8e1329db0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f81a9a4f-3c1a-4ee2-a1dc-33f6c3886096",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9516ffb-890e-453a-8d40-96ebce150fcd"
                    }
                  }
                ]
              },
              {
                "id": "24c39012-17c2-45a6-ba3b-4d925e19c0da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ccc87e71-18a1-4045-b5dc-604d2d58024e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4451e739-d905-4671-a38a-ae0ba11f661d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "77f122ed-4662-4a83-84bf-dc57d0639425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7346eb-8817-4be4-8eb6-fa03ecdb62b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "379f7f43-d25e-4da8-9eb2-e6d089a705b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e86949d-7178-4a3b-b617-29dc0a7c8758",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "117eff34-7ca6-443c-9327-0b0c5452f5eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a934d2f-1a3c-48ef-8093-4e5bb9edd8d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b982ff6-e0f7-4d42-a56b-0b1e67224e4d"
                    }
                  }
                ]
              },
              {
                "id": "da58cf86-9a01-4608-90e5-2de14796bb72",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7560c46e-df46-46b8-b020-e162e8ea8cf0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88c4851-ca2c-4fe6-95f2-f4e5d0ce8f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "63fdb61f-bcd8-48a8-9d4d-507247eddf8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62288c7f-feab-4169-a7f2-60956461ee46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0843f8c5-fb6a-4295-b09e-95cb14d9a28b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b8706595-afc8-4409-b3ba-6bb43ce5d16f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fdb6bb1c-f99f-463e-a6b1-e0cb436109b1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c18f8872-b61a-43d9-8eb2-a8c5981d8770",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9abd0dcd-0d33-4251-af31-94f0882490d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82349cd1-226c-42a6-80dc-9e657fc66019",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85db9c28-cff2-4d2c-82c0-1078203fc9fa"
                    }
                  }
                ]
              },
              {
                "id": "e0f56ea1-4eea-46b6-85d1-1a0fab1da332",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "869a93f8-3512-48c7-b0ba-860441c7783b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f357f38f-b2b2-4c7e-803f-961800608dae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08816a94-6ca1-467b-a340-3cf603825d65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "986a8a91-cd14-4e6e-a005-68f69420da64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31266947-a0d3-42a9-9de3-abe5c9b0c55f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9890cb23-c960-4699-8f16-0768c947eae6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99e92eec-9ca6-4eef-a4be-c72ada8a18f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d008387-b6c9-4c8c-aff4-c5f7d45eabaf"
            }
          }
        ]
      },
      {
        "id": "62251ce7-00c6-4a62-b5d1-0fa99e688822",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "97411d25-9864-4faa-a38b-732b0a1787e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "35ea0dfb-d550-46b8-a7e4-0e9209a95962",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1068e54c-ad09-4eb3-bd1c-a35f7dc249c6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e7e7a6-1d5c-4d3d-aab0-a7a929963137",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "454ab752-abe2-4ef3-8ffd-b8d5f1147314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2703c054-5a2b-4ece-bb07-9940f187fd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2beac707-171d-468c-90ce-b361335f6330"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb2ab52f-0dac-43bc-bad3-05ad283cd7e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "366e4217-2aec-4fa8-816e-18a45791e0b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8de3ed7-e3bb-4013-9310-32cf6d4648b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad2521e2-a571-447f-a663-dee1f3e22d2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b91425f-0bbc-48e7-a4a7-6c76b855dd1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5cecdcdd-d7b9-49e1-a7b6-63673961e2ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a6b6774-d8af-4a0a-bdea-9009b1606905",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b80b8af-a872-4af6-80a4-dfbcd9019371"
            }
          }
        ]
      },
      {
        "id": "4a77f8b5-63b0-48fb-a32e-48476ea9a95a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7cac3c7c-d66a-482d-ab05-96da5d022b00",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f5e4d8f-ba1f-4305-bdca-4620f28b0297",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98d60a2f-9fac-4825-911e-b548ebb8b973",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9620efe-929d-45ae-b3a6-756e02804704",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dd6b918-6620-4bc6-899c-46756f59e99f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b887f4-171e-430b-9dac-b174f72986c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e145313-cbf7-4662-a697-6939c0f28ec2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53a145a6-0e7c-4f40-99d9-f50dc2510733",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05fc6872-35b5-40ed-badc-477445d02c7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cbdb44a-bd6a-4606-a866-0873c1db4a7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b6edc3c-3d62-46d5-a28a-46a4f9d43c70"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31ed1768-0e31-447a-8ed0-e482371077fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fcf0d169-7dc7-4bca-aa43-9e3f0fae6cfa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7bb83540-a79a-424d-b372-023257868dde",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ffaccdfe-31ac-447d-a85e-3c9bad1fb8ef"
            }
          }
        ]
      },
      {
        "id": "ad78a584-3f69-404f-9735-f4a7fe67cd8b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6e14c18b-6f4a-41a3-8dd5-717cef3a3319",
            "name": "Negative Testing",
            "item": [
              {
                "id": "79aaec7f-5cdb-4415-8cde-e791d34e4cc7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94183b1c-003a-42f4-a7e4-3e4217e8a774",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06803e2-22b9-4d61-aea9-263fa1aaafae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4f01390-36bc-455c-b356-9cd54fadf6d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b990912-f1f6-44d9-a9f3-b4e028b2ddaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4098ded4-c172-4459-9366-e36f1c2aec9d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54e73466-3420-43e0-b49e-e82facfa7707",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9d7f103-bd51-4383-bc94-4c4c9ade27ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21bc0d61-aca8-4cc0-94c5-de2ebdc9dc48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21020f60-044b-4d48-9e7d-838c14cc20cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e9ec1d6-e002-4901-a57c-6bf97770bf2b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8687f43d-da33-47c9-9a6a-1e43e3bb6ee1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b967c809-0977-4b46-bae0-46b07bb690fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64640908-5482-4f36-960a-fbd0c2e56087"
            }
          }
        ]
      },
      {
        "id": "57b01f40-f2a0-46ba-855e-23b8276cc6b8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86efddf4-a97a-477d-a87e-8c909a3d0dc0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a511e89-cc9f-41f0-acf4-8b415c0b5ce9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bf3c83ba-fb63-4816-abb2-1c499d6a3f5f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "697608b6-84c1-4c27-9aab-2a6263e0420e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd18abd4-8778-4a8b-b250-0fc58d6a1381",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 91.88095238095238,
      "responseMin": 4,
      "responseMax": 10557,
      "responseSd": 702.5198986860704,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1715646984688,
      "completed": 1715647016076
    },
    "executions": [
      {
        "id": "37fd2a48-d4de-4d49-9898-533c9f6f77c6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ed6f04ea-6d0f-4519-a938-d0cd616d95f5",
          "httpRequestId": "ba6d5232-aa51-40b3-8692-64f1eb9159df"
        },
        "item": {
          "id": "37fd2a48-d4de-4d49-9898-533c9f6f77c6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "53d719b7-ced7-443a-91a4-fe107d403a71",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "bccfdaf4-a932-4ee7-970f-f8f49c048741",
        "cursor": {
          "ref": "50906192-a31d-4e34-af9a-ebdeb881ffd0",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "beb1e24e-edf5-43cc-beab-6c5fb13b77bb"
        },
        "item": {
          "id": "bccfdaf4-a932-4ee7-970f-f8f49c048741",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dd7ec371-87d2-4e0e-9f53-2a948aeaae84",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "e186af68-e53b-419a-90c0-e2f12a088dc2",
        "cursor": {
          "ref": "a550cc2a-f88f-4492-a89f-dcba94e46ce4",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "50da6da4-f74d-4f21-9e6b-aa1395bcb355"
        },
        "item": {
          "id": "e186af68-e53b-419a-90c0-e2f12a088dc2",
          "name": "did_json"
        },
        "response": {
          "id": "bdaf79a5-5f85-445d-925c-b82d3b3b411c",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b37bb55-fdcd-43e3-8800-bb99f40c5861",
        "cursor": {
          "ref": "b0556826-7be8-49c6-9c07-65781e336962",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "687d03da-b429-454d-80e6-3ce17499a4d0"
        },
        "item": {
          "id": "7b37bb55-fdcd-43e3-8800-bb99f40c5861",
          "name": "did:invalid"
        },
        "response": {
          "id": "5e75ae8c-81b0-418f-a205-d845e25f0631",
          "status": "Not Found",
          "code": 404,
          "responseTime": 526,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b37bb55-fdcd-43e3-8800-bb99f40c5861",
        "cursor": {
          "ref": "b0556826-7be8-49c6-9c07-65781e336962",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "687d03da-b429-454d-80e6-3ce17499a4d0"
        },
        "item": {
          "id": "7b37bb55-fdcd-43e3-8800-bb99f40c5861",
          "name": "did:invalid"
        },
        "response": {
          "id": "5e75ae8c-81b0-418f-a205-d845e25f0631",
          "status": "Not Found",
          "code": 404,
          "responseTime": 526,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33eca1e4-f586-4107-b308-02ce96cb4a85",
        "cursor": {
          "ref": "5970567e-9026-4eba-b713-0b944ac63dcb",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ff3f61ed-ed25-457a-8265-36dfdf7eacdb"
        },
        "item": {
          "id": "33eca1e4-f586-4107-b308-02ce96cb4a85",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b04deb59-a3cb-4a7e-a4bc-b887e8d9121e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 19,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e478839a-380f-45f6-b5cf-549942987bfd",
        "cursor": {
          "ref": "ed8ffaf2-474a-4841-9685-6e976a30617a",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e36ce1d2-1967-4181-bf31-47a55e4965a9"
        },
        "item": {
          "id": "e478839a-380f-45f6-b5cf-549942987bfd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3e4b56e9-05e3-47ea-b3a1-c1df7cdaa78b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dacccda-ce98-47b6-9ff4-9e770c575f04",
        "cursor": {
          "ref": "27719c60-f356-40b1-bb3e-075887dcb2f0",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f1389851-62ed-48ce-b521-857fa944fc29"
        },
        "item": {
          "id": "2dacccda-ce98-47b6-9ff4-9e770c575f04",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b6fc2a36-a0b2-4878-8e3a-72a5f59e80bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9101157-2568-40cc-8871-70a68195c676",
        "cursor": {
          "ref": "797235e9-460c-4d41-8e74-047267a90efa",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e22128d0-67c1-4325-981b-288c1eab7fea"
        },
        "item": {
          "id": "e9101157-2568-40cc-8871-70a68195c676",
          "name": "identifiers"
        },
        "response": {
          "id": "8db2e223-fc89-442d-86e7-20f7e4e59ff4",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f875a1f0-9be5-47ca-a3ce-47884d19f248",
        "cursor": {
          "ref": "70d1f3ac-d777-45cb-9355-8448723c88f7",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8e0a7d0a-5452-4422-8732-66f44fb24339"
        },
        "item": {
          "id": "f875a1f0-9be5-47ca-a3ce-47884d19f248",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "78289b5b-0b76-47d8-835d-d7b717ba71cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ae31ed-0f54-47b8-87cc-24e961ffaaee",
        "cursor": {
          "ref": "c6552047-4f4a-4234-9ab0-28dc030a737e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cf359c38-0081-42da-8d18-c1bd815be89d"
        },
        "item": {
          "id": "58ae31ed-0f54-47b8-87cc-24e961ffaaee",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cbae1f26-6ac1-4f84-bddc-3d9792e354ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0654d6e9-f0fd-413b-a40d-7521ffc83776",
        "cursor": {
          "ref": "f3dcc141-1d62-40a5-a5f0-c021120a2840",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ffa87f45-52ce-43be-a0bb-9ac126111c49"
        },
        "item": {
          "id": "0654d6e9-f0fd-413b-a40d-7521ffc83776",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "59102668-e274-4ee8-9f44-5cb45bcd7972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af54efc8-3190-4d18-b5cc-a1472f989868",
        "cursor": {
          "ref": "87f1557d-5401-47f0-883e-5c1aca2b66ee",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "79029901-8bf5-4493-b72e-11a2ad4d7436"
        },
        "item": {
          "id": "af54efc8-3190-4d18-b5cc-a1472f989868",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "61f9d594-a6c0-4bbc-8e0d-741fa5229480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fe2351-0e1a-4353-a083-f15e576ae63e",
        "cursor": {
          "ref": "03c755de-9f4e-4270-a706-9b2c26a4b481",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e8cb88ce-4d51-49d1-9bf8-2c99a58cdf8f"
        },
        "item": {
          "id": "b2fe2351-0e1a-4353-a083-f15e576ae63e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c937cc46-6af9-4b0c-a227-216dde821059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58e7259-f543-4fd7-b0dc-ef8c45295919",
        "cursor": {
          "ref": "d762b005-ffc9-4b54-b1c1-b256962a296f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "95e35e79-828f-477d-a5e4-c75f5e65cd6c"
        },
        "item": {
          "id": "b58e7259-f543-4fd7-b0dc-ef8c45295919",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "26e9f4e4-41d0-4ee4-9072-3688cb6381e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e9b7a1-48fb-4835-bb23-c95315f8a110",
        "cursor": {
          "ref": "998893cb-16d2-413e-899e-584d01beb09e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ecfca251-f720-4a3f-af92-2fba30f28c9c"
        },
        "item": {
          "id": "a7e9b7a1-48fb-4835-bb23-c95315f8a110",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6a368dd3-a67c-45ea-8912-7809e0e54536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287ddd67-50e5-43d5-9bac-cbb4435765d6",
        "cursor": {
          "ref": "6a1c60fb-ab8d-42c9-94af-8717928ca02f",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1e25b44a-9b21-4540-a093-9a13fb3da264"
        },
        "item": {
          "id": "287ddd67-50e5-43d5-9bac-cbb4435765d6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f801c248-f328-40b2-a1bd-306a063b490f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a13f1fb-c88e-456b-b92a-913718866cb9",
        "cursor": {
          "ref": "300276ba-abe8-457c-9e63-226b7ba97a8e",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1460b300-4481-449c-b30a-5e34fdfa8b54"
        },
        "item": {
          "id": "9a13f1fb-c88e-456b-b92a-913718866cb9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8089775e-b5ad-4eb8-bed1-dfe19241529d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de672d7-964c-4586-a87b-ee707d7d3839",
        "cursor": {
          "ref": "d38aef0b-cb8d-4f1d-b99d-7816000d5658",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "12cb2b0c-370d-4e27-bdfa-2feff2e59a76"
        },
        "item": {
          "id": "7de672d7-964c-4586-a87b-ee707d7d3839",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1e3ffd1a-1b21-4637-96eb-38ab331e5836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a073f3fa-57f3-41ad-8b8a-6792e942bab8",
        "cursor": {
          "ref": "0cfd3c3a-31cc-4e69-8909-32e1036a4ba5",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "32ae939f-46e4-44ab-a6b4-c40f9754eb55"
        },
        "item": {
          "id": "a073f3fa-57f3-41ad-8b8a-6792e942bab8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "74e09d28-ebcf-40c0-b215-2d18cf2a6610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567d6ad4-ff2b-43a8-b301-986d5d0c8ecc",
        "cursor": {
          "ref": "87233203-5c83-4062-82dd-75c23d5c4a5a",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "51a65470-288f-43c9-9b07-b6f5885fbd32"
        },
        "item": {
          "id": "567d6ad4-ff2b-43a8-b301-986d5d0c8ecc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "04e1b452-a14a-4bfa-af09-44aca66b1ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c5c766-4c60-43e1-8e93-fbf7fdf5fc1d",
        "cursor": {
          "ref": "c26f05f3-53e5-41cb-a410-205ea7931a8e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "665f4d40-d292-4fc2-bb1b-d6e1c0562812"
        },
        "item": {
          "id": "50c5c766-4c60-43e1-8e93-fbf7fdf5fc1d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "480e7a5f-9b5d-4dde-9c6d-f82114e7e30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdef2668-a7fd-4e94-bb1b-bd6773133fcf",
        "cursor": {
          "ref": "bc5dda99-04b4-4d26-9550-f7f37771be72",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5ea60979-a9ae-4df2-acbe-1cd26bed84b0"
        },
        "item": {
          "id": "fdef2668-a7fd-4e94-bb1b-bd6773133fcf",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1c88fba1-4122-4f72-8e24-f5ff5447fdcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb7e54b-c8df-4c28-a4c8-4a1e97508da4",
        "cursor": {
          "ref": "239d49cd-bd28-4af2-a7db-cedaaf82788f",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2351c2fc-9bad-4c8b-b7a3-cef170c74cfc"
        },
        "item": {
          "id": "bbb7e54b-c8df-4c28-a4c8-4a1e97508da4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0039f25e-9bf2-4c44-803d-d938b5b6840d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ceaeb7-9ee6-4910-bbc9-a2d9c99a4b48",
        "cursor": {
          "ref": "e5815b8c-e9fd-40f0-971b-c5e57f86751c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "db0cf4be-845d-4bba-ba64-f96feb921634"
        },
        "item": {
          "id": "c6ceaeb7-9ee6-4910-bbc9-a2d9c99a4b48",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c8060605-4fc9-4521-8f81-437934abdfc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1074ce1-5d8d-436c-9443-43b7ff1830b7",
        "cursor": {
          "ref": "9d075901-8673-4736-a78d-772f0dbafb1d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "47193152-c671-4248-a9f7-fe10b47c1d12"
        },
        "item": {
          "id": "a1074ce1-5d8d-436c-9443-43b7ff1830b7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "644aaadc-fc10-4161-8205-7363a4b7f9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abe6eeb-f13d-4955-84dd-bf0ecbaa6525",
        "cursor": {
          "ref": "a2018ff5-bd67-49ca-81e6-bcca2758cc18",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "166e4d82-7a20-4bf3-80d7-c54225480de9"
        },
        "item": {
          "id": "2abe6eeb-f13d-4955-84dd-bf0ecbaa6525",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "31b23d0a-77fd-486f-8266-982ec0f2f083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e208c75c-90e2-4de0-85db-332e484686a0",
        "cursor": {
          "ref": "05d5ae21-5719-4108-a82e-6c6988e0c1c5",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "629e0efa-ec88-4272-98c5-2898b237d6c2"
        },
        "item": {
          "id": "e208c75c-90e2-4de0-85db-332e484686a0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "31f146a1-a634-42e9-b95f-055f7359c800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27a60fb-f04d-455b-ae77-f47828108490",
        "cursor": {
          "ref": "1a43d15e-50a3-4a81-ba76-53239a7e7bc3",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d9f7a528-e7dd-4b03-aa6d-e8153ff37b15"
        },
        "item": {
          "id": "c27a60fb-f04d-455b-ae77-f47828108490",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "19815ba3-89e5-4ec7-ae51-edf68db9890d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f024ea1b-e3c4-478e-bfb7-dd2a49551295",
        "cursor": {
          "ref": "08a07b3f-1ea0-412b-ad5a-43df5145cb2e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0df15926-ff0b-4934-a271-e6c75f885cde"
        },
        "item": {
          "id": "f024ea1b-e3c4-478e-bfb7-dd2a49551295",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "26f3d40f-b4c3-4b89-ac48-596c812f2381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088aa8cc-34f5-4138-b661-412cd9410523",
        "cursor": {
          "ref": "fd86d5e8-7480-41c0-bb8c-9cffd9846ade",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "18ff476c-ad78-4e80-a7a2-2729e0ca56c4"
        },
        "item": {
          "id": "088aa8cc-34f5-4138-b661-412cd9410523",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "afdf5360-3adb-4f08-b4e9-bc2985cfe480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef69725-77c7-4180-9b1c-b7392fac204e",
        "cursor": {
          "ref": "bf9f6f40-0862-4a36-950c-f0dbd22df797",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "80da8778-6599-4133-bacb-eca0d32c67fd"
        },
        "item": {
          "id": "5ef69725-77c7-4180-9b1c-b7392fac204e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "981c8c2a-9447-4b58-99df-beb34a32b16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46be7784-2bd3-4666-b0f8-4a7c40927b52",
        "cursor": {
          "ref": "e054ae91-229e-45f8-9f74-ab3cbaa6a328",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1ceeb853-4997-4f7e-afb2-4f77cc6fafc0"
        },
        "item": {
          "id": "46be7784-2bd3-4666-b0f8-4a7c40927b52",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a3fc11bd-09f8-45bf-8949-3decf0301e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fdccc7-bda6-4b30-bb9f-c62262e069b6",
        "cursor": {
          "ref": "2930044d-00b3-478d-8d4c-032eb6317075",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "afc12174-43b6-41ac-a070-e5b1b24a1dc0"
        },
        "item": {
          "id": "71fdccc7-bda6-4b30-bb9f-c62262e069b6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b9223eb6-6a23-4a81-a0b3-b1695e15cdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb91b822-0b97-42c4-a3d5-bb64eaaccd4b",
        "cursor": {
          "ref": "3655712b-f82a-4d2d-8e54-76bff7a56d0b",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a7c28070-db83-4c4e-82d5-a6ea84e2fb8a"
        },
        "item": {
          "id": "eb91b822-0b97-42c4-a3d5-bb64eaaccd4b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "53b8d47e-c292-4d10-89bc-6f2a5f5dfb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4262ba5c-e908-4989-b138-2b8b67def3e8",
        "cursor": {
          "ref": "ec45829d-ff0d-458c-b549-2c45abdb5bdf",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "998d2398-78f9-4b52-b35a-dc074215e9cd"
        },
        "item": {
          "id": "4262ba5c-e908-4989-b138-2b8b67def3e8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5ddea4fc-c248-4c31-af2d-580323254bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db22cad7-b1c9-43ca-aa8f-6284e84a5897",
        "cursor": {
          "ref": "47107994-8c4e-4378-ab51-1118c32146ee",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "22c94ea5-8873-46fb-82e0-e2eb2f73aa51"
        },
        "item": {
          "id": "db22cad7-b1c9-43ca-aa8f-6284e84a5897",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ac0630a3-1601-4f9d-9214-12f6fcb843dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4871bd5-40c3-4177-a6b3-2d3f43fdfc9a",
        "cursor": {
          "ref": "c5ee5a4c-ba13-487f-a723-0e95dfc26b8b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "87e49ceb-75d7-420e-a272-caf836a74ecb"
        },
        "item": {
          "id": "b4871bd5-40c3-4177-a6b3-2d3f43fdfc9a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e19c122b-0826-4d84-8e5e-fd57f8294968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6da116d-e35d-438f-901e-c0593c8c2d1a",
        "cursor": {
          "ref": "e6cd2aac-d85d-40b3-9287-d3ec89c7d6d4",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f3f90d1c-6e60-4950-a538-535c7a38673c"
        },
        "item": {
          "id": "b6da116d-e35d-438f-901e-c0593c8c2d1a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2921b4c8-fdd2-460c-ad65-491312e08546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753b97ec-e2cd-45f2-a7a3-764ce635c40f",
        "cursor": {
          "ref": "ede9b5cc-7e96-43ce-b0f8-21e96377b313",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9d23a854-ca94-4a94-9b6d-d866b44b3675"
        },
        "item": {
          "id": "753b97ec-e2cd-45f2-a7a3-764ce635c40f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ec1e917c-3be7-4ecd-ba9e-aef2c45c6046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf4bdc5-48c8-4a70-9837-83206f20337d",
        "cursor": {
          "ref": "9422d063-5f7d-41ca-9987-43f8ed52a866",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8b1c7947-6181-46eb-aa33-8d810f5caa0c"
        },
        "item": {
          "id": "0cf4bdc5-48c8-4a70-9837-83206f20337d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d5a3249c-6edc-4b22-8477-249a3fc8e6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4550ec-b792-4df5-b945-6b2e6c3103b6",
        "cursor": {
          "ref": "663617c5-4b0c-4a8f-9232-4dfe7eaa3548",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0b7114f2-a094-47dd-953e-78a75b15c9a7"
        },
        "item": {
          "id": "bc4550ec-b792-4df5-b945-6b2e6c3103b6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b3a67059-43ab-4191-a714-ebd53110e59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45b83d7-f2aa-4947-9fe6-19967380f6af",
        "cursor": {
          "ref": "b8708619-ade5-4f8a-b645-8491b56378bf",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "44b1ab78-247f-431e-a58f-53df432c795b"
        },
        "item": {
          "id": "d45b83d7-f2aa-4947-9fe6-19967380f6af",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "99b0c2dc-b7e1-4fd2-a763-3f5d8844cc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09099f67-19fa-4b04-91d6-8004e5e530a0",
        "cursor": {
          "ref": "51b4b913-3a44-4bba-a422-c60b4a00a61d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bb790ef9-148b-436a-9c17-596afc2a80a9"
        },
        "item": {
          "id": "09099f67-19fa-4b04-91d6-8004e5e530a0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f46b9952-c182-4cf5-aa37-62af2604928e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a9d352-4795-4276-a8b1-084318a17235",
        "cursor": {
          "ref": "c79427c8-29c7-4a74-807a-873f9880c2b4",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b7894147-5982-4b95-a74d-c9d2ab78365d"
        },
        "item": {
          "id": "08a9d352-4795-4276-a8b1-084318a17235",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "605f722b-c62a-4684-b703-8b90904172e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e900d6-8ad6-4063-8276-167c93c22161",
        "cursor": {
          "ref": "038209f7-582d-479f-ad47-ccfb53ce8662",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "436e35dd-267b-41e8-a832-5d613fb6386b"
        },
        "item": {
          "id": "20e900d6-8ad6-4063-8276-167c93c22161",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7e0fd2e8-b77c-4142-ab84-17c36b76370b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1e02fd-3725-41ef-ad3a-ae5f00801dae",
        "cursor": {
          "ref": "d97a296b-75f9-41ad-aa8c-5eb987ea1d9b",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "28d05f21-a3c2-4105-9bc7-e8056e07bc29"
        },
        "item": {
          "id": "9e1e02fd-3725-41ef-ad3a-ae5f00801dae",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e6f60659-0fa1-40cc-b832-455aa5de001e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b65c2f-caa9-49bf-bd00-3992e0c129b9",
        "cursor": {
          "ref": "e43bafd9-22c1-4230-9344-65ca1b370f38",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "638b2956-4ef8-4c24-8100-e2bba8b104e6"
        },
        "item": {
          "id": "87b65c2f-caa9-49bf-bd00-3992e0c129b9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "915d003b-91f3-49f0-9562-ea2e83fb9ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c9bbb6-3bc8-4c9c-accc-a62ddeac53b1",
        "cursor": {
          "ref": "249fc26b-dcba-41f3-930e-0a30883b362c",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ec14e3d3-3596-43b2-9b1d-f1b399ea2a8e"
        },
        "item": {
          "id": "c3c9bbb6-3bc8-4c9c-accc-a62ddeac53b1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ad582a7e-e871-48a8-b4ea-c93924029701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87568765-edfe-46c9-a014-6c5009005f05",
        "cursor": {
          "ref": "8511249b-c874-414a-b914-fd12a17207d5",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "cd52376c-9c85-4c3c-8cd8-fef33cdcba17"
        },
        "item": {
          "id": "87568765-edfe-46c9-a014-6c5009005f05",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "dc739730-bf7f-4788-950c-b94e5db348b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34ec4d0-1ab4-4775-99fc-14247e9a31c3",
        "cursor": {
          "ref": "04a63fa7-ba91-43fa-9b69-bb21f6956c7b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e7c1b226-715f-48eb-8dce-68c7c34f0501"
        },
        "item": {
          "id": "a34ec4d0-1ab4-4775-99fc-14247e9a31c3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4415d136-ae3a-4e9b-ae37-0b025913166b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70efd7a-0660-42e3-ba66-8a7a8718368f",
        "cursor": {
          "ref": "dac11333-5f34-4a4a-a631-bd56c7e37deb",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b46a3970-147b-433d-831c-f7c3c498bd50"
        },
        "item": {
          "id": "c70efd7a-0660-42e3-ba66-8a7a8718368f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8eb3bf5e-d881-46a1-904b-6858fa3275b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b00d58-4f98-4abb-a87f-1fb9f7e6a3d4",
        "cursor": {
          "ref": "3358624b-a16d-4a09-bcc7-34563e0045e4",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b8e5790b-3e04-4e44-85be-810cbd04ca45"
        },
        "item": {
          "id": "13b00d58-4f98-4abb-a87f-1fb9f7e6a3d4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b521f0f7-db0b-40a2-ba90-9bb31d2bcedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14920029-5367-41de-95db-d9858a5571c3",
        "cursor": {
          "ref": "c2c283b6-e077-44c9-8abf-70085b6063e4",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d39425e0-df87-43bd-b5bb-d6088a386810"
        },
        "item": {
          "id": "14920029-5367-41de-95db-d9858a5571c3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d9cf6988-ad1b-473e-91d3-26629642c3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82c80cf-a472-4a28-af28-7488e4f14dcf",
        "cursor": {
          "ref": "4ef5760d-3980-44ef-984e-189757656ffb",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3e5638c8-0bef-4902-a150-303ed4fb59c0"
        },
        "item": {
          "id": "d82c80cf-a472-4a28-af28-7488e4f14dcf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1e90a45d-d439-4f89-8cb6-d1f3a5de9190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d19f86-d1d3-4e8a-961b-1ad76fdda49c",
        "cursor": {
          "ref": "21d38ec3-197d-44d7-a382-ea53b3d20a3e",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ed209d13-7169-4e2d-8c58-b10cab93e946"
        },
        "item": {
          "id": "b3d19f86-d1d3-4e8a-961b-1ad76fdda49c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6938f5a2-2fa0-4b6d-9093-f4a0e398731b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cb1ef3-fadf-4e38-8fe6-b77840b39e36",
        "cursor": {
          "ref": "77d82fd5-5cc4-4cce-8cca-c37ad448a95c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f6759f8f-4037-4c04-8fd7-c89e3545ec6d"
        },
        "item": {
          "id": "08cb1ef3-fadf-4e38-8fe6-b77840b39e36",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "562b475d-0eb5-4a7f-9684-b34fbdf1fe61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978fea20-53ee-48e3-8eb6-2da3d327b0a5",
        "cursor": {
          "ref": "c1a9f197-481f-4264-bc05-1e40919cdb27",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e0439b72-457d-4753-b922-c636f7d23c2c"
        },
        "item": {
          "id": "978fea20-53ee-48e3-8eb6-2da3d327b0a5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2cf28ef5-f474-4b12-95b1-eca90d811966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54a5c61-585e-4def-aff8-aaab7f997df9",
        "cursor": {
          "ref": "5725844b-5b64-416a-b697-9bc892030cea",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "40f3db3f-0db8-44f6-b328-b18e62fe62c4"
        },
        "item": {
          "id": "a54a5c61-585e-4def-aff8-aaab7f997df9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "08711d0c-af73-46ee-b561-fe66bed01308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841bcfd6-a395-4bc9-9cdb-131fcf9ae938",
        "cursor": {
          "ref": "32781f7e-628e-4022-8360-6ab0fb1c63ff",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "10ea799e-e760-449f-820c-516cde704050"
        },
        "item": {
          "id": "841bcfd6-a395-4bc9-9cdb-131fcf9ae938",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c79f5490-d1be-4762-b03c-844593da250a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b41cbb1-cf56-485a-af21-123cdf03f6ce",
        "cursor": {
          "ref": "99551796-007a-4bfe-8d74-294d13608484",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "010b529c-8fbd-4441-9ac5-3d67cfd5c14b"
        },
        "item": {
          "id": "9b41cbb1-cf56-485a-af21-123cdf03f6ce",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1d560f3e-bda7-4837-b941-1e97d1393bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f7ff77-4cf6-4fbf-95ba-5d0d0cd2388e",
        "cursor": {
          "ref": "e1439407-c979-4f7f-b732-969469c64197",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "bb260464-e70a-4645-b74a-00658cda9ba3"
        },
        "item": {
          "id": "c0f7ff77-4cf6-4fbf-95ba-5d0d0cd2388e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9a7532a9-4343-4164-836d-7cb5412a4804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597a322e-c957-42b0-a440-b611cc53b146",
        "cursor": {
          "ref": "9a753a7e-198c-4116-91cd-539c263dd898",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ae0842ee-a3c8-452b-a50d-62ebae36b134"
        },
        "item": {
          "id": "597a322e-c957-42b0-a440-b611cc53b146",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "788859cf-4275-46a5-8c44-0c3eac9053ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09214be1-9ee6-4dd2-ad37-e91daf84844c",
        "cursor": {
          "ref": "be76feab-83ea-4843-9ce7-2fe3222f5af2",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b1d5c5a1-3855-4081-a380-46f1a7798463"
        },
        "item": {
          "id": "09214be1-9ee6-4dd2-ad37-e91daf84844c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f3c6d790-675c-437e-9c35-b17f222dd9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27da48ab-300f-4a82-915b-74967d6d9431",
        "cursor": {
          "ref": "1ec8d256-1b9f-409a-8306-ab55ce85b8a1",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1177b0a9-e9b1-4603-99bf-5ddefd629dfa"
        },
        "item": {
          "id": "27da48ab-300f-4a82-915b-74967d6d9431",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7eeb6802-9966-4fcd-a776-d408e4263076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf7772d-b07b-4045-aa34-d493b04f6006",
        "cursor": {
          "ref": "6cf65644-64fa-43d9-adcc-3bdbc78e2aa2",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8627b3a1-e696-4257-ac48-6b875970201c"
        },
        "item": {
          "id": "bbf7772d-b07b-4045-aa34-d493b04f6006",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3d07ed1f-8a38-4089-948b-1b23a4323abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8fcccc-34f5-4f3d-9858-519594e0fb57",
        "cursor": {
          "ref": "49ef9a3f-1e92-49f3-93f4-7e55656a98fb",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cffc14ae-20aa-4937-a672-30406965d8a3"
        },
        "item": {
          "id": "cd8fcccc-34f5-4f3d-9858-519594e0fb57",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b9378b69-5d0e-4572-995b-733327a05a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f822571b-7005-4b2e-b70e-e23ff26c9e05",
        "cursor": {
          "ref": "5185f46b-504c-4d2e-b5a8-2144c3ef869d",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "82fe2286-b2bc-46e3-bbcf-065f41b662d0"
        },
        "item": {
          "id": "f822571b-7005-4b2e-b70e-e23ff26c9e05",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "24071b0d-0579-4d91-93a2-a5a14e11e6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca44713-387b-4afc-95b5-9a7cb999ab77",
        "cursor": {
          "ref": "6925f0c5-d2d1-404e-9f73-423fbcc5a28a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "dcba7ba7-005b-41b8-865a-7dc32a26209f"
        },
        "item": {
          "id": "2ca44713-387b-4afc-95b5-9a7cb999ab77",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2e1c3c1f-d27d-4d4a-bedb-6aceeb06d811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39f5346-da10-4610-8d48-4ed4765cc291",
        "cursor": {
          "ref": "239867c2-dba5-4a92-913f-81425018f595",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7da77b4e-c7b8-4316-be96-708cb7857f4f"
        },
        "item": {
          "id": "d39f5346-da10-4610-8d48-4ed4765cc291",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "37949bb3-5da9-48dc-b6b9-a41aedc5403c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef369f4-a566-40d3-a381-a778792f3261",
        "cursor": {
          "ref": "14c9003d-8217-4af4-bd7c-684f407ff858",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "89b0d6bc-8cb6-44af-9368-434fb62677a5"
        },
        "item": {
          "id": "eef369f4-a566-40d3-a381-a778792f3261",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7e58bcc8-59e5-417c-916e-47b5f4e84686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9afc9f-cf0c-4d37-95d5-22d64ca4418a",
        "cursor": {
          "ref": "8ecd062d-31c6-49f3-9bf2-0633b8c87e2a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "02f27009-ffb4-48b6-9a3f-7d5955e819ee"
        },
        "item": {
          "id": "0b9afc9f-cf0c-4d37-95d5-22d64ca4418a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fcf4c857-da73-44dc-97f6-791d5a60b5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddf52cd-49d4-4b39-8935-f59318442f3f",
        "cursor": {
          "ref": "55252a20-2615-406a-af3d-1e9eed524f57",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8d4e229a-f9f1-4943-ab67-af642d7ae6c6"
        },
        "item": {
          "id": "3ddf52cd-49d4-4b39-8935-f59318442f3f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b20c75bf-d355-4093-9918-9a41db2e008f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2293436-1e5e-4413-9c52-b7e06594e15a",
        "cursor": {
          "ref": "e6ec7670-97ec-4cae-85ff-5791f2d985c9",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4ff26498-a607-417d-8243-c7f35a50fb5d"
        },
        "item": {
          "id": "c2293436-1e5e-4413-9c52-b7e06594e15a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9a46f874-3873-4a8d-b97e-2d2481ec3e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40032e4b-77e3-4609-a42f-b1ec17efd20b",
        "cursor": {
          "ref": "95900c00-0a8b-44ff-803e-532824886d36",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bad51d58-6836-4685-8713-14284f26f4e9"
        },
        "item": {
          "id": "40032e4b-77e3-4609-a42f-b1ec17efd20b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ac60f7fb-ddc3-42d2-898c-2c54140f077e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851f5063-3c23-4a8e-9dfb-6400b7b16d38",
        "cursor": {
          "ref": "a58266ea-9c4c-4e51-be4f-29939660c070",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2853b08b-6702-4661-b3ec-97a696c515f4"
        },
        "item": {
          "id": "851f5063-3c23-4a8e-9dfb-6400b7b16d38",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "03e897d3-e9df-4df3-8aea-36ff22c88975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2c4224-f20a-4b64-9c45-5164415eae94",
        "cursor": {
          "ref": "377c34ca-7267-46f2-a355-0ad46f768735",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "07f37898-47fc-41ac-ac5d-a880d5d81e13"
        },
        "item": {
          "id": "2d2c4224-f20a-4b64-9c45-5164415eae94",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1bd37698-323a-4713-b3cb-a7b1779ebb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a50f37-d4d1-4306-9ab1-7c6c1a97023e",
        "cursor": {
          "ref": "f298da1b-42ee-4033-b1d4-6caec28aee8e",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a362e524-b092-4535-a2c3-584fc2d96149"
        },
        "item": {
          "id": "60a50f37-d4d1-4306-9ab1-7c6c1a97023e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c9af4291-4753-4585-8415-c06877545ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043810be-bae1-4dac-86d2-95abf14bdf52",
        "cursor": {
          "ref": "f93e7bec-c737-4c7a-90e8-8356ea5ca39c",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "33def475-1125-4a26-807d-d04e34f46fef"
        },
        "item": {
          "id": "043810be-bae1-4dac-86d2-95abf14bdf52",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "eb5b8800-99a5-4957-9952-acca526e4ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490c644d-4e86-4c6a-b7bf-5a83506fb929",
        "cursor": {
          "ref": "2115da46-5992-4223-889e-4ff01d5df1f0",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "24888c26-1e53-4dc0-81bc-4010feadfb96"
        },
        "item": {
          "id": "490c644d-4e86-4c6a-b7bf-5a83506fb929",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b79ffd04-7088-46b2-a6c9-7b0c81b57f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55828d4f-25c3-4136-9f32-29c36687c243",
        "cursor": {
          "ref": "e4b55896-54cc-4caf-bb89-3ff88cf8f3c9",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b27b682f-b8c9-4069-8f42-f5e40f26c305"
        },
        "item": {
          "id": "55828d4f-25c3-4136-9f32-29c36687c243",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d4ba88af-24d7-47e9-a96f-64d909e5054b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9807563-9a8c-48ab-85bc-94e7910662ab",
        "cursor": {
          "ref": "8482c066-ac4f-4af1-a0fc-c6e5c1e93f5a",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b510b93a-eeeb-41ed-a1d7-96ae01c9040a"
        },
        "item": {
          "id": "f9807563-9a8c-48ab-85bc-94e7910662ab",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6ce415c5-a56b-4583-ad93-944d7d6c84bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfad8d18-a2b4-4dc7-af59-1e45aa4a52c9",
        "cursor": {
          "ref": "d3fa3191-9379-4205-9ba8-f6d9f04203c7",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8affac0c-e69b-421f-8153-696a5931d396"
        },
        "item": {
          "id": "bfad8d18-a2b4-4dc7-af59-1e45aa4a52c9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ff15ac71-fa76-4a97-89ca-94299e800b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450e3142-abdc-4107-8701-7465f87df901",
        "cursor": {
          "ref": "1254d8ae-d486-4806-ad87-1922662ebd83",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "84f4c26e-e3f8-4136-ae39-a301b9461921"
        },
        "item": {
          "id": "450e3142-abdc-4107-8701-7465f87df901",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "39c3e2ee-c555-4428-986e-ba5886e591a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7a2ddb-dd16-4ae2-874c-5a970925ae2d",
        "cursor": {
          "ref": "1a2b7f06-4965-4057-a835-792f95437765",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "750d4350-8b12-45b1-a60d-736f7895a005"
        },
        "item": {
          "id": "ba7a2ddb-dd16-4ae2-874c-5a970925ae2d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f22c29e6-cfad-4be3-bb8c-383cc5cf1d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc5e958-467a-4b53-a354-edd9cd49d69e",
        "cursor": {
          "ref": "d748908d-f634-4064-afea-1e98907ba953",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d73e821c-57da-49cb-ba19-3510b8c9354f"
        },
        "item": {
          "id": "6fc5e958-467a-4b53-a354-edd9cd49d69e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4b4e6b8a-2ed5-4f33-bee8-59850efb600a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a755493-a4a7-4721-9087-81e577fc5f1d",
        "cursor": {
          "ref": "fdcd5ad9-69c1-4cf8-ba0f-ddc53595f9c5",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3c779380-39a2-45c9-b7ae-e7473781bbf1"
        },
        "item": {
          "id": "8a755493-a4a7-4721-9087-81e577fc5f1d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2bac5bdf-1524-4870-8907-6c1647b7a693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bf4033-9fa9-4147-bbab-51dfa5f73e18",
        "cursor": {
          "ref": "0c2239e7-1764-4f80-96b0-dfee5ce2a6ab",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "81a4d058-29a4-4b53-92bf-b01f65a08261"
        },
        "item": {
          "id": "e1bf4033-9fa9-4147-bbab-51dfa5f73e18",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e690b55d-0709-48fe-9f68-411c6eb564b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498a3be0-1657-4425-ba51-c41ade0e4985",
        "cursor": {
          "ref": "239cc77a-878d-438e-ac6e-011a44905f99",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "08953ae5-dec4-435e-b95c-805c35442789"
        },
        "item": {
          "id": "498a3be0-1657-4425-ba51-c41ade0e4985",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d9ea54fe-c565-4780-8702-e5e0b0bfd653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a548616-5ffb-418b-b8be-69042f33fbc9",
        "cursor": {
          "ref": "412d19fc-32e4-4db3-86aa-a5462de29fc4",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bd529009-4aa4-45fc-9a59-2d61b8e06f7e"
        },
        "item": {
          "id": "2a548616-5ffb-418b-b8be-69042f33fbc9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6edc7080-d7e9-42a1-9d0f-2ec3b06674b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d16a4ca-1a94-42f2-9bf0-50c98087ebdf",
        "cursor": {
          "ref": "c6f59b68-2038-46c0-a3d0-16e5f708a7e3",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "13e93d20-3f35-4a67-977c-aa71f0f2adac"
        },
        "item": {
          "id": "4d16a4ca-1a94-42f2-9bf0-50c98087ebdf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "54400b8f-f8f7-4249-8766-1135a76947e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1926d0-77dc-4c40-bdf6-33d84dfb4429",
        "cursor": {
          "ref": "09557284-677b-485b-8c50-0c0f87b00719",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "47814900-d55e-4c7c-a665-09cd2acfd9e3"
        },
        "item": {
          "id": "3e1926d0-77dc-4c40-bdf6-33d84dfb4429",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "da6b027d-8a38-41ce-917e-c1ece5ced6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f16265-6695-4bd0-bb3f-d3a67f8d3a2a",
        "cursor": {
          "ref": "ff08876c-0f76-46da-8531-d235fbc5cd5f",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "365b2342-1c09-4ac7-8978-b1c476e18111"
        },
        "item": {
          "id": "e4f16265-6695-4bd0-bb3f-d3a67f8d3a2a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c8f2b1c8-10e3-4a43-9c77-ce6a050a10a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14272bdd-7c23-433c-8c69-604b273b6c23",
        "cursor": {
          "ref": "3b35693e-d95d-4952-b2ed-e38aacc62a48",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "177aee48-80aa-4ac2-8a91-01f84b8489ea"
        },
        "item": {
          "id": "14272bdd-7c23-433c-8c69-604b273b6c23",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2e096b98-8239-4c46-85c0-810d227c98d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4e20ca-5a3d-477c-8ddb-a54bdfe77d8c",
        "cursor": {
          "ref": "65a5af56-0054-4f8d-94b9-799b30af2678",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2c40e8d6-e8b4-4a24-a160-2eccd2c04b46"
        },
        "item": {
          "id": "8d4e20ca-5a3d-477c-8ddb-a54bdfe77d8c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "76f76f1d-e2b7-4f8d-9f9c-25e4408c3e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a085302-1077-479d-bae0-41cc6ae8bc96",
        "cursor": {
          "ref": "0a6ef043-1889-404d-aadc-dad128ed6842",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ac3b67bc-4f56-48d5-9853-044cdb9e45a6"
        },
        "item": {
          "id": "6a085302-1077-479d-bae0-41cc6ae8bc96",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0f11d6a9-b72e-43b4-a07b-740b57ee903e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee050333-bceb-4c7f-b52f-9d7685647789",
        "cursor": {
          "ref": "1aa99a81-d3a1-41db-b7ef-68fcd7dafaed",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c28e2511-4143-4089-b480-525746144032"
        },
        "item": {
          "id": "ee050333-bceb-4c7f-b52f-9d7685647789",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4198b078-c09b-47f1-b1a0-1e16c13498ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba327db-bafd-4562-b141-a8e51ab86f5b",
        "cursor": {
          "ref": "394be18a-0aee-4df9-aebc-12c835b2023b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cc192462-aea0-451b-9112-af965ccf1215"
        },
        "item": {
          "id": "2ba327db-bafd-4562-b141-a8e51ab86f5b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "958f653a-abbc-4f96-af07-bf8e6312a19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43076fab-f129-4b94-a767-5af91f8174ef",
        "cursor": {
          "ref": "611e909f-e474-47d3-922e-c7a0d786ce4a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "dba6ca19-8b01-4eb4-9742-c80bff0cc5fa"
        },
        "item": {
          "id": "43076fab-f129-4b94-a767-5af91f8174ef",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0ca8d081-5022-4099-99b8-4e7e3fa5692e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2406562-f607-4a41-b319-f0319adb6341",
        "cursor": {
          "ref": "00380dd4-6eb9-49f9-9646-e9b64ffe3032",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f7c34373-ced3-4d66-a090-39c0db096f91"
        },
        "item": {
          "id": "c2406562-f607-4a41-b319-f0319adb6341",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8f2ecd6c-0dc5-413b-ad3b-d013a0214229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dba6c10-d5a0-459d-9427-5503bb126d2c",
        "cursor": {
          "ref": "e59c6015-9d23-4b12-ae2c-d7f2d94fb32b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "85d6d851-d7ec-482a-bf93-c16ea962394a"
        },
        "item": {
          "id": "6dba6c10-d5a0-459d-9427-5503bb126d2c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "31dcb3cc-48bc-4077-b7a0-ce2b82a8a20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25525acf-de6c-4244-8f09-8649e5b7df68",
        "cursor": {
          "ref": "c77cda28-8b5b-444a-8183-9df6926cb254",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "656db665-5b16-439d-84f7-2a60c9c7322b"
        },
        "item": {
          "id": "25525acf-de6c-4244-8f09-8649e5b7df68",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3a24d645-6482-45ea-9c31-42800a7c9827",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac93ee75-acca-478f-aa84-c1dce7411e1c",
        "cursor": {
          "ref": "a10bb097-89c1-4e1f-85ee-1c5e5e48363d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "347ede22-52c6-467d-964c-a0eeee4f8a16"
        },
        "item": {
          "id": "ac93ee75-acca-478f-aa84-c1dce7411e1c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "3597d81d-1fd5-4bda-ada8-092a6fa06586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "53fc212c-b7ac-4a38-a2c8-ec654ad7674f",
        "cursor": {
          "ref": "b2b6a213-5231-4df2-a7f4-5d7011607be0",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c7dd7353-b5c6-419b-bf71-f7e1dc1e60ac"
        },
        "item": {
          "id": "53fc212c-b7ac-4a38-a2c8-ec654ad7674f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fa2918be-3c7b-48bc-9bab-dbf7e00497ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7f99eb7f-591e-4f3e-a2a2-467b7f951785",
        "cursor": {
          "ref": "e75fa40f-6f80-4a3c-9082-a9ad6ca3af5a",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "df29ab69-92d4-40f6-b77f-2e90ae92ea7d"
        },
        "item": {
          "id": "7f99eb7f-591e-4f3e-a2a2-467b7f951785",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bc258b27-8f7f-40f2-b00f-93bd79dd4e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4b5b0c66-1a52-4b83-9543-d79bc922b2ef",
        "cursor": {
          "ref": "b5d260c1-b33c-458a-9e5f-330b41d8cec7",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6597fa51-ef54-4d81-9f83-83b2d0a1d5af"
        },
        "item": {
          "id": "4b5b0c66-1a52-4b83-9543-d79bc922b2ef",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2f768bbf-a8bd-4e30-ac99-bdcb9a1c0fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "39033935-ca20-411e-8db0-b57e4c67b6b8",
        "cursor": {
          "ref": "2289212c-d06d-4435-94bd-19ca8b709957",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2a05436d-2b61-40b0-bc8d-4f09da7495ad"
        },
        "item": {
          "id": "39033935-ca20-411e-8db0-b57e4c67b6b8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ced8af58-fd53-4fe3-875a-ed6ccc24b5de",
          "status": "Created",
          "code": 201,
          "responseTime": 10557,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78234cf-7cb7-4ade-b382-a9672c00c56e",
        "cursor": {
          "ref": "bd70c27f-17e7-4d57-9d29-9b6c98bea70f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "49baad61-1617-432f-bbf5-2367dfe07589"
        },
        "item": {
          "id": "e78234cf-7cb7-4ade-b382-a9672c00c56e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4b0833c2-f05b-4600-a0ab-1f7b2233d498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "41b6d868-1740-418f-bbef-7ef6be062093",
        "cursor": {
          "ref": "ff1a36f0-4f3a-4bc0-bcc2-85d12190f070",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "37392175-fdf3-483a-a7ff-6fbb565cc600"
        },
        "item": {
          "id": "41b6d868-1740-418f-bbef-7ef6be062093",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "872bc030-c9b2-4640-a1ca-6093fab648db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e815237f-b40d-4960-8dfe-fc48b2d3e1c7",
        "cursor": {
          "ref": "5e8cd706-c7f1-4679-8b4c-2d11ba5e21d5",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1d782656-d64f-45a1-b06c-0d266539653c"
        },
        "item": {
          "id": "e815237f-b40d-4960-8dfe-fc48b2d3e1c7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6c7533a2-78b8-4aeb-bde1-7605aeceeb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e64a6ab-55d4-4267-8e40-6c1437278e04",
        "cursor": {
          "ref": "75fbfe32-7038-4164-b5f9-09909d5697aa",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "59c872c6-86ed-4b0c-bfd6-84252ffeae34"
        },
        "item": {
          "id": "3e64a6ab-55d4-4267-8e40-6c1437278e04",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5111ea41-c4b0-47b0-972d-ece1d9888d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1831b1-a6c9-449d-a97b-6a11471f88cf",
        "cursor": {
          "ref": "4804e73c-f58d-4b1d-b8ce-4abeeaff60ff",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "00fdb05c-1c0f-4b61-95fa-1528a00ef571"
        },
        "item": {
          "id": "ae1831b1-a6c9-449d-a97b-6a11471f88cf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "19347454-262c-419e-afa4-ccc6cb19254c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d6988b-bfcc-4190-8934-433ad60f15bd",
        "cursor": {
          "ref": "8b0b2dbe-abff-4077-a2e2-2a67a2112ddf",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "616e6762-fa71-4525-9e23-b085802803a7"
        },
        "item": {
          "id": "c5d6988b-bfcc-4190-8934-433ad60f15bd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "120f0201-73d4-4640-9a98-ec9f6d016939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ba6f05-6a17-4aa1-ab9e-09cf2ab9672d",
        "cursor": {
          "ref": "37ebb722-fdc8-4d0b-84c7-02d749b498f5",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f84e2c3b-23cc-422f-be06-3d5a76aa2f08"
        },
        "item": {
          "id": "26ba6f05-6a17-4aa1-ab9e-09cf2ab9672d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0729ed58-a75c-4791-8c67-cf584f4402f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1582779c-b81a-4b1b-bcda-21a6edd7f506",
        "cursor": {
          "ref": "0e6f5952-c4bd-45aa-b348-b9776d6fce8f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ff64c7c9-cd1a-4d4f-a638-8f541b4a8a90"
        },
        "item": {
          "id": "1582779c-b81a-4b1b-bcda-21a6edd7f506",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b0ecfa90-61ee-4552-bb23-bcdd0e4fa7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1b70e1-70d2-42af-97be-0757f2fe83f6",
        "cursor": {
          "ref": "a3fa4663-32fe-4702-a7bd-9cd29ef4437a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "61f67284-8a2e-4e9c-8ee5-419de1c8d508"
        },
        "item": {
          "id": "7d1b70e1-70d2-42af-97be-0757f2fe83f6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d2094a12-380c-4a2c-adfe-6ea0b38773cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89065ee0-72e9-4a35-ac7f-a6b85510d54a",
        "cursor": {
          "ref": "85cd6233-7e60-4839-b0b0-8b3ba18f8689",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4c321d0e-7799-4f7a-b04a-3c170b91e549"
        },
        "item": {
          "id": "89065ee0-72e9-4a35-ac7f-a6b85510d54a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "11592dcd-d01e-4c6e-8237-3300168dbc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657b7544-19f3-498c-af2d-35eaf85046a1",
        "cursor": {
          "ref": "7662b180-b126-4969-a9f1-af7071f2cc89",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "de52e7af-49fe-458b-8906-b3e32f41b0d9"
        },
        "item": {
          "id": "657b7544-19f3-498c-af2d-35eaf85046a1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dfaecab1-8bfd-483b-8304-cb56499bb297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d79b35-c46e-4e15-b078-a8e1e58ad27f",
        "cursor": {
          "ref": "a2965d19-0e4f-48a1-b59f-6a3bc4fcae3d",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "21bcb7a6-ead8-4667-89b2-f54cb0ae1f89"
        },
        "item": {
          "id": "15d79b35-c46e-4e15-b078-a8e1e58ad27f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bc5646d1-8029-427c-8500-3d67b2576c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c91bb13-3d6f-443d-8d5e-2ca9fd3f1f52",
        "cursor": {
          "ref": "d2c32c05-d258-4ba7-8736-99e1f0ee4966",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "36290906-0644-4c5c-9645-8c860e46958a"
        },
        "item": {
          "id": "9c91bb13-3d6f-443d-8d5e-2ca9fd3f1f52",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "72f0dd35-7aa5-4d61-bdec-1c94bca93c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5455cc4b-2233-4b0b-947c-f499b4a6c048",
        "cursor": {
          "ref": "8c990c10-50f3-4819-afc9-a731e7c77afe",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1f327b37-57b9-4124-996a-8cbb472f456b"
        },
        "item": {
          "id": "5455cc4b-2233-4b0b-947c-f499b4a6c048",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ec53ed13-5271-4858-a475-e3618a75e06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac76fb88-9a0f-4aae-a0b9-f90ac3ac797d",
        "cursor": {
          "ref": "62de42b0-844a-4714-8261-5236beb4a7d9",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8b824b0d-3ca1-4ada-9f58-9896c693a43f"
        },
        "item": {
          "id": "ac76fb88-9a0f-4aae-a0b9-f90ac3ac797d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "49c90678-f693-4c30-aa0d-fff5fb73482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2743b4-7cf2-4319-a6b1-bddaddbb3dd0",
        "cursor": {
          "ref": "d7fcb8b2-710f-452d-a9b4-51df557539f6",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "53536042-3b44-465a-b095-5df9359747ec"
        },
        "item": {
          "id": "dd2743b4-7cf2-4319-a6b1-bddaddbb3dd0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2976d647-739f-4547-a572-2a1c723d83e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29ab26e-a6f8-46dd-96a4-3e0fae4bf542",
        "cursor": {
          "ref": "d0778063-86ea-42a9-adc2-d4b9042f2de9",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "84f09041-70a9-4dd0-aaf8-03a73085be5d"
        },
        "item": {
          "id": "b29ab26e-a6f8-46dd-96a4-3e0fae4bf542",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3aa22380-ea39-45f7-90c4-2195ee9b2873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70b8372-3b02-48ef-a2d9-10b52f46b535",
        "cursor": {
          "ref": "4ec3293b-96f4-45f9-922f-db884d1f0452",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0c6e37de-7308-4080-9881-3a2db622f31c"
        },
        "item": {
          "id": "d70b8372-3b02-48ef-a2d9-10b52f46b535",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "edf8ec7d-a57b-44a8-b96e-e4e53224611c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf6e4f5-1697-4b3b-a20e-4fa7e6ed0762",
        "cursor": {
          "ref": "2e1267bd-aded-4d36-9fc2-60ea02ac6104",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4ee89eb7-d4b5-40c8-ac01-8e68d98bb3ef"
        },
        "item": {
          "id": "4cf6e4f5-1697-4b3b-a20e-4fa7e6ed0762",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "242474ee-568d-4369-8701-f6b3953cf4df",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "6be1ff9c-40bc-40e9-8633-48d068db0f96",
        "cursor": {
          "ref": "1345d0c8-7d00-46d9-9751-3733efb54b33",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "dfeeec65-e5a1-461a-b651-91d352720a9a"
        },
        "item": {
          "id": "6be1ff9c-40bc-40e9-8633-48d068db0f96",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "eff7b0fe-21ef-41af-91e8-73785536acba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a6dcb0-7544-48b3-8adc-d91cc58fcfbe",
        "cursor": {
          "ref": "4500c76a-c7b8-4bad-a17b-930c54442bbe",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "2630be68-a718-4402-bbd0-9a1dc8b9387e"
        },
        "item": {
          "id": "a6a6dcb0-7544-48b3-8adc-d91cc58fcfbe",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ce368151-4c63-4c20-a217-2af4d74885a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b317c58-7e99-422c-9bd2-625c6d882c5d",
        "cursor": {
          "ref": "6021cda8-3c7f-45a4-933b-e1dfa4d7d12f",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "421d8885-444d-473c-9f56-2f651aad1612"
        },
        "item": {
          "id": "1b317c58-7e99-422c-9bd2-625c6d882c5d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "904f6fef-d53a-40a9-857e-90aec8b08073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dd0519-bfdb-4b69-aa82-0f55f4776151",
        "cursor": {
          "ref": "97933a88-3615-4103-9ae8-43798cf915e3",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bb2ff8d7-d458-4e08-ae44-5f5149e939e0"
        },
        "item": {
          "id": "62dd0519-bfdb-4b69-aa82-0f55f4776151",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b68acbb2-38ed-41b2-b607-feb3fd7ddd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093cd40f-aaf5-470c-bc33-9dc6ac429a44",
        "cursor": {
          "ref": "c460d455-960f-4f13-b4c9-958d1e271383",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "25445344-97e0-4f59-ba32-fcda35f946fc"
        },
        "item": {
          "id": "093cd40f-aaf5-470c-bc33-9dc6ac429a44",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d07b9dbf-1678-41ee-a1ef-8e49106c12e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce18db33-e090-485c-8a2f-612d90bf1aba",
        "cursor": {
          "ref": "89298673-5ae4-47f0-a9bc-8efcedb9f4da",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "705f0fe2-fdc6-48bf-a850-fb2b3bcb9a9f"
        },
        "item": {
          "id": "ce18db33-e090-485c-8a2f-612d90bf1aba",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d59c71f2-26db-4138-853e-d37e4a87515e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796c2e04-c442-4794-9191-10ff7d5b53f5",
        "cursor": {
          "ref": "db32dd08-305a-4920-ae3b-785731b72b19",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "69b06738-2608-4570-a00c-40f2b54e1438"
        },
        "item": {
          "id": "796c2e04-c442-4794-9191-10ff7d5b53f5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5d47dec2-61a3-41a0-8aab-5b88d967796e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5022b1e0-0ea2-40ac-afca-82fc90cafe31",
        "cursor": {
          "ref": "d6285cd0-0fe0-4b28-ade0-eaac36e23103",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "44f30c65-6e71-4214-a98b-1ca9e7f28ddb"
        },
        "item": {
          "id": "5022b1e0-0ea2-40ac-afca-82fc90cafe31",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7388b980-d02b-4b3a-a199-e34324f24c62",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "34b9e265-4a44-41f1-b47c-a4560936b1c6",
        "cursor": {
          "ref": "22114cdc-c16e-4dfc-a3ae-c4c23e11e035",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "77b134c7-7cfa-4a54-b917-11e235b9a853"
        },
        "item": {
          "id": "34b9e265-4a44-41f1-b47c-a4560936b1c6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a038fc98-43ed-46ab-80b7-713aa90fc89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e476c4-261d-47c7-9d86-d1a00c0b07ba",
        "cursor": {
          "ref": "3f9080f4-27f7-40d8-9f99-486cfc15a8cc",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4adf4509-ab21-493c-a7c9-fa6b432d7f3f"
        },
        "item": {
          "id": "57e476c4-261d-47c7-9d86-d1a00c0b07ba",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "61b0d701-ac85-4a41-9c9f-5738a3d596e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6eb2ee3-b8a5-42fc-9c46-31e4d63f7380",
        "cursor": {
          "ref": "cbda20ce-82f5-4648-93a7-c5e8409986be",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2acf6dd8-9f2c-4c74-a4ed-bbd9e78e231a"
        },
        "item": {
          "id": "a6eb2ee3-b8a5-42fc-9c46-31e4d63f7380",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "746bd852-d8e8-4053-bcce-657be38fc556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f34479-9126-494c-a299-07f58307379c",
        "cursor": {
          "ref": "f52410c5-d904-4b79-b8e2-8a6248d648dd",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d224084b-4362-4959-addf-fa0f9f79ff14"
        },
        "item": {
          "id": "68f34479-9126-494c-a299-07f58307379c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "853134e0-c56f-4d6a-aa23-290eecd0d05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c3d5e5-2ae6-4f28-a0ea-5be22effeebf",
        "cursor": {
          "ref": "b2bf98fb-c733-4fe6-8457-8cc12278e990",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9906fb04-5f41-49be-8e60-fa42d98bd825"
        },
        "item": {
          "id": "39c3d5e5-2ae6-4f28-a0ea-5be22effeebf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4eb8bb0e-fd85-4be4-b353-3284a344ecb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20497fe1-2cde-44ff-97a7-d1f18d64c581",
        "cursor": {
          "ref": "2e2e5ee4-7716-47e7-84f4-36f22e7fc2d4",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b97a6ae6-cb2e-4230-86df-a9fb0b491bed"
        },
        "item": {
          "id": "20497fe1-2cde-44ff-97a7-d1f18d64c581",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d281a3c9-5ef1-4c63-ae07-37dfcce37da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ab5d27-a23a-4378-9990-d35d881e2e57",
        "cursor": {
          "ref": "6eab9451-4e6a-44ed-9557-6494d9d78dea",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "aabcb01e-2a71-449e-b8a7-09192d672e57"
        },
        "item": {
          "id": "78ab5d27-a23a-4378-9990-d35d881e2e57",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "807fbe60-f3f1-4682-a996-cbe98cf6eaa4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "87c40ec4-3ec7-4614-bd8f-0b9adbe68f02",
        "cursor": {
          "ref": "792a576c-6bf8-48b3-a9f1-c37a9cf77c07",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ff5d040a-ecfd-48e8-af2b-7708220004fc"
        },
        "item": {
          "id": "87c40ec4-3ec7-4614-bd8f-0b9adbe68f02",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "74cd9dd0-2283-4e08-ad83-24bad080b444",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "f8ce6e96-3187-44a1-b4ff-75494dbd4fa2",
        "cursor": {
          "ref": "0dacf329-631d-4c43-834a-eb4adf3c9ced",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "312dd952-3145-4b81-a2c2-746c9083a095"
        },
        "item": {
          "id": "f8ce6e96-3187-44a1-b4ff-75494dbd4fa2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "09232c78-5cfc-4995-a0b6-01e024f4f437",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 23,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "a584d424-fcd0-4c7d-9f1c-400689fe985b",
        "cursor": {
          "ref": "8bb33d00-fac6-4656-9049-7cb8a8323025",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3bfa1f52-325b-4117-90f3-3dc80a83241e"
        },
        "item": {
          "id": "a584d424-fcd0-4c7d-9f1c-400689fe985b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7bde7d2d-9d6b-4549-8f87-9bb2bd207d4b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "2798357a-9e3f-457a-9a22-d94708fda0de",
        "cursor": {
          "ref": "21c50db2-f548-4d0a-b4b0-0000ae31a888",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9f9101a7-77ef-46a9-9a5e-38d894c90391"
        },
        "item": {
          "id": "2798357a-9e3f-457a-9a22-d94708fda0de",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "96fc4b92-a9b3-444f-8b01-d9de5f76b593",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "da3b2f70-b8e7-4a9c-9bd0-9aafef6bf0b9",
        "cursor": {
          "ref": "be7e95db-4763-4a9b-ae8e-8e40a5f19afe",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "13ec113b-3a70-4454-8f4b-5c1e65b597e1"
        },
        "item": {
          "id": "da3b2f70-b8e7-4a9c-9bd0-9aafef6bf0b9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "39f7fc1f-43b0-463a-9df6-b0c63b0c315d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "14f4c9b4-22a3-47c6-b75a-efd5055efaf2",
        "cursor": {
          "ref": "d53512e3-776f-44f1-8a08-0064790083c9",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9f477836-cefe-49bc-94ff-d5174722444b"
        },
        "item": {
          "id": "14f4c9b4-22a3-47c6-b75a-efd5055efaf2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5973fe85-6fba-4e86-ad3e-0cb5c973532f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0dbbdb9-e348-4d5d-b784-15f3c37e72a6",
        "cursor": {
          "ref": "b0a6ca5c-f64f-408f-8dab-32d1f855709a",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "04f979b4-18b9-40f1-af7c-172c9bf2488b"
        },
        "item": {
          "id": "b0dbbdb9-e348-4d5d-b784-15f3c37e72a6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7934f30e-3cb7-471d-bc0f-9fcedd13b112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baae2d86-65cf-4713-b599-782e2bf8ec40",
        "cursor": {
          "ref": "77356364-b9f2-4d12-a46e-84544b4648cb",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3fc645c3-e883-451f-949e-da337719cd15"
        },
        "item": {
          "id": "baae2d86-65cf-4713-b599-782e2bf8ec40",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8e290d0e-cdde-4919-94af-489fe5cbb522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef39fa1-47da-46f1-bc5e-2f8c40254e8a",
        "cursor": {
          "ref": "f21a5d6b-6cae-4f07-b886-42800749f6f8",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f650ffb1-762f-4336-8d80-5ec328f5cb7c"
        },
        "item": {
          "id": "7ef39fa1-47da-46f1-bc5e-2f8c40254e8a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "13cc4a42-e7a1-4ed0-85d0-2a0940bcb176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368792b3-a930-4c01-89a8-ef9efccc46ea",
        "cursor": {
          "ref": "56c93505-bc5b-4f94-8603-1fe5b855d652",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "47a96a36-17f0-4170-852f-3ba93a3b3ad7"
        },
        "item": {
          "id": "368792b3-a930-4c01-89a8-ef9efccc46ea",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ad78bb29-43a4-4445-99ac-f925acdce976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f54973f-bc9f-45d0-aea4-337b171ed9be",
        "cursor": {
          "ref": "588d3a7c-435f-4d56-9e43-caf86dbb43aa",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6655cd21-1db7-4535-ae29-8ec2c427547b"
        },
        "item": {
          "id": "7f54973f-bc9f-45d0-aea4-337b171ed9be",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "81ef5a82-8749-4053-a85d-ae4edcdda595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366333fc-bb30-4216-a919-61444b516098",
        "cursor": {
          "ref": "58d3342a-b3f9-4900-bf12-c87d228280d4",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "21ccd9ee-fc68-4b66-91d8-a8608b4b0f53"
        },
        "item": {
          "id": "366333fc-bb30-4216-a919-61444b516098",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4a043897-8eb2-458c-a88f-6d8ab39049d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bcf009-758d-42d0-bb8a-91b9be4a3efc",
        "cursor": {
          "ref": "73779e96-7863-4197-ab88-1f0d113aee63",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fe632521-e615-4d05-8193-1d0d7386f1e6"
        },
        "item": {
          "id": "56bcf009-758d-42d0-bb8a-91b9be4a3efc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2b159524-0236-4a13-8f18-99f6009be580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94da2bb-ad14-4476-8abd-e6531bcc536f",
        "cursor": {
          "ref": "f1bf021d-74ca-4e76-964b-060c14f56893",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "372726d6-0f1a-4ca2-a8ab-774e62c88707"
        },
        "item": {
          "id": "f94da2bb-ad14-4476-8abd-e6531bcc536f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d59461f2-34b3-48f5-b5d7-c04698aab1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007cfb80-83b6-40fc-9323-e656ec977ebd",
        "cursor": {
          "ref": "a596724a-6ebd-4e92-ba56-b27e3c524c01",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "89e39337-c855-445a-8d43-58bf950393f4"
        },
        "item": {
          "id": "007cfb80-83b6-40fc-9323-e656ec977ebd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cd743f4e-ec67-4056-ae13-d17df800548c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b84d1ec-a5e0-4736-ad47-403f8ce7ad37",
        "cursor": {
          "ref": "d05fa02e-952f-4e12-879b-e570d9a9a765",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0e50ce9e-4ca7-46b1-913b-191fe200b541"
        },
        "item": {
          "id": "0b84d1ec-a5e0-4736-ad47-403f8ce7ad37",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "118de14e-eb1f-4a2e-912b-d56d2bc36cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594980e5-2522-4aff-81f5-983d9a565f66",
        "cursor": {
          "ref": "901730e4-207b-49d4-b62d-d6d37034d8a7",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0625afd7-d5f4-48d6-beb7-632a1a942ab6"
        },
        "item": {
          "id": "594980e5-2522-4aff-81f5-983d9a565f66",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "927225c8-e382-4fca-b44c-9b7b1341c063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee915f8-f32d-4baa-b554-a853695b9865",
        "cursor": {
          "ref": "2c0c9917-3a7f-4331-96d9-fc2c1c463ca4",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0fb145d8-0d67-4b24-b0f5-2ef80555a673"
        },
        "item": {
          "id": "5ee915f8-f32d-4baa-b554-a853695b9865",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7c583add-3bab-4445-b573-86bb5d0397e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c191abd3-62f5-405a-883b-620c53168d6b",
        "cursor": {
          "ref": "23a32498-e159-4bae-aaff-c68006aca0fa",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b80b823b-9297-4f33-baed-7a14a1c1ca3c"
        },
        "item": {
          "id": "c191abd3-62f5-405a-883b-620c53168d6b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d0d98e9e-507f-40ab-b852-37558d00939d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74728d62-0fc2-4441-b651-6685c49192c4",
        "cursor": {
          "ref": "79891f63-76c9-40a0-8910-f7e8af12e930",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0325d384-0ed5-4b45-83db-d0ae61a85f77"
        },
        "item": {
          "id": "74728d62-0fc2-4441-b651-6685c49192c4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "84a20ae8-b809-4d57-84d2-17bf25dc1117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b563a00-0c98-4f0d-897f-5b4de6cdb779",
        "cursor": {
          "ref": "be4cc593-8242-4aa3-93ee-19a9b1a8e3cb",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "743ade84-65bf-48f0-b398-7dd53ec6ba13"
        },
        "item": {
          "id": "5b563a00-0c98-4f0d-897f-5b4de6cdb779",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a163fd28-a2e8-4325-81e7-6bdbd3407553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0c9647-da6b-4d6e-8d1f-bf6931b3f2ef",
        "cursor": {
          "ref": "fd9c4c5e-305c-49b4-bb1e-bb5edce8b12b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f25ec0ca-bfff-4125-a849-c512ce7f59dc"
        },
        "item": {
          "id": "7a0c9647-da6b-4d6e-8d1f-bf6931b3f2ef",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ad1b0c2b-603e-4fa8-a187-3177ba469e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e25564f-2c2e-4125-bfc9-218f0724225c",
        "cursor": {
          "ref": "b7cc77fc-2b31-47f8-a5b1-ca0cb793cacb",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "860c8116-9be1-4372-8829-d8ba5ba7be5b"
        },
        "item": {
          "id": "1e25564f-2c2e-4125-bfc9-218f0724225c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8df71f1b-65a4-434d-87ce-36cb4b40e4d6",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "a9c2e734-b9dc-4d33-a748-3871b5d152f5",
        "cursor": {
          "ref": "947b8f78-681c-4905-8da8-23aad65d04a3",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "65025664-732f-4b5c-a60c-a2369526855e"
        },
        "item": {
          "id": "a9c2e734-b9dc-4d33-a748-3871b5d152f5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4b655131-46f3-4c19-bf26-a83b4a782756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc80da77-d114-4c06-b188-efae697fa1b1",
        "cursor": {
          "ref": "4b078813-7525-4c3d-be54-793186bc73b1",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "34d5ff44-e2c7-4974-bdcf-6a0a9b9d192e"
        },
        "item": {
          "id": "bc80da77-d114-4c06-b188-efae697fa1b1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7304c677-2016-4f6b-b641-f49f62171ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4e0409-4742-4aa2-b98c-ec3490ccc6ff",
        "cursor": {
          "ref": "dbbc0a15-c3d6-4e8a-a270-c36b9684bb8c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "400234f1-66b2-40d9-a5e6-f364b61b910b"
        },
        "item": {
          "id": "ba4e0409-4742-4aa2-b98c-ec3490ccc6ff",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9d266d6e-27a4-48b4-9780-531162782638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5917fc86-5d39-4ef8-b433-8cc76d74e610",
        "cursor": {
          "ref": "c4bf13d4-e607-4a38-aa5b-ac69026171ed",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "84ba4a49-24bd-4d97-8084-3e415cfb690c"
        },
        "item": {
          "id": "5917fc86-5d39-4ef8-b433-8cc76d74e610",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ac4adbe4-256d-466d-a72c-7da4aa1c7e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72a1ec4-a57d-464b-a64b-b9b4f2a21c72",
        "cursor": {
          "ref": "b71cb5eb-1ea0-4799-b97d-6491da46ce9a",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7f48e128-7592-4ed7-8bc4-da16485ffcc0"
        },
        "item": {
          "id": "d72a1ec4-a57d-464b-a64b-b9b4f2a21c72",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3f52b462-c6f3-4f9b-83dd-3a7cc71e585f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f52f6d1-475b-4e17-b1b4-f2651e4bdd5a",
        "cursor": {
          "ref": "2faa5ce2-c6b0-4cd1-a69c-545407be791e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ac798bce-28df-4c29-a8a8-f33737f66b05"
        },
        "item": {
          "id": "0f52f6d1-475b-4e17-b1b4-f2651e4bdd5a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9c9823d2-e9f8-4997-8bac-4e813a555d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d6d623-6086-41a5-8bf6-7a6dab52b1ef",
        "cursor": {
          "ref": "32754116-c645-4521-8346-b0b2eaf5be60",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "71e467ef-ac64-43f8-ab11-9d6765b361dc"
        },
        "item": {
          "id": "72d6d623-6086-41a5-8bf6-7a6dab52b1ef",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "40456b53-a136-4aeb-b2c4-955abffabbad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803eaa10-df19-44a4-afd8-8d270137368a",
        "cursor": {
          "ref": "c5f4a610-75bb-4769-845a-b993d69680c7",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b290ca6b-1cc3-4165-9204-a6dbb4717b6d"
        },
        "item": {
          "id": "803eaa10-df19-44a4-afd8-8d270137368a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bc8cc973-918c-4202-b041-360dee2dfee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3e886a-7855-4eca-b7b1-865982caa67f",
        "cursor": {
          "ref": "38d40f00-05ab-41b9-a152-35e62adc477c",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "aef2a772-9503-41da-bc69-2bf6a1578e09"
        },
        "item": {
          "id": "9b3e886a-7855-4eca-b7b1-865982caa67f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b74b7cea-e88f-48f4-b2d6-970a6ea9d79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35e5851-c8f9-41b2-98ef-9fae70849e43",
        "cursor": {
          "ref": "2b00fb08-6646-4c96-9334-e97bda7b6f18",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7735eb52-cb7d-4ad8-9f30-7823bb778fd8"
        },
        "item": {
          "id": "c35e5851-c8f9-41b2-98ef-9fae70849e43",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9d3b9cc0-f2fe-4bf6-bf94-40d400057461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7079ef5a-c112-4618-b08b-5c6b605b840b",
        "cursor": {
          "ref": "3748d860-2598-4898-bf43-909c9b8fb9dd",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e38f70bd-8966-4981-8950-e1b063629f1a"
        },
        "item": {
          "id": "7079ef5a-c112-4618-b08b-5c6b605b840b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "445ae53d-96c4-491f-b9bf-621344b7636f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb3766a-3d55-42d7-ad01-dfa7f150158a",
        "cursor": {
          "ref": "a0e69b1b-fdfe-4ca0-adee-343e47cf415e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "36007e73-78da-49ba-8144-b1ae22bacf83"
        },
        "item": {
          "id": "cfb3766a-3d55-42d7-ad01-dfa7f150158a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "16bf3187-535f-40a8-932f-dde7c6291414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32f65b9-7551-49d7-a835-6d7b35ade995",
        "cursor": {
          "ref": "f486385a-8faf-4c94-86e9-a3f34c5f8006",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6626aa48-5abd-4fbd-9298-13251b2ffd36"
        },
        "item": {
          "id": "f32f65b9-7551-49d7-a835-6d7b35ade995",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "822fcf4a-61b1-485d-ba94-884bcd467412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39543dd0-2d87-41df-9b5e-18acdfe341cd",
        "cursor": {
          "ref": "cff309bf-482b-4bb5-bb60-c5be5bc706da",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1cfea62a-2856-4d12-a9b7-2bc2dea3af99"
        },
        "item": {
          "id": "39543dd0-2d87-41df-9b5e-18acdfe341cd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c6a0d868-74d4-4987-bd09-0b22183b5c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc978675-d9d7-4e4e-890f-9074badd6726",
        "cursor": {
          "ref": "e08a8ed7-331f-4ab9-956c-11f02047d448",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0052e654-0368-41e9-a8f2-fe77c7bac4cb"
        },
        "item": {
          "id": "dc978675-d9d7-4e4e-890f-9074badd6726",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d275d5d3-8906-42a6-bbcb-fd2391d7a93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6031b7e9-b686-4cdc-99e5-4545fea50b62",
        "cursor": {
          "ref": "efe88a90-4c24-482c-af15-f7c26869a6e5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2202e469-d2ef-4bf5-87ce-0d9e716488f5"
        },
        "item": {
          "id": "6031b7e9-b686-4cdc-99e5-4545fea50b62",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e883cfd8-ff88-44c7-a959-11a4c224862c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8dd0df2-45f3-4740-8e88-c077b74f32ef",
        "cursor": {
          "ref": "56e61820-1860-4118-bdde-1a1251c7031a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f05e8516-0154-420e-a303-f6c09d95cc6c"
        },
        "item": {
          "id": "a8dd0df2-45f3-4740-8e88-c077b74f32ef",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "05ce0759-b160-4b32-bf39-442f34287d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b40e7d-63d5-4185-8937-013332075154",
        "cursor": {
          "ref": "7744ffb7-f7b6-4a9b-a6e8-361a8a523aba",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ff55737a-1339-4175-93db-93e5569e089a"
        },
        "item": {
          "id": "68b40e7d-63d5-4185-8937-013332075154",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9c63ba47-a01f-42ca-b44d-a285e5df0612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c178388-3bc2-4cda-bdc9-e101f9fb056a",
        "cursor": {
          "ref": "ccfecf6b-fae9-4887-89a0-74955a9c19c5",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f7bffc73-e157-446c-a990-e577e7327e2b"
        },
        "item": {
          "id": "6c178388-3bc2-4cda-bdc9-e101f9fb056a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f4d2cbaf-35e7-4e22-84a6-c8464c7cd260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ff2e4c-b8cd-4161-8cbf-9f40e79db198",
        "cursor": {
          "ref": "fe1ccdbe-3577-483c-b949-abca6a1dc27f",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0f4df984-5543-4586-8982-39cca467c9c4"
        },
        "item": {
          "id": "42ff2e4c-b8cd-4161-8cbf-9f40e79db198",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f9d5cdfe-95bf-4908-9bb3-b626f591bfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a3854b-de58-41fe-a76f-89c0fcb5b0c4",
        "cursor": {
          "ref": "b1e6aceb-1599-43d7-98e0-40b7b065d293",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d7e4b6fd-708a-422c-839d-b615328a1e9f"
        },
        "item": {
          "id": "37a3854b-de58-41fe-a76f-89c0fcb5b0c4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3140b364-d4fa-49d6-86e8-3ecb4255e003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6903fab4-8b1d-40de-bd26-5dc8a75b1920",
        "cursor": {
          "ref": "867d4acd-0e85-43d7-9ed9-e542663dbb62",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "01f05706-2a77-4911-a72d-c8376fd7fb04"
        },
        "item": {
          "id": "6903fab4-8b1d-40de-bd26-5dc8a75b1920",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c090bfd3-fc8c-4c82-a414-242d58895e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cbaf92-214c-452c-952a-872a0b07434f",
        "cursor": {
          "ref": "754dba90-7e8e-4472-a5e7-995b45033428",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a97c648e-2a43-4cc5-83ce-8afd48989065"
        },
        "item": {
          "id": "d8cbaf92-214c-452c-952a-872a0b07434f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "61a385c6-82f6-4aae-8799-af5d89ab57d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d566fdc-f698-416f-9e06-ecb575d3c4cd",
        "cursor": {
          "ref": "7ab1b0b4-98a6-452c-b066-fd3231c2c3bb",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fd85d484-34c6-441e-987f-f032d4603923"
        },
        "item": {
          "id": "5d566fdc-f698-416f-9e06-ecb575d3c4cd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1f49ee7c-2949-407d-9896-0f1d968806d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61368546-57fd-4d64-8438-5ec6d17e47ad",
        "cursor": {
          "ref": "bf1412c4-6a14-4d3b-b3a1-44ddaccfd5cf",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a79cf4e1-1124-4e0c-bf3b-6d5fa8e3ce81"
        },
        "item": {
          "id": "61368546-57fd-4d64-8438-5ec6d17e47ad",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bcc0c182-9100-4403-bc61-41fcff379439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3edfc0-c80a-43ce-b2ff-d3df72c552a8",
        "cursor": {
          "ref": "12dababa-2c1b-47fc-afa2-a492800ac9c1",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "05af8ca6-2c2f-43a2-abe7-eacfc82dad91"
        },
        "item": {
          "id": "0c3edfc0-c80a-43ce-b2ff-d3df72c552a8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c4ad5e97-858c-4ea2-88df-e2458b32f764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b105eb68-8721-4bd5-a985-08b5dacbbecb",
        "cursor": {
          "ref": "d4fbf764-b084-49cb-b23e-e481b7d42074",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bbdf0c0b-987a-49a0-afac-81fd1be70693"
        },
        "item": {
          "id": "b105eb68-8721-4bd5-a985-08b5dacbbecb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a3b9be1f-3446-4d1b-9b8a-e2ce79e55f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcdcdcb-feef-4c26-aa75-515bdc7fead2",
        "cursor": {
          "ref": "cbf6e5ad-d0e2-4943-a516-e679f4431143",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1b59a0d0-1d78-4b3c-a037-baa8b96c9ceb"
        },
        "item": {
          "id": "8fcdcdcb-feef-4c26-aa75-515bdc7fead2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "998221e0-8d3b-4bc4-a243-6993486434a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14ed4bc-ed71-4bdd-a8e2-727f8d818730",
        "cursor": {
          "ref": "ff75508f-c814-4872-b942-6e1ebb06cf52",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6c1fb976-c1d4-47b9-9b3a-7c8280c8e70e"
        },
        "item": {
          "id": "c14ed4bc-ed71-4bdd-a8e2-727f8d818730",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "088788dc-22f6-422a-8fef-f510a30818c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9038bbe3-ab85-4f11-b3f4-91a94cc7e86b",
        "cursor": {
          "ref": "3a6e4920-b755-4d2f-b3c0-f362284edee3",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0a1bc549-98ef-4b60-ace3-e752f8966837"
        },
        "item": {
          "id": "9038bbe3-ab85-4f11-b3f4-91a94cc7e86b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d1444f9a-e60a-468d-98c4-1a9c2201b0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0553a406-f46b-4d4c-adad-3631e8dbc7a3",
        "cursor": {
          "ref": "872fb915-cca2-4920-9d4b-5d683b721546",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "25f67e45-8f4c-4748-b80e-d2861fe9837a"
        },
        "item": {
          "id": "0553a406-f46b-4d4c-adad-3631e8dbc7a3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d55bb7f8-960b-4996-8481-8b92d1725778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0426c82e-2fa5-4675-8260-47df518b748f",
        "cursor": {
          "ref": "9f1d87b9-4f13-4b96-a59e-344aded2ecaa",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4540f865-28e6-4f5e-b1ba-e0b8a689323c"
        },
        "item": {
          "id": "0426c82e-2fa5-4675-8260-47df518b748f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5defb257-629a-4516-b659-92370e6fd344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c2bc1d-552a-4d87-a4f6-a8445a5ca40c",
        "cursor": {
          "ref": "3329f479-3d13-4b18-aafd-388365895622",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "08436fc5-8cc8-4141-aeb4-1f554aa0641b"
        },
        "item": {
          "id": "f6c2bc1d-552a-4d87-a4f6-a8445a5ca40c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "820feb88-748e-4b00-9e85-59d11da2ce3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3320a017-1128-4ef2-b500-fbab9aa96a78",
        "cursor": {
          "ref": "2ed6aba4-49c7-4953-ad77-943d5cd9428c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d2761ad5-d1f7-4dc5-9c1f-865301a53ade"
        },
        "item": {
          "id": "3320a017-1128-4ef2-b500-fbab9aa96a78",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "034acbe7-84b7-4789-971b-e742888c6765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045f4fb4-27cf-4be6-9252-f87e170674f5",
        "cursor": {
          "ref": "e80c63d0-d1bc-4bde-acd0-cc4e565c4c27",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3a00778e-1947-4d20-9058-8d27bd1bf717"
        },
        "item": {
          "id": "045f4fb4-27cf-4be6-9252-f87e170674f5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0f9c2ed0-7dc4-4ca5-a353-595db48cda18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d4d4e4-3b85-4294-92a7-d407e8eca5ed",
        "cursor": {
          "ref": "ca9d86b1-bd8f-426b-a9e3-800e967db88a",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "10a278cc-8b96-48b4-804c-9564f12fc432"
        },
        "item": {
          "id": "07d4d4e4-3b85-4294-92a7-d407e8eca5ed",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "48c3942e-3ab3-4577-8256-ca7467f88e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5180e4a-1b0b-4cc7-be72-d0cb8eead9ed",
        "cursor": {
          "ref": "4da9c0c2-7af2-40f4-b98c-12e1fa4fbff5",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "47370b6c-15f4-407b-a90d-673af1aadbf0"
        },
        "item": {
          "id": "a5180e4a-1b0b-4cc7-be72-d0cb8eead9ed",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2e98e18f-e828-438c-ad11-51b613a046cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62386f31-0af8-4b05-91a5-1147071ac455",
        "cursor": {
          "ref": "711a6ca8-9179-4e58-bcca-eeaac5666dbb",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1b7aa90f-5086-4755-a429-e3f031fc4067"
        },
        "item": {
          "id": "62386f31-0af8-4b05-91a5-1147071ac455",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c1a6bb19-53cd-4fad-9688-5c34d68c931c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73208fcd-28cb-465a-b87a-496e7afc7033",
        "cursor": {
          "ref": "a12c0208-c483-4650-bf03-ec8273332193",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5790c82e-6054-4aef-bfda-9968b54dc392"
        },
        "item": {
          "id": "73208fcd-28cb-465a-b87a-496e7afc7033",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "83cc0227-5f1e-4cd3-afed-d9dbb3cbaaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacbdb7d-71f8-4aa8-9123-90a004d72c23",
        "cursor": {
          "ref": "cb6e5271-db96-457c-ac40-9f0b5a472126",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8f3bf9ff-6488-45b8-862b-c743f4b291d6"
        },
        "item": {
          "id": "bacbdb7d-71f8-4aa8-9123-90a004d72c23",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "76a8f4c7-500e-4850-8525-1a932ff9ce2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a41a95e-983f-4011-860b-02344981065a",
        "cursor": {
          "ref": "152c7b76-3c4a-48c1-b2b2-f15df0ef29b3",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "eacdda33-1c6f-400e-bcde-7a964b4b0e4f"
        },
        "item": {
          "id": "1a41a95e-983f-4011-860b-02344981065a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "893100d1-4d12-4598-8c05-77e7ad3d017d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575d81ec-914c-4e54-8d49-c0c0def0b2d1",
        "cursor": {
          "ref": "0dcab721-3b46-4e40-b82b-942f334bac06",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b08ffb21-46fc-4533-8682-cf891117baec"
        },
        "item": {
          "id": "575d81ec-914c-4e54-8d49-c0c0def0b2d1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bc507ae0-1857-41d7-bacb-3c286d35db1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703e026e-08cb-41eb-84d4-f6998ee2e540",
        "cursor": {
          "ref": "f895f78f-15b7-4776-887a-16b0d6752bb7",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "04a8f087-d34a-4c49-abe4-a23ab9338e8b"
        },
        "item": {
          "id": "703e026e-08cb-41eb-84d4-f6998ee2e540",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "84ec479c-5236-4424-b3a5-330c32642d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80a1e92-c711-4007-81b1-4a0cc1c59f58",
        "cursor": {
          "ref": "e9b41d8e-49d4-4cd9-bcd1-d09c2622b9c6",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "359afa40-4125-488d-a781-191eec42b0f6"
        },
        "item": {
          "id": "c80a1e92-c711-4007-81b1-4a0cc1c59f58",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "47169bd5-3c50-4e55-ab40-b547bf2741b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76f1b8d-4fb0-486f-87ed-347406abd358",
        "cursor": {
          "ref": "c69de898-5827-44b8-be3a-19da82653b93",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fa245d7b-1356-4c64-aac9-74b9de955fe1"
        },
        "item": {
          "id": "c76f1b8d-4fb0-486f-87ed-347406abd358",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "52c6077b-9a13-4a30-a6a2-4f3736207d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8f42e0-a689-4b4b-b34c-b743a185e535",
        "cursor": {
          "ref": "b18b82a5-3259-4764-9960-232c2cd87cff",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fda3ff2c-41d2-4134-b111-d51296a992be"
        },
        "item": {
          "id": "dd8f42e0-a689-4b4b-b34c-b743a185e535",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fd66c2f2-5bf9-481f-9669-7da5af1b9954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4625903-12c5-44cb-b90f-57a1e3740fea",
        "cursor": {
          "ref": "db3e5a85-6b57-4b9c-ac3b-3574cc762d6f",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ee3cc1ba-119b-45c6-9409-1340ba536a0b"
        },
        "item": {
          "id": "c4625903-12c5-44cb-b90f-57a1e3740fea",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "366f01fe-5946-49aa-8ea9-e8c68367a388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8a0427-6645-465a-8a50-e33c490c4a06",
        "cursor": {
          "ref": "a094e638-00d9-4121-9394-12041458e9f0",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6c3cc81e-e5d9-42fc-92d2-3298aafdd2d9"
        },
        "item": {
          "id": "7c8a0427-6645-465a-8a50-e33c490c4a06",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3ea4ab38-48dd-4635-9e73-8d7d902278ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908d20a6-4ba9-4890-86c9-8f178f40ae34",
        "cursor": {
          "ref": "3d570047-7f4c-44ba-8d74-c66198e00b31",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8ac15551-3c69-4bc0-9278-c2cf7b210897"
        },
        "item": {
          "id": "908d20a6-4ba9-4890-86c9-8f178f40ae34",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4467624b-af26-4157-99bc-b5798d6b62ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5862bc66-68f9-4200-94cc-b823f81cded1",
        "cursor": {
          "ref": "03293109-855d-404f-8b05-46c35d56f3cd",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5e48cc41-65b8-4cf8-8bdb-c1585c774c52"
        },
        "item": {
          "id": "5862bc66-68f9-4200-94cc-b823f81cded1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cda5726e-e7f9-4096-b7d1-ddfa6ae13bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76b5c65-f809-4b62-9938-cdbd3cbd4112",
        "cursor": {
          "ref": "6da7bece-40f4-45d3-9caf-2730e1e74474",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "112f6452-8257-4296-ac80-00a7febabadc"
        },
        "item": {
          "id": "a76b5c65-f809-4b62-9938-cdbd3cbd4112",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5396b973-0e76-4f28-95d7-e25a5509b224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee74bf96-361f-47b4-85b0-d9394abb9a88",
        "cursor": {
          "ref": "788439de-c425-4626-b54f-2435d9625636",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "db3dd9a9-e654-48e8-b4e4-9142f9e8d060"
        },
        "item": {
          "id": "ee74bf96-361f-47b4-85b0-d9394abb9a88",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2f2ac9f6-0764-4cd1-95cd-ee02d8ecbce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f879ac3-2f40-4bfa-b664-3b39875dcfb6",
        "cursor": {
          "ref": "62328244-fd15-4b60-8468-ce9867648278",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bf44e9f0-9659-4f00-b3d3-b8334963d73f"
        },
        "item": {
          "id": "3f879ac3-2f40-4bfa-b664-3b39875dcfb6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "717d941b-b26d-4e8d-ab00-324ea9a0899b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9c51c4-2ec7-4bb4-8e47-cc0ae6e34015",
        "cursor": {
          "ref": "fab03697-da98-4eca-ab45-58b5effc5621",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "17f5e041-9d33-4c94-a074-561295c800ae"
        },
        "item": {
          "id": "0a9c51c4-2ec7-4bb4-8e47-cc0ae6e34015",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "17405d58-ea29-4e99-9a60-d6f20ca11465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a4a59d-39fe-43ff-956e-d9488cd26521",
        "cursor": {
          "ref": "359f3402-a6c6-4a1e-91f0-01f60d380fe1",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2fd0a81d-2d01-4f29-83a8-3c6a63687ed1"
        },
        "item": {
          "id": "52a4a59d-39fe-43ff-956e-d9488cd26521",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6350209c-9d75-4836-a5a9-dc293dd75120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8133e234-6441-45f1-b088-da7f40a332c6",
        "cursor": {
          "ref": "8c037189-669e-4bf2-a61f-ba9c63de508f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "aeb2fa4a-0d58-47d0-bd08-af2c3a4e6fb5"
        },
        "item": {
          "id": "8133e234-6441-45f1-b088-da7f40a332c6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f3cd982d-efd7-454c-ba14-d23e3f73cfc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310cc131-6149-4b81-8093-646c04a4111a",
        "cursor": {
          "ref": "46b31fdd-373b-4a2b-b30a-aedcdd6cfb62",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "afd5da48-315c-4cc6-8a72-0cf44bd61de9"
        },
        "item": {
          "id": "310cc131-6149-4b81-8093-646c04a4111a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0e1637d6-5ab9-4128-8c75-9eb68a9b1f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357aaaac-fe4e-4a8b-bc13-e668f16c663d",
        "cursor": {
          "ref": "822b8bde-283c-4e66-8d1d-54e11b2dee51",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4c51a117-4c0e-42ec-80c3-c52289ed5ca5"
        },
        "item": {
          "id": "357aaaac-fe4e-4a8b-bc13-e668f16c663d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "92fec4b5-84b5-45fa-83eb-01b7f8f14b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0794c7-67b6-47c6-918a-6e03a07ded15",
        "cursor": {
          "ref": "03aa3741-c457-4bdf-9978-78805ccf36be",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "72cbc9c6-1938-4eb8-a754-75bff4744b0d"
        },
        "item": {
          "id": "ef0794c7-67b6-47c6-918a-6e03a07ded15",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fc45f141-88d5-4200-a95f-b5c117dbbea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95eb0015-7c79-4a5c-9906-c9e81218b96d",
        "cursor": {
          "ref": "c626b2e6-43f1-44b3-b722-7431983bc4e2",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "703ca465-4698-41c6-bb0a-f6676e008ce2"
        },
        "item": {
          "id": "95eb0015-7c79-4a5c-9906-c9e81218b96d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6cc3fa5d-de74-4e96-9836-a540e71329ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d94e1c-2cbc-448c-a70c-7fcdf3820d2b",
        "cursor": {
          "ref": "2fa6bf11-f5aa-4036-8bf4-f6306bace1e7",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f6b562d8-3fa3-4ae1-8dbb-78fb1918bc57"
        },
        "item": {
          "id": "88d94e1c-2cbc-448c-a70c-7fcdf3820d2b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c682756b-3f57-45fb-a7cb-1723516927f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097aa2ac-c43a-45a2-bb2d-818364f78686",
        "cursor": {
          "ref": "1619965f-4de5-4106-bfc1-ae4632785e5c",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f01e22c1-cafb-4ede-8b5a-dd16e1e5ea91"
        },
        "item": {
          "id": "097aa2ac-c43a-45a2-bb2d-818364f78686",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "17162ba9-f65e-4b72-a3c1-34520189fe9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bb5fe7-f36a-40f6-9dfd-a5eb6a75ea8f",
        "cursor": {
          "ref": "20d03e6e-896e-459d-b757-b3f0db3ef0f3",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "52031ab4-6fed-4f24-92b0-93fe5789b8da"
        },
        "item": {
          "id": "73bb5fe7-f36a-40f6-9dfd-a5eb6a75ea8f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f6f8bc16-dfe3-49e5-ae02-e7e1aa939e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7beadff-adb3-4093-9ad1-393bed63c131",
        "cursor": {
          "ref": "f3c3fe0e-7b03-4827-b687-6f69ae7116ad",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "589acdf1-de66-4b14-b664-9198dad03be8"
        },
        "item": {
          "id": "b7beadff-adb3-4093-9ad1-393bed63c131",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7a775fbc-5c2d-41f2-8b10-1d18b8247bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca398164-d540-4f98-a8d2-68d5b14054ed",
        "cursor": {
          "ref": "af91e1a0-ad41-4203-9a57-a31da33293a5",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a67d2719-abb6-4c63-afba-bcacbba041b7"
        },
        "item": {
          "id": "ca398164-d540-4f98-a8d2-68d5b14054ed",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2fbb1f83-4c2b-4ddc-a151-96e32d383f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f949cb9-ec17-4389-888f-afb6f9be055a",
        "cursor": {
          "ref": "95606c3c-59b6-4706-84c4-f65f2d9e5353",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "65c12488-3901-41e5-86fe-a9c245e41f15"
        },
        "item": {
          "id": "0f949cb9-ec17-4389-888f-afb6f9be055a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5a78006b-0297-4877-9521-9199aa61555a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be3a3b7-357f-456b-a50c-2a295248dc24",
        "cursor": {
          "ref": "d0f3a695-d21b-4112-ae3d-a161525b5fbe",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ec4545e8-a158-49bb-a7cf-d7f82c751495"
        },
        "item": {
          "id": "0be3a3b7-357f-456b-a50c-2a295248dc24",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b8aea521-145d-40a7-93a0-a3d3c0db25ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac29b45f-6f29-4299-9ca2-5a51e3d394bf",
        "cursor": {
          "ref": "4fffe04e-5e9f-4fdf-bafd-1f62c38db569",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "15b758d4-aa73-4a5b-94da-cdddf6162aa7"
        },
        "item": {
          "id": "ac29b45f-6f29-4299-9ca2-5a51e3d394bf",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7d20d353-3ce3-42ec-9407-d868bc44769d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936e1bcf-de0e-42c1-8a08-c0bdcebfb753",
        "cursor": {
          "ref": "ced69ee1-1692-46b6-b590-8be1d351b2bc",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "68530847-9980-493a-a851-48ecf34f6a8e"
        },
        "item": {
          "id": "936e1bcf-de0e-42c1-8a08-c0bdcebfb753",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "acc56b76-53a5-4909-8e34-7d48fc06d8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe5017a-bd2f-4ad0-8990-3d9dc92bc95a",
        "cursor": {
          "ref": "93dfadc7-701e-4381-a699-a299ed1c10ef",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "24d3ed1b-c05f-4a5e-bca7-79d01a7f2fbe"
        },
        "item": {
          "id": "abe5017a-bd2f-4ad0-8990-3d9dc92bc95a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6f330510-cebd-4e0a-8d03-4d5f7b921a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f884b05-efa4-48ab-8c86-b3906bccd942",
        "cursor": {
          "ref": "6a5896ae-dfdd-40fe-af5f-0d44c66e28f8",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "919432c2-e3ae-4f47-8bfa-6fda4794cf53"
        },
        "item": {
          "id": "9f884b05-efa4-48ab-8c86-b3906bccd942",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "11ba362a-00c5-4b3a-ab92-5cbd9c5bdeb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "241986c8-a578-4c54-a618-491c1ea19205",
        "cursor": {
          "ref": "71dc5ac8-655e-4392-a1fc-db88aebcec8e",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c8d35e09-af84-4bad-8458-c3eddbce496e"
        },
        "item": {
          "id": "241986c8-a578-4c54-a618-491c1ea19205",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bdf6e685-c9d0-47e6-96a7-1e56a7898ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59efc6e4-bf43-4b9b-b701-3b7e182dfeaa",
        "cursor": {
          "ref": "531b07cd-6844-4d6d-9e72-e9be4cb4d28f",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2b6d14da-7d97-49f7-954f-d5aef1038a38"
        },
        "item": {
          "id": "59efc6e4-bf43-4b9b-b701-3b7e182dfeaa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "81298534-4490-4af1-b263-afad520f7481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1b2820-cc7a-4b19-95c2-e7367bf2c24a",
        "cursor": {
          "ref": "ef801550-2170-4027-bd22-e15002211a15",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cb1dc3b6-5b5e-4f40-82ce-b8fb2641cef7"
        },
        "item": {
          "id": "bd1b2820-cc7a-4b19-95c2-e7367bf2c24a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8961c5d4-5682-4f9c-a467-8693b8ce9b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb87de7b-09f2-4638-bd45-e1dfe34f8fdf",
        "cursor": {
          "ref": "edd8bea3-4119-45c6-a537-01b020d50df5",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "158c231f-7b69-49ec-aef1-9fb24ae5ef2b"
        },
        "item": {
          "id": "fb87de7b-09f2-4638-bd45-e1dfe34f8fdf",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b7175187-c300-4e00-961f-263dc99a3e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22585bf0-b839-4af1-990f-c36836efaab3",
        "cursor": {
          "ref": "4274ef99-c885-4b93-a6b8-461739811547",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "23b7f650-4556-4b00-b900-eb879d4e8aa6"
        },
        "item": {
          "id": "22585bf0-b839-4af1-990f-c36836efaab3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3b85deff-1b3e-4095-b601-e22a8e3dcc35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf792055-f112-4afc-894a-4e296578df08",
        "cursor": {
          "ref": "ab4ca227-d353-477d-a121-9850410ac18d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "25765ec6-7878-4ee5-9fec-730e6ca268c3"
        },
        "item": {
          "id": "bf792055-f112-4afc-894a-4e296578df08",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b05c1841-f42e-4013-bb2b-e0d21edf68a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ad30e4-bf8f-4890-8043-8794613256b6",
        "cursor": {
          "ref": "6f3da941-b078-4209-8248-3857ad9e2a47",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a0e58f5f-eb10-4b97-a3e5-35679f4b4e0b"
        },
        "item": {
          "id": "72ad30e4-bf8f-4890-8043-8794613256b6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a10489a1-7f66-4b9f-bd1c-3621496bde3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c78dd8d-3799-4e46-b9d4-b44f7873102c",
        "cursor": {
          "ref": "30ffb297-bd66-4284-8aa4-a1200984d49c",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6c708202-ed20-4f0c-8d49-4a2ea0d096d0"
        },
        "item": {
          "id": "0c78dd8d-3799-4e46-b9d4-b44f7873102c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "baabb74a-c707-4002-b672-a1820699f352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46434319-a3d0-4c93-ae24-3dedd13e9aa2",
        "cursor": {
          "ref": "b8fe7fc3-9ca1-4e24-89df-21f319aa8bd3",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2fdb5e5e-9929-40fa-8a5b-f73cff32ca73"
        },
        "item": {
          "id": "46434319-a3d0-4c93-ae24-3dedd13e9aa2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "35397ff9-3381-4b9e-85ca-829a493db02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc87e71-18a1-4045-b5dc-604d2d58024e",
        "cursor": {
          "ref": "a8628068-a9a0-4dcb-945c-4b8023c5337f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c5d08af0-6eec-4080-bb6b-9daebcd03ede"
        },
        "item": {
          "id": "ccc87e71-18a1-4045-b5dc-604d2d58024e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a63ef95b-ba6e-4afc-9dbb-7d90fbef0579",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7560c46e-df46-46b8-b020-e162e8ea8cf0",
        "cursor": {
          "ref": "15565621-9804-4595-ba26-cc958b023921",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "46feb598-a528-45a7-a8a7-a2cee928e968"
        },
        "item": {
          "id": "7560c46e-df46-46b8-b020-e162e8ea8cf0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5c6fd5a9-1f1f-461a-a624-4e3c902e46d5",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb6bb1c-f99f-463e-a6b1-e0cb436109b1",
        "cursor": {
          "ref": "f9ca568c-e271-4952-ba91-ab6c0e9c51b9",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "12b1dd8a-2665-43aa-84f1-85aae66d56c3"
        },
        "item": {
          "id": "fdb6bb1c-f99f-463e-a6b1-e0cb436109b1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "519099b9-1e1a-4836-a6d8-b5f4d5cec93c",
          "status": "OK",
          "code": 200,
          "responseTime": 2342,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f56ea1-4eea-46b6-85d1-1a0fab1da332",
        "cursor": {
          "ref": "0c215131-5947-426f-ae21-6e0677f687d9",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "862bba1b-6913-4f9e-a2eb-0c2f36af5b9a"
        },
        "item": {
          "id": "e0f56ea1-4eea-46b6-85d1-1a0fab1da332",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4049bab9-9b59-49bc-9381-e78c76a9c4b2",
          "status": "OK",
          "code": 200,
          "responseTime": 2573,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1068e54c-ad09-4eb3-bd1c-a35f7dc249c6",
        "cursor": {
          "ref": "cb2addb0-4fd4-451d-a379-139929d2e23f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c8d7724f-7e05-4e77-8231-bfeffd564c2f"
        },
        "item": {
          "id": "1068e54c-ad09-4eb3-bd1c-a35f7dc249c6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1f23df26-c304-4577-a098-94c6835ab175",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1068e54c-ad09-4eb3-bd1c-a35f7dc249c6",
        "cursor": {
          "ref": "cb2addb0-4fd4-451d-a379-139929d2e23f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c8d7724f-7e05-4e77-8231-bfeffd564c2f"
        },
        "item": {
          "id": "1068e54c-ad09-4eb3-bd1c-a35f7dc249c6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1f23df26-c304-4577-a098-94c6835ab175",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d60a2f-9fac-4825-911e-b548ebb8b973",
        "cursor": {
          "ref": "208a2014-9b7d-459e-94bc-e0507667f3d6",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9716cf8d-6337-4fb7-9891-a1e7a536146f"
        },
        "item": {
          "id": "98d60a2f-9fac-4825-911e-b548ebb8b973",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "faa9f612-8089-40e8-865e-07f1522d4528",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94183b1c-003a-42f4-a7e4-3e4217e8a774",
        "cursor": {
          "ref": "a699b6c7-70e1-4d69-a237-6497670b57cb",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f9f79f59-079a-409d-a8e4-16732ec146cf"
        },
        "item": {
          "id": "94183b1c-003a-42f4-a7e4-3e4217e8a774",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7a75ee28-4784-4dc3-8322-fe2f52a0faa4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}